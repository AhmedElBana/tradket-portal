{"version":3,"sources":["tools/Auth.js","polyfill.js","App.js","serviceWorker.js","index.js"],"names":["auth","localStorage","removeItem","window","location","reload","token","userData","name","type","perms","CustomEvent","event","params","bubbles","cancelable","detail","undefined","evt","document","createEvent","initCustomEvent","prototype","Event","loading","react_default","a","createElement","className","DefaultLayout","React","lazy","Promise","all","__webpack_require__","e","then","bind","Website","Login","Register","Forget","Page404","Page500","App","react_router_dom","Suspense","fallback","react_router","exact","path","render","props","basename","component","isLoggedIn","Component","Boolean","hostname","match","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a7179841.chunk.js","sourcesContent":["class Auth {\r\n    logout() {\r\n        localStorage.removeItem('token')\r\n        localStorage.removeItem('userData')\r\n\r\n        window.location.reload();\r\n    }\r\n\r\n    isLoggedIn() {\r\n        return !!localStorage.token || !!localStorage.userData;\r\n    }\r\n\r\n    getMerchantName(){\r\n        if (localStorage.name) {\r\n            return localStorage.name;\r\n        }\r\n        return null;\r\n    }\r\n    getMerchantType(){\r\n        if (localStorage.type) {\r\n            return localStorage.type;\r\n        }\r\n        return null;\r\n    }\r\n    getMerchantToken() {\r\n        if (localStorage.token) {\r\n            return localStorage.token;\r\n        }\r\n        return null;\r\n    }\r\n    getMerchantPerms(){\r\n        if (localStorage.perms) {\r\n            return localStorage.perms;\r\n        }\r\n        return null;\r\n    }\r\n}\r\n\r\nexport let auth = new Auth();\r\n","/*\r\n* required polyfills\r\n*/\r\nimport \"core-js\";\r\nimport 'core-js/features/set/map';\r\n\r\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\r\n// import 'core-js/es6/symbol'\r\n// import 'core-js/es6/object'\r\n// import 'core-js/es6/function'\r\n// import 'core-js/es6/parse-int'\r\n// import 'core-js/es6/parse-float'\r\n// import 'core-js/es6/number'\r\n// import 'core-js/es6/math'\r\n// import 'core-js/es6/string'\r\n// import 'core-js/es6/date'\r\n// import 'core-js/es6/array'\r\n// import 'core-js/es6/regexp'\r\n// import 'core-js/es6/map'\r\n// import 'core-js/es6/weak-map'\r\n// import 'core-js/es6/set'\r\n// import 'core-js/es7/object'\r\n\r\n/** IE10 and IE11 requires the following for the Reflect API. */\r\n// import 'core-js/es6/reflect'\r\n\r\n/** Evergreen browsers require these. **/\r\n// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.\r\n// import 'core-js/es7/reflect'\r\n\r\n// CustomEvent() constructor functionality in IE9, IE10, IE11\r\n(function () {\r\n\r\n  if ( typeof window.CustomEvent === \"function\" ) return false\r\n\r\n  function CustomEvent ( event, params ) {\r\n    params = params || { bubbles: false, cancelable: false, detail: undefined }\r\n    var evt = document.createEvent( 'CustomEvent' )\r\n    evt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail )\r\n    return evt\r\n  }\r\n\r\n  CustomEvent.prototype = window.Event.prototype\r\n\r\n  window.CustomEvent = CustomEvent\r\n})()\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n// import { renderRoutes } from 'react-router-config';\r\nimport {auth} from './tools/Auth';\r\nimport './App.scss';\r\n\r\nconst loading = () => <div className=\"animated fadeIn pt-3 text-center\">Loading...</div>;\r\n\r\n// Containers\r\nconst DefaultLayout = React.lazy(() => import('./containers/DefaultLayout'));\r\n\r\n// Pages\r\nconst Website = React.lazy(() => import('./views/Pages/Website'));\r\nconst Login = React.lazy(() => import('./views/Pages/Login'));\r\nconst Register = React.lazy(() => import('./views/Pages/Register'));\r\nconst Forget = React.lazy(() => import('./views/Pages/Forget'));\r\nconst Page404 = React.lazy(() => import('./views/Pages/Page404'));\r\nconst Page500 = React.lazy(() => import('./views/Pages/Page500'));\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n          <React.Suspense fallback={loading()}>\r\n            <Switch>\r\n            <Route exact path=\"/\" name=\"Website Page\" render={props => <Website {...props}/>} />\r\n              <BrowserRouter basename=\"/portal\">\r\n                <React.Suspense fallback={loading()}>\r\n                  <Switch>\r\n                    <Route exact path=\"/login\" name=\"Login Page\" component={!auth.isLoggedIn() ? Login :  DefaultLayout } />\r\n                    <Route exact path=\"/register\" name=\"Register Page\" component={!auth.isLoggedIn() ? Register :  DefaultLayout } />\r\n                    <Route exact path=\"/forget\" name=\"Reset password\" component={!auth.isLoggedIn() ? Forget :  DefaultLayout } />\r\n                    <Route exact path=\"/404\" name=\"Page 404\" render={props => <Page404 {...props}/>} />\r\n                    <Route exact path=\"/500\" name=\"Page 500\" render={props => <Page500 {...props}/>} />\r\n                    <Route path=\"/\" name=\"Home\" component={auth.isLoggedIn() ? DefaultLayout :  Login } />\r\n                  </Switch>\r\n                </React.Suspense>\r\n            </BrowserRouter>\r\n            \r\n            </Switch>\r\n          </React.Suspense>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'react-app-polyfill/ie9'; // For IE 9-11 support\r\nimport 'react-app-polyfill/stable';\r\n// import 'react-app-polyfill/ie11'; // For IE 11 support\r\nimport './polyfill'\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}