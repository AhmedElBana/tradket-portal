{"version":3,"sources":["../node_modules/lodash/isFunction.js","../node_modules/lodash/_freeGlobal.js","../node_modules/lodash/_toSource.js","../node_modules/lodash/_equalArrays.js","../node_modules/lodash/isArguments.js","../node_modules/lodash/isBuffer.js","../node_modules/lodash/_isIndex.js","../node_modules/lodash/isTypedArray.js","../node_modules/lodash/isArrayLike.js","../node_modules/lodash/_isStrictComparable.js","../node_modules/lodash/_matchesStrictComparable.js","../node_modules/lodash/_baseGet.js","../node_modules/lodash/_castPath.js","../node_modules/moment/moment.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/_baseIsEqualDeep.js","../node_modules/lodash/_listCacheClear.js","../node_modules/lodash/_listCacheDelete.js","../node_modules/lodash/_listCacheGet.js","../node_modules/lodash/_listCacheHas.js","../node_modules/lodash/_listCacheSet.js","../node_modules/lodash/_stackClear.js","../node_modules/lodash/_stackDelete.js","../node_modules/lodash/_stackGet.js","../node_modules/lodash/_stackHas.js","../node_modules/lodash/_stackSet.js","../node_modules/lodash/_baseIsNative.js","../node_modules/lodash/_getRawTag.js","../node_modules/lodash/_objectToString.js","../node_modules/lodash/_isMasked.js","../node_modules/lodash/_coreJsData.js","../node_modules/lodash/_getValue.js","../node_modules/lodash/_mapCacheClear.js","../node_modules/lodash/_Hash.js","../node_modules/lodash/_hashClear.js","../node_modules/lodash/_hashDelete.js","../node_modules/lodash/_hashGet.js","../node_modules/lodash/_hashHas.js","../node_modules/lodash/_hashSet.js","../node_modules/lodash/_mapCacheDelete.js","../node_modules/lodash/_isKeyable.js","../node_modules/lodash/_mapCacheGet.js","../node_modules/lodash/_mapCacheHas.js","../node_modules/lodash/_mapCacheSet.js","../node_modules/lodash/_SetCache.js","../node_modules/lodash/_setCacheAdd.js","../node_modules/lodash/_setCacheHas.js","../node_modules/lodash/_arraySome.js","../node_modules/lodash/_cacheHas.js","../node_modules/lodash/_equalByTag.js","../node_modules/lodash/_Uint8Array.js","../node_modules/lodash/_mapToArray.js","../node_modules/lodash/_setToArray.js","../node_modules/lodash/_equalObjects.js","../node_modules/lodash/_getAllKeys.js","../node_modules/lodash/_baseGetAllKeys.js","../node_modules/lodash/_arrayPush.js","../node_modules/lodash/_getSymbols.js","../node_modules/lodash/_arrayFilter.js","../node_modules/lodash/stubArray.js","../node_modules/lodash/_arrayLikeKeys.js","../node_modules/lodash/_baseTimes.js","../node_modules/lodash/_baseIsArguments.js","../node_modules/lodash/stubFalse.js","../node_modules/lodash/_baseIsTypedArray.js","../node_modules/lodash/_baseUnary.js","../node_modules/lodash/_nodeUtil.js","../node_modules/lodash/_baseKeys.js","../node_modules/lodash/_isPrototype.js","../node_modules/lodash/_nativeKeys.js","../node_modules/lodash/_overArg.js","../node_modules/lodash/_getTag.js","../node_modules/lodash/_DataView.js","../node_modules/lodash/_Promise.js","../node_modules/lodash/_Set.js","../node_modules/lodash/_WeakMap.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_baseAssignValue.js","../node_modules/lodash/_defineProperty.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js","../node_modules/lodash/_baseEach.js","../node_modules/lodash/_baseForOwn.js","../node_modules/lodash/_baseFor.js","../node_modules/lodash/_createBaseFor.js","../node_modules/lodash/_createBaseEach.js","../node_modules/lodash/_baseIteratee.js","../node_modules/lodash/_baseMatches.js","../node_modules/lodash/_baseIsMatch.js","../node_modules/lodash/_getMatchData.js","../node_modules/lodash/_baseMatchesProperty.js","../node_modules/lodash/get.js","../node_modules/lodash/_stringToPath.js","../node_modules/lodash/_memoizeCapped.js","../node_modules/lodash/memoize.js","../node_modules/lodash/toString.js","../node_modules/lodash/_baseToString.js","../node_modules/lodash/_arrayMap.js","../node_modules/lodash/hasIn.js","../node_modules/lodash/_baseHasIn.js","../node_modules/lodash/_hasPath.js","../node_modules/lodash/identity.js","../node_modules/lodash/property.js","../node_modules/lodash/_baseProperty.js","../node_modules/lodash/_basePropertyDeep.js","../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/lodash/_root.js","../node_modules/lodash/isArray.js","../node_modules/lodash/_getNative.js","../node_modules/lodash/_baseGetTag.js","../node_modules/lodash/isObjectLike.js","../node_modules/lodash/_ListCache.js","../node_modules/lodash/_assocIndexOf.js","../node_modules/lodash/_Symbol.js","../node_modules/lodash/_nativeCreate.js","../node_modules/lodash/_getMapData.js","../node_modules/lodash/_toKey.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/webpack/buildin/module.js","../node_modules/lodash/_baseIsEqual.js","../node_modules/lodash/_Map.js","../node_modules/lodash/isObject.js","../node_modules/lodash/_MapCache.js","../node_modules/lodash/keys.js","../node_modules/lodash/isLength.js","../node_modules/lodash/_isKey.js","../node_modules/lodash/isSymbol.js","../node_modules/chart.js/dist/Chart.js","../node_modules/lodash/_Stack.js","../node_modules/lodash/eq.js"],"names":["baseGetTag","__webpack_require__","isObject","asyncTag","funcTag","genTag","proxyTag","module","exports","value","tag","global","freeGlobal","Object","funcToString","Function","prototype","toString","func","call","e","SetCache","arraySome","cacheHas","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","array","other","bitmask","customizer","equalFunc","stack","isPartial","arrLength","length","othLength","stacked","get","index","result","seen","undefined","set","arrValue","othValue","compared","othIndex","push","baseIsArguments","isObjectLike","objectProto","hasOwnProperty","propertyIsEnumerable","isArguments","arguments","root","stubFalse","freeExports","nodeType","freeModule","Buffer","isBuffer","MAX_SAFE_INTEGER","reIsUint","type","test","baseIsTypedArray","baseUnary","nodeUtil","nodeIsTypedArray","isTypedArray","isFunction","isLength","key","srcValue","object","castPath","toKey","path","isArray","isKey","stringToPath","hookCallback","some","hooks","apply","input","Array","isUndefined","isNumber","isDate","Date","map","arr","fn","i","res","hasOwnProp","a","b","extend","valueOf","createUTC","format","locale","strict","createLocalOrUTC","utc","getParsingFlags","m","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","isValid","_isValid","flags","parsedParts","isNowValid","isNaN","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","NaN","fun","t","this","len","momentProperties","copyConfig","to","from","prop","val","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","updateInProgress","Moment","config","updateOffset","isMoment","obj","absFloor","number","Math","ceil","floor","toInt","argumentForCoercion","coercedNumber","isFinite","compareArrays","array1","array2","dontConvert","min","lengthDiff","abs","diffs","warn","msg","suppressDeprecationWarnings","console","deprecate","firstTime","deprecationHandler","arg","args","slice","join","Error","keys","deprecations","deprecateSimple","name","mergeConfigs","parentConfig","childConfig","Locale","aliases","addUnitAlias","unit","shorthand","lowerCase","toLowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","zeroFill","targetLength","forceSign","absNumber","zerosToFill","sign","pow","max","substr","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","callback","localeData","formatMoment","expandFormat","match","replace","mom","output","makeFormatFunction","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","RegExp","regexEscape","matched","p1","p2","p3","p4","s","tokens","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","daysInYear","year","isLeapYear","y","parseTwoDigitYear","parseInt","indexOf","getSetYear","makeGetSet","keepTime","set$1","month","date","daysInMonth","x","modMonth","o","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","MONTHS_IN_FORMAT","defaultLocaleMonths","split","defaultLocaleMonthsShort","setMonth","dayOfMonth","getSetMonth","defaultMonthsShortRegex","defaultMonthsRegex","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","sort","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","week","weekday","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","shiftWeekdays","ws","n","concat","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","d","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minp","shortp","longp","minPieces","day","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","h","hh","dd","M","MM","yy","meridiemParse","locales","localeFamilies","normalizeLocale","loadLocale","oldLocale","_abbr","code","getSetGlobalLocale","values","data","getLocale","defineLocale","abbr","_config","parentLocale","forEach","names","j","next","chooseLocale","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","defaults","c","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","now","_useUTC","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","currentDateArray","w","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","_week","curWeek","gg","_dayOfYear","dayOfYearFromWeekInfo","_nextDay","ms","setFullYear","getDay","setUTCMinutes","getUTCMinutes","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","configFromISO","l","allowTime","dateFormat","timeFormat","tzFormat","string","exec","configFromStringAndFormat","untruncateYear","yearStr","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromRFC2822","parsedArray","monthStr","dayStr","hourStr","minuteStr","secondStr","extractFromRFC2822Strings","weekdayStr","parsedInput","weekdayProvided","weekdayActual","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","hour","isPm","meridiemHour","meridiemFixWrap","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromStringAndArray","createFromInputFallback","configFromString","minute","second","millisecond","configFromObject","configFromInput","isUTC","getOwnPropertyNames","k","isObjectEmpty","add","createFromConfig","prototypeMin","prototypeMax","pickBy","moments","ordering","Duration","duration","years","quarters","quarter","weeks","isoWeek","days","milliseconds","unitHasDecimal","parseFloat","isDurationValid","_milliseconds","_days","_months","_data","_bubble","isDuration","absRound","round","offset","separator","utcOffset","offsetFromString","chunkOffset","matcher","matches","chunk","parts","cloneWithOffset","model","diff","clone","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","ret","diffRes","parseIso","base","isBefore","positiveMomentsDifference","momentsDifference","inp","isAfter","createAdder","direction","period","tmp","addSubtract","isAdding","invalid","subtract","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","addWeekYearFormatToken","getter","getSetWeekYearHelper","weeksTarget","dayOfYearData","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetSecond","parseMs","getSetMillisecond","proto","preParsePostFormat","time","formats","sod","startOf","calendarFormat","asFloat","that","zoneDelta","endOf","startOfDate","isoWeekday","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","u","getPrioritizedUnits","toArray","toObject","toDate","toISOString","keepOffset","inspect","zone","isLocal","prefix","suffix","toJSON","unix","creationData","isoWeeks","weekInfo","isoWeeksInYear","parseWeekday","parseIsoWeekday","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","proto$1","get$1","field","setter","listMonthsImpl","out","listWeekdaysImpl","localeSorted","shift","_calendar","_longDateFormat","formatUpper","toUpperCase","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","source","isFormat","_monthsShort","monthName","_monthsParseExact","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","weekdayName","_weekdaysParseExact","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","charAt","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","as","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","makeGetter","thresholds","abs$1","toISOString$1","Y","D","toFixed","total","totalSign","ymSign","daysSign","hmsSign","proto$2","monthsFromDays","withSuffix","posNegDuration","relativeTime$1","toIsoString","version","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","limit","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","factory","baseIsEqual","Stack","equalArrays","equalByTag","equalObjects","getTag","argsTag","arrayTag","objectTag","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","__data__","size","assocIndexOf","splice","pop","ListCache","has","Map","MapCache","LARGE_ARRAY_SIZE","pairs","isMasked","toSource","reIsHostCtor","funcProto","reIsNative","Symbol","nativeObjectToString","symToStringTag","toStringTag","isOwn","unmasked","coreJsData","maskSrcKey","uid","IE_PROTO","Hash","hash","hashClear","hashDelete","hashGet","hashHas","hashSet","entries","clear","entry","nativeCreate","HASH_UNDEFINED","getMapData","setCacheAdd","setCacheHas","predicate","cache","Uint8Array","eq","mapToArray","setToArray","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","symbolTag","arrayBufferTag","dataViewTag","symbolProto","symbolValueOf","byteLength","byteOffset","buffer","message","convert","getAllKeys","objProps","objLength","skipCtor","objValue","objCtor","constructor","othCtor","baseGetAllKeys","getSymbols","arrayPush","keysFunc","symbolsFunc","arrayFilter","stubArray","nativeGetSymbols","getOwnPropertySymbols","symbol","resIndex","baseTimes","isIndex","inherited","isArr","isArg","isBuff","isType","skipIndexes","String","iteratee","typedArrayTags","freeProcess","process","types","require","binding","isPrototype","nativeKeys","Ctor","overArg","transform","DataView","Promise","Set","WeakMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","ArrayBuffer","resolve","ctorString","getNative","baseAssignValue","keyBy","createAggregator","defineProperty","configurable","enumerable","writable","arrayAggregator","baseAggregator","baseIteratee","initializer","collection","accumulator","baseEach","baseForOwn","createBaseEach","baseFor","createBaseFor","fromRight","iterable","props","isArrayLike","eachFunc","baseMatches","baseMatchesProperty","identity","property","baseIsMatch","getMatchData","matchesStrictComparable","matchData","noCustomizer","isStrictComparable","hasIn","baseGet","defaultValue","memoizeCapped","rePropName","reEscapeChar","charCodeAt","quote","subString","memoize","MAX_MEMOIZE_SIZE","FUNC_ERROR_TEXT","resolver","TypeError","memoized","Cache","baseToString","arrayMap","isSymbol","INFINITY","symbolToString","baseHasIn","hasPath","hasFunc","baseProperty","basePropertyDeep","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","propTypes","inverse","bool","color","body","outline","className","cssModule","innerRef","oneOfType","Card","Tag","attributes","classes","createElement","ref","defaultProps","__webpack_exports__","CardBody","freeSelf","self","baseIsNative","getValue","getRawTag","objectToString","nullTag","undefinedTag","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","isKeyable","Doughnut","Pie","Line","Bar","Radar","Polar","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4___default","_extends","assign","target","_objectWithoutProperties","_classCallCheck","instance","Constructor","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","ChartComponent","_React$Component","_temp","_this","_len","_key","handleOnClick","event","chartInstance","_this$props","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","onElementsClick","element","componentWillMount","componentDidMount","renderChart","componentDidUpdate","redraw","destroyChart","updateChart","shouldComponentUpdate","nextProps","_props","options","plugins","legend","height","width","nextData","transformDataProp","shadowDataProp","componentWillUnmount","memoizeDataProps","datasets","saveCurrentDatasets","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","dataset","label","error","getCurrentDatasets","_this2","_this3","helpers","configMerge","currentDatasets","nextDatasets","currentDatasetsIndexed","current","point","pid","otherProps","rest","update","_props2","node","destroy","render","_props3","id","onClick","Component","isRequired","arrayOf","propName","componentName","controllers","display","position","_React$Component2","_this5","_ref","_React$Component3","_this7","_ref2","_React$Component4","_this9","_ref3","_React$Component5","_this11","_ref4","_React$Component6","HorizontalBar","_this13","_ref5","_React$Component7","_this15","_ref6","_React$Component8","_this17","_ref7","_React$Component9","Bubble","_this19","_ref8","_React$Component10","Scatter","_this21","_ref9","webpackPolyfill","paths","children","baseIsEqualDeep","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","arrayLikeKeys","baseKeys","reIsDeepProp","reIsPlainProp","moment","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","lab2lch","hsl2rgb","hsl2hsv","hsl","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","r","g","delta","reverseKeywords","JSON","stringify","z","xyz","t1","t2","t3","hi","f","p","q","hwb","wh","bl","ratio","cmyk","lab","y2","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","Converter","pair","convs","routeSpace","space","getValues","setValues","vals","fspace","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","hexAlpha","scale","num","str","Color","valid","lightness","whiteness","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","spaces","maxes","capped","chans","sname","svalues","window","chartjsColor","noop","isNullOrUndef","_isFinite","_x","Number","valueOrDefault","valueAtIndexOrDefault","thisArg","each","loopable","reverse","arrayEquals","a0","a1","ilen","v0","v1","klen","_merger","tval","sval","merge","_mergerIf","mergeIf","sources","merger","setFn","inherits","extensions","me","ChartElement","Surrogate","__super__","helpers_core","callCallback","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","chart","ctx","clearRect","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","toPadding","_parseFont","globalDefaults","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","inputs","context","helpers$1","easing","canvas","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","ease","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","core_element","exports$2","currentStep","numSteps","onAnimationProgress","onAnimationComplete","core_animation","animation","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","animating","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","updateElement","buildOrUpdateElements","isExtensible","method","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","onDataShift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderWidth","maxW","maxH","edge","borderSkipped","horizontal","parseBorderSkipped","_inRange","skipX","skipY","bounds","rectangle","element_rectangle","rects","border","outer","inner","boundingRects","fillRect","Arc","Point","Rectangle","resolve$1","hover","mode","categoryPercentage","barPercentage","gridLines","offsetGridLines","controller_bar","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","labels","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","percent","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","tooltips","callbacks","title","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","generateLabels","ds","arcOpts","bw","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","stylesheet","freeze","default","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","getStyle","eventListenerOptions","supports","addEventListener","passive","addListener","removeListener","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","document","addResizeListener","expando","resizer","expand","shrink","appendChild","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","container","maintainAspectRatio","parentNode","clientWidth","proxy","renderProxy","animationName","reflow","offsetParent","classList","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","acquireContext","getElementById","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","fromNativeEvent","addEvent","removeEvent","implementation","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","createTooltipItem","indexScale","valueScale","getLabelForIndex","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","active","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","paddingAndSize","radiusAndPadding","getBackgroundPoint","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","resetElements","newOptions","updateConfig","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementsAtXAxis","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","_abstract","DateAdapter","Controller","scaleMerge","parse","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","maxTick","logTick","toExponential","numDecimal","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingRight","paddingBottom","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","generateTicks","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","generateTicks$1","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","INTERVALS","common","steps","UNITS","sorter","arrayUnique","interpolate$1","table","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","adapter","_adapter","parser","determineMajorUnit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","majorTicksEnabled","first","determineStepSize","scale_time","adapters","displayFormats","timestamp","timestamps","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","displayFormat","category","radialLinear","FORMATS","_id","_format","amount","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","d0","d1","doFill","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","log","LOG10E","powerOf10","isPowerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","core_helpers","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","stackClear","stackDelete","stackGet","stackHas","stackSet"],"mappings":"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","file":"static/js/2.84326dae.chunk.js","sourcesContent":["var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n/** `Object#toString` result references. */\n\n\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\n\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  } // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\n\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\nmodule.exports = freeGlobal;","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\n\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n\n    try {\n      return func + '';\n    } catch (e) {}\n  }\n\n  return '';\n}\n\nmodule.exports = toSource;","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\n\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(array);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var index = -1,\n      result = true,\n      seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;\n  stack.set(array, other);\n  stack.set(other, array); // Ignore non-index properties.\n\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);\n    }\n\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n\n      result = false;\n      break;\n    } // Recursively compare arrays (susceptible to call stack limits).\n\n\n    if (seen) {\n      if (!arraySome(other, function (othValue, othIndex) {\n        if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n          return seen.push(othIndex);\n        }\n      })) {\n        result = false;\n        break;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n      result = false;\n      break;\n    }\n  }\n\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\n\nvar isArguments = baseIsArguments(function () {\n  return arguments;\n}()) ? baseIsArguments : function (value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n};\nmodule.exports = isArguments;","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Built-in value references. */\n\nvar Buffer = moduleExports ? root.Buffer : undefined;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\n\nvar isBuffer = nativeIsBuffer || stubFalse;\nmodule.exports = isBuffer;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/** Used to detect unsigned integer values. */\n\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\n\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n}\n\nmodule.exports = isIndex;","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n/* Node.js helper references. */\n\n\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\n\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\nmodule.exports = isTypedArray;","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\n\n\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;","var isObject = require('./isObject');\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\n\n\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function (object) {\n    if (object == null) {\n      return false;\n    }\n\n    return object[key] === srcValue && (srcValue !== undefined || key in Object(object));\n  };\n}\n\nmodule.exports = matchesStrictComparable;","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\n\n\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n\n  return index && index == length ? object : undefined;\n}\n\nmodule.exports = baseGet;","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\n\n\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;","//! moment.js\n;\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.moment = factory();\n})(this, function () {\n  'use strict';\n\n  var hookCallback;\n\n  function hooks() {\n    return hookCallback.apply(null, arguments);\n  } // This is done to register the method called with moment()\n  // without creating circular dependencies.\n\n\n  function setHookCallback(callback) {\n    hookCallback = callback;\n  }\n\n  function isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n  }\n\n  function isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n  }\n\n  function isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n      return Object.getOwnPropertyNames(obj).length === 0;\n    } else {\n      var k;\n\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  function isUndefined(input) {\n    return input === void 0;\n  }\n\n  function isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n  }\n\n  function isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n  }\n\n  function map(arr, fn) {\n    var res = [],\n        i;\n\n    for (i = 0; i < arr.length; ++i) {\n      res.push(fn(arr[i], i));\n    }\n\n    return res;\n  }\n\n  function hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n  }\n\n  function extend(a, b) {\n    for (var i in b) {\n      if (hasOwnProp(b, i)) {\n        a[i] = b[i];\n      }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n      a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n      a.valueOf = b.valueOf;\n    }\n\n    return a;\n  }\n\n  function createUTC(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n  }\n\n  function defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n      empty: false,\n      unusedTokens: [],\n      unusedInput: [],\n      overflow: -2,\n      charsLeftOver: 0,\n      nullInput: false,\n      invalidMonth: null,\n      invalidFormat: false,\n      userInvalidated: false,\n      iso: false,\n      parsedDateParts: [],\n      meridiem: null,\n      rfc2822: false,\n      weekdayMismatch: false\n    };\n  }\n\n  function getParsingFlags(m) {\n    if (m._pf == null) {\n      m._pf = defaultParsingFlags();\n    }\n\n    return m._pf;\n  }\n\n  var some;\n\n  if (Array.prototype.some) {\n    some = Array.prototype.some;\n  } else {\n    some = function some(fun) {\n      var t = Object(this);\n      var len = t.length >>> 0;\n\n      for (var i = 0; i < len; i++) {\n        if (i in t && fun.call(this, t[i], i, t)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  }\n\n  function isValid(m) {\n    if (m._isValid == null) {\n      var flags = getParsingFlags(m);\n      var parsedParts = some.call(flags.parsedDateParts, function (i) {\n        return i != null;\n      });\n      var isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n\n      if (m._strict) {\n        isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n      }\n\n      if (Object.isFrozen == null || !Object.isFrozen(m)) {\n        m._isValid = isNowValid;\n      } else {\n        return isNowValid;\n      }\n    }\n\n    return m._isValid;\n  }\n\n  function createInvalid(flags) {\n    var m = createUTC(NaN);\n\n    if (flags != null) {\n      extend(getParsingFlags(m), flags);\n    } else {\n      getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n  } // Plugins that add properties should also add the key here (null value),\n  // so we can properly clone ourselves.\n\n\n  var momentProperties = hooks.momentProperties = [];\n\n  function copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n      to._isAMomentObject = from._isAMomentObject;\n    }\n\n    if (!isUndefined(from._i)) {\n      to._i = from._i;\n    }\n\n    if (!isUndefined(from._f)) {\n      to._f = from._f;\n    }\n\n    if (!isUndefined(from._l)) {\n      to._l = from._l;\n    }\n\n    if (!isUndefined(from._strict)) {\n      to._strict = from._strict;\n    }\n\n    if (!isUndefined(from._tzm)) {\n      to._tzm = from._tzm;\n    }\n\n    if (!isUndefined(from._isUTC)) {\n      to._isUTC = from._isUTC;\n    }\n\n    if (!isUndefined(from._offset)) {\n      to._offset = from._offset;\n    }\n\n    if (!isUndefined(from._pf)) {\n      to._pf = getParsingFlags(from);\n    }\n\n    if (!isUndefined(from._locale)) {\n      to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n      for (i = 0; i < momentProperties.length; i++) {\n        prop = momentProperties[i];\n        val = from[prop];\n\n        if (!isUndefined(val)) {\n          to[prop] = val;\n        }\n      }\n    }\n\n    return to;\n  }\n\n  var updateInProgress = false; // Moment prototype object\n\n  function Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\n    if (!this.isValid()) {\n      this._d = new Date(NaN);\n    } // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n\n\n    if (updateInProgress === false) {\n      updateInProgress = true;\n      hooks.updateOffset(this);\n      updateInProgress = false;\n    }\n  }\n\n  function isMoment(obj) {\n    return obj instanceof Moment || obj != null && obj._isAMomentObject != null;\n  }\n\n  function absFloor(number) {\n    if (number < 0) {\n      // -0 -> 0\n      return Math.ceil(number) || 0;\n    } else {\n      return Math.floor(number);\n    }\n  }\n\n  function toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n      value = absFloor(coercedNumber);\n    }\n\n    return value;\n  } // compare two arrays, return the number of differences\n\n\n  function compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n\n    for (i = 0; i < len; i++) {\n      if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n        diffs++;\n      }\n    }\n\n    return diffs + lengthDiff;\n  }\n\n  function warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n      console.warn('Deprecation warning: ' + msg);\n    }\n  }\n\n  function deprecate(msg, fn) {\n    var firstTime = true;\n    return extend(function () {\n      if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(null, msg);\n      }\n\n      if (firstTime) {\n        var args = [];\n        var arg;\n\n        for (var i = 0; i < arguments.length; i++) {\n          arg = '';\n\n          if (typeof arguments[i] === 'object') {\n            arg += '\\n[' + i + '] ';\n\n            for (var key in arguments[0]) {\n              arg += key + ': ' + arguments[0][key] + ', ';\n            }\n\n            arg = arg.slice(0, -2); // Remove trailing comma and space\n          } else {\n            arg = arguments[i];\n          }\n\n          args.push(arg);\n        }\n\n        warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + new Error().stack);\n        firstTime = false;\n      }\n\n      return fn.apply(this, arguments);\n    }, fn);\n  }\n\n  var deprecations = {};\n\n  function deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n      hooks.deprecationHandler(name, msg);\n    }\n\n    if (!deprecations[name]) {\n      warn(msg);\n      deprecations[name] = true;\n    }\n  }\n\n  hooks.suppressDeprecationWarnings = false;\n  hooks.deprecationHandler = null;\n\n  function isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n  }\n\n  function set(config) {\n    var prop, i;\n\n    for (i in config) {\n      prop = config[i];\n\n      if (isFunction(prop)) {\n        this[i] = prop;\n      } else {\n        this['_' + i] = prop;\n      }\n    }\n\n    this._config = config; // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n\n    this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\\d{1,2}/.source);\n  }\n\n  function mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig),\n        prop;\n\n    for (prop in childConfig) {\n      if (hasOwnProp(childConfig, prop)) {\n        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n          res[prop] = {};\n          extend(res[prop], parentConfig[prop]);\n          extend(res[prop], childConfig[prop]);\n        } else if (childConfig[prop] != null) {\n          res[prop] = childConfig[prop];\n        } else {\n          delete res[prop];\n        }\n      }\n    }\n\n    for (prop in parentConfig) {\n      if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {\n        // make sure changes to properties don't modify parent config\n        res[prop] = extend({}, res[prop]);\n      }\n    }\n\n    return res;\n  }\n\n  function Locale(config) {\n    if (config != null) {\n      this.set(config);\n    }\n  }\n\n  var keys;\n\n  if (Object.keys) {\n    keys = Object.keys;\n  } else {\n    keys = function keys(obj) {\n      var i,\n          res = [];\n\n      for (i in obj) {\n        if (hasOwnProp(obj, i)) {\n          res.push(i);\n        }\n      }\n\n      return res;\n    };\n  }\n\n  var defaultCalendar = {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  };\n\n  function calendar(key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n  }\n\n  var defaultLongDateFormat = {\n    LTS: 'h:mm:ss A',\n    LT: 'h:mm A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A'\n  };\n\n  function longDateFormat(key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n      return val.slice(1);\n    });\n    return this._longDateFormat[key];\n  }\n\n  var defaultInvalidDate = 'Invalid date';\n\n  function invalidDate() {\n    return this._invalidDate;\n  }\n\n  var defaultOrdinal = '%d';\n  var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n  function ordinal(number) {\n    return this._ordinal.replace('%d', number);\n  }\n\n  var defaultRelativeTime = {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  };\n\n  function relativeTime(number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\n  }\n\n  function pastFuture(diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n\n  var aliases = {};\n\n  function addUnitAlias(unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n  }\n\n  function normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n  }\n\n  function normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n      if (hasOwnProp(inputObject, prop)) {\n        normalizedProp = normalizeUnits(prop);\n\n        if (normalizedProp) {\n          normalizedInput[normalizedProp] = inputObject[prop];\n        }\n      }\n    }\n\n    return normalizedInput;\n  }\n\n  var priorities = {};\n\n  function addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n  }\n\n  function getPrioritizedUnits(unitsObj) {\n    var units = [];\n\n    for (var u in unitsObj) {\n      units.push({\n        unit: u,\n        priority: priorities[u]\n      });\n    }\n\n    units.sort(function (a, b) {\n      return a.priority - b.priority;\n    });\n    return units;\n  }\n\n  function zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? forceSign ? '+' : '' : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n  }\n\n  var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n  var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n  var formatFunctions = {};\n  var formatTokenFunctions = {}; // token:    'M'\n  // padded:   ['MM', 2]\n  // ordinal:  'Mo'\n  // callback: function () { this.month() + 1 }\n\n  function addFormatToken(token, padded, ordinal, callback) {\n    var func = callback;\n\n    if (typeof callback === 'string') {\n      func = function func() {\n        return this[callback]();\n      };\n    }\n\n    if (token) {\n      formatTokenFunctions[token] = func;\n    }\n\n    if (padded) {\n      formatTokenFunctions[padded[0]] = function () {\n        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n      };\n    }\n\n    if (ordinal) {\n      formatTokenFunctions[ordinal] = function () {\n        return this.localeData().ordinal(func.apply(this, arguments), token);\n      };\n    }\n  }\n\n  function removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n      return input.replace(/^\\[|\\]$/g, '');\n    }\n\n    return input.replace(/\\\\/g, '');\n  }\n\n  function makeFormatFunction(format) {\n    var array = format.match(formattingTokens),\n        i,\n        length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n      if (formatTokenFunctions[array[i]]) {\n        array[i] = formatTokenFunctions[array[i]];\n      } else {\n        array[i] = removeFormattingTokens(array[i]);\n      }\n    }\n\n    return function (mom) {\n      var output = '',\n          i;\n\n      for (i = 0; i < length; i++) {\n        output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n      }\n\n      return output;\n    };\n  } // format date using native date object\n\n\n  function formatMoment(m, format) {\n    if (!m.isValid()) {\n      return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n    return formatFunctions[format](m);\n  }\n\n  function expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n      return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n\n    while (i >= 0 && localFormattingTokens.test(format)) {\n      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n      localFormattingTokens.lastIndex = 0;\n      i -= 1;\n    }\n\n    return format;\n  }\n\n  var match1 = /\\d/; //       0 - 9\n\n  var match2 = /\\d\\d/; //      00 - 99\n\n  var match3 = /\\d{3}/; //     000 - 999\n\n  var match4 = /\\d{4}/; //    0000 - 9999\n\n  var match6 = /[+-]?\\d{6}/; // -999999 - 999999\n\n  var match1to2 = /\\d\\d?/; //       0 - 99\n\n  var match3to4 = /\\d\\d\\d\\d?/; //     999 - 9999\n\n  var match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\n  var match1to3 = /\\d{1,3}/; //       0 - 999\n\n  var match1to4 = /\\d{1,4}/; //       0 - 9999\n\n  var match1to6 = /[+-]?\\d{1,6}/; // -999999 - 999999\n\n  var matchUnsigned = /\\d+/; //       0 - inf\n\n  var matchSigned = /[+-]?\\d+/; //    -inf - inf\n\n  var matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\n  var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n  var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n  // any word (or two) characters or numbers including two/three word month in arabic.\n  // includes scottish gaelic two word and hyphenated months\n\n  var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n  var regexes = {};\n\n  function addRegexToken(token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n      return isStrict && strictRegex ? strictRegex : regex;\n    };\n  }\n\n  function getParseRegexForToken(token, config) {\n    if (!hasOwnProp(regexes, token)) {\n      return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n  } // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\n\n  function unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n      return p1 || p2 || p3 || p4;\n    }));\n  }\n\n  function regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n\n  var tokens = {};\n\n  function addParseToken(token, callback) {\n    var i,\n        func = callback;\n\n    if (typeof token === 'string') {\n      token = [token];\n    }\n\n    if (isNumber(callback)) {\n      func = function func(input, array) {\n        array[callback] = toInt(input);\n      };\n    }\n\n    for (i = 0; i < token.length; i++) {\n      tokens[token[i]] = func;\n    }\n  }\n\n  function addWeekParseToken(token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n      config._w = config._w || {};\n      callback(input, config._w, config, token);\n    });\n  }\n\n  function addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n      tokens[token](input, config._a, config, token);\n    }\n  }\n\n  var YEAR = 0;\n  var MONTH = 1;\n  var DATE = 2;\n  var HOUR = 3;\n  var MINUTE = 4;\n  var SECOND = 5;\n  var MILLISECOND = 6;\n  var WEEK = 7;\n  var WEEKDAY = 8; // FORMATTING\n\n  addFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n  });\n  addFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n  });\n  addFormatToken(0, ['YYYY', 4], 0, 'year');\n  addFormatToken(0, ['YYYYY', 5], 0, 'year');\n  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year'); // ALIASES\n\n  addUnitAlias('year', 'y'); // PRIORITIES\n\n  addUnitPriority('year', 1); // PARSING\n\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n  });\n  addParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n  });\n  addParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n  }); // HELPERS\n\n  function daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n  }\n\n  function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  } // HOOKS\n\n\n  hooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n  }; // MOMENTS\n\n\n  var getSetYear = makeGetSet('FullYear', true);\n\n  function getIsLeapYear() {\n    return isLeapYear(this.year());\n  }\n\n  function makeGetSet(unit, keepTime) {\n    return function (value) {\n      if (value != null) {\n        set$1(this, unit, value);\n        hooks.updateOffset(this, keepTime);\n        return this;\n      } else {\n        return get(this, unit);\n      }\n    };\n  }\n\n  function get(mom, unit) {\n    return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n  }\n\n  function set$1(mom, unit, value) {\n    if (mom.isValid() && !isNaN(value)) {\n      if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n      } else {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n      }\n    }\n  } // MOMENTS\n\n\n  function stringGet(units) {\n    units = normalizeUnits(units);\n\n    if (isFunction(this[units])) {\n      return this[units]();\n    }\n\n    return this;\n  }\n\n  function stringSet(units, value) {\n    if (typeof units === 'object') {\n      units = normalizeObjectUnits(units);\n      var prioritized = getPrioritizedUnits(units);\n\n      for (var i = 0; i < prioritized.length; i++) {\n        this[prioritized[i].unit](units[prioritized[i].unit]);\n      }\n    } else {\n      units = normalizeUnits(units);\n\n      if (isFunction(this[units])) {\n        return this[units](value);\n      }\n    }\n\n    return this;\n  }\n\n  function mod(n, x) {\n    return (n % x + x) % x;\n  }\n\n  var indexOf;\n\n  if (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n  } else {\n    indexOf = function indexOf(o) {\n      // I know\n      var i;\n\n      for (i = 0; i < this.length; ++i) {\n        if (this[i] === o) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n  }\n\n  function daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n      return NaN;\n    }\n\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n  } // FORMATTING\n\n\n  addFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n  });\n  addFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n  });\n  addFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n  }); // ALIASES\n\n  addUnitAlias('month', 'M'); // PRIORITY\n\n  addUnitPriority('month', 8); // PARSING\n\n  addRegexToken('M', match1to2);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM', function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n  addParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n  });\n  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.\n\n\n    if (month != null) {\n      array[MONTH] = month;\n    } else {\n      getParsingFlags(config).invalidMonth = input;\n    }\n  }); // LOCALES\n\n  var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n  var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n\n  function localeMonths(m, format) {\n    if (!m) {\n      return isArray(this._months) ? this._months : this._months['standalone'];\n    }\n\n    return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n\n  function localeMonthsShort(m, format) {\n    if (!m) {\n      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];\n    }\n\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  function handleStrictParse(monthName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = monthName.toLocaleLowerCase();\n\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n\n      for (i = 0; i < 12; ++i) {\n        mom = createUTC([2000, i]);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeMonthsParse(monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n      return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    } // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n\n      if (strict && !this._longMonthsParse[i]) {\n        this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n        this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n      }\n\n      if (!strict && !this._monthsParse[i]) {\n        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function setMonth(mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n      // No op\n      return mom;\n    }\n\n    if (typeof value === 'string') {\n      if (/^\\d+$/.test(value)) {\n        value = toInt(value);\n      } else {\n        value = mom.localeData().monthsParse(value); // TODO: Another silent failure?\n\n        if (!isNumber(value)) {\n          return mom;\n        }\n      }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\n    return mom;\n  }\n\n  function getSetMonth(value) {\n    if (value != null) {\n      setMonth(this, value);\n      hooks.updateOffset(this, true);\n      return this;\n    } else {\n      return get(this, 'Month');\n    }\n  }\n\n  function getDaysInMonth() {\n    return daysInMonth(this.year(), this.month());\n  }\n\n  var defaultMonthsShortRegex = matchWord;\n\n  function monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      } else {\n        return this._monthsShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsShortRegex')) {\n        this._monthsShortRegex = defaultMonthsShortRegex;\n      }\n\n      return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n  }\n\n  var defaultMonthsRegex = matchWord;\n\n  function monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      } else {\n        return this._monthsRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this._monthsRegex = defaultMonthsRegex;\n      }\n\n      return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n    }\n  }\n\n  function computeMonthsParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom;\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      shortPieces.push(this.monthsShort(mom, ''));\n      longPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.monthsShort(mom, ''));\n    } // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n  }\n\n  function createDate(y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date; // the date constructor remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      date = new Date(y + 400, m, d, h, M, s, ms);\n\n      if (isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n      }\n    } else {\n      date = new Date(y, m, d, h, M, s, ms);\n    }\n\n    return date;\n  }\n\n  function createUTCDate(y) {\n    var date; // the Date.UTC function remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      var args = Array.prototype.slice.call(arguments); // preserve leap years using a full 400 year cycle, then reset\n\n      args[0] = y + 400;\n      date = new Date(Date.UTC.apply(null, args));\n\n      if (isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n      }\n    } else {\n      date = new Date(Date.UTC.apply(null, arguments));\n    }\n\n    return date;\n  } // start-of-first-week - start-of-year\n\n\n  function firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n    fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n  } // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\n\n  function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear,\n        resDayOfYear;\n\n    if (dayOfYear <= 0) {\n      resYear = year - 1;\n      resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n      resYear = year + 1;\n      resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n      resYear = year;\n      resDayOfYear = dayOfYear;\n    }\n\n    return {\n      year: resYear,\n      dayOfYear: resDayOfYear\n    };\n  }\n\n  function weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek,\n        resYear;\n\n    if (week < 1) {\n      resYear = mom.year() - 1;\n      resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n      resWeek = week - weeksInYear(mom.year(), dow, doy);\n      resYear = mom.year() + 1;\n    } else {\n      resYear = mom.year();\n      resWeek = week;\n    }\n\n    return {\n      week: resWeek,\n      year: resYear\n    };\n  }\n\n  function weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n  } // FORMATTING\n\n\n  addFormatToken('w', ['ww', 2], 'wo', 'week');\n  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek'); // ALIASES\n\n  addUnitAlias('week', 'w');\n  addUnitAlias('isoWeek', 'W'); // PRIORITIES\n\n  addUnitPriority('week', 5);\n  addUnitPriority('isoWeek', 5); // PARSING\n\n  addRegexToken('w', match1to2);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2);\n  addRegexToken('WW', match1to2, match2);\n  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n  }); // HELPERS\n  // LOCALES\n\n  function localeWeek(mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n  }\n\n  var defaultLocaleWeek = {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n  };\n\n  function localeFirstDayOfWeek() {\n    return this._week.dow;\n  }\n\n  function localeFirstDayOfYear() {\n    return this._week.doy;\n  } // MOMENTS\n\n\n  function getSetWeek(input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  }\n\n  function getSetISOWeek(input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('d', 0, 'do', 'day');\n  addFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n  });\n  addFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n  });\n  addFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n  });\n  addFormatToken('e', 0, 0, 'weekday');\n  addFormatToken('E', 0, 0, 'isoWeekday'); // ALIASES\n\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E'); // PRIORITY\n\n  addUnitPriority('day', 11);\n  addUnitPriority('weekday', 11);\n  addUnitPriority('isoWeekday', 11); // PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n  addRegexToken('dd', function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n  addRegexToken('ddd', function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd', function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n  });\n  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict); // if we didn't get a weekday name, mark the date as invalid\n\n\n    if (weekday != null) {\n      week.d = weekday;\n    } else {\n      getParsingFlags(config).invalidWeekday = input;\n    }\n  });\n  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n  }); // HELPERS\n\n  function parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n      return input;\n    }\n\n    if (!isNaN(input)) {\n      return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n\n    if (typeof input === 'number') {\n      return input;\n    }\n\n    return null;\n  }\n\n  function parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n      return locale.weekdaysParse(input) % 7 || 7;\n    }\n\n    return isNaN(input) ? null : input;\n  } // LOCALES\n\n\n  function shiftWeekdays(ws, n) {\n    return ws.slice(n, 7).concat(ws.slice(0, n));\n  }\n\n  var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n\n  function localeWeekdays(m, format) {\n    var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m && m !== true && this._weekdays.isFormat.test(format) ? 'format' : 'standalone'];\n    return m === true ? shiftWeekdays(weekdays, this._week.dow) : m ? weekdays[m.day()] : weekdays;\n  }\n\n  var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n\n  function localeWeekdaysShort(m) {\n    return m === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n  }\n\n  var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n\n  function localeWeekdaysMin(m) {\n    return m === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n  }\n\n  function handleStrictParse$1(weekdayName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = weekdayName.toLocaleLowerCase();\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n\n      for (i = 0; i < 7; ++i) {\n        mom = createUTC([2000, 1]).day(i);\n        this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeWeekdaysParse(weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n      return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n      }\n\n      if (!this._weekdaysParse[i]) {\n        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function getSetDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\n    if (input != null) {\n      input = parseWeekday(input, this.localeData());\n      return this.add(input - day, 'd');\n    } else {\n      return day;\n    }\n  }\n\n  function getSetLocaleDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n  }\n\n  function getSetISODayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    } // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n\n    if (input != null) {\n      var weekday = parseIsoWeekday(input, this.localeData());\n      return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n      return this.day() || 7;\n    }\n  }\n\n  var defaultWeekdaysRegex = matchWord;\n\n  function weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = defaultWeekdaysRegex;\n      }\n\n      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }\n\n  var defaultWeekdaysShortRegex = matchWord;\n\n  function weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n      }\n\n      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n\n  var defaultWeekdaysMinRegex = matchWord;\n\n  function weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n      }\n\n      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n\n  function computeWeekdaysParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var minPieces = [],\n        shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom,\n        minp,\n        shortp,\n        longp;\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n      minp = this.weekdaysMin(mom, '');\n      shortp = this.weekdaysShort(mom, '');\n      longp = this.weekdays(mom, '');\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    } // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 7; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n  } // FORMATTING\n\n\n  function hFormat() {\n    return this.hours() % 12 || 12;\n  }\n\n  function kFormat() {\n    return this.hours() || 24;\n  }\n\n  addFormatToken('H', ['HH', 2], 0, 'hour');\n  addFormatToken('h', ['hh', 2], 0, hFormat);\n  addFormatToken('k', ['kk', 2], 0, kFormat);\n  addFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n  addFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n\n  function meridiem(token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n  }\n\n  meridiem('a', true);\n  meridiem('A', false); // ALIASES\n\n  addUnitAlias('hour', 'h'); // PRIORITY\n\n  addUnitPriority('hour', 13); // PARSING\n\n  function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }\n\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2);\n  addRegexToken('h', match1to2);\n  addRegexToken('k', match1to2);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n  });\n  addParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n  });\n  addParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n  });\n  addParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n  }); // LOCALES\n\n  function localeIsPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return (input + '').toLowerCase().charAt(0) === 'p';\n  }\n\n  var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\n  function localeMeridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    } else {\n      return isLower ? 'am' : 'AM';\n    }\n  } // MOMENTS\n  // Setting the hour should keep the time, because the user explicitly\n  // specified which hour they want. So trying to maintain the same hour (in\n  // a new timezone) makes sense. Adding/subtracting hours does not follow\n  // this rule.\n\n\n  var getSetHour = makeGetSet('Hours', true);\n  var baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n    week: defaultLocaleWeek,\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n    meridiemParse: defaultLocaleMeridiemParse\n  }; // internal storage for locale config files\n\n  var locales = {};\n  var localeFamilies = {};\n  var globalLocale;\n\n  function normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n  } // pick the locale from the array\n  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\n\n  function chooseLocale(names) {\n    var i = 0,\n        j,\n        next,\n        locale,\n        split;\n\n    while (i < names.length) {\n      split = normalizeLocale(names[i]).split('-');\n      j = split.length;\n      next = normalizeLocale(names[i + 1]);\n      next = next ? next.split('-') : null;\n\n      while (j > 0) {\n        locale = loadLocale(split.slice(0, j).join('-'));\n\n        if (locale) {\n          return locale;\n        }\n\n        if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n          //the next array item is better than a shallower substring of this one\n          break;\n        }\n\n        j--;\n      }\n\n      i++;\n    }\n\n    return globalLocale;\n  }\n\n  function loadLocale(name) {\n    var oldLocale = null; // TODO: Find a better way to register and load all the locales in Node\n\n    if (!locales[name] && typeof module !== 'undefined' && module && module.exports) {\n      try {\n        oldLocale = globalLocale._abbr;\n        var aliasedRequire = require;\n        aliasedRequire('./locale/' + name);\n        getSetGlobalLocale(oldLocale);\n      } catch (e) {}\n    }\n\n    return locales[name];\n  } // This function will load locale and then set the global locale.  If\n  // no arguments are passed in, it will simply return the current global\n  // locale key.\n\n\n  function getSetGlobalLocale(key, values) {\n    var data;\n\n    if (key) {\n      if (isUndefined(values)) {\n        data = getLocale(key);\n      } else {\n        data = defineLocale(key, values);\n      }\n\n      if (data) {\n        // moment.duration._locale = moment._locale = data;\n        globalLocale = data;\n      } else {\n        if (typeof console !== 'undefined' && console.warn) {\n          //warn user if arguments are passed but the locale could not be set\n          console.warn('Locale ' + key + ' not found. Did you forget to load it?');\n        }\n      }\n    }\n\n    return globalLocale._abbr;\n  }\n\n  function defineLocale(name, config) {\n    if (config !== null) {\n      var locale,\n          parentConfig = baseConfig;\n      config.abbr = name;\n\n      if (locales[name] != null) {\n        deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n        parentConfig = locales[name]._config;\n      } else if (config.parentLocale != null) {\n        if (locales[config.parentLocale] != null) {\n          parentConfig = locales[config.parentLocale]._config;\n        } else {\n          locale = loadLocale(config.parentLocale);\n\n          if (locale != null) {\n            parentConfig = locale._config;\n          } else {\n            if (!localeFamilies[config.parentLocale]) {\n              localeFamilies[config.parentLocale] = [];\n            }\n\n            localeFamilies[config.parentLocale].push({\n              name: name,\n              config: config\n            });\n            return null;\n          }\n        }\n      }\n\n      locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n      if (localeFamilies[name]) {\n        localeFamilies[name].forEach(function (x) {\n          defineLocale(x.name, x.config);\n        });\n      } // backwards compat for now: also set the locale\n      // make sure we set the locale AFTER all child locales have been\n      // created, so we won't end up with the child locale set.\n\n\n      getSetGlobalLocale(name);\n      return locales[name];\n    } else {\n      // useful for testing\n      delete locales[name];\n      return null;\n    }\n  }\n\n  function updateLocale(name, config) {\n    if (config != null) {\n      var locale,\n          tmpLocale,\n          parentConfig = baseConfig; // MERGE\n\n      tmpLocale = loadLocale(name);\n\n      if (tmpLocale != null) {\n        parentConfig = tmpLocale._config;\n      }\n\n      config = mergeConfigs(parentConfig, config);\n      locale = new Locale(config);\n      locale.parentLocale = locales[name];\n      locales[name] = locale; // backwards compat for now: also set the locale\n\n      getSetGlobalLocale(name);\n    } else {\n      // pass null for config to unupdate, useful for tests\n      if (locales[name] != null) {\n        if (locales[name].parentLocale != null) {\n          locales[name] = locales[name].parentLocale;\n        } else if (locales[name] != null) {\n          delete locales[name];\n        }\n      }\n    }\n\n    return locales[name];\n  } // returns locale data\n\n\n  function getLocale(key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n      key = key._locale._abbr;\n    }\n\n    if (!key) {\n      return globalLocale;\n    }\n\n    if (!isArray(key)) {\n      //short-circuit everything else\n      locale = loadLocale(key);\n\n      if (locale) {\n        return locale;\n      }\n\n      key = [key];\n    }\n\n    return chooseLocale(key);\n  }\n\n  function listLocales() {\n    return keys(locales);\n  }\n\n  function checkOverflow(m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n      overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n\n      if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n        overflow = DATE;\n      }\n\n      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n        overflow = WEEK;\n      }\n\n      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n        overflow = WEEKDAY;\n      }\n\n      getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n  } // Pick the first defined of two or three arguments.\n\n\n  function defaults(a, b, c) {\n    if (a != null) {\n      return a;\n    }\n\n    if (b != null) {\n      return b;\n    }\n\n    return c;\n  }\n\n  function currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n\n    if (config._useUTC) {\n      return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n  } // convert an array to a date.\n  // the array should mirror the parameters below\n  // note: all values past the year are optional and will default to the lowest possible value.\n  // [year, month, day , hour, minute, second, millisecond]\n\n\n  function configFromArray(config) {\n    var i,\n        date,\n        input = [],\n        currentDate,\n        expectedWeekday,\n        yearToUse;\n\n    if (config._d) {\n      return;\n    }\n\n    currentDate = currentDateArray(config); //compute day of the year from weeks and weekdays\n\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n      dayOfYearFromWeekInfo(config);\n    } //if the day of the year is set, figure out what it is\n\n\n    if (config._dayOfYear != null) {\n      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n      if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n        getParsingFlags(config)._overflowDayOfYear = true;\n      }\n\n      date = createUTCDate(yearToUse, 0, config._dayOfYear);\n      config._a[MONTH] = date.getUTCMonth();\n      config._a[DATE] = date.getUTCDate();\n    } // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n\n\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n      config._a[i] = input[i] = currentDate[i];\n    } // Zero out whatever was not defaulted, including time\n\n\n    for (; i < 7; i++) {\n      config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n    } // Check for 24:00:00.000\n\n\n    if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n      config._nextDay = true;\n      config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay(); // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n\n    if (config._tzm != null) {\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n      config._a[HOUR] = 24;\n    } // check for mismatching day of week\n\n\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n      getParsingFlags(config).weekdayMismatch = true;\n    }\n  }\n\n  function dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n    w = config._w;\n\n    if (w.GG != null || w.W != null || w.E != null) {\n      dow = 1;\n      doy = 4; // TODO: We need to take the current isoWeekYear, but that depends on\n      // how we interpret now (local, utc, fixed offset). So create\n      // a now version of current config (take local/utc/offset flags, and\n      // create now).\n\n      weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n      week = defaults(w.W, 1);\n      weekday = defaults(w.E, 1);\n\n      if (weekday < 1 || weekday > 7) {\n        weekdayOverflow = true;\n      }\n    } else {\n      dow = config._locale._week.dow;\n      doy = config._locale._week.doy;\n      var curWeek = weekOfYear(createLocal(), dow, doy);\n      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year); // Default to current week.\n\n      week = defaults(w.w, curWeek.week);\n\n      if (w.d != null) {\n        // weekday -- low day numbers are considered next week\n        weekday = w.d;\n\n        if (weekday < 0 || weekday > 6) {\n          weekdayOverflow = true;\n        }\n      } else if (w.e != null) {\n        // local weekday -- counting starts from beginning of week\n        weekday = w.e + dow;\n\n        if (w.e < 0 || w.e > 6) {\n          weekdayOverflow = true;\n        }\n      } else {\n        // default to beginning of week\n        weekday = dow;\n      }\n    }\n\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n      getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n      getParsingFlags(config)._overflowWeekday = true;\n    } else {\n      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n      config._a[YEAR] = temp.year;\n      config._dayOfYear = temp.dayOfYear;\n    }\n  } // iso 8601 regex\n  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\n\n  var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n  var isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/], ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/], ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/], ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false], ['YYYY-DDD', /\\d{4}-\\d{3}/], ['YYYY-MM', /\\d{4}-\\d\\d/, false], ['YYYYYYMMDD', /[+-]\\d{10}/], ['YYYYMMDD', /\\d{8}/], // YYYYMM is NOT allowed by the standard\n  ['GGGG[W]WWE', /\\d{4}W\\d{3}/], ['GGGG[W]WW', /\\d{4}W\\d{2}/, false], ['YYYYDDD', /\\d{7}/]]; // iso time formats and regexes\n\n  var isoTimes = [['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/], ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /\\d\\d:\\d\\d/], ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/], ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/], ['HHmmss', /\\d\\d\\d\\d\\d\\d/], ['HHmm', /\\d\\d\\d\\d/], ['HH', /\\d\\d/]];\n  var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i; // date from iso format\n\n  function configFromISO(config) {\n    var i,\n        l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime,\n        dateFormat,\n        timeFormat,\n        tzFormat;\n\n    if (match) {\n      getParsingFlags(config).iso = true;\n\n      for (i = 0, l = isoDates.length; i < l; i++) {\n        if (isoDates[i][1].exec(match[1])) {\n          dateFormat = isoDates[i][0];\n          allowTime = isoDates[i][2] !== false;\n          break;\n        }\n      }\n\n      if (dateFormat == null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[3]) {\n        for (i = 0, l = isoTimes.length; i < l; i++) {\n          if (isoTimes[i][1].exec(match[3])) {\n            // match[2] should be 'T' or space\n            timeFormat = (match[2] || ' ') + isoTimes[i][0];\n            break;\n          }\n        }\n\n        if (timeFormat == null) {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      if (!allowTime && timeFormat != null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[4]) {\n        if (tzRegex.exec(match[4])) {\n          tzFormat = 'Z';\n        } else {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n      configFromStringAndFormat(config);\n    } else {\n      config._isValid = false;\n    }\n  } // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n\n\n  var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n  function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\n\n    if (secondStr) {\n      result.push(parseInt(secondStr, 10));\n    }\n\n    return result;\n  }\n\n  function untruncateYear(yearStr) {\n    var year = parseInt(yearStr, 10);\n\n    if (year <= 49) {\n      return 2000 + year;\n    } else if (year <= 999) {\n      return 1900 + year;\n    }\n\n    return year;\n  }\n\n  function preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n  }\n\n  function checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n      // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n      var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n          weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n\n      if (weekdayProvided !== weekdayActual) {\n        getParsingFlags(config).weekdayMismatch = true;\n        config._isValid = false;\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  var obsOffsets = {\n    UT: 0,\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n  };\n\n  function calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n      return obsOffsets[obsOffset];\n    } else if (militaryOffset) {\n      // the only allowed military tz is Z\n      return 0;\n    } else {\n      var hm = parseInt(numOffset, 10);\n      var m = hm % 100,\n          h = (hm - m) / 100;\n      return h * 60 + m;\n    }\n  } // date and time from ref 2822 format\n\n\n  function configFromRFC2822(config) {\n    var match = rfc2822.exec(preprocessRFC2822(config._i));\n\n    if (match) {\n      var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n\n      if (!checkWeekday(match[1], parsedArray, config)) {\n        return;\n      }\n\n      config._a = parsedArray;\n      config._tzm = calculateOffset(match[8], match[9], match[10]);\n      config._d = createUTCDate.apply(null, config._a);\n\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n      getParsingFlags(config).rfc2822 = true;\n    } else {\n      config._isValid = false;\n    }\n  } // date from iso format or fallback\n\n\n  function configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n      config._d = new Date(+matched[1]);\n      return;\n    }\n\n    configFromISO(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n\n    configFromRFC2822(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    } // Final attempt, use Input Fallback\n\n\n    hooks.createFromInputFallback(config);\n  }\n\n  hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged and will be removed in an upcoming major release. Please refer to ' + 'http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {\n    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n  }); // constant that refers to the ISO standard\n\n  hooks.ISO_8601 = function () {}; // constant that refers to the RFC 2822 form\n\n\n  hooks.RFC_2822 = function () {}; // date from string and format string\n\n\n  function configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n      configFromISO(config);\n      return;\n    }\n\n    if (config._f === hooks.RFC_2822) {\n      configFromRFC2822(config);\n      return;\n    }\n\n    config._a = [];\n    getParsingFlags(config).empty = true; // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\n    var string = '' + config._i,\n        i,\n        parsedInput,\n        tokens,\n        token,\n        skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0]; // console.log('token', token, 'parsedInput', parsedInput,\n      //         'regex', getParseRegexForToken(token, config));\n\n      if (parsedInput) {\n        skipped = string.substr(0, string.indexOf(parsedInput));\n\n        if (skipped.length > 0) {\n          getParsingFlags(config).unusedInput.push(skipped);\n        }\n\n        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n        totalParsedInputLength += parsedInput.length;\n      } // don't parse if it's not a known token\n\n\n      if (formatTokenFunctions[token]) {\n        if (parsedInput) {\n          getParsingFlags(config).empty = false;\n        } else {\n          getParsingFlags(config).unusedTokens.push(token);\n        }\n\n        addTimeToArrayFromToken(token, parsedInput, config);\n      } else if (config._strict && !parsedInput) {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n    } // add remaining unparsed input length to the string\n\n\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n\n    if (string.length > 0) {\n      getParsingFlags(config).unusedInput.push(string);\n    } // clear _12h flag if hour is <= 12\n\n\n    if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n      getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem; // handle meridiem\n\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n    configFromArray(config);\n    checkOverflow(config);\n  }\n\n  function meridiemFixWrap(locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n      // nothing to do\n      return hour;\n    }\n\n    if (locale.meridiemHour != null) {\n      return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n      // Fallback\n      isPm = locale.isPM(meridiem);\n\n      if (isPm && hour < 12) {\n        hour += 12;\n      }\n\n      if (!isPm && hour === 12) {\n        hour = 0;\n      }\n\n      return hour;\n    } else {\n      // this is not supposed to happen\n      return hour;\n    }\n  } // date from string and array of format strings\n\n\n  function configFromStringAndArray(config) {\n    var tempConfig, bestMoment, scoreToBeat, i, currentScore;\n\n    if (config._f.length === 0) {\n      getParsingFlags(config).invalidFormat = true;\n      config._d = new Date(NaN);\n      return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n      currentScore = 0;\n      tempConfig = copyConfig({}, config);\n\n      if (config._useUTC != null) {\n        tempConfig._useUTC = config._useUTC;\n      }\n\n      tempConfig._f = config._f[i];\n      configFromStringAndFormat(tempConfig);\n\n      if (!isValid(tempConfig)) {\n        continue;\n      } // if there is any input that was not parsed add a penalty for that format\n\n\n      currentScore += getParsingFlags(tempConfig).charsLeftOver; //or tokens\n\n      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n      getParsingFlags(tempConfig).score = currentScore;\n\n      if (scoreToBeat == null || currentScore < scoreToBeat) {\n        scoreToBeat = currentScore;\n        bestMoment = tempConfig;\n      }\n    }\n\n    extend(config, bestMoment || tempConfig);\n  }\n\n  function configFromObject(config) {\n    if (config._d) {\n      return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n      return obj && parseInt(obj, 10);\n    });\n    configFromArray(config);\n  }\n\n  function createFromConfig(config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n\n    if (res._nextDay) {\n      // Adding is smart enough around DST\n      res.add(1, 'd');\n      res._nextDay = undefined;\n    }\n\n    return res;\n  }\n\n  function prepareConfig(config) {\n    var input = config._i,\n        format = config._f;\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || format === undefined && input === '') {\n      return createInvalid({\n        nullInput: true\n      });\n    }\n\n    if (typeof input === 'string') {\n      config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n      return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n      config._d = input;\n    } else if (isArray(format)) {\n      configFromStringAndArray(config);\n    } else if (format) {\n      configFromStringAndFormat(config);\n    } else {\n      configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n      config._d = null;\n    }\n\n    return config;\n  }\n\n  function configFromInput(config) {\n    var input = config._i;\n\n    if (isUndefined(input)) {\n      config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n      config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n      configFromString(config);\n    } else if (isArray(input)) {\n      config._a = map(input.slice(0), function (obj) {\n        return parseInt(obj, 10);\n      });\n      configFromArray(config);\n    } else if (isObject(input)) {\n      configFromObject(config);\n    } else if (isNumber(input)) {\n      // from milliseconds\n      config._d = new Date(input);\n    } else {\n      hooks.createFromInputFallback(config);\n    }\n  }\n\n  function createLocalOrUTC(input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n      strict = locale;\n      locale = undefined;\n    }\n\n    if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {\n      input = undefined;\n    } // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n\n\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n    return createFromConfig(c);\n  }\n\n  function createLocal(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n  }\n\n  var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other < this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  });\n  var prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other > this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  }); // Pick a moment m from moments so that m[fn](other) is true for all\n  // other. This relies on the function fn to be transitive.\n  //\n  // moments should either be an array of moment objects or an array, whose\n  // first element is an array of moment objects.\n\n  function pickBy(fn, moments) {\n    var res, i;\n\n    if (moments.length === 1 && isArray(moments[0])) {\n      moments = moments[0];\n    }\n\n    if (!moments.length) {\n      return createLocal();\n    }\n\n    res = moments[0];\n\n    for (i = 1; i < moments.length; ++i) {\n      if (!moments[i].isValid() || moments[i][fn](res)) {\n        res = moments[i];\n      }\n    }\n\n    return res;\n  } // TODO: Use [].sort instead?\n\n\n  function min() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isBefore', args);\n  }\n\n  function max() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isAfter', args);\n  }\n\n  var now = function now() {\n    return Date.now ? Date.now() : +new Date();\n  };\n\n  var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n  function isDurationValid(m) {\n    for (var key in m) {\n      if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n        return false;\n      }\n    }\n\n    var unitHasDecimal = false;\n\n    for (var i = 0; i < ordering.length; ++i) {\n      if (m[ordering[i]]) {\n        if (unitHasDecimal) {\n          return false; // only allow non-integers for smallest unit\n        }\n\n        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n          unitHasDecimal = true;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  function isValid$1() {\n    return this._isValid;\n  }\n\n  function createInvalid$1() {\n    return createDuration(NaN);\n  }\n\n  function Duration(duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n    this._isValid = isDurationValid(normalizedInput); // representation for dateAddRemove\n\n    this._milliseconds = +milliseconds + seconds * 1e3 + // 1000\n    minutes * 6e4 + // 1000 * 60\n    hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n\n    this._days = +days + weeks * 7; // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n\n    this._months = +months + quarters * 3 + years * 12;\n    this._data = {};\n    this._locale = getLocale();\n\n    this._bubble();\n  }\n\n  function isDuration(obj) {\n    return obj instanceof Duration;\n  }\n\n  function absRound(number) {\n    if (number < 0) {\n      return Math.round(-1 * number) * -1;\n    } else {\n      return Math.round(number);\n    }\n  } // FORMATTING\n\n\n  function offset(token, separator) {\n    addFormatToken(token, 0, 0, function () {\n      var offset = this.utcOffset();\n      var sign = '+';\n\n      if (offset < 0) {\n        offset = -offset;\n        sign = '-';\n      }\n\n      return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n    });\n  }\n\n  offset('Z', ':');\n  offset('ZZ', ''); // PARSING\n\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n  }); // HELPERS\n  // timezone chunker\n  // '+10:00' > ['10',  '00']\n  // '-1530'  > ['-15', '30']\n\n  var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n  function offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n      return null;\n    }\n\n    var chunk = matches[matches.length - 1] || [];\n    var parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n    return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n  } // Return a moment from input, that is local/utc/zone equivalent to model.\n\n\n  function cloneWithOffset(input, model) {\n    var res, diff;\n\n    if (model._isUTC) {\n      res = model.clone();\n      diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf(); // Use low-level api, because this fn is low-level api.\n\n      res._d.setTime(res._d.valueOf() + diff);\n\n      hooks.updateOffset(res, false);\n      return res;\n    } else {\n      return createLocal(input).local();\n    }\n  }\n\n  function getDateOffset(m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n  } // HOOKS\n  // This function will be called whenever a moment is mutated.\n  // It is intended to keep the offset in sync with the timezone.\n\n\n  hooks.updateOffset = function () {}; // MOMENTS\n  // keepLocalTime = true means only change the timezone, without\n  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n  // +0200, so we adjust the time as needed, to be valid.\n  //\n  // Keeping the time actually adds/subtracts (one hour)\n  // from the actual represented time. That is why we call updateOffset\n  // a second time. In case it wants us to change the offset again\n  // _changeInProgress == true case, then we have to adjust, because\n  // there is no such time in the given timezone.\n\n\n  function getSetOffset(input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    if (input != null) {\n      if (typeof input === 'string') {\n        input = offsetFromString(matchShortOffset, input);\n\n        if (input === null) {\n          return this;\n        }\n      } else if (Math.abs(input) < 16 && !keepMinutes) {\n        input = input * 60;\n      }\n\n      if (!this._isUTC && keepLocalTime) {\n        localAdjust = getDateOffset(this);\n      }\n\n      this._offset = input;\n      this._isUTC = true;\n\n      if (localAdjust != null) {\n        this.add(localAdjust, 'm');\n      }\n\n      if (offset !== input) {\n        if (!keepLocalTime || this._changeInProgress) {\n          addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n        } else if (!this._changeInProgress) {\n          this._changeInProgress = true;\n          hooks.updateOffset(this, true);\n          this._changeInProgress = null;\n        }\n      }\n\n      return this;\n    } else {\n      return this._isUTC ? offset : getDateOffset(this);\n    }\n  }\n\n  function getSetZone(input, keepLocalTime) {\n    if (input != null) {\n      if (typeof input !== 'string') {\n        input = -input;\n      }\n\n      this.utcOffset(input, keepLocalTime);\n      return this;\n    } else {\n      return -this.utcOffset();\n    }\n  }\n\n  function setOffsetToUTC(keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n  }\n\n  function setOffsetToLocal(keepLocalTime) {\n    if (this._isUTC) {\n      this.utcOffset(0, keepLocalTime);\n      this._isUTC = false;\n\n      if (keepLocalTime) {\n        this.subtract(getDateOffset(this), 'm');\n      }\n    }\n\n    return this;\n  }\n\n  function setOffsetToParsedOffset() {\n    if (this._tzm != null) {\n      this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n      var tZone = offsetFromString(matchOffset, this._i);\n\n      if (tZone != null) {\n        this.utcOffset(tZone);\n      } else {\n        this.utcOffset(0, true);\n      }\n    }\n\n    return this;\n  }\n\n  function hasAlignedHourOffset(input) {\n    if (!this.isValid()) {\n      return false;\n    }\n\n    input = input ? createLocal(input).utcOffset() : 0;\n    return (this.utcOffset() - input) % 60 === 0;\n  }\n\n  function isDaylightSavingTime() {\n    return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();\n  }\n\n  function isDaylightSavingTimeShifted() {\n    if (!isUndefined(this._isDSTShifted)) {\n      return this._isDSTShifted;\n    }\n\n    var c = {};\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n      var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n      this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n    } else {\n      this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n  }\n\n  function isLocal() {\n    return this.isValid() ? !this._isUTC : false;\n  }\n\n  function isUtcOffset() {\n    return this.isValid() ? this._isUTC : false;\n  }\n\n  function isUtc() {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n  } // ASP.NET json date format regex\n\n\n  var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/; // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n  // and further modified to allow for strings containing both week and day\n\n  var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n  function createDuration(input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n    match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n      duration = {\n        ms: input._milliseconds,\n        d: input._days,\n        M: input._months\n      };\n    } else if (isNumber(input)) {\n      duration = {};\n\n      if (key) {\n        duration[key] = input;\n      } else {\n        duration.milliseconds = input;\n      }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: 0,\n        d: toInt(match[DATE]) * sign,\n        h: toInt(match[HOUR]) * sign,\n        m: toInt(match[MINUTE]) * sign,\n        s: toInt(match[SECOND]) * sign,\n        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n\n      };\n    } else if (!!(match = isoRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: parseIso(match[2], sign),\n        M: parseIso(match[3], sign),\n        w: parseIso(match[4], sign),\n        d: parseIso(match[5], sign),\n        h: parseIso(match[6], sign),\n        m: parseIso(match[7], sign),\n        s: parseIso(match[8], sign)\n      };\n    } else if (duration == null) {\n      // checks for null or undefined\n      duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n      diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n      duration = {};\n      duration.ms = diffRes.milliseconds;\n      duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n      ret._locale = input._locale;\n    }\n\n    return ret;\n  }\n\n  createDuration.fn = Duration.prototype;\n  createDuration.invalid = createInvalid$1;\n\n  function parseIso(inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.')); // apply sign while we're at it\n\n    return (isNaN(res) ? 0 : res) * sign;\n  }\n\n  function positiveMomentsDifference(base, other) {\n    var res = {};\n    res.months = other.month() - base.month() + (other.year() - base.year()) * 12;\n\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n      --res.months;\n    }\n\n    res.milliseconds = +other - +base.clone().add(res.months, 'M');\n    return res;\n  }\n\n  function momentsDifference(base, other) {\n    var res;\n\n    if (!(base.isValid() && other.isValid())) {\n      return {\n        milliseconds: 0,\n        months: 0\n      };\n    }\n\n    other = cloneWithOffset(other, base);\n\n    if (base.isBefore(other)) {\n      res = positiveMomentsDifference(base, other);\n    } else {\n      res = positiveMomentsDifference(other, base);\n      res.milliseconds = -res.milliseconds;\n      res.months = -res.months;\n    }\n\n    return res;\n  } // TODO: remove 'name' arg after deprecation is removed\n\n\n  function createAdder(direction, name) {\n    return function (val, period) {\n      var dur, tmp; //invert the arguments, but complain about it\n\n      if (period !== null && !isNaN(+period)) {\n        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n        tmp = val;\n        val = period;\n        period = tmp;\n      }\n\n      val = typeof val === 'string' ? +val : val;\n      dur = createDuration(val, period);\n      addSubtract(this, dur, direction);\n      return this;\n    };\n  }\n\n  function addSubtract(mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n      // No op\n      return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (months) {\n      setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n\n    if (days) {\n      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n\n    if (milliseconds) {\n      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n\n    if (updateOffset) {\n      hooks.updateOffset(mom, days || months);\n    }\n  }\n\n  var add = createAdder(1, 'add');\n  var subtract = createAdder(-1, 'subtract');\n\n  function getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';\n  }\n\n  function calendar$1(time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n  }\n\n  function clone() {\n    return new Moment(this);\n  }\n\n  function isAfter(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() > localInput.valueOf();\n    } else {\n      return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n  }\n\n  function isBefore(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() < localInput.valueOf();\n    } else {\n      return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n  }\n\n  function isBetween(from, to, units, inclusivity) {\n    var localFrom = isMoment(from) ? from : createLocal(from),\n        localTo = isMoment(to) ? to : createLocal(to);\n\n    if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n      return false;\n    }\n\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n  }\n\n  function isSame(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() === localInput.valueOf();\n    } else {\n      inputMs = localInput.valueOf();\n      return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n  }\n\n  function isSameOrAfter(input, units) {\n    return this.isSame(input, units) || this.isAfter(input, units);\n  }\n\n  function isSameOrBefore(input, units) {\n    return this.isSame(input, units) || this.isBefore(input, units);\n  }\n\n  function diff(input, units, asFloat) {\n    var that, zoneDelta, output;\n\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n      return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n    units = normalizeUnits(units);\n\n    switch (units) {\n      case 'year':\n        output = monthDiff(this, that) / 12;\n        break;\n\n      case 'month':\n        output = monthDiff(this, that);\n        break;\n\n      case 'quarter':\n        output = monthDiff(this, that) / 3;\n        break;\n\n      case 'second':\n        output = (this - that) / 1e3;\n        break;\n      // 1000\n\n      case 'minute':\n        output = (this - that) / 6e4;\n        break;\n      // 1000 * 60\n\n      case 'hour':\n        output = (this - that) / 36e5;\n        break;\n      // 1000 * 60 * 60\n\n      case 'day':\n        output = (this - that - zoneDelta) / 864e5;\n        break;\n      // 1000 * 60 * 60 * 24, negate dst\n\n      case 'week':\n        output = (this - that - zoneDelta) / 6048e5;\n        break;\n      // 1000 * 60 * 60 * 24 * 7, negate dst\n\n      default:\n        output = this - that;\n    }\n\n    return asFloat ? output : absFloor(output);\n  }\n\n  function monthDiff(a, b) {\n    // difference in months\n    var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n    anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2,\n        adjust;\n\n    if (b - anchor < 0) {\n      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor2 - anchor);\n    } //check for negative zero, return zero if negative zero\n\n\n    return -(wholeMonthDiff + adjust) || 0;\n  }\n\n  hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n  hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n  function toString() {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n  }\n\n  function toISOString(keepOffset) {\n    if (!this.isValid()) {\n      return null;\n    }\n\n    var utc = keepOffset !== true;\n    var m = utc ? this.clone().utc() : this;\n\n    if (m.year() < 0 || m.year() > 9999) {\n      return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    if (isFunction(Date.prototype.toISOString)) {\n      // native implementation is ~50x faster, use it when we can\n      if (utc) {\n        return this.toDate().toISOString();\n      } else {\n        return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n      }\n    }\n\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n  }\n  /**\n   * Return a human readable representation of a moment that can\n   * also be evaluated to get a new moment which is the same\n   *\n   * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n   */\n\n\n  function inspect() {\n    if (!this.isValid()) {\n      return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n\n    var func = 'moment';\n    var zone = '';\n\n    if (!this.isLocal()) {\n      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n      zone = 'Z';\n    }\n\n    var prefix = '[' + func + '(\"]';\n    var year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n    return this.format(prefix + year + datetime + suffix);\n  }\n\n  function format(inputString) {\n    if (!inputString) {\n      inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n  }\n\n  function from(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        to: this,\n        from: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function fromNow(withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n  }\n\n  function to(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        from: this,\n        to: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function toNow(withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n  } // If passed a locale key, it will set the locale for this\n  // instance.  Otherwise, it will return the locale configuration\n  // variables for this instance.\n\n\n  function locale(key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n      return this._locale._abbr;\n    } else {\n      newLocaleData = getLocale(key);\n\n      if (newLocaleData != null) {\n        this._locale = newLocaleData;\n      }\n\n      return this;\n    }\n  }\n\n  var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {\n    if (key === undefined) {\n      return this.localeData();\n    } else {\n      return this.locale(key);\n    }\n  });\n\n  function localeData() {\n    return this._locale;\n  }\n\n  var MS_PER_SECOND = 1000;\n  var MS_PER_MINUTE = 60 * MS_PER_SECOND;\n  var MS_PER_HOUR = 60 * MS_PER_MINUTE;\n  var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR; // actual modulo - handles negative numbers (for dates before 1970):\n\n  function mod$1(dividend, divisor) {\n    return (dividend % divisor + divisor) % divisor;\n  }\n\n  function localStartOfDate(y, m, d) {\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return new Date(y, m, d).valueOf();\n    }\n  }\n\n  function utcStartOfDate(y, m, d) {\n    // Date.UTC remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return Date.UTC(y, m, d);\n    }\n  }\n\n  function startOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year(), 0, 1);\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month(), 1);\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date());\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_MINUTE);\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_SECOND);\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function endOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year() + 1, 0, 1) - 1;\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function valueOf() {\n    return this._d.valueOf() - (this._offset || 0) * 60000;\n  }\n\n  function unix() {\n    return Math.floor(this.valueOf() / 1000);\n  }\n\n  function toDate() {\n    return new Date(this.valueOf());\n  }\n\n  function toArray() {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n  }\n\n  function toObject() {\n    var m = this;\n    return {\n      years: m.year(),\n      months: m.month(),\n      date: m.date(),\n      hours: m.hours(),\n      minutes: m.minutes(),\n      seconds: m.seconds(),\n      milliseconds: m.milliseconds()\n    };\n  }\n\n  function toJSON() {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n  }\n\n  function isValid$2() {\n    return isValid(this);\n  }\n\n  function parsingFlags() {\n    return extend({}, getParsingFlags(this));\n  }\n\n  function invalidAt() {\n    return getParsingFlags(this).overflow;\n  }\n\n  function creationData() {\n    return {\n      input: this._i,\n      format: this._f,\n      locale: this._locale,\n      isUTC: this._isUTC,\n      strict: this._strict\n    };\n  } // FORMATTING\n\n\n  addFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n  });\n  addFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n  });\n\n  function addWeekYearFormatToken(token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n  }\n\n  addWeekYearFormatToken('gggg', 'weekYear');\n  addWeekYearFormatToken('ggggg', 'weekYear');\n  addWeekYearFormatToken('GGGG', 'isoWeekYear');\n  addWeekYearFormatToken('GGGGG', 'isoWeekYear'); // ALIASES\n\n  addUnitAlias('weekYear', 'gg');\n  addUnitAlias('isoWeekYear', 'GG'); // PRIORITY\n\n  addUnitPriority('weekYear', 1);\n  addUnitPriority('isoWeekYear', 1); // PARSING\n\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n  });\n  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n  }); // MOMENTS\n\n  function getSetWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);\n  }\n\n  function getSetISOWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);\n  }\n\n  function getISOWeeksInYear() {\n    return weeksInYear(this.year(), 1, 4);\n  }\n\n  function getWeeksInYear() {\n    var weekInfo = this.localeData()._week;\n\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n  }\n\n  function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n\n    if (input == null) {\n      return weekOfYear(this, dow, doy).year;\n    } else {\n      weeksTarget = weeksInYear(input, dow, doy);\n\n      if (week > weeksTarget) {\n        week = weeksTarget;\n      }\n\n      return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n  }\n\n  function setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n  } // FORMATTING\n\n\n  addFormatToken('Q', 0, 'Qo', 'quarter'); // ALIASES\n\n  addUnitAlias('quarter', 'Q'); // PRIORITY\n\n  addUnitPriority('quarter', 7); // PARSING\n\n  addRegexToken('Q', match1);\n  addParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n  }); // MOMENTS\n\n  function getSetQuarter(input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n  } // FORMATTING\n\n\n  addFormatToken('D', ['DD', 2], 'Do', 'date'); // ALIASES\n\n  addUnitAlias('date', 'D'); // PRIORITY\n\n  addUnitPriority('date', 9); // PARSING\n\n  addRegexToken('D', match1to2);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;\n  });\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n  }); // MOMENTS\n\n  var getSetDayOfMonth = makeGetSet('Date', true); // FORMATTING\n\n  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'); // ALIASES\n\n  addUnitAlias('dayOfYear', 'DDD'); // PRIORITY\n\n  addUnitPriority('dayOfYear', 4); // PARSING\n\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n  }); // HELPERS\n  // MOMENTS\n\n  function getSetDayOfYear(input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('m', ['mm', 2], 0, 'minute'); // ALIASES\n\n  addUnitAlias('minute', 'm'); // PRIORITY\n\n  addUnitPriority('minute', 14); // PARSING\n\n  addRegexToken('m', match1to2);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE); // MOMENTS\n\n  var getSetMinute = makeGetSet('Minutes', false); // FORMATTING\n\n  addFormatToken('s', ['ss', 2], 0, 'second'); // ALIASES\n\n  addUnitAlias('second', 's'); // PRIORITY\n\n  addUnitPriority('second', 15); // PARSING\n\n  addRegexToken('s', match1to2);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND); // MOMENTS\n\n  var getSetSecond = makeGetSet('Seconds', false); // FORMATTING\n\n  addFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n  });\n  addFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n  });\n  addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n  addFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n  });\n  addFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n  });\n  addFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n  });\n  addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n  });\n  addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n  });\n  addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n  }); // ALIASES\n\n  addUnitAlias('millisecond', 'ms'); // PRIORITY\n\n  addUnitPriority('millisecond', 16); // PARSING\n\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n  var token;\n\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n\n  function parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n  }\n\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  } // MOMENTS\n\n\n  var getSetMillisecond = makeGetSet('Milliseconds', false); // FORMATTING\n\n  addFormatToken('z', 0, 0, 'zoneAbbr');\n  addFormatToken('zz', 0, 0, 'zoneName'); // MOMENTS\n\n  function getZoneAbbr() {\n    return this._isUTC ? 'UTC' : '';\n  }\n\n  function getZoneName() {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n  }\n\n  var proto = Moment.prototype;\n  proto.add = add;\n  proto.calendar = calendar$1;\n  proto.clone = clone;\n  proto.diff = diff;\n  proto.endOf = endOf;\n  proto.format = format;\n  proto.from = from;\n  proto.fromNow = fromNow;\n  proto.to = to;\n  proto.toNow = toNow;\n  proto.get = stringGet;\n  proto.invalidAt = invalidAt;\n  proto.isAfter = isAfter;\n  proto.isBefore = isBefore;\n  proto.isBetween = isBetween;\n  proto.isSame = isSame;\n  proto.isSameOrAfter = isSameOrAfter;\n  proto.isSameOrBefore = isSameOrBefore;\n  proto.isValid = isValid$2;\n  proto.lang = lang;\n  proto.locale = locale;\n  proto.localeData = localeData;\n  proto.max = prototypeMax;\n  proto.min = prototypeMin;\n  proto.parsingFlags = parsingFlags;\n  proto.set = stringSet;\n  proto.startOf = startOf;\n  proto.subtract = subtract;\n  proto.toArray = toArray;\n  proto.toObject = toObject;\n  proto.toDate = toDate;\n  proto.toISOString = toISOString;\n  proto.inspect = inspect;\n  proto.toJSON = toJSON;\n  proto.toString = toString;\n  proto.unix = unix;\n  proto.valueOf = valueOf;\n  proto.creationData = creationData;\n  proto.year = getSetYear;\n  proto.isLeapYear = getIsLeapYear;\n  proto.weekYear = getSetWeekYear;\n  proto.isoWeekYear = getSetISOWeekYear;\n  proto.quarter = proto.quarters = getSetQuarter;\n  proto.month = getSetMonth;\n  proto.daysInMonth = getDaysInMonth;\n  proto.week = proto.weeks = getSetWeek;\n  proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n  proto.weeksInYear = getWeeksInYear;\n  proto.isoWeeksInYear = getISOWeeksInYear;\n  proto.date = getSetDayOfMonth;\n  proto.day = proto.days = getSetDayOfWeek;\n  proto.weekday = getSetLocaleDayOfWeek;\n  proto.isoWeekday = getSetISODayOfWeek;\n  proto.dayOfYear = getSetDayOfYear;\n  proto.hour = proto.hours = getSetHour;\n  proto.minute = proto.minutes = getSetMinute;\n  proto.second = proto.seconds = getSetSecond;\n  proto.millisecond = proto.milliseconds = getSetMillisecond;\n  proto.utcOffset = getSetOffset;\n  proto.utc = setOffsetToUTC;\n  proto.local = setOffsetToLocal;\n  proto.parseZone = setOffsetToParsedOffset;\n  proto.hasAlignedHourOffset = hasAlignedHourOffset;\n  proto.isDST = isDaylightSavingTime;\n  proto.isLocal = isLocal;\n  proto.isUtcOffset = isUtcOffset;\n  proto.isUtc = isUtc;\n  proto.isUTC = isUtc;\n  proto.zoneAbbr = getZoneAbbr;\n  proto.zoneName = getZoneName;\n  proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n  proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n  proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n  proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n  proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n  function createUnix(input) {\n    return createLocal(input * 1000);\n  }\n\n  function createInZone() {\n    return createLocal.apply(null, arguments).parseZone();\n  }\n\n  function preParsePostFormat(string) {\n    return string;\n  }\n\n  var proto$1 = Locale.prototype;\n  proto$1.calendar = calendar;\n  proto$1.longDateFormat = longDateFormat;\n  proto$1.invalidDate = invalidDate;\n  proto$1.ordinal = ordinal;\n  proto$1.preparse = preParsePostFormat;\n  proto$1.postformat = preParsePostFormat;\n  proto$1.relativeTime = relativeTime;\n  proto$1.pastFuture = pastFuture;\n  proto$1.set = set;\n  proto$1.months = localeMonths;\n  proto$1.monthsShort = localeMonthsShort;\n  proto$1.monthsParse = localeMonthsParse;\n  proto$1.monthsRegex = monthsRegex;\n  proto$1.monthsShortRegex = monthsShortRegex;\n  proto$1.week = localeWeek;\n  proto$1.firstDayOfYear = localeFirstDayOfYear;\n  proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n  proto$1.weekdays = localeWeekdays;\n  proto$1.weekdaysMin = localeWeekdaysMin;\n  proto$1.weekdaysShort = localeWeekdaysShort;\n  proto$1.weekdaysParse = localeWeekdaysParse;\n  proto$1.weekdaysRegex = weekdaysRegex;\n  proto$1.weekdaysShortRegex = weekdaysShortRegex;\n  proto$1.weekdaysMinRegex = weekdaysMinRegex;\n  proto$1.isPM = localeIsPM;\n  proto$1.meridiem = localeMeridiem;\n\n  function get$1(format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n  }\n\n  function listMonthsImpl(format, index, field) {\n    if (isNumber(format)) {\n      index = format;\n      format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n      return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 12; i++) {\n      out[i] = get$1(format, i, field, 'month');\n    }\n\n    return out;\n  } // ()\n  // (5)\n  // (fmt, 5)\n  // (fmt)\n  // (true)\n  // (true, 5)\n  // (true, fmt, 5)\n  // (true, fmt)\n\n\n  function listWeekdaysImpl(localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    } else {\n      format = localeSorted;\n      index = format;\n      localeSorted = false;\n\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n      return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 7; i++) {\n      out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n\n    return out;\n  }\n\n  function listMonths(format, index) {\n    return listMonthsImpl(format, index, 'months');\n  }\n\n  function listMonthsShort(format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n  }\n\n  function listWeekdays(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n  }\n\n  function listWeekdaysShort(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n  }\n\n  function listWeekdaysMin(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n  }\n\n  getSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal: function ordinal(number) {\n      var b = number % 10,\n          output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    }\n  }); // Side effect imports\n\n  hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n  hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n  var mathAbs = Math.abs;\n\n  function abs() {\n    var data = this._data;\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.months = mathAbs(data.months);\n    data.years = mathAbs(data.years);\n    return this;\n  }\n\n  function addSubtract$1(duration, input, value, direction) {\n    var other = createDuration(input, value);\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days += direction * other._days;\n    duration._months += direction * other._months;\n    return duration._bubble();\n  } // supports only 2.0-style add(1, 's') or add(duration)\n\n\n  function add$1(input, value) {\n    return addSubtract$1(this, input, value, 1);\n  } // supports only 2.0-style subtract(1, 's') or subtract(duration)\n\n\n  function subtract$1(input, value) {\n    return addSubtract$1(this, input, value, -1);\n  }\n\n  function absCeil(number) {\n    if (number < 0) {\n      return Math.floor(number);\n    } else {\n      return Math.ceil(number);\n    }\n  }\n\n  function bubble() {\n    var milliseconds = this._milliseconds;\n    var days = this._days;\n    var months = this._months;\n    var data = this._data;\n    var seconds, minutes, hours, years, monthsFromDays; // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n\n    if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n      days = 0;\n      months = 0;\n    } // The following code bubbles up values, see the tests for\n    // examples of what that means.\n\n\n    data.milliseconds = milliseconds % 1000;\n    seconds = absFloor(milliseconds / 1000);\n    data.seconds = seconds % 60;\n    minutes = absFloor(seconds / 60);\n    data.minutes = minutes % 60;\n    hours = absFloor(minutes / 60);\n    data.hours = hours % 24;\n    days += absFloor(hours / 24); // convert days to months\n\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays)); // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12;\n    data.days = days;\n    data.months = months;\n    data.years = years;\n    return this;\n  }\n\n  function daysToMonths(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n  }\n\n  function monthsToDays(months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n  }\n\n  function as(units) {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'quarter' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n\n      switch (units) {\n        case 'month':\n          return months;\n\n        case 'quarter':\n          return months / 3;\n\n        case 'year':\n          return months / 12;\n      }\n    } else {\n      // handle milliseconds separately because of floating point math errors (issue #1867)\n      days = this._days + Math.round(monthsToDays(this._months));\n\n      switch (units) {\n        case 'week':\n          return days / 7 + milliseconds / 6048e5;\n\n        case 'day':\n          return days + milliseconds / 864e5;\n\n        case 'hour':\n          return days * 24 + milliseconds / 36e5;\n\n        case 'minute':\n          return days * 1440 + milliseconds / 6e4;\n\n        case 'second':\n          return days * 86400 + milliseconds / 1000;\n        // Math.floor prevents floating point math errors here\n\n        case 'millisecond':\n          return Math.floor(days * 864e5) + milliseconds;\n\n        default:\n          throw new Error('Unknown unit ' + units);\n      }\n    }\n  } // TODO: Use this.as('ms')?\n\n\n  function valueOf$1() {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n  }\n\n  function makeAs(alias) {\n    return function () {\n      return this.as(alias);\n    };\n  }\n\n  var asMilliseconds = makeAs('ms');\n  var asSeconds = makeAs('s');\n  var asMinutes = makeAs('m');\n  var asHours = makeAs('h');\n  var asDays = makeAs('d');\n  var asWeeks = makeAs('w');\n  var asMonths = makeAs('M');\n  var asQuarters = makeAs('Q');\n  var asYears = makeAs('y');\n\n  function clone$1() {\n    return createDuration(this);\n  }\n\n  function get$2(units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n  }\n\n  function makeGetter(name) {\n    return function () {\n      return this.isValid() ? this._data[name] : NaN;\n    };\n  }\n\n  var milliseconds = makeGetter('milliseconds');\n  var seconds = makeGetter('seconds');\n  var minutes = makeGetter('minutes');\n  var hours = makeGetter('hours');\n  var days = makeGetter('days');\n  var months = makeGetter('months');\n  var years = makeGetter('years');\n\n  function weeks() {\n    return absFloor(this.days() / 7);\n  }\n\n  var round = Math.round;\n  var thresholds = {\n    ss: 44,\n    // a few seconds to seconds\n    s: 45,\n    // seconds to minute\n    m: 45,\n    // minutes to hour\n    h: 22,\n    // hours to day\n    d: 26,\n    // days to month\n    M: 11 // months to year\n\n  }; // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\n  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n  }\n\n  function relativeTime$1(posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds = round(duration.as('s'));\n    var minutes = round(duration.as('m'));\n    var hours = round(duration.as('h'));\n    var days = round(duration.as('d'));\n    var months = round(duration.as('M'));\n    var years = round(duration.as('y'));\n    var a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days] || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n  } // This function allows you to set the rounding function for relative time strings\n\n\n  function getSetRelativeTimeRounding(roundingFunction) {\n    if (roundingFunction === undefined) {\n      return round;\n    }\n\n    if (typeof roundingFunction === 'function') {\n      round = roundingFunction;\n      return true;\n    }\n\n    return false;\n  } // This function allows you to set a threshold for relative time strings\n\n\n  function getSetRelativeTimeThreshold(threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n      return false;\n    }\n\n    if (limit === undefined) {\n      return thresholds[threshold];\n    }\n\n    thresholds[threshold] = limit;\n\n    if (threshold === 's') {\n      thresholds.ss = limit - 1;\n    }\n\n    return true;\n  }\n\n  function humanize(withSuffix) {\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n  }\n\n  var abs$1 = Math.abs;\n\n  function sign(x) {\n    return (x > 0) - (x < 0) || +x;\n  }\n\n  function toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days = abs$1(this._days);\n    var months = abs$1(this._months);\n    var minutes, hours, years; // 3600 seconds -> 60 minutes -> 1 hour\n\n    minutes = absFloor(seconds / 60);\n    hours = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60; // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12; // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    var total = this.asSeconds();\n\n    if (!total) {\n      // this is the same as C#'s (Noda) and python (isodate)...\n      // but not other JS (goog.date)\n      return 'P0D';\n    }\n\n    var totalSign = total < 0 ? '-' : '';\n    var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n    return totalSign + 'P' + (Y ? ymSign + Y + 'Y' : '') + (M ? ymSign + M + 'M' : '') + (D ? daysSign + D + 'D' : '') + (h || m || s ? 'T' : '') + (h ? hmsSign + h + 'H' : '') + (m ? hmsSign + m + 'M' : '') + (s ? hmsSign + s + 'S' : '');\n  }\n\n  var proto$2 = Duration.prototype;\n  proto$2.isValid = isValid$1;\n  proto$2.abs = abs;\n  proto$2.add = add$1;\n  proto$2.subtract = subtract$1;\n  proto$2.as = as;\n  proto$2.asMilliseconds = asMilliseconds;\n  proto$2.asSeconds = asSeconds;\n  proto$2.asMinutes = asMinutes;\n  proto$2.asHours = asHours;\n  proto$2.asDays = asDays;\n  proto$2.asWeeks = asWeeks;\n  proto$2.asMonths = asMonths;\n  proto$2.asQuarters = asQuarters;\n  proto$2.asYears = asYears;\n  proto$2.valueOf = valueOf$1;\n  proto$2._bubble = bubble;\n  proto$2.clone = clone$1;\n  proto$2.get = get$2;\n  proto$2.milliseconds = milliseconds;\n  proto$2.seconds = seconds;\n  proto$2.minutes = minutes;\n  proto$2.hours = hours;\n  proto$2.days = days;\n  proto$2.weeks = weeks;\n  proto$2.months = months;\n  proto$2.years = years;\n  proto$2.humanize = humanize;\n  proto$2.toISOString = toISOString$1;\n  proto$2.toString = toISOString$1;\n  proto$2.toJSON = toISOString$1;\n  proto$2.locale = locale;\n  proto$2.localeData = localeData;\n  proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n  proto$2.lang = lang; // Side effect imports\n  // FORMATTING\n\n  addFormatToken('X', 0, 0, 'unix');\n  addFormatToken('x', 0, 0, 'valueOf'); // PARSING\n\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n  addParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n  });\n  addParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n  }); // Side effect imports\n\n  hooks.version = '2.24.0';\n  setHookCallback(createLocal);\n  hooks.fn = proto;\n  hooks.min = min;\n  hooks.max = max;\n  hooks.now = now;\n  hooks.utc = createUTC;\n  hooks.unix = createUnix;\n  hooks.months = listMonths;\n  hooks.isDate = isDate;\n  hooks.locale = getSetGlobalLocale;\n  hooks.invalid = createInvalid;\n  hooks.duration = createDuration;\n  hooks.isMoment = isMoment;\n  hooks.weekdays = listWeekdays;\n  hooks.parseZone = createInZone;\n  hooks.localeData = getLocale;\n  hooks.isDuration = isDuration;\n  hooks.monthsShort = listMonthsShort;\n  hooks.weekdaysMin = listWeekdaysMin;\n  hooks.defineLocale = defineLocale;\n  hooks.updateLocale = updateLocale;\n  hooks.locales = listLocales;\n  hooks.weekdaysShort = listWeekdaysShort;\n  hooks.normalizeUnits = normalizeUnits;\n  hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n  hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n  hooks.calendarFormat = getCalendarFormat;\n  hooks.prototype = proto; // currently HTML5 input type only supports 24-hour formats\n\n  hooks.HTML5_FMT = {\n    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',\n    // <input type=\"datetime-local\" />\n    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',\n    // <input type=\"datetime-local\" step=\"1\" />\n    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',\n    // <input type=\"datetime-local\" step=\"0.001\" />\n    DATE: 'YYYY-MM-DD',\n    // <input type=\"date\" />\n    TIME: 'HH:mm',\n    // <input type=\"time\" />\n    TIME_SECONDS: 'HH:mm:ss',\n    // <input type=\"time\" step=\"1\" />\n    TIME_MS: 'HH:mm:ss.SSS',\n    // <input type=\"time\" step=\"0.001\" />\n    WEEK: 'GGGG-[W]WW',\n    // <input type=\"week\" />\n    MONTH: 'YYYY-MM' // <input type=\"month\" />\n\n  };\n  return hooks;\n});","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n\n    objIsArr = true;\n    objIsObj = false;\n  }\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack());\n    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n      stack || (stack = new Stack());\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n\n  if (!isSameTag) {\n    return false;\n  }\n\n  stack || (stack = new Stack());\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;","var assocIndexOf = require('./_assocIndexOf');\n/** Used for built-in method references. */\n\n\nvar arrayProto = Array.prototype;\n/** Built-in value references. */\n\nvar splice = arrayProto.splice;\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n\n  var lastIndex = data.length - 1;\n\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\n\n\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n\n  return this;\n}\n\nmodule.exports = listCacheSet;","var ListCache = require('./_ListCache');\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\n\n\nfunction stackClear() {\n  this.__data__ = new ListCache();\n  this.size = 0;\n}\n\nmodule.exports = stackClear;","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n/** Used as the size to enable large array optimizations. */\n\n\nvar LARGE_ARRAY_SIZE = 200;\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\n\nfunction stackSet(key, value) {\n  var data = this.__data__;\n\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n\n    if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n\n    data = this.__data__ = new MapCache(pairs);\n  }\n\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\n\n\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n/** Used to detect host constructors (Safari). */\n\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n/** Used for built-in method references. */\n\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Used to detect if a method is native. */\n\nvar reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\n\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;","var Symbol = require('./_Symbol');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\n\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = getRawTag;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\n\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;","var coreJsData = require('./_coreJsData');\n/** Used to detect methods masquerading as native. */\n\n\nvar maskSrcKey = function () {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? 'Symbol(src)_1.' + uid : '';\n}();\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\n\n\nfunction isMasked(func) {\n  return !!maskSrcKey && maskSrcKey in func;\n}\n\nmodule.exports = isMasked;","var root = require('./_root');\n/** Used to detect overreaching core-js shims. */\n\n\nvar coreJsData = root['__core-js_shared__'];\nmodule.exports = coreJsData;","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\n\n\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash(),\n    'map': new (Map || ListCache)(),\n    'string': new Hash()\n  };\n}\n\nmodule.exports = mapCacheClear;","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `Hash`.\n\n\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\nmodule.exports = Hash;","var nativeCreate = require('./_nativeCreate');\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\n\n\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\nfunction hashGet(key) {\n  var data = this.__data__;\n\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;","var nativeCreate = require('./_nativeCreate');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\n\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;","var getMapData = require('./_getMapData');\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\n\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;\n}\n\nmodule.exports = isKeyable;","var getMapData = require('./_getMapData');\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;","var getMapData = require('./_getMapData');\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;","var getMapData = require('./_getMapData');\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\n\n\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\n\n\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n  this.__data__ = new MapCache();\n\n  while (++index < length) {\n    this.add(values[index]);\n  }\n} // Add methods to `SetCache`.\n\n\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\nmodule.exports = SetCache;","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\n\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n\n  return this;\n}\n\nmodule.exports = setCacheAdd;","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = arraySome;","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/** `Object#toString` result references. */\n\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {\n        return false;\n      }\n\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == other + '';\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      } // Assume cyclic values are equal.\n\n\n      var stacked = stack.get(object);\n\n      if (stacked) {\n        return stacked == other;\n      }\n\n      bitmask |= COMPARE_UNORDERED_FLAG; // Recursively compare objects (susceptible to call stack limits).\n\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n\n  }\n\n  return false;\n}\n\nmodule.exports = equalByTag;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Uint8Array = root.Uint8Array;\nmodule.exports = Uint8Array;","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n  map.forEach(function (value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n  set.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;","var getAllKeys = require('./_getAllKeys');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n\n  var index = objLength;\n\n  while (index--) {\n    var key = objProps[index];\n\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(object);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n  var skipCtor = isPartial;\n\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);\n    } // Recursively compare objects (susceptible to call stack limits).\n\n\n    if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {\n      result = false;\n      break;\n    }\n\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.\n\n    if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n\n  return array;\n}\n\nmodule.exports = arrayPush;","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\n\nvar getSymbols = !nativeGetSymbols ? stubArray : function (object) {\n  if (object == null) {\n    return [];\n  }\n\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function (symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\nmodule.exports = getSymbols;","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayFilter;","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && ( // Safari 9 has enumerable `arguments.length` in strict mode.\n    key == 'length' || // Node.js 0.10 has enumerable non-index properties on buffers.\n    isBuff && (key == 'offset' || key == 'parent') || // PhantomJS 2 has enumerable non-index properties on typed arrays.\n    isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || // Skip index properties.\n    isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n\n  return result;\n}\n\nmodule.exports = baseTimes;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]';\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\n\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n/** Used to identify `toStringTag` values of typed arrays. */\n\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\n\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function (value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Detect free variable `process` from Node.js. */\n\nvar freeProcess = moduleExports && freeGlobal.process;\n/** Used to access faster Node.js helpers. */\n\nvar nodeUtil = function () {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    } // Legacy `process.binding('util')` for Node.js < 10.\n\n\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}();\n\nmodule.exports = nodeUtil;","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n\n  var result = [];\n\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = baseKeys;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\n\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;\n  return value === proto;\n}\n\nmodule.exports = isPrototype;","var overArg = require('./_overArg');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeKeys = overArg(Object.keys, Object);\nmodule.exports = nativeKeys;","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function (arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n/** `Object#toString` result references. */\n\n\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\nvar dataViewTag = '[object DataView]';\n/** Used to detect maps, sets, and weakmaps. */\n\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nvar getTag = baseGetTag; // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n\nif (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {\n  getTag = function getTag(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString:\n          return dataViewTag;\n\n        case mapCtorString:\n          return mapTag;\n\n        case promiseCtorString:\n          return promiseTag;\n\n        case setCtorString:\n          return setTag;\n\n        case weakMapCtorString:\n          return weakMapTag;\n      }\n    }\n\n    return result;\n  };\n}\n\nmodule.exports = getTag;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar DataView = getNative(root, 'DataView');\nmodule.exports = DataView;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Promise = getNative(root, 'Promise');\nmodule.exports = Promise;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Set = getNative(root, 'Set');\nmodule.exports = Set;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar WeakMap = getNative(root, 'WeakMap');\nmodule.exports = WeakMap;","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var defineProperty = require('./_defineProperty');\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\n\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;","var getNative = require('./_getNative');\n\nvar defineProperty = function () {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}();\n\nmodule.exports = defineProperty;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\n\n\nvar baseEach = createBaseEach(baseForOwn);\nmodule.exports = baseEach;","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;","var createBaseFor = require('./_createBaseFor');\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\n\n\nvar baseFor = createBaseFor();\nmodule.exports = baseFor;","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function (object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;","var isArrayLike = require('./isArrayLike');\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\n\n\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n\n  if (value == null) {\n    return identity;\n  }\n\n  if (typeof value == 'object') {\n    return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);\n  }\n\n  return property(value);\n}\n\nmodule.exports = baseIteratee;","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\n\n\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n\n  return function (object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\n\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n\n  object = Object(object);\n\n  while (index--) {\n    var data = matchData[index];\n\n    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {\n      return false;\n    }\n  }\n\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack();\n\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n\n      if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = baseIsMatch;","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\n\n\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n\n  return result;\n}\n\nmodule.exports = getMatchData;","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\n\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n\n  return function (object) {\n    var objValue = get(object, path);\n    return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;","var baseGet = require('./_baseGet');\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\n\n\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;","var memoizeCapped = require('./_memoizeCapped');\n/** Used to match property names within property paths. */\n\n\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n/** Used to match backslashes in property paths. */\n\nvar reEscapeChar = /\\\\(\\\\)?/g;\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\n\nvar stringToPath = memoizeCapped(function (string) {\n  var result = [];\n\n  if (string.charCodeAt(0) === 46\n  /* . */\n  ) {\n      result.push('');\n    }\n\n  string.replace(rePropName, function (match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);\n  });\n  return result;\n});\nmodule.exports = stringToPath;","var memoize = require('./memoize');\n/** Used as the maximum memoize cache size. */\n\n\nvar MAX_MEMOIZE_SIZE = 500;\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\n\nfunction memoizeCapped(func) {\n  var result = memoize(func, function (key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n\n    return key;\n  });\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;","var MapCache = require('./_MapCache');\n/** Error message constants. */\n\n\nvar FUNC_ERROR_TEXT = 'Expected a function';\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\n\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n\n  var memoized = function memoized() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n\n  memoized.cache = new (memoize.Cache || MapCache)();\n  return memoized;\n} // Expose `MapCache`.\n\n\nmemoize.Cache = MapCache;\nmodule.exports = memoize;","var baseToString = require('./_baseToString');\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\n\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\n\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = baseToString;","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n\n  return result;\n}\n\nmodule.exports = arrayMap;","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\n\n\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\n\n\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n\n    object = object[key];\n  }\n\n  if (result || ++index != length) {\n    return result;\n  }\n\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\n\n\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function (object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;","var baseGet = require('./_baseGet');\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\n\n\nfunction basePropertyDeep(path) {\n  return function (object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `self`. */\n\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\nmodule.exports = root;","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\nmodule.exports = isArray;","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\n\n\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n/** `Object#toString` result references. */\n\n\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n\n  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n}\n\nmodule.exports = baseGetTag;","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `ListCache`.\n\n\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\nmodule.exports = ListCache;","var eq = require('./eq');\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\n\n\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = assocIndexOf;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Symbol = root.Symbol;\nmodule.exports = Symbol;","var getNative = require('./_getNative');\n/* Built-in method references that are verified to be native. */\n\n\nvar nativeCreate = getNative(Object, 'create');\nmodule.exports = nativeCreate;","var isKeyable = require('./_isKeyable');\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\n\n\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;\n}\n\nmodule.exports = getMapData;","var isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\n\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = toKey;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.destroyChart();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.destroyChart();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    this.saveCurrentDatasets(); // to remove the dataset metadata from this chart when the chart is destroyed\n\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.getCurrentDatasets = function getCurrentDatasets() {\n    return this.chartInstance && this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n  };\n\n  ChartComponent.prototype.saveCurrentDatasets = function saveCurrentDatasets() {\n    var _this2 = this;\n\n    this.datasets = this.datasets || {};\n    var currentDatasets = this.getCurrentDatasets();\n    currentDatasets.forEach(function (d) {\n      _this2.datasets[_this2.props.datasetKeyProvider(d)] = d;\n    });\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this3 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.getCurrentDatasets();\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this3.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.destroyChart = function destroyChart() {\n    // Put all of the datasets that have existed in the chart back on the chart\n    // so that the metadata associated with this chart get destroyed.\n    // This allows the datasets to be used in another chart. This can happen,\n    // for example, in a tabbed UI where the chart gets created each time the\n    // tab gets switched to the chart and uses the same data).\n    this.saveCurrentDatasets();\n    var datasets = Object.values(this.datasets);\n    this.chartInstance.config.data.datasets = datasets;\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this5 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this5.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this7 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this7.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this9 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this9.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this11 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this11.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this13 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this13.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this15 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this15.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this17 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this17.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this19 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this19.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this21 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this21.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","module.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\n\n\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n\n  if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {\n    return value !== value && other !== other;\n  }\n\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Map = getNative(root, 'Map');\nmodule.exports = Map;","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `MapCache`.\n\n\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\nmodule.exports = MapCache;","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\n\n\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\n\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used to match property names within property paths. */\n\n\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\n\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n\n  var type = typeof value;\n\n  if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {\n    return true;\n  }\n\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);\n}\n\nmodule.exports = isKey;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar symbolTag = '[object Symbol]';\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;\n}\n\nmodule.exports = isSymbol;","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function () {\n    try {\n      return require('moment');\n    } catch (e) {}\n  }()) : typeof define === 'function' && define.amd ? define(['require'], function (require) {\n    return factory(function () {\n      try {\n        return require('moment');\n      } catch (e) {}\n    }());\n  }) : global.Chart = factory(global.moment);\n})(this, function (moment) {\n  'use strict';\n\n  moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n  /* MIT license */\n\n  var conversions = {\n    rgb2hsl: rgb2hsl,\n    rgb2hsv: rgb2hsv,\n    rgb2hwb: rgb2hwb,\n    rgb2cmyk: rgb2cmyk,\n    rgb2keyword: rgb2keyword,\n    rgb2xyz: rgb2xyz,\n    rgb2lab: rgb2lab,\n    rgb2lch: rgb2lch,\n    hsl2rgb: hsl2rgb,\n    hsl2hsv: hsl2hsv,\n    hsl2hwb: hsl2hwb,\n    hsl2cmyk: hsl2cmyk,\n    hsl2keyword: hsl2keyword,\n    hsv2rgb: hsv2rgb,\n    hsv2hsl: hsv2hsl,\n    hsv2hwb: hsv2hwb,\n    hsv2cmyk: hsv2cmyk,\n    hsv2keyword: hsv2keyword,\n    hwb2rgb: hwb2rgb,\n    hwb2hsl: hwb2hsl,\n    hwb2hsv: hwb2hsv,\n    hwb2cmyk: hwb2cmyk,\n    hwb2keyword: hwb2keyword,\n    cmyk2rgb: cmyk2rgb,\n    cmyk2hsl: cmyk2hsl,\n    cmyk2hsv: cmyk2hsv,\n    cmyk2hwb: cmyk2hwb,\n    cmyk2keyword: cmyk2keyword,\n    keyword2rgb: keyword2rgb,\n    keyword2hsl: keyword2hsl,\n    keyword2hsv: keyword2hsv,\n    keyword2hwb: keyword2hwb,\n    keyword2cmyk: keyword2cmyk,\n    keyword2lab: keyword2lab,\n    keyword2xyz: keyword2xyz,\n    xyz2rgb: xyz2rgb,\n    xyz2lab: xyz2lab,\n    xyz2lch: xyz2lch,\n    lab2xyz: lab2xyz,\n    lab2rgb: lab2rgb,\n    lab2lch: lab2lch,\n    lch2lab: lch2lab,\n    lch2xyz: lch2xyz,\n    lch2rgb: lch2rgb\n  };\n\n  function rgb2hsl(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        l;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    l = (min + max) / 2;\n    if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n    return [h, s * 100, l * 100];\n  }\n\n  function rgb2hsv(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        v;\n    if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    v = max / 255 * 1000 / 10;\n    return [h, s, v];\n  }\n\n  function rgb2hwb(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        h = rgb2hsl(rgb)[0],\n        w = 1 / 255 * Math.min(r, Math.min(g, b)),\n        b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n    return [h, w * 100, b * 100];\n  }\n\n  function rgb2cmyk(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        c,\n        m,\n        y,\n        k;\n    k = Math.min(1 - r, 1 - g, 1 - b);\n    c = (1 - r - k) / (1 - k) || 0;\n    m = (1 - g - k) / (1 - k) || 0;\n    y = (1 - b - k) / (1 - k) || 0;\n    return [c * 100, m * 100, y * 100, k * 100];\n  }\n\n  function rgb2keyword(rgb) {\n    return reverseKeywords[JSON.stringify(rgb)];\n  }\n\n  function rgb2xyz(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255; // assume sRGB\n\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n    var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n    var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n    return [x * 100, y * 100, z * 100];\n  }\n\n  function rgb2lab(rgb) {\n    var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function rgb2lch(args) {\n    return lab2lch(rgb2lab(args));\n  }\n\n  function hsl2rgb(hsl) {\n    var h = hsl[0] / 360,\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        t1,\n        t2,\n        t3,\n        rgb,\n        val;\n\n    if (s == 0) {\n      val = l * 255;\n      return [val, val, val];\n    }\n\n    if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n    t1 = 2 * l - t2;\n    rgb = [0, 0, 0];\n\n    for (var i = 0; i < 3; i++) {\n      t3 = h + 1 / 3 * -(i - 1);\n      t3 < 0 && t3++;\n      t3 > 1 && t3--;\n      if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n      rgb[i] = val * 255;\n    }\n\n    return rgb;\n  }\n\n  function hsl2hsv(hsl) {\n    var h = hsl[0],\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        sv,\n        v;\n\n    if (l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n    }\n\n    l *= 2;\n    s *= l <= 1 ? l : 2 - l;\n    v = (l + s) / 2;\n    sv = 2 * s / (l + s);\n    return [h, sv * 100, v * 100];\n  }\n\n  function hsl2hwb(args) {\n    return rgb2hwb(hsl2rgb(args));\n  }\n\n  function hsl2cmyk(args) {\n    return rgb2cmyk(hsl2rgb(args));\n  }\n\n  function hsl2keyword(args) {\n    return rgb2keyword(hsl2rgb(args));\n  }\n\n  function hsv2rgb(hsv) {\n    var h = hsv[0] / 60,\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        hi = Math.floor(h) % 6;\n    var f = h - Math.floor(h),\n        p = 255 * v * (1 - s),\n        q = 255 * v * (1 - s * f),\n        t = 255 * v * (1 - s * (1 - f)),\n        v = 255 * v;\n\n    switch (hi) {\n      case 0:\n        return [v, t, p];\n\n      case 1:\n        return [q, v, p];\n\n      case 2:\n        return [p, v, t];\n\n      case 3:\n        return [p, q, v];\n\n      case 4:\n        return [t, p, v];\n\n      case 5:\n        return [v, p, q];\n    }\n  }\n\n  function hsv2hsl(hsv) {\n    var h = hsv[0],\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        sl,\n        l;\n    l = (2 - s) * v;\n    sl = s * v;\n    sl /= l <= 1 ? l : 2 - l;\n    sl = sl || 0;\n    l /= 2;\n    return [h, sl * 100, l * 100];\n  }\n\n  function hsv2hwb(args) {\n    return rgb2hwb(hsv2rgb(args));\n  }\n\n  function hsv2cmyk(args) {\n    return rgb2cmyk(hsv2rgb(args));\n  }\n\n  function hsv2keyword(args) {\n    return rgb2keyword(hsv2rgb(args));\n  } // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\n  function hwb2rgb(hwb) {\n    var h = hwb[0] / 360,\n        wh = hwb[1] / 100,\n        bl = hwb[2] / 100,\n        ratio = wh + bl,\n        i,\n        v,\n        f,\n        n; // wh + bl cant be > 1\n\n    if (ratio > 1) {\n      wh /= ratio;\n      bl /= ratio;\n    }\n\n    i = Math.floor(6 * h);\n    v = 1 - bl;\n    f = 6 * h - i;\n\n    if ((i & 0x01) != 0) {\n      f = 1 - f;\n    }\n\n    n = wh + f * (v - wh); // linear interpolation\n\n    switch (i) {\n      default:\n      case 6:\n      case 0:\n        r = v;\n        g = n;\n        b = wh;\n        break;\n\n      case 1:\n        r = n;\n        g = v;\n        b = wh;\n        break;\n\n      case 2:\n        r = wh;\n        g = v;\n        b = n;\n        break;\n\n      case 3:\n        r = wh;\n        g = n;\n        b = v;\n        break;\n\n      case 4:\n        r = n;\n        g = wh;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = wh;\n        b = n;\n        break;\n    }\n\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function hwb2hsl(args) {\n    return rgb2hsl(hwb2rgb(args));\n  }\n\n  function hwb2hsv(args) {\n    return rgb2hsv(hwb2rgb(args));\n  }\n\n  function hwb2cmyk(args) {\n    return rgb2cmyk(hwb2rgb(args));\n  }\n\n  function hwb2keyword(args) {\n    return rgb2keyword(hwb2rgb(args));\n  }\n\n  function cmyk2rgb(cmyk) {\n    var c = cmyk[0] / 100,\n        m = cmyk[1] / 100,\n        y = cmyk[2] / 100,\n        k = cmyk[3] / 100,\n        r,\n        g,\n        b;\n    r = 1 - Math.min(1, c * (1 - k) + k);\n    g = 1 - Math.min(1, m * (1 - k) + k);\n    b = 1 - Math.min(1, y * (1 - k) + k);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function cmyk2hsl(args) {\n    return rgb2hsl(cmyk2rgb(args));\n  }\n\n  function cmyk2hsv(args) {\n    return rgb2hsv(cmyk2rgb(args));\n  }\n\n  function cmyk2hwb(args) {\n    return rgb2hwb(cmyk2rgb(args));\n  }\n\n  function cmyk2keyword(args) {\n    return rgb2keyword(cmyk2rgb(args));\n  }\n\n  function xyz2rgb(xyz) {\n    var x = xyz[0] / 100,\n        y = xyz[1] / 100,\n        z = xyz[2] / 100,\n        r,\n        g,\n        b;\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n    r = Math.min(Math.max(0, r), 1);\n    g = Math.min(Math.max(0, g), 1);\n    b = Math.min(Math.max(0, b), 1);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function xyz2lab(xyz) {\n    var x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function xyz2lch(args) {\n    return lab2lch(xyz2lab(args));\n  }\n\n  function lab2xyz(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        x,\n        y,\n        z,\n        y2;\n\n    if (l <= 8) {\n      y = l * 100 / 903.3;\n      y2 = 7.787 * (y / 100) + 16 / 116;\n    } else {\n      y = 100 * Math.pow((l + 16) / 116, 3);\n      y2 = Math.pow(y / 100, 1 / 3);\n    }\n\n    x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n    z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n    return [x, y, z];\n  }\n\n  function lab2lch(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        hr,\n        h,\n        c;\n    hr = Math.atan2(b, a);\n    h = hr * 360 / 2 / Math.PI;\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    c = Math.sqrt(a * a + b * b);\n    return [l, c, h];\n  }\n\n  function lab2rgb(args) {\n    return xyz2rgb(lab2xyz(args));\n  }\n\n  function lch2lab(lch) {\n    var l = lch[0],\n        c = lch[1],\n        h = lch[2],\n        a,\n        b,\n        hr;\n    hr = h / 360 * 2 * Math.PI;\n    a = c * Math.cos(hr);\n    b = c * Math.sin(hr);\n    return [l, a, b];\n  }\n\n  function lch2xyz(args) {\n    return lab2xyz(lch2lab(args));\n  }\n\n  function lch2rgb(args) {\n    return lab2rgb(lch2lab(args));\n  }\n\n  function keyword2rgb(keyword) {\n    return cssKeywords[keyword];\n  }\n\n  function keyword2hsl(args) {\n    return rgb2hsl(keyword2rgb(args));\n  }\n\n  function keyword2hsv(args) {\n    return rgb2hsv(keyword2rgb(args));\n  }\n\n  function keyword2hwb(args) {\n    return rgb2hwb(keyword2rgb(args));\n  }\n\n  function keyword2cmyk(args) {\n    return rgb2cmyk(keyword2rgb(args));\n  }\n\n  function keyword2lab(args) {\n    return rgb2lab(keyword2rgb(args));\n  }\n\n  function keyword2xyz(args) {\n    return rgb2xyz(keyword2rgb(args));\n  }\n\n  var cssKeywords = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50]\n  };\n  var reverseKeywords = {};\n\n  for (var key in cssKeywords) {\n    reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n  }\n\n  var convert = function convert() {\n    return new Converter();\n  };\n\n  for (var func in conversions) {\n    // export Raw versions\n    convert[func + \"Raw\"] = function (func) {\n      // accept array or plain args\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        return conversions[func](arg);\n      };\n    }(func);\n\n    var pair = /(\\w+)2(\\w+)/.exec(func),\n        from = pair[1],\n        to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n    convert[from] = convert[from] || {};\n\n    convert[from][to] = convert[func] = function (func) {\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        var val = conversions[func](arg);\n        if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n        for (var i = 0; i < val.length; i++) {\n          val[i] = Math.round(val[i]);\n        }\n\n        return val;\n      };\n    }(func);\n  }\n  /* Converter does lazy conversion and caching */\n\n\n  var Converter = function Converter() {\n    this.convs = {};\n  };\n  /* Either get the values for a space or\n    set the values for a space, depending on args */\n\n\n  Converter.prototype.routeSpace = function (space, args) {\n    var values = args[0];\n\n    if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);\n    }\n\n    return this.setValues(space, values);\n  };\n  /* Set the values for a space, invalidating cache */\n\n\n  Converter.prototype.setValues = function (space, values) {\n    this.space = space;\n    this.convs = {};\n    this.convs[space] = values;\n    return this;\n  };\n  /* Get the values for a space. If there's already\n    a conversion for the space, fetch it, otherwise\n    compute it */\n\n\n  Converter.prototype.getValues = function (space) {\n    var vals = this.convs[space];\n\n    if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n      this.convs[space] = vals;\n    }\n\n    return vals;\n  };\n\n  [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n    Converter.prototype[space] = function (vals) {\n      return this.routeSpace(space, arguments);\n    };\n  });\n  var colorConvert = convert;\n  var colorName = {\n    \"aliceblue\": [240, 248, 255],\n    \"antiquewhite\": [250, 235, 215],\n    \"aqua\": [0, 255, 255],\n    \"aquamarine\": [127, 255, 212],\n    \"azure\": [240, 255, 255],\n    \"beige\": [245, 245, 220],\n    \"bisque\": [255, 228, 196],\n    \"black\": [0, 0, 0],\n    \"blanchedalmond\": [255, 235, 205],\n    \"blue\": [0, 0, 255],\n    \"blueviolet\": [138, 43, 226],\n    \"brown\": [165, 42, 42],\n    \"burlywood\": [222, 184, 135],\n    \"cadetblue\": [95, 158, 160],\n    \"chartreuse\": [127, 255, 0],\n    \"chocolate\": [210, 105, 30],\n    \"coral\": [255, 127, 80],\n    \"cornflowerblue\": [100, 149, 237],\n    \"cornsilk\": [255, 248, 220],\n    \"crimson\": [220, 20, 60],\n    \"cyan\": [0, 255, 255],\n    \"darkblue\": [0, 0, 139],\n    \"darkcyan\": [0, 139, 139],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"darkgray\": [169, 169, 169],\n    \"darkgreen\": [0, 100, 0],\n    \"darkgrey\": [169, 169, 169],\n    \"darkkhaki\": [189, 183, 107],\n    \"darkmagenta\": [139, 0, 139],\n    \"darkolivegreen\": [85, 107, 47],\n    \"darkorange\": [255, 140, 0],\n    \"darkorchid\": [153, 50, 204],\n    \"darkred\": [139, 0, 0],\n    \"darksalmon\": [233, 150, 122],\n    \"darkseagreen\": [143, 188, 143],\n    \"darkslateblue\": [72, 61, 139],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"darkturquoise\": [0, 206, 209],\n    \"darkviolet\": [148, 0, 211],\n    \"deeppink\": [255, 20, 147],\n    \"deepskyblue\": [0, 191, 255],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"dodgerblue\": [30, 144, 255],\n    \"firebrick\": [178, 34, 34],\n    \"floralwhite\": [255, 250, 240],\n    \"forestgreen\": [34, 139, 34],\n    \"fuchsia\": [255, 0, 255],\n    \"gainsboro\": [220, 220, 220],\n    \"ghostwhite\": [248, 248, 255],\n    \"gold\": [255, 215, 0],\n    \"goldenrod\": [218, 165, 32],\n    \"gray\": [128, 128, 128],\n    \"green\": [0, 128, 0],\n    \"greenyellow\": [173, 255, 47],\n    \"grey\": [128, 128, 128],\n    \"honeydew\": [240, 255, 240],\n    \"hotpink\": [255, 105, 180],\n    \"indianred\": [205, 92, 92],\n    \"indigo\": [75, 0, 130],\n    \"ivory\": [255, 255, 240],\n    \"khaki\": [240, 230, 140],\n    \"lavender\": [230, 230, 250],\n    \"lavenderblush\": [255, 240, 245],\n    \"lawngreen\": [124, 252, 0],\n    \"lemonchiffon\": [255, 250, 205],\n    \"lightblue\": [173, 216, 230],\n    \"lightcoral\": [240, 128, 128],\n    \"lightcyan\": [224, 255, 255],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"lightgray\": [211, 211, 211],\n    \"lightgreen\": [144, 238, 144],\n    \"lightgrey\": [211, 211, 211],\n    \"lightpink\": [255, 182, 193],\n    \"lightsalmon\": [255, 160, 122],\n    \"lightseagreen\": [32, 178, 170],\n    \"lightskyblue\": [135, 206, 250],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"lightsteelblue\": [176, 196, 222],\n    \"lightyellow\": [255, 255, 224],\n    \"lime\": [0, 255, 0],\n    \"limegreen\": [50, 205, 50],\n    \"linen\": [250, 240, 230],\n    \"magenta\": [255, 0, 255],\n    \"maroon\": [128, 0, 0],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"mediumblue\": [0, 0, 205],\n    \"mediumorchid\": [186, 85, 211],\n    \"mediumpurple\": [147, 112, 219],\n    \"mediumseagreen\": [60, 179, 113],\n    \"mediumslateblue\": [123, 104, 238],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"mediumturquoise\": [72, 209, 204],\n    \"mediumvioletred\": [199, 21, 133],\n    \"midnightblue\": [25, 25, 112],\n    \"mintcream\": [245, 255, 250],\n    \"mistyrose\": [255, 228, 225],\n    \"moccasin\": [255, 228, 181],\n    \"navajowhite\": [255, 222, 173],\n    \"navy\": [0, 0, 128],\n    \"oldlace\": [253, 245, 230],\n    \"olive\": [128, 128, 0],\n    \"olivedrab\": [107, 142, 35],\n    \"orange\": [255, 165, 0],\n    \"orangered\": [255, 69, 0],\n    \"orchid\": [218, 112, 214],\n    \"palegoldenrod\": [238, 232, 170],\n    \"palegreen\": [152, 251, 152],\n    \"paleturquoise\": [175, 238, 238],\n    \"palevioletred\": [219, 112, 147],\n    \"papayawhip\": [255, 239, 213],\n    \"peachpuff\": [255, 218, 185],\n    \"peru\": [205, 133, 63],\n    \"pink\": [255, 192, 203],\n    \"plum\": [221, 160, 221],\n    \"powderblue\": [176, 224, 230],\n    \"purple\": [128, 0, 128],\n    \"rebeccapurple\": [102, 51, 153],\n    \"red\": [255, 0, 0],\n    \"rosybrown\": [188, 143, 143],\n    \"royalblue\": [65, 105, 225],\n    \"saddlebrown\": [139, 69, 19],\n    \"salmon\": [250, 128, 114],\n    \"sandybrown\": [244, 164, 96],\n    \"seagreen\": [46, 139, 87],\n    \"seashell\": [255, 245, 238],\n    \"sienna\": [160, 82, 45],\n    \"silver\": [192, 192, 192],\n    \"skyblue\": [135, 206, 235],\n    \"slateblue\": [106, 90, 205],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"snow\": [255, 250, 250],\n    \"springgreen\": [0, 255, 127],\n    \"steelblue\": [70, 130, 180],\n    \"tan\": [210, 180, 140],\n    \"teal\": [0, 128, 128],\n    \"thistle\": [216, 191, 216],\n    \"tomato\": [255, 99, 71],\n    \"turquoise\": [64, 224, 208],\n    \"violet\": [238, 130, 238],\n    \"wheat\": [245, 222, 179],\n    \"white\": [255, 255, 255],\n    \"whitesmoke\": [245, 245, 245],\n    \"yellow\": [255, 255, 0],\n    \"yellowgreen\": [154, 205, 50]\n  };\n  /* MIT license */\n\n  var colorString = {\n    getRgba: getRgba,\n    getHsla: getHsla,\n    getRgb: getRgb,\n    getHsl: getHsl,\n    getHwb: getHwb,\n    getAlpha: getAlpha,\n    hexString: hexString,\n    rgbString: rgbString,\n    rgbaString: rgbaString,\n    percentString: percentString,\n    percentaString: percentaString,\n    hslString: hslString,\n    hslaString: hslaString,\n    hwbString: hwbString,\n    keyword: keyword\n  };\n\n  function getRgba(string) {\n    if (!string) {\n      return;\n    }\n\n    var abbr = /^#([a-fA-F0-9]{3,4})$/i,\n        hex = /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n        rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        keyword = /(\\w+)/;\n    var rgb = [0, 0, 0],\n        a = 1,\n        match = string.match(abbr),\n        hexAlpha = \"\";\n\n    if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i + 1]);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n        return [0, 0, 0, 0];\n      }\n\n      rgb = colorName[match[1]];\n\n      if (!rgb) {\n        return;\n      }\n    }\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n    }\n\n    if (!a && a != 0) {\n      a = 1;\n    } else {\n      a = scale(a, 0, 1);\n    }\n\n    rgb[3] = a;\n    return rgb;\n  }\n\n  function getHsla(string) {\n    if (!string) {\n      return;\n    }\n\n    var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hsl);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n    }\n  }\n\n  function getHwb(string) {\n    if (!string) {\n      return;\n    }\n\n    var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hwb);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n    }\n  }\n\n  function getRgb(string) {\n    var rgba = getRgba(string);\n    return rgba && rgba.slice(0, 3);\n  }\n\n  function getHsl(string) {\n    var hsla = getHsla(string);\n    return hsla && hsla.slice(0, 3);\n  }\n\n  function getAlpha(string) {\n    var vals = getRgba(string);\n\n    if (vals) {\n      return vals[3];\n    } else if (vals = getHsla(string)) {\n      return vals[3];\n    } else if (vals = getHwb(string)) {\n      return vals[3];\n    }\n  } // generators\n\n\n  function hexString(rgba, a) {\n    var a = a !== undefined && rgba.length === 3 ? a : rgba[3];\n    return \"#\" + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (a >= 0 && a < 1 ? hexDouble(Math.round(a * 255)) : \"\");\n  }\n\n  function rgbString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return rgbaString(rgba, alpha);\n    }\n\n    return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n  }\n\n  function rgbaString(rgba, alpha) {\n    if (alpha === undefined) {\n      alpha = rgba[3] !== undefined ? rgba[3] : 1;\n    }\n\n    return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n  }\n\n  function percentString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return percentaString(rgba, alpha);\n    }\n\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n  }\n\n  function percentaString(rgba, alpha) {\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n  }\n\n  function hslString(hsla, alpha) {\n    if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n      return hslaString(hsla, alpha);\n    }\n\n    return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n  }\n\n  function hslaString(hsla, alpha) {\n    if (alpha === undefined) {\n      alpha = hsla[3] !== undefined ? hsla[3] : 1;\n    }\n\n    return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n  } // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n  // (hwb have alpha optional & 1 is default value)\n\n\n  function hwbString(hwb, alpha) {\n    if (alpha === undefined) {\n      alpha = hwb[3] !== undefined ? hwb[3] : 1;\n    }\n\n    return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n  }\n\n  function keyword(rgb) {\n    return reverseNames[rgb.slice(0, 3)];\n  } // helpers\n\n\n  function scale(num, min, max) {\n    return Math.min(Math.max(min, num), max);\n  }\n\n  function hexDouble(num) {\n    var str = num.toString(16).toUpperCase();\n    return str.length < 2 ? \"0\" + str : str;\n  } //create a list of reverse color names\n\n\n  var reverseNames = {};\n\n  for (var name in colorName) {\n    reverseNames[colorName[name]] = name;\n  }\n  /* MIT license */\n\n\n  var Color = function Color(obj) {\n    if (obj instanceof Color) {\n      return obj;\n    }\n\n    if (!(this instanceof Color)) {\n      return new Color(obj);\n    }\n\n    this.valid = false;\n    this.values = {\n      rgb: [0, 0, 0],\n      hsl: [0, 0, 0],\n      hsv: [0, 0, 0],\n      hwb: [0, 0, 0],\n      cmyk: [0, 0, 0, 0],\n      alpha: 1\n    }; // parse Color() argument\n\n    var vals;\n\n    if (typeof obj === 'string') {\n      vals = colorString.getRgba(obj);\n\n      if (vals) {\n        this.setValues('rgb', vals);\n      } else if (vals = colorString.getHsla(obj)) {\n        this.setValues('hsl', vals);\n      } else if (vals = colorString.getHwb(obj)) {\n        this.setValues('hwb', vals);\n      }\n    } else if (typeof obj === 'object') {\n      vals = obj;\n\n      if (vals.r !== undefined || vals.red !== undefined) {\n        this.setValues('rgb', vals);\n      } else if (vals.l !== undefined || vals.lightness !== undefined) {\n        this.setValues('hsl', vals);\n      } else if (vals.v !== undefined || vals.value !== undefined) {\n        this.setValues('hsv', vals);\n      } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n        this.setValues('hwb', vals);\n      } else if (vals.c !== undefined || vals.cyan !== undefined) {\n        this.setValues('cmyk', vals);\n      }\n    }\n  };\n\n  Color.prototype = {\n    isValid: function isValid() {\n      return this.valid;\n    },\n    rgb: function rgb() {\n      return this.setSpace('rgb', arguments);\n    },\n    hsl: function hsl() {\n      return this.setSpace('hsl', arguments);\n    },\n    hsv: function hsv() {\n      return this.setSpace('hsv', arguments);\n    },\n    hwb: function hwb() {\n      return this.setSpace('hwb', arguments);\n    },\n    cmyk: function cmyk() {\n      return this.setSpace('cmyk', arguments);\n    },\n    rgbArray: function rgbArray() {\n      return this.values.rgb;\n    },\n    hslArray: function hslArray() {\n      return this.values.hsl;\n    },\n    hsvArray: function hsvArray() {\n      return this.values.hsv;\n    },\n    hwbArray: function hwbArray() {\n      var values = this.values;\n\n      if (values.alpha !== 1) {\n        return values.hwb.concat([values.alpha]);\n      }\n\n      return values.hwb;\n    },\n    cmykArray: function cmykArray() {\n      return this.values.cmyk;\n    },\n    rgbaArray: function rgbaArray() {\n      var values = this.values;\n      return values.rgb.concat([values.alpha]);\n    },\n    hslaArray: function hslaArray() {\n      var values = this.values;\n      return values.hsl.concat([values.alpha]);\n    },\n    alpha: function alpha(val) {\n      if (val === undefined) {\n        return this.values.alpha;\n      }\n\n      this.setValues('alpha', val);\n      return this;\n    },\n    red: function red(val) {\n      return this.setChannel('rgb', 0, val);\n    },\n    green: function green(val) {\n      return this.setChannel('rgb', 1, val);\n    },\n    blue: function blue(val) {\n      return this.setChannel('rgb', 2, val);\n    },\n    hue: function hue(val) {\n      if (val) {\n        val %= 360;\n        val = val < 0 ? 360 + val : val;\n      }\n\n      return this.setChannel('hsl', 0, val);\n    },\n    saturation: function saturation(val) {\n      return this.setChannel('hsl', 1, val);\n    },\n    lightness: function lightness(val) {\n      return this.setChannel('hsl', 2, val);\n    },\n    saturationv: function saturationv(val) {\n      return this.setChannel('hsv', 1, val);\n    },\n    whiteness: function whiteness(val) {\n      return this.setChannel('hwb', 1, val);\n    },\n    blackness: function blackness(val) {\n      return this.setChannel('hwb', 2, val);\n    },\n    value: function value(val) {\n      return this.setChannel('hsv', 2, val);\n    },\n    cyan: function cyan(val) {\n      return this.setChannel('cmyk', 0, val);\n    },\n    magenta: function magenta(val) {\n      return this.setChannel('cmyk', 1, val);\n    },\n    yellow: function yellow(val) {\n      return this.setChannel('cmyk', 2, val);\n    },\n    black: function black(val) {\n      return this.setChannel('cmyk', 3, val);\n    },\n    hexString: function hexString() {\n      return colorString.hexString(this.values.rgb);\n    },\n    rgbString: function rgbString() {\n      return colorString.rgbString(this.values.rgb, this.values.alpha);\n    },\n    rgbaString: function rgbaString() {\n      return colorString.rgbaString(this.values.rgb, this.values.alpha);\n    },\n    percentString: function percentString() {\n      return colorString.percentString(this.values.rgb, this.values.alpha);\n    },\n    hslString: function hslString() {\n      return colorString.hslString(this.values.hsl, this.values.alpha);\n    },\n    hslaString: function hslaString() {\n      return colorString.hslaString(this.values.hsl, this.values.alpha);\n    },\n    hwbString: function hwbString() {\n      return colorString.hwbString(this.values.hwb, this.values.alpha);\n    },\n    keyword: function keyword() {\n      return colorString.keyword(this.values.rgb, this.values.alpha);\n    },\n    rgbNumber: function rgbNumber() {\n      var rgb = this.values.rgb;\n      return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n    },\n    luminosity: function luminosity() {\n      // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n      var rgb = this.values.rgb;\n      var lum = [];\n\n      for (var i = 0; i < rgb.length; i++) {\n        var chan = rgb[i] / 255;\n        lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n      }\n\n      return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n    },\n    contrast: function contrast(color2) {\n      // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n      var lum1 = this.luminosity();\n      var lum2 = color2.luminosity();\n\n      if (lum1 > lum2) {\n        return (lum1 + 0.05) / (lum2 + 0.05);\n      }\n\n      return (lum2 + 0.05) / (lum1 + 0.05);\n    },\n    level: function level(color2) {\n      var contrastRatio = this.contrast(color2);\n\n      if (contrastRatio >= 7.1) {\n        return 'AAA';\n      }\n\n      return contrastRatio >= 4.5 ? 'AA' : '';\n    },\n    dark: function dark() {\n      // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n      var rgb = this.values.rgb;\n      var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n      return yiq < 128;\n    },\n    light: function light() {\n      return !this.dark();\n    },\n    negate: function negate() {\n      var rgb = [];\n\n      for (var i = 0; i < 3; i++) {\n        rgb[i] = 255 - this.values.rgb[i];\n      }\n\n      this.setValues('rgb', rgb);\n      return this;\n    },\n    lighten: function lighten(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] += hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    darken: function darken(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] -= hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    saturate: function saturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] += hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    desaturate: function desaturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] -= hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    whiten: function whiten(ratio) {\n      var hwb = this.values.hwb;\n      hwb[1] += hwb[1] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    blacken: function blacken(ratio) {\n      var hwb = this.values.hwb;\n      hwb[2] += hwb[2] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    greyscale: function greyscale() {\n      var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n      var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n      this.setValues('rgb', [val, val, val]);\n      return this;\n    },\n    clearer: function clearer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha - alpha * ratio);\n      return this;\n    },\n    opaquer: function opaquer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha + alpha * ratio);\n      return this;\n    },\n    rotate: function rotate(degrees) {\n      var hsl = this.values.hsl;\n      var hue = (hsl[0] + degrees) % 360;\n      hsl[0] = hue < 0 ? 360 + hue : hue;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n\n    /**\n     * Ported from sass implementation in C\n     * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n     */\n    mix: function mix(mixinColor, weight) {\n      var color1 = this;\n      var color2 = mixinColor;\n      var p = weight === undefined ? 0.5 : weight;\n      var w = 2 * p - 1;\n      var a = color1.alpha() - color2.alpha();\n      var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      var w2 = 1 - w1;\n      return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n    },\n    toJSON: function toJSON() {\n      return this.rgb();\n    },\n    clone: function clone() {\n      // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n      // making the final build way to big to embed in Chart.js. So let's do it manually,\n      // assuming that values to clone are 1 dimension arrays containing only numbers,\n      // except 'alpha' which is a number.\n      var result = new Color();\n      var source = this.values;\n      var target = result.values;\n      var value, type;\n\n      for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n          value = source[prop];\n          type = {}.toString.call(value);\n\n          if (type === '[object Array]') {\n            target[prop] = value.slice(0);\n          } else if (type === '[object Number]') {\n            target[prop] = value;\n          } else {\n            console.error('unexpected color value:', value);\n          }\n        }\n      }\n\n      return result;\n    }\n  };\n  Color.prototype.spaces = {\n    rgb: ['red', 'green', 'blue'],\n    hsl: ['hue', 'saturation', 'lightness'],\n    hsv: ['hue', 'saturation', 'value'],\n    hwb: ['hue', 'whiteness', 'blackness'],\n    cmyk: ['cyan', 'magenta', 'yellow', 'black']\n  };\n  Color.prototype.maxes = {\n    rgb: [255, 255, 255],\n    hsl: [360, 100, 100],\n    hsv: [360, 100, 100],\n    hwb: [360, 100, 100],\n    cmyk: [100, 100, 100, 100]\n  };\n\n  Color.prototype.getValues = function (space) {\n    var values = this.values;\n    var vals = {};\n\n    for (var i = 0; i < space.length; i++) {\n      vals[space.charAt(i)] = values[space][i];\n    }\n\n    if (values.alpha !== 1) {\n      vals.a = values.alpha;\n    } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n    return vals;\n  };\n\n  Color.prototype.setValues = function (space, vals) {\n    var values = this.values;\n    var spaces = this.spaces;\n    var maxes = this.maxes;\n    var alpha = 1;\n    var i;\n    this.valid = true;\n\n    if (space === 'alpha') {\n      alpha = vals;\n    } else if (vals.length) {\n      // [10, 10, 10]\n      values[space] = vals.slice(0, space.length);\n      alpha = vals[space.length];\n    } else if (vals[space.charAt(0)] !== undefined) {\n      // {r: 10, g: 10, b: 10}\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[space.charAt(i)];\n      }\n\n      alpha = vals.a;\n    } else if (vals[spaces[space][0]] !== undefined) {\n      // {red: 10, green: 10, blue: 10}\n      var chans = spaces[space];\n\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[chans[i]];\n      }\n\n      alpha = vals.alpha;\n    }\n\n    values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n    if (space === 'alpha') {\n      return false;\n    }\n\n    var capped; // cap values of the space prior converting all values\n\n    for (i = 0; i < space.length; i++) {\n      capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n      values[space][i] = Math.round(capped);\n    } // convert to all the other color spaces\n\n\n    for (var sname in spaces) {\n      if (sname !== space) {\n        values[sname] = colorConvert[space][sname](values[space]);\n      }\n    }\n\n    return true;\n  };\n\n  Color.prototype.setSpace = function (space, args) {\n    var vals = args[0];\n\n    if (vals === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof vals === 'number') {\n      vals = Array.prototype.slice.call(args);\n    }\n\n    this.setValues(space, vals);\n    return this;\n  };\n\n  Color.prototype.setChannel = function (space, index, val) {\n    var svalues = this.values[space];\n\n    if (val === undefined) {\n      // color.red()\n      return svalues[index];\n    } else if (val === svalues[index]) {\n      // color.red(color.red())\n      return this;\n    } // color.red(100)\n\n\n    svalues[index] = val;\n    this.setValues(space, svalues);\n    return this;\n  };\n\n  if (typeof window !== 'undefined') {\n    window.Color = Color;\n  }\n\n  var chartjsColor = Color;\n  /**\n   * @namespace Chart.helpers\n   */\n\n  var helpers = {\n    /**\n     * An empty function that can be used, for example, for optional callback.\n     */\n    noop: function noop() {},\n\n    /**\n     * Returns a unique id, sequentially generated from a global variable.\n     * @returns {number}\n     * @function\n     */\n    uid: function () {\n      var id = 0;\n      return function () {\n        return id++;\n      };\n    }(),\n\n    /**\n     * Returns true if `value` is neither null nor undefined, else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isNullOrUndef: function isNullOrUndef(value) {\n      return value === null || typeof value === 'undefined';\n    },\n\n    /**\n     * Returns true if `value` is an array (including typed arrays), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @function\n     */\n    isArray: function isArray(value) {\n      if (Array.isArray && Array.isArray(value)) {\n        return true;\n      }\n\n      var type = Object.prototype.toString.call(value);\n\n      if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns true if `value` is an object (excluding null), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isObject: function isObject(value) {\n      return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n    },\n\n    /**\n     * Returns true if `value` is a finite number, else returns false\n     * @param {*} value  - The value to test.\n     * @returns {boolean}\n     */\n    isFinite: function (_isFinite) {\n      function isFinite(_x) {\n        return _isFinite.apply(this, arguments);\n      }\n\n      isFinite.toString = function () {\n        return _isFinite.toString();\n      };\n\n      return isFinite;\n    }(function (value) {\n      return (typeof value === 'number' || value instanceof Number) && isFinite(value);\n    }),\n\n    /**\n     * Returns `value` if defined, else returns `defaultValue`.\n     * @param {*} value - The value to return if defined.\n     * @param {*} defaultValue - The value to return if `value` is undefined.\n     * @returns {*}\n     */\n    valueOrDefault: function valueOrDefault(value, defaultValue) {\n      return typeof value === 'undefined' ? defaultValue : value;\n    },\n\n    /**\n     * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n     * @param {Array} value - The array to lookup for value at `index`.\n     * @param {number} index - The index in `value` to lookup for value.\n     * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n     * @returns {*}\n     */\n    valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n      return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n    },\n\n    /**\n     * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n     * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n     * @param {function} fn - The function to call.\n     * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @returns {*}\n     */\n    callback: function callback(fn, args, thisArg) {\n      if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n      }\n    },\n\n    /**\n     * Note(SB) for performance sake, this method should only be used when loopable type\n     * is unknown or in none intensive code (not called often and small loopable). Else\n     * it's preferable to use a regular for() loop and save extra function calls.\n     * @param {object|Array} loopable - The object or array to be iterated.\n     * @param {function} fn - The function to call for each item.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n     */\n    each: function each(loopable, fn, thisArg, reverse) {\n      var i, len, keys;\n\n      if (helpers.isArray(loopable)) {\n        len = loopable.length;\n\n        if (reverse) {\n          for (i = len - 1; i >= 0; i--) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        } else {\n          for (i = 0; i < len; i++) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        }\n      } else if (helpers.isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n      }\n    },\n\n    /**\n     * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n     * @see https://stackoverflow.com/a/14853974\n     * @param {Array} a0 - The array to compare\n     * @param {Array} a1 - The array to compare\n     * @returns {boolean}\n     */\n    arrayEquals: function arrayEquals(a0, a1) {\n      var i, ilen, v0, v1;\n\n      if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n      }\n\n      for (i = 0, ilen = a0.length; i < ilen; ++i) {\n        v0 = a0[i];\n        v1 = a1[i];\n\n        if (v0 instanceof Array && v1 instanceof Array) {\n          if (!helpers.arrayEquals(v0, v1)) {\n            return false;\n          }\n        } else if (v0 !== v1) {\n          // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns a deep copy of `source` without keeping references on objects and arrays.\n     * @param {*} source - The value to clone.\n     * @returns {*}\n     */\n    clone: function clone(source) {\n      if (helpers.isArray(source)) {\n        return source.map(helpers.clone);\n      }\n\n      if (helpers.isObject(source)) {\n        var target = {};\n        var keys = Object.keys(source);\n        var klen = keys.length;\n        var k = 0;\n\n        for (; k < klen; ++k) {\n          target[keys[k]] = helpers.clone(source[keys[k]]);\n        }\n\n        return target;\n      }\n\n      return source;\n    },\n\n    /**\n     * The default merger when Chart.helpers.merge is called without merger option.\n     * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n     * @private\n     */\n    _merger: function _merger(key, target, source, options) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.merge(tval, sval, options);\n      } else {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Merges source[key] in target[key] only if target[key] is undefined.\n     * @private\n     */\n    _mergerIf: function _mergerIf(key, target, source) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.mergeIf(tval, sval);\n      } else if (!target.hasOwnProperty(key)) {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` with the given `options`.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @param {object} [options] - Merging options:\n     * @param {function} [options.merger] - The merge method (key, target, source, options)\n     * @returns {object} The `target` object.\n     */\n    merge: function merge(target, source, options) {\n      var sources = helpers.isArray(source) ? source : [source];\n      var ilen = sources.length;\n      var merge, i, keys, klen, k;\n\n      if (!helpers.isObject(target)) {\n        return target;\n      }\n\n      options = options || {};\n      merge = options.merger || helpers._merger;\n\n      for (i = 0; i < ilen; ++i) {\n        source = sources[i];\n\n        if (!helpers.isObject(source)) {\n          continue;\n        }\n\n        keys = Object.keys(source);\n\n        for (k = 0, klen = keys.length; k < klen; ++k) {\n          merge(keys[k], target, source, options);\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @returns {object} The `target` object.\n     */\n    mergeIf: function mergeIf(target, source) {\n      return helpers.merge(target, source, {\n        merger: helpers._mergerIf\n      });\n    },\n\n    /**\n     * Applies the contents of two or more objects together into the first object.\n     * @param {object} target - The target object in which all objects are merged into.\n     * @param {object} arg1 - Object containing additional properties to merge in target.\n     * @param {object} argN - Additional objects containing properties to merge in target.\n     * @returns {object} The `target` object.\n     */\n    extend: function extend(target) {\n      var setFn = function setFn(value, key) {\n        target[key] = value;\n      };\n\n      for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n        helpers.each(arguments[i], setFn);\n      }\n\n      return target;\n    },\n\n    /**\n     * Basic javascript inheritance based on the model created in Backbone.js\n     */\n    inherits: function inherits(extensions) {\n      var me = this;\n      var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n        return me.apply(this, arguments);\n      };\n\n      var Surrogate = function Surrogate() {\n        this.constructor = ChartElement;\n      };\n\n      Surrogate.prototype = me.prototype;\n      ChartElement.prototype = new Surrogate();\n      ChartElement.extend = helpers.inherits;\n\n      if (extensions) {\n        helpers.extend(ChartElement.prototype, extensions);\n      }\n\n      ChartElement.__super__ = me.prototype;\n      return ChartElement;\n    }\n  };\n  var helpers_core = helpers; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.callback instead.\n   * @function Chart.helpers.callCallback\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.callCallback = helpers.callback;\n  /**\n   * Provided for backward compatibility, use Array.prototype.indexOf instead.\n   * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n   * @function Chart.helpers.indexOf\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.indexOf = function (array, item, fromIndex) {\n    return Array.prototype.indexOf.call(array, item, fromIndex);\n  };\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n   * @function Chart.helpers.getValueOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  helpers.getValueOrDefault = helpers.valueOrDefault;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n   * @function Chart.helpers.getValueAtIndexOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n  /**\n   * Easing functions adapted from Robert Penner's easing equations.\n   * @namespace Chart.helpers.easingEffects\n   * @see http://www.robertpenner.com/easing/\n   */\n\n  var effects = {\n    linear: function linear(t) {\n      return t;\n    },\n    easeInQuad: function easeInQuad(t) {\n      return t * t;\n    },\n    easeOutQuad: function easeOutQuad(t) {\n      return -t * (t - 2);\n    },\n    easeInOutQuad: function easeInOutQuad(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t;\n      }\n\n      return -0.5 * (--t * (t - 2) - 1);\n    },\n    easeInCubic: function easeInCubic(t) {\n      return t * t * t;\n    },\n    easeOutCubic: function easeOutCubic(t) {\n      return (t = t - 1) * t * t + 1;\n    },\n    easeInOutCubic: function easeInOutCubic(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t + 2);\n    },\n    easeInQuart: function easeInQuart(t) {\n      return t * t * t * t;\n    },\n    easeOutQuart: function easeOutQuart(t) {\n      return -((t = t - 1) * t * t * t - 1);\n    },\n    easeInOutQuart: function easeInOutQuart(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t;\n      }\n\n      return -0.5 * ((t -= 2) * t * t * t - 2);\n    },\n    easeInQuint: function easeInQuint(t) {\n      return t * t * t * t * t;\n    },\n    easeOutQuint: function easeOutQuint(t) {\n      return (t = t - 1) * t * t * t * t + 1;\n    },\n    easeInOutQuint: function easeInOutQuint(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t * t * t + 2);\n    },\n    easeInSine: function easeInSine(t) {\n      return -Math.cos(t * (Math.PI / 2)) + 1;\n    },\n    easeOutSine: function easeOutSine(t) {\n      return Math.sin(t * (Math.PI / 2));\n    },\n    easeInOutSine: function easeInOutSine(t) {\n      return -0.5 * (Math.cos(Math.PI * t) - 1);\n    },\n    easeInExpo: function easeInExpo(t) {\n      return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n    },\n    easeOutExpo: function easeOutExpo(t) {\n      return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n    },\n    easeInOutExpo: function easeInOutExpo(t) {\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * Math.pow(2, 10 * (t - 1));\n      }\n\n      return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n    },\n    easeInCirc: function easeInCirc(t) {\n      if (t >= 1) {\n        return t;\n      }\n\n      return -(Math.sqrt(1 - t * t) - 1);\n    },\n    easeOutCirc: function easeOutCirc(t) {\n      return Math.sqrt(1 - (t = t - 1) * t);\n    },\n    easeInOutCirc: function easeInOutCirc(t) {\n      if ((t /= 0.5) < 1) {\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n      }\n\n      return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n    },\n    easeInElastic: function easeInElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    },\n    easeOutElastic: function easeOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n    },\n    easeInOutElastic: function easeInOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if ((t /= 0.5) === 2) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.45;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      if (t < 1) {\n        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n      }\n\n      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n    },\n    easeInBack: function easeInBack(t) {\n      var s = 1.70158;\n      return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack: function easeOutBack(t) {\n      var s = 1.70158;\n      return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack: function easeInOutBack(t) {\n      var s = 1.70158;\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n      }\n\n      return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: function easeInBounce(t) {\n      return 1 - effects.easeOutBounce(1 - t);\n    },\n    easeOutBounce: function easeOutBounce(t) {\n      if (t < 1 / 2.75) {\n        return 7.5625 * t * t;\n      }\n\n      if (t < 2 / 2.75) {\n        return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n      }\n\n      if (t < 2.5 / 2.75) {\n        return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n      }\n\n      return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n    },\n    easeInOutBounce: function easeInOutBounce(t) {\n      if (t < 0.5) {\n        return effects.easeInBounce(t * 2) * 0.5;\n      }\n\n      return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n    }\n  };\n  var helpers_easing = {\n    effects: effects\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n   * @function Chart.helpers.easingEffects\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.easingEffects = effects;\n  var PI = Math.PI;\n  var RAD_PER_DEG = PI / 180;\n  var DOUBLE_PI = PI * 2;\n  var HALF_PI = PI / 2;\n  var QUARTER_PI = PI / 4;\n  var TWO_THIRDS_PI = PI * 2 / 3;\n  /**\n   * @namespace Chart.helpers.canvas\n   */\n\n  var exports$1 = {\n    /**\n     * Clears the entire canvas associated to the given `chart`.\n     * @param {Chart} chart - The chart for which to clear the canvas.\n     */\n    clear: function clear(chart) {\n      chart.ctx.clearRect(0, 0, chart.width, chart.height);\n    },\n\n    /**\n     * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n     * given size (width, height) and the same `radius` for all corners.\n     * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n     * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n     * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n     * @param {number} width - The rectangle's width.\n     * @param {number} height - The rectangle's height.\n     * @param {number} radius - The rounded amount (in pixels) for the four corners.\n     * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n     */\n    roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n      if (radius) {\n        var r = Math.min(radius, height / 2, width / 2);\n        var left = x + r;\n        var top = y + r;\n        var right = x + width - r;\n        var bottom = y + height - r;\n        ctx.moveTo(x, top);\n\n        if (left < right && top < bottom) {\n          ctx.arc(left, top, r, -PI, -HALF_PI);\n          ctx.arc(right, top, r, -HALF_PI, 0);\n          ctx.arc(right, bottom, r, 0, HALF_PI);\n          ctx.arc(left, bottom, r, HALF_PI, PI);\n        } else if (left < right) {\n          ctx.moveTo(left, y);\n          ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n          ctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n        } else if (top < bottom) {\n          ctx.arc(left, top, r, -PI, 0);\n          ctx.arc(left, bottom, r, 0, PI);\n        } else {\n          ctx.arc(left, top, r, -PI, PI);\n        }\n\n        ctx.closePath();\n        ctx.moveTo(x, y);\n      } else {\n        ctx.rect(x, y, width, height);\n      }\n    },\n    drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n      var type, xOffset, yOffset, size, cornerRadius;\n      var rad = (rotation || 0) * RAD_PER_DEG;\n\n      if (style && typeof style === 'object') {\n        type = style.toString();\n\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n          ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n          return;\n        }\n      }\n\n      if (isNaN(radius) || radius <= 0) {\n        return;\n      }\n\n      ctx.beginPath();\n\n      switch (style) {\n        // Default includes circle\n        default:\n          ctx.arc(x, y, radius, 0, DOUBLE_PI);\n          ctx.closePath();\n          break;\n\n        case 'triangle':\n          ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          ctx.closePath();\n          break;\n\n        case 'rectRounded':\n          // NOTE: the rounded rect implementation changed to use `arc` instead of\n          // `quadraticCurveTo` since it generates better results when rect is\n          // almost a circle. 0.516 (instead of 0.5) produces results with visually\n          // closer proportion to the previous impl and it is inscribed in the\n          // circle with `radius`. For more details, see the following PRs:\n          // https://github.com/chartjs/Chart.js/issues/5597\n          // https://github.com/chartjs/Chart.js/issues/5858\n          cornerRadius = radius * 0.516;\n          size = radius - cornerRadius;\n          xOffset = Math.cos(rad + QUARTER_PI) * size;\n          yOffset = Math.sin(rad + QUARTER_PI) * size;\n          ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n          ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n          ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n          ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n          ctx.closePath();\n          break;\n\n        case 'rect':\n          if (!rotation) {\n            size = Math.SQRT1_2 * radius;\n            ctx.rect(x - size, y - size, 2 * size, 2 * size);\n            break;\n          }\n\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'rectRot':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          ctx.closePath();\n          break;\n\n        case 'crossRot':\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'cross':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'star':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          rad += QUARTER_PI;\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'line':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          break;\n\n        case 'dash':\n          ctx.moveTo(x, y);\n          ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n          break;\n      }\n\n      ctx.fill();\n      ctx.stroke();\n    },\n\n    /**\n     * Returns true if the point is inside the rectangle\n     * @param {object} point - The point to test\n     * @param {object} area - The rectangle\n     * @returns {boolean}\n     * @private\n     */\n    _isPointInArea: function _isPointInArea(point, area) {\n      var epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n      return point.x > area.left - epsilon && point.x < area.right + epsilon && point.y > area.top - epsilon && point.y < area.bottom + epsilon;\n    },\n    clipArea: function clipArea(ctx, area) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n      ctx.clip();\n    },\n    unclipArea: function unclipArea(ctx) {\n      ctx.restore();\n    },\n    lineTo: function lineTo(ctx, previous, target, flip) {\n      var stepped = target.steppedLine;\n\n      if (stepped) {\n        if (stepped === 'middle') {\n          var midpoint = (previous.x + target.x) / 2.0;\n          ctx.lineTo(midpoint, flip ? target.y : previous.y);\n          ctx.lineTo(midpoint, flip ? previous.y : target.y);\n        } else if (stepped === 'after' && !flip || stepped !== 'after' && flip) {\n          ctx.lineTo(previous.x, target.y);\n        } else {\n          ctx.lineTo(target.x, previous.y);\n        }\n\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      if (!target.tension) {\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n    }\n  };\n  var helpers_canvas = exports$1; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n   * @namespace Chart.helpers.clear\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.clear = exports$1.clear;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n   * @namespace Chart.helpers.drawRoundedRectangle\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.drawRoundedRectangle = function (ctx) {\n    ctx.beginPath();\n    exports$1.roundedRect.apply(exports$1, arguments);\n  };\n\n  var defaults = {\n    /**\n     * @private\n     */\n    _set: function _set(scope, values) {\n      return helpers_core.merge(this[scope] || (this[scope] = {}), values);\n    }\n  };\n\n  defaults._set('global', {\n    defaultColor: 'rgba(0,0,0,0.1)',\n    defaultFontColor: '#666',\n    defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    defaultFontSize: 12,\n    defaultFontStyle: 'normal',\n    defaultLineHeight: 1.2,\n    showLines: true\n  });\n\n  var core_defaults = defaults;\n  var valueOrDefault = helpers_core.valueOrDefault;\n  /**\n   * Converts the given font object into a CSS font string.\n   * @param {object} font - A font object.\n   * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n   * @private\n   */\n\n  function toFontString(font) {\n    if (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n      return null;\n    }\n\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n  }\n  /**\n   * @alias Chart.helpers.options\n   * @namespace\n   */\n\n\n  var helpers_options = {\n    /**\n     * Converts the given line height `value` in pixels for a specific font `size`.\n     * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n     * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n     * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n     * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n     * @since 2.7.0\n     */\n    toLineHeight: function toLineHeight(value, size) {\n      var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n      if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n      }\n\n      value = +matches[2];\n\n      switch (matches[3]) {\n        case 'px':\n          return value;\n\n        case '%':\n          value /= 100;\n          break;\n\n        default:\n          break;\n      }\n\n      return size * value;\n    },\n\n    /**\n     * Converts the given value into a padding object with pre-computed width/height.\n     * @param {number|object} value - If a number, set the value to all TRBL component,\n     *  else, if and object, use defined properties and sets undefined ones to 0.\n     * @returns {object} The padding values (top, right, bottom, left, width, height)\n     * @since 2.7.0\n     */\n    toPadding: function toPadding(value) {\n      var t, r, b, l;\n\n      if (helpers_core.isObject(value)) {\n        t = +value.top || 0;\n        r = +value.right || 0;\n        b = +value.bottom || 0;\n        l = +value.left || 0;\n      } else {\n        t = r = b = l = +value || 0;\n      }\n\n      return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        height: t + b,\n        width: l + r\n      };\n    },\n\n    /**\n     * Parses font options and returns the font object.\n     * @param {object} options - A object that contains font options to be parsed.\n     * @return {object} The font object.\n     * @todo Support font.* options and renamed to toFont().\n     * @private\n     */\n    _parseFont: function _parseFont(options) {\n      var globalDefaults = core_defaults.global;\n      var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n      var font = {\n        family: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n        lineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n        size: size,\n        style: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n        weight: null,\n        string: ''\n      };\n      font.string = toFontString(font);\n      return font;\n    },\n\n    /**\n     * Evaluates the given `inputs` sequentially and returns the first defined value.\n     * @param {Array} inputs - An array of values, falling back to the last value.\n     * @param {object} [context] - If defined and the current value is a function, the value\n     * is called with `context` as first argument and the result becomes the new input.\n     * @param {number} [index] - If defined and the current value is an array, the value\n     * at `index` become the new input.\n     * @since 2.7.0\n     */\n    resolve: function resolve(inputs, context, index) {\n      var i, ilen, value;\n\n      for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n        value = inputs[i];\n\n        if (value === undefined) {\n          continue;\n        }\n\n        if (context !== undefined && typeof value === 'function') {\n          value = value(context);\n        }\n\n        if (index !== undefined && helpers_core.isArray(value)) {\n          value = value[index];\n        }\n\n        if (value !== undefined) {\n          return value;\n        }\n      }\n    }\n  };\n  var helpers$1 = helpers_core;\n  var easing = helpers_easing;\n  var canvas = helpers_canvas;\n  var options = helpers_options;\n  helpers$1.easing = easing;\n  helpers$1.canvas = canvas;\n  helpers$1.options = options;\n\n  function interpolate(start, view, model, ease) {\n    var keys = Object.keys(model);\n    var i, ilen, key, actual, origin, target, type, c0, c1;\n\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      key = keys[i];\n      target = model[key]; // if a value is added to the model after pivot() has been called, the view\n      // doesn't contain it, so let's initialize the view to the target value.\n\n      if (!view.hasOwnProperty(key)) {\n        view[key] = target;\n      }\n\n      actual = view[key];\n\n      if (actual === target || key[0] === '_') {\n        continue;\n      }\n\n      if (!start.hasOwnProperty(key)) {\n        start[key] = actual;\n      }\n\n      origin = start[key];\n      type = typeof target;\n\n      if (type === typeof origin) {\n        if (type === 'string') {\n          c0 = chartjsColor(origin);\n\n          if (c0.valid) {\n            c1 = chartjsColor(target);\n\n            if (c1.valid) {\n              view[key] = c1.mix(c0, ease).rgbString();\n              continue;\n            }\n          }\n        } else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n          view[key] = origin + (target - origin) * ease;\n          continue;\n        }\n      }\n\n      view[key] = target;\n    }\n  }\n\n  var Element = function Element(configuration) {\n    helpers$1.extend(this, configuration);\n    this.initialize.apply(this, arguments);\n  };\n\n  helpers$1.extend(Element.prototype, {\n    initialize: function initialize() {\n      this.hidden = false;\n    },\n    pivot: function pivot() {\n      var me = this;\n\n      if (!me._view) {\n        me._view = helpers$1.clone(me._model);\n      }\n\n      me._start = {};\n      return me;\n    },\n    transition: function transition(ease) {\n      var me = this;\n      var model = me._model;\n      var start = me._start;\n      var view = me._view; // No animation -> No Transition\n\n      if (!model || ease === 1) {\n        me._view = model;\n        me._start = null;\n        return me;\n      }\n\n      if (!view) {\n        view = me._view = {};\n      }\n\n      if (!start) {\n        start = me._start = {};\n      }\n\n      interpolate(start, view, model, ease);\n      return me;\n    },\n    tooltipPosition: function tooltipPosition() {\n      return {\n        x: this._model.x,\n        y: this._model.y\n      };\n    },\n    hasValue: function hasValue() {\n      return helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n    }\n  });\n  Element.extend = helpers$1.inherits;\n  var core_element = Element;\n  var exports$2 = core_element.extend({\n    chart: null,\n    // the animation associated chart instance\n    currentStep: 0,\n    // the current animation step\n    numSteps: 60,\n    // default number of steps\n    easing: '',\n    // the easing to use for this animation\n    render: null,\n    // render function used by the animation service\n    onAnimationProgress: null,\n    // user specified callback to fire on each step of the animation\n    onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n  });\n  var core_animation = exports$2; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.Animation instead\n   * @prop Chart.Animation#animationObject\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'animationObject', {\n    get: function get() {\n      return this;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart.Animation#chart instead\n   * @prop Chart.Animation#chartInstance\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'chartInstance', {\n    get: function get() {\n      return this.chart;\n    },\n    set: function set(value) {\n      this.chart = value;\n    }\n  });\n\n  core_defaults._set('global', {\n    animation: {\n      duration: 1000,\n      easing: 'easeOutQuart',\n      onProgress: helpers$1.noop,\n      onComplete: helpers$1.noop\n    }\n  });\n\n  var core_animations = {\n    animations: [],\n    request: null,\n\n    /**\n     * @param {Chart} chart - The chart to animate.\n     * @param {Chart.Animation} animation - The animation that we will animate.\n     * @param {number} duration - The animation duration in ms.\n     * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n     */\n    addAnimation: function addAnimation(chart, animation, duration, lazy) {\n      var animations = this.animations;\n      var i, ilen;\n      animation.chart = chart;\n      animation.startTime = Date.now();\n      animation.duration = duration;\n\n      if (!lazy) {\n        chart.animating = true;\n      }\n\n      for (i = 0, ilen = animations.length; i < ilen; ++i) {\n        if (animations[i].chart === chart) {\n          animations[i] = animation;\n          return;\n        }\n      }\n\n      animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n      if (animations.length === 1) {\n        this.requestAnimationFrame();\n      }\n    },\n    cancelAnimation: function cancelAnimation(chart) {\n      var index = helpers$1.findIndex(this.animations, function (animation) {\n        return animation.chart === chart;\n      });\n\n      if (index !== -1) {\n        this.animations.splice(index, 1);\n        chart.animating = false;\n      }\n    },\n    requestAnimationFrame: function requestAnimationFrame() {\n      var me = this;\n\n      if (me.request === null) {\n        // Skip animation frame requests until the active one is executed.\n        // This can happen when processing mouse events, e.g. 'mousemove'\n        // and 'mouseout' events will trigger multiple renders.\n        me.request = helpers$1.requestAnimFrame.call(window, function () {\n          me.request = null;\n          me.startDigest();\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    startDigest: function startDigest() {\n      var me = this;\n      me.advance(); // Do we have more stuff to animate?\n\n      if (me.animations.length > 0) {\n        me.requestAnimationFrame();\n      }\n    },\n\n    /**\n     * @private\n     */\n    advance: function advance() {\n      var animations = this.animations;\n      var animation, chart, numSteps, nextStep;\n      var i = 0; // 1 animation per chart, so we are looping charts here\n\n      while (i < animations.length) {\n        animation = animations[i];\n        chart = animation.chart;\n        numSteps = animation.numSteps; // Make sure that currentStep starts at 1\n        // https://github.com/chartjs/Chart.js/issues/6104\n\n        nextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n        animation.currentStep = Math.min(nextStep, numSteps);\n        helpers$1.callback(animation.render, [chart, animation], chart);\n        helpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n        if (animation.currentStep >= numSteps) {\n          helpers$1.callback(animation.onAnimationComplete, [animation], chart);\n          chart.animating = false;\n          animations.splice(i, 1);\n        } else {\n          ++i;\n        }\n      }\n    }\n  };\n  var resolve = helpers$1.options.resolve;\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers$1.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  var DatasetController = function DatasetController(chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers$1.extend(DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getValueScale: function _getValueScale() {\n      return this.getScaleForId(this._getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScale: function _getIndexScale() {\n      return this.getScaleForId(this._getIndexScaleId());\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers$1.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers$1.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      var getHoverColor = helpers$1.getHoverColor;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n      model.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n      model.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      var count = arguments.length;\n      this.insertElements(this.getDataset().data.length - count, count);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  DatasetController.extend = helpers$1.inherits;\n  var core_datasetController = DatasetController;\n\n  core_defaults._set('global', {\n    elements: {\n      arc: {\n        backgroundColor: core_defaults.global.defaultColor,\n        borderColor: '#fff',\n        borderWidth: 2,\n        borderAlign: 'center'\n      }\n    }\n  });\n\n  var element_arc = core_element.extend({\n    inLabelRange: function inLabelRange(mouseX) {\n      var vm = this._view;\n\n      if (vm) {\n        return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n      }\n\n      return false;\n    },\n    inRange: function inRange(chartX, chartY) {\n      var vm = this._view;\n\n      if (vm) {\n        var pointRelativePosition = helpers$1.getAngleFromPoint(vm, {\n          x: chartX,\n          y: chartY\n        });\n        var angle = pointRelativePosition.angle;\n        var distance = pointRelativePosition.distance; // Sanitise angle range\n\n        var startAngle = vm.startAngle;\n        var endAngle = vm.endAngle;\n\n        while (endAngle < startAngle) {\n          endAngle += 2.0 * Math.PI;\n        }\n\n        while (angle > endAngle) {\n          angle -= 2.0 * Math.PI;\n        }\n\n        while (angle < startAngle) {\n          angle += 2.0 * Math.PI;\n        } // Check if within the range of the open/close angle\n\n\n        var betweenAngles = angle >= startAngle && angle <= endAngle;\n        var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n        return betweenAngles && withinRadius;\n      }\n\n      return false;\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n      var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n      return {\n        x: vm.x + Math.cos(halfAngle) * halfRadius,\n        y: vm.y + Math.sin(halfAngle) * halfRadius\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n      var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n      return {\n        x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n        y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n      };\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var sA = vm.startAngle;\n      var eA = vm.endAngle;\n      var pixelMargin = vm.borderAlign === 'inner' ? 0.33 : 0;\n      var angleMargin;\n      ctx.save();\n      ctx.beginPath();\n      ctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n      ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n      ctx.closePath();\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fill();\n\n      if (vm.borderWidth) {\n        if (vm.borderAlign === 'inner') {\n          // Draw an inner border by cliping the arc and drawing a double-width border\n          // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n          ctx.beginPath();\n          angleMargin = pixelMargin / vm.outerRadius;\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\n          if (vm.innerRadius > pixelMargin) {\n            angleMargin = pixelMargin / vm.innerRadius;\n            ctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n          } else {\n            ctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n          }\n\n          ctx.closePath();\n          ctx.clip();\n          ctx.beginPath();\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n          ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n          ctx.closePath();\n          ctx.lineWidth = vm.borderWidth * 2;\n          ctx.lineJoin = 'round';\n        } else {\n          ctx.lineWidth = vm.borderWidth;\n          ctx.lineJoin = 'bevel';\n        }\n\n        ctx.strokeStyle = vm.borderColor;\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$1 = helpers$1.valueOrDefault;\n  var defaultColor = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      line: {\n        tension: 0.4,\n        backgroundColor: defaultColor,\n        borderWidth: 3,\n        borderColor: defaultColor,\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        capBezierPoints: true,\n        fill: true // do we fill in the area between the line and its base axis\n\n      }\n    }\n  });\n\n  var element_line = core_element.extend({\n    draw: function draw() {\n      var me = this;\n      var vm = me._view;\n      var ctx = me._chart.ctx;\n      var spanGaps = vm.spanGaps;\n\n      var points = me._children.slice(); // clone array\n\n\n      var globalDefaults = core_defaults.global;\n      var globalOptionLineElements = globalDefaults.elements.line;\n      var lastDrawnIndex = -1;\n      var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n      if (me._loop && points.length) {\n        points.push(points[0]);\n      }\n\n      ctx.save(); // Stroke Line Options\n\n      ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n      if (ctx.setLineDash) {\n        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n      }\n\n      ctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n      ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n      ctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n      ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n      ctx.beginPath();\n      lastDrawnIndex = -1;\n\n      for (index = 0; index < points.length; ++index) {\n        current = points[index];\n        previous = helpers$1.previousItem(points, index);\n        currentVM = current._view; // First point moves to it's starting position no matter what\n\n        if (index === 0) {\n          if (!currentVM.skip) {\n            ctx.moveTo(currentVM.x, currentVM.y);\n            lastDrawnIndex = index;\n          }\n        } else {\n          previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n          if (!currentVM.skip) {\n            if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n              // There was a gap and this is the first point after the gap\n              ctx.moveTo(currentVM.x, currentVM.y);\n            } else {\n              // Line to next point\n              helpers$1.canvas.lineTo(ctx, previous._view, current._view);\n            }\n\n            lastDrawnIndex = index;\n          }\n        }\n      }\n\n      ctx.stroke();\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$2 = helpers$1.valueOrDefault;\n  var defaultColor$1 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      point: {\n        radius: 3,\n        pointStyle: 'circle',\n        backgroundColor: defaultColor$1,\n        borderColor: defaultColor$1,\n        borderWidth: 1,\n        // Hover\n        hitRadius: 1,\n        hoverRadius: 4,\n        hoverBorderWidth: 1\n      }\n    }\n  });\n\n  function xRange(mouseX) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n  }\n\n  function yRange(mouseY) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n  }\n\n  var element_point = core_element.extend({\n    inRange: function inRange(mouseX, mouseY) {\n      var vm = this._view;\n      return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n    },\n    inLabelRange: xRange,\n    inXRange: xRange,\n    inYRange: yRange,\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    },\n    getArea: function getArea() {\n      return Math.PI * Math.pow(this._view.radius, 2);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y,\n        padding: vm.radius + vm.borderWidth\n      };\n    },\n    draw: function draw(chartArea) {\n      var vm = this._view;\n      var ctx = this._chart.ctx;\n      var pointStyle = vm.pointStyle;\n      var rotation = vm.rotation;\n      var radius = vm.radius;\n      var x = vm.x;\n      var y = vm.y;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n      if (vm.skip) {\n        return;\n      } // Clipping for Points.\n\n\n      if (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n        ctx.strokeStyle = vm.borderColor || defaultColor;\n        ctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n        ctx.fillStyle = vm.backgroundColor || defaultColor;\n        helpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n      }\n    }\n  });\n  var defaultColor$2 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      rectangle: {\n        backgroundColor: defaultColor$2,\n        borderColor: defaultColor$2,\n        borderSkipped: 'bottom',\n        borderWidth: 0\n      }\n    }\n  });\n\n  function isVertical(vm) {\n    return vm && vm.width !== undefined;\n  }\n  /**\n   * Helper function to get the bounds of the bar regardless of the orientation\n   * @param bar {Chart.Element.Rectangle} the bar\n   * @return {Bounds} bounds of the bar\n   * @private\n   */\n\n\n  function getBarBounds(vm) {\n    var x1, x2, y1, y2, half;\n\n    if (isVertical(vm)) {\n      half = vm.width / 2;\n      x1 = vm.x - half;\n      x2 = vm.x + half;\n      y1 = Math.min(vm.y, vm.base);\n      y2 = Math.max(vm.y, vm.base);\n    } else {\n      half = vm.height / 2;\n      x1 = Math.min(vm.x, vm.base);\n      x2 = Math.max(vm.x, vm.base);\n      y1 = vm.y - half;\n      y2 = vm.y + half;\n    }\n\n    return {\n      left: x1,\n      top: y1,\n      right: x2,\n      bottom: y2\n    };\n  }\n\n  function swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n  }\n\n  function parseBorderSkipped(vm) {\n    var edge = vm.borderSkipped;\n    var res = {};\n\n    if (!edge) {\n      return res;\n    }\n\n    if (vm.horizontal) {\n      if (vm.base > vm.x) {\n        edge = swap(edge, 'left', 'right');\n      }\n    } else if (vm.base < vm.y) {\n      edge = swap(edge, 'bottom', 'top');\n    }\n\n    res[edge] = true;\n    return res;\n  }\n\n  function parseBorderWidth(vm, maxW, maxH) {\n    var value = vm.borderWidth;\n    var skip = parseBorderSkipped(vm);\n    var t, r, b, l;\n\n    if (helpers$1.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      t: skip.top || t < 0 ? 0 : t > maxH ? maxH : t,\n      r: skip.right || r < 0 ? 0 : r > maxW ? maxW : r,\n      b: skip.bottom || b < 0 ? 0 : b > maxH ? maxH : b,\n      l: skip.left || l < 0 ? 0 : l > maxW ? maxW : l\n    };\n  }\n\n  function boundingRects(vm) {\n    var bounds = getBarBounds(vm);\n    var width = bounds.right - bounds.left;\n    var height = bounds.bottom - bounds.top;\n    var border = parseBorderWidth(vm, width / 2, height / 2);\n    return {\n      outer: {\n        x: bounds.left,\n        y: bounds.top,\n        w: width,\n        h: height\n      },\n      inner: {\n        x: bounds.left + border.l,\n        y: bounds.top + border.t,\n        w: width - border.l - border.r,\n        h: height - border.t - border.b\n      }\n    };\n  }\n\n  function _inRange(vm, x, y) {\n    var skipX = x === null;\n    var skipY = y === null;\n    var bounds = !vm || skipX && skipY ? false : getBarBounds(vm);\n    return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n  }\n\n  var element_rectangle = core_element.extend({\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var rects = boundingRects(vm);\n      var outer = rects.outer;\n      var inner = rects.inner;\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n      if (outer.w === inner.w && outer.h === inner.h) {\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(outer.x, outer.y, outer.w, outer.h);\n      ctx.clip();\n      ctx.fillStyle = vm.borderColor;\n      ctx.rect(inner.x, inner.y, inner.w, inner.h);\n      ctx.fill('evenodd');\n      ctx.restore();\n    },\n    height: function height() {\n      var vm = this._view;\n      return vm.base - vm.y;\n    },\n    inRange: function inRange(mouseX, mouseY) {\n      return _inRange(this._view, mouseX, mouseY);\n    },\n    inLabelRange: function inLabelRange(mouseX, mouseY) {\n      var vm = this._view;\n      return isVertical(vm) ? _inRange(vm, mouseX, null) : _inRange(vm, null, mouseY);\n    },\n    inXRange: function inXRange(mouseX) {\n      return _inRange(this._view, mouseX, null);\n    },\n    inYRange: function inYRange(mouseY) {\n      return _inRange(this._view, null, mouseY);\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var x, y;\n\n      if (isVertical(vm)) {\n        x = vm.x;\n        y = (vm.y + vm.base) / 2;\n      } else {\n        x = (vm.x + vm.base) / 2;\n        y = vm.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return isVertical(vm) ? vm.width * Math.abs(vm.y - vm.base) : vm.height * Math.abs(vm.x - vm.base);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    }\n  });\n  var elements = {};\n  var Arc = element_arc;\n  var Line = element_line;\n  var Point = element_point;\n  var Rectangle = element_rectangle;\n  elements.Arc = Arc;\n  elements.Line = Line;\n  elements.Point = Point;\n  elements.Rectangle = Rectangle;\n  var resolve$1 = helpers$1.options.resolve;\n\n  core_defaults._set('bar', {\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }],\n      yAxes: [{\n        type: 'linear'\n      }]\n    }\n  });\n  /**\n   * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n   * @private\n   */\n\n\n  function computeMinSampleSize(scale, pixels) {\n    var min = scale.isHorizontal() ? scale.width : scale.height;\n    var ticks = scale.getTicks();\n    var prev, curr, i, ilen;\n\n    for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n      min = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n    }\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      curr = scale.getPixelForTick(i);\n      min = i > 0 ? Math.min(min, curr - prev) : min;\n      prev = curr;\n    }\n\n    return min;\n  }\n  /**\n   * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n   * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n   * mode currently always generates bars equally sized (until we introduce scriptable options?).\n   * @private\n   */\n\n\n  function computeFitCategoryTraits(index, ruler, options) {\n    var thickness = options.barThickness;\n    var count = ruler.stackCount;\n    var curr = ruler.pixels[index];\n    var size, ratio;\n\n    if (helpers$1.isNullOrUndef(thickness)) {\n      size = ruler.min * options.categoryPercentage;\n      ratio = options.barPercentage;\n    } else {\n      // When bar thickness is enforced, category and bar percentages are ignored.\n      // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n      // and deprecate barPercentage since this value is ignored when thickness is absolute.\n      size = thickness * count;\n      ratio = 1;\n    }\n\n    return {\n      chunk: size / count,\n      ratio: ratio,\n      start: curr - size / 2\n    };\n  }\n  /**\n   * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n   * percentage options are 1), based on the previous and following categories. This mode\n   * generates bars with different widths when data are not evenly spaced.\n   * @private\n   */\n\n\n  function computeFlexCategoryTraits(index, ruler, options) {\n    var pixels = ruler.pixels;\n    var curr = pixels[index];\n    var prev = index > 0 ? pixels[index - 1] : null;\n    var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    var percent = options.categoryPercentage;\n    var start, size;\n\n    if (prev === null) {\n      // first data: its size is double based on the next point or,\n      // if it's also the last data, we use the scale size.\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n\n    if (next === null) {\n      // last data: its size is also double based on the previous point.\n      next = curr + curr - prev;\n    }\n\n    start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    size = Math.abs(next - prev) / 2 * percent;\n    return {\n      chunk: size / ruler.stackCount,\n      ratio: options.barPercentage,\n      start: start\n    };\n  }\n\n  var controller_bar = core_datasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      core_datasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      var options = me._resolveElementOptions(rectangle, index);\n\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderSkipped: options.borderSkipped,\n        borderWidth: options.borderWidth,\n        datasetLabel: dataset.label,\n        label: me.chart.data.labels[index]\n      };\n\n      me._updateElementGeometry(rectangle, index, reset);\n\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    _updateElementGeometry: function _updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n\n      var vscale = me._getValueScale();\n\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {number} [last] - The dataset index\n     * @returns {string[]} The list of stack IDs\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getIndexScale();\n\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {number} [datasetIndex] - The dataset index\n     * @param {string} [name] - The stack name to find\n     * @returns {number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n\n      var scale = me._getIndexScale();\n\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers$1.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n\n      var scale = me._getValueScale();\n\n      var isHorizontal = scale.isHorizontal();\n      var datasets = chart.data.datasets;\n      var value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n      var minBarLength = scale.options.minBarLength;\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller._getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = +scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = head - base;\n\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n        size = minBarLength;\n\n        if (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n          head = base - minBarLength;\n        } else {\n          head = base + minBarLength;\n        }\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers$1.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getValueScale();\n\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers$1.canvas.unclipArea(chart.ctx);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(rectangle, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = rectangle.custom || {};\n      var options = chart.options.elements.rectangle;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderSkipped', 'borderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$1([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    }\n  });\n  var valueOrDefault$3 = helpers$1.valueOrDefault;\n  var resolve$2 = helpers$1.options.resolve;\n\n  core_defaults._set('bubble', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        // bubble should probably use a linear scale by default\n        position: 'bottom',\n        id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n      }],\n      yAxes: [{\n        type: 'linear',\n        position: 'left',\n        id: 'y-axis-0'\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          // Title doesn't make sense for scatter since we format the data as a point\n          return '';\n        },\n        label: function label(item, data) {\n          var datasetLabel = data.datasets[item.datasetIndex].label || '';\n          var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n          return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n        }\n      }\n    }\n  });\n\n  var controller_bubble = core_datasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers$1.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$2([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve$2([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n  var resolve$3 = helpers$1.options.resolve;\n  var valueOrDefault$4 = helpers$1.valueOrDefault;\n\n  core_defaults._set('doughnut', {\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    hover: {\n      mode: 'single'\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc && arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n          if (meta.data[index]) {\n            meta.data[index].hidden = !meta.data[index].hidden;\n          }\n        }\n\n        chart.update();\n      }\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutoutPercentage: 50,\n    // The rotation of the chart, where the first data arc begins.\n    rotation: Math.PI * -0.5,\n    // The total circumference of the chart.\n    circumference: Math.PI * 2.0,\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem, data) {\n          var dataLabel = data.labels[tooltipItem.index];\n          var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n          if (helpers$1.isArray(dataLabel)) {\n            // show value on first line of multiline label\n            // need to clone because we are changing the value\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n      }\n    }\n  });\n\n  var controller_doughnut = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var availableWidth = chartArea.right - chartArea.left;\n      var availableHeight = chartArea.bottom - chartArea.top;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var arcs = meta.data;\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference;\n\n      var chartWeight = me._getRingWeight(me.index);\n\n      var i, ilen; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth();\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers$1.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n      if (!arcs) {\n        // Find the outmost visible dataset\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n\n            if (i !== me.index) {\n              controller = meta.controller;\n            }\n\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arc = arcs[i];\n        options = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\n        if (options.borderAlign !== 'inner') {\n          borderWidth = options.borderWidth;\n          hoverWidth = options.hoverBorderWidth;\n          max = borderWidth > max ? borderWidth : max;\n          max = hoverWidth > max ? hoverWidth : max;\n        }\n      }\n\n      return max;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$3([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n     * @private\n     */\n    _getRingWeightOffset: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    },\n\n    /**\n     * @private\n     */\n    _getRingWeight: function _getRingWeight(dataSetIndex) {\n      return Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n    },\n\n    /**\n     * Returns the sum of all visibile data set weights.  This value can be 0.\n     * @private\n     */\n    _getVisibleDatasetWeightTotal: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length);\n    }\n  });\n\n  core_defaults._set('horizontalBar', {\n    hover: {\n      mode: 'index',\n      axis: 'y'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        position: 'bottom'\n      }],\n      yAxes: [{\n        type: 'category',\n        position: 'left',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }]\n    },\n    elements: {\n      rectangle: {\n        borderSkipped: 'left'\n      }\n    },\n    tooltips: {\n      mode: 'index',\n      axis: 'y'\n    }\n  });\n\n  var controller_horizontalBar = controller_bar.extend({\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n  var valueOrDefault$5 = helpers$1.valueOrDefault;\n  var resolve$4 = helpers$1.options.resolve;\n  var isPointInArea = helpers$1.canvas._isPointInArea;\n\n  core_defaults._set('line', {\n    showLines: true,\n    spanGaps: false,\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        id: 'x-axis-0'\n      }],\n      yAxes: [{\n        type: 'linear',\n        id: 'y-axis-0'\n      }]\n    }\n  });\n\n  function lineEnabled(dataset, options) {\n    return valueOrDefault$5(dataset.showLine, options.showLines);\n  }\n\n  var controller_line = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.getScaleForId(meta.yAxisID);\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, me.chart.options);\n      var i, ilen; // Update Line\n\n      if (showLine) {\n        // Compatibility: If the properties are defined with only the old name, use those values\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = me._resolveLineOptions(line);\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var lineModel = meta.dataset._model;\n      var x, y;\n\n      var options = me._resolvePointOptions(point, index);\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n        steppedLine: lineModel ? lineModel.steppedLine : false,\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options;\n      var elementOptions = options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill', 'cubicInterpolationMode'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[key], elementOptions[key]]);\n      } // The default behavior of lines is to break at null values, according\n      // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n      // This option gives lines the ability to span gaps\n\n\n      values.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n      values.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n      values.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n      return values;\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var lineModel = meta.dataset._model;\n      var area = chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (lineModel.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (lineModel.cubicInterpolationMode === 'monotone') {\n        helpers$1.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i)._model, model, helpers$1.nextItem(points, i)._model, lineModel.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n\n          if (isPointInArea(model, area)) {\n            if (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n              model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n              model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n            }\n\n            if (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n              model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n              model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n            }\n          }\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers$1.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers$1.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n    }\n  });\n  var resolve$5 = helpers$1.options.resolve;\n\n  core_defaults._set('polarArea', {\n    scale: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      gridLines: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    // Boolean - Whether to animate the rotation of the chart\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    startAngle: -0.5 * Math.PI,\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i);\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n\n        chart.update();\n      }\n    },\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item, data) {\n          return data.labels[item.index] + ': ' + item.yLabel;\n        }\n      }\n    }\n  });\n\n  var controller_polarArea = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var arcs = meta.data;\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max(minSize / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      });\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers$1.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      var valueOrDefault = helpers$1.valueOrDefault;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$5([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return resolve$5([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n\n  core_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\n\n  core_defaults._set('pie', {\n    cutoutPercentage: 0\n  }); // Pie charts are Doughnut chart with different defaults\n\n\n  var controller_pie = controller_doughnut;\n  var valueOrDefault$6 = helpers$1.valueOrDefault;\n  var resolve$6 = helpers$1.options.resolve;\n\n  core_defaults._set('radar', {\n    scale: {\n      type: 'radialLinear'\n    },\n    elements: {\n      line: {\n        tension: 0 // no bezier in radar\n\n      }\n    }\n  });\n\n  var controller_radar = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.chart.scale;\n      var dataset = me.getDataset();\n      var i, ilen; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      } // Utility\n\n\n      line._scale = scale;\n      line._datasetIndex = me.index; // Data\n\n      line._children = points;\n      line._loop = true; // Model\n\n      line._model = me._resolveLineOptions(line);\n      line.pivot(); // Update Points\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      } // Update bezier control points\n\n\n      me.updateBezierControlPoints(); // Now pivot the point for animation\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n      var options = me._resolvePointOptions(point, index);\n\n      var lineModel = me.getMeta().dataset._model;\n\n      var x = reset ? scale.xCenter : pointPosition.x;\n      var y = reset ? scale.yCenter : pointPosition.y; // Utility\n\n      point._scale = scale;\n      point._options = options;\n      point._datasetIndex = me.index;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        // value not used in dataset scale, but we want a consistent API between scales\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[key], options[key]]);\n      }\n\n      values.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n      return values;\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints;\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        model = points[i]._model;\n        controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i, true)._model, model, helpers$1.nextItem(points, i, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n        model.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n        model.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n        model.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n      }\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n    }\n  });\n\n  core_defaults._set('scatter', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        id: 'x-axis-1',\n        // need an ID so datasets can reference the scale\n        type: 'linear',\n        // scatter should not use a category axis\n        position: 'bottom'\n      }],\n      yAxes: [{\n        id: 'y-axis-1',\n        type: 'linear',\n        position: 'left'\n      }]\n    },\n    showLines: false,\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return ''; // doesn't make sense for scatter since data are formatted as a point\n        },\n        label: function label(item) {\n          return '(' + item.xLabel + ', ' + item.yLabel + ')';\n        }\n      }\n    }\n  }); // Scatter charts use line controllers\n\n\n  var controller_scatter = controller_line; // NOTE export a map in which the key represents the controller type, not\n  // the class, and so must be CamelCase in order to be correctly retrieved\n  // by the controller in core.controller.js (`controllers[meta.type]`).\n\n  var controllers = {\n    bar: controller_bar,\n    bubble: controller_bubble,\n    doughnut: controller_doughnut,\n    horizontalBar: controller_horizontalBar,\n    line: controller_line,\n    polarArea: controller_polarArea,\n    pie: controller_pie,\n    radar: controller_radar,\n    scatter: controller_scatter\n  };\n  /**\n   * Helper function to get relative position for an event\n   * @param {Event|IEvent} event - The event to get the position for\n   * @param {Chart} chart - The chart\n   * @returns {object} the event position\n   */\n\n  function getRelativePosition(e, chart) {\n    if (e.native) {\n      return {\n        x: e.x,\n        y: e.y\n      };\n    }\n\n    return helpers$1.getRelativePosition(e, chart);\n  }\n  /**\n   * Helper function to traverse all of the visible elements in the chart\n   * @param {Chart} chart - the chart\n   * @param {function} handler - the callback to execute for each visible item\n   */\n\n\n  function parseVisibleItems(chart, handler) {\n    var datasets = chart.data.datasets;\n    var meta, i, j, ilen, jlen;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      if (!chart.isDatasetVisible(i)) {\n        continue;\n      }\n\n      meta = chart.getDatasetMeta(i);\n\n      for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n        var element = meta.data[j];\n\n        if (!element._view.skip) {\n          handler(element);\n        }\n      }\n    }\n  }\n  /**\n   * Helper function to get the items that intersect the event position\n   * @param {ChartElement[]} items - elements to filter\n   * @param {object} position - the point to be nearest to\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getIntersectItems(chart, position) {\n    var elements = [];\n    parseVisibleItems(chart, function (element) {\n      if (element.inRange(position.x, position.y)) {\n        elements.push(element);\n      }\n    });\n    return elements;\n  }\n  /**\n   * Helper function to get the items nearest to the event position considering all visible items in teh chart\n   * @param {Chart} chart - the chart to look at elements from\n   * @param {object} position - the point to be nearest to\n   * @param {boolean} intersect - if true, only consider items that intersect the position\n   * @param {function} distanceMetric - function to provide the distance between points\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getNearestItems(chart, position, intersect, distanceMetric) {\n    var minDistance = Number.POSITIVE_INFINITY;\n    var nearestItems = [];\n    parseVisibleItems(chart, function (element) {\n      if (intersect && !element.inRange(position.x, position.y)) {\n        return;\n      }\n\n      var center = element.getCenterPoint();\n      var distance = distanceMetric(position, center);\n\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n    });\n    return nearestItems;\n  }\n  /**\n   * Get a distance metric function for two points based on the\n   * axis mode setting\n   * @param {string} axis - the axis mode. x|y|xy\n   */\n\n\n  function getDistanceMetricForAxis(axis) {\n    var useX = axis.indexOf('x') !== -1;\n    var useY = axis.indexOf('y') !== -1;\n    return function (pt1, pt2) {\n      var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n      var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n  }\n\n  function indexMode(chart, e, options) {\n    var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n    options.axis = options.axis || 'x';\n    var distanceMetric = getDistanceMetricForAxis(options.axis);\n    var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n    var elements = [];\n\n    if (!items.length) {\n      return [];\n    }\n\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      if (chart.isDatasetVisible(datasetIndex)) {\n        var meta = chart.getDatasetMeta(datasetIndex);\n        var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n        if (element && !element._view.skip) {\n          elements.push(element);\n        }\n      }\n    });\n    return elements;\n  }\n  /**\n   * @interface IInteractionOptions\n   */\n\n  /**\n   * If true, only consider items that intersect the point\n   * @name IInterfaceOptions#boolean\n   * @type Boolean\n   */\n\n  /**\n   * Contains interaction related functions\n   * @namespace Chart.Interaction\n   */\n\n\n  var core_interaction = {\n    // Helper function for different modes\n    modes: {\n      single: function single(chart, e) {\n        var position = getRelativePosition(e, chart);\n        var elements = [];\n        parseVisibleItems(chart, function (element) {\n          if (element.inRange(position.x, position.y)) {\n            elements.push(element);\n            return elements;\n          }\n        });\n        return elements.slice(0, 1);\n      },\n\n      /**\n       * @function Chart.Interaction.modes.label\n       * @deprecated since version 2.4.0\n       * @todo remove at version 3\n       * @private\n       */\n      label: indexMode,\n\n      /**\n       * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n       * @function Chart.Interaction.modes.index\n       * @since v2.4.0\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      index: indexMode,\n\n      /**\n       * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect is false, we find the nearest item and return the items in that dataset\n       * @function Chart.Interaction.modes.dataset\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      dataset: function dataset(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n        if (items.length > 0) {\n          items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n        }\n\n        return items;\n      },\n\n      /**\n       * @function Chart.Interaction.modes.x-axis\n       * @deprecated since version 2.4.0. Use index mode and intersect == true\n       * @todo remove at version 3\n       * @private\n       */\n      'x-axis': function xAxis(chart, e) {\n        return indexMode(chart, e, {\n          intersect: false\n        });\n      },\n\n      /**\n       * Point mode returns all elements that hit test based on the event position\n       * of the event\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      point: function point(chart, e) {\n        var position = getRelativePosition(e, chart);\n        return getIntersectItems(chart, position);\n      },\n\n      /**\n       * nearest mode returns the element closest to the point\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      nearest: function nearest(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        return getNearestItems(chart, position, options.intersect, distanceMetric);\n      },\n\n      /**\n       * x mode returns the elements that hit-test at the current x coordinate\n       * @function Chart.Interaction.modes.x\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      x: function x(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inXRange(position.x)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      },\n\n      /**\n       * y mode returns the elements that hit-test at the current y coordinate\n       * @function Chart.Interaction.modes.y\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      y: function y(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inYRange(position.y)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      }\n    }\n  };\n\n  function filterByPosition(array, position) {\n    return helpers$1.where(array, function (v) {\n      return v.position === position;\n    });\n  }\n\n  function sortByWeight(array, reverse) {\n    array.forEach(function (v, i) {\n      v._tmpIndex_ = i;\n      return v;\n    });\n    array.sort(function (a, b) {\n      var v0 = reverse ? b : a;\n      var v1 = reverse ? a : b;\n      return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n    });\n    array.forEach(function (v) {\n      delete v._tmpIndex_;\n    });\n  }\n\n  function findMaxPadding(boxes) {\n    var top = 0;\n    var left = 0;\n    var bottom = 0;\n    var right = 0;\n    helpers$1.each(boxes, function (box) {\n      if (box.getPadding) {\n        var boxPadding = box.getPadding();\n        top = Math.max(top, boxPadding.top);\n        left = Math.max(left, boxPadding.left);\n        bottom = Math.max(bottom, boxPadding.bottom);\n        right = Math.max(right, boxPadding.right);\n      }\n    });\n    return {\n      top: top,\n      left: left,\n      bottom: bottom,\n      right: right\n    };\n  }\n\n  function addSizeByPosition(boxes, size) {\n    helpers$1.each(boxes, function (box) {\n      size[box.position] += box.isHorizontal() ? box.height : box.width;\n    });\n  }\n\n  core_defaults._set('global', {\n    layout: {\n      padding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    }\n  });\n  /**\n   * @interface ILayoutItem\n   * @prop {string} position - The position of the item in the chart layout. Possible values are\n   * 'left', 'top', 'right', 'bottom', and 'chartArea'\n   * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n   * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n   * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n   * @prop {function} update - Takes two parameters: width and height. Returns size of item\n   * @prop {function} getPadding -  Returns an object with padding on the edges\n   * @prop {number} width - Width of item. Must be valid after update()\n   * @prop {number} height - Height of item. Must be valid after update()\n   * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n   */\n  // The layout service is very self explanatory.  It's responsible for the layout within a chart.\n  // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n  // It is this service's responsibility of carrying out that layout.\n\n\n  var core_layouts = {\n    defaults: {},\n\n    /**\n     * Register a box to a chart.\n     * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n     * @param {Chart} chart - the chart to use\n     * @param {ILayoutItem} item - the item to add to be layed out\n     */\n    addBox: function addBox(chart, item) {\n      if (!chart.boxes) {\n        chart.boxes = [];\n      } // initialize item with default values\n\n\n      item.fullWidth = item.fullWidth || false;\n      item.position = item.position || 'top';\n      item.weight = item.weight || 0;\n      chart.boxes.push(item);\n    },\n\n    /**\n     * Remove a layoutItem from a chart\n     * @param {Chart} chart - the chart to remove the box from\n     * @param {ILayoutItem} layoutItem - the item to remove from the layout\n     */\n    removeBox: function removeBox(chart, layoutItem) {\n      var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n      if (index !== -1) {\n        chart.boxes.splice(index, 1);\n      }\n    },\n\n    /**\n     * Sets (or updates) options on the given `item`.\n     * @param {Chart} chart - the chart in which the item lives (or will be added to)\n     * @param {ILayoutItem} item - the item to configure with the given options\n     * @param {object} options - the new item options.\n     */\n    configure: function configure(chart, item, options) {\n      var props = ['fullWidth', 'position', 'weight'];\n      var ilen = props.length;\n      var i = 0;\n      var prop;\n\n      for (; i < ilen; ++i) {\n        prop = props[i];\n\n        if (options.hasOwnProperty(prop)) {\n          item[prop] = options[prop];\n        }\n      }\n    },\n\n    /**\n     * Fits boxes of the given chart into the given size by having each box measure itself\n     * then running a fitting algorithm\n     * @param {Chart} chart - the chart\n     * @param {number} width - the width to fit into\n     * @param {number} height - the height to fit into\n     */\n    update: function update(chart, width, height) {\n      if (!chart) {\n        return;\n      }\n\n      var layoutOptions = chart.options.layout || {};\n      var padding = helpers$1.options.toPadding(layoutOptions.padding);\n      var leftPadding = padding.left;\n      var rightPadding = padding.right;\n      var topPadding = padding.top;\n      var bottomPadding = padding.bottom;\n      var leftBoxes = filterByPosition(chart.boxes, 'left');\n      var rightBoxes = filterByPosition(chart.boxes, 'right');\n      var topBoxes = filterByPosition(chart.boxes, 'top');\n      var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n      var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n      sortByWeight(leftBoxes, true);\n      sortByWeight(rightBoxes, false);\n      sortByWeight(topBoxes, true);\n      sortByWeight(bottomBoxes, false);\n      var verticalBoxes = leftBoxes.concat(rightBoxes);\n      var horizontalBoxes = topBoxes.concat(bottomBoxes);\n      var outerBoxes = verticalBoxes.concat(horizontalBoxes); // Essentially we now have any number of boxes on each of the 4 sides.\n      // Our canvas looks like the following.\n      // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n      // B1 is the bottom axis\n      // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n      // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n      // an error will be thrown.\n      //\n      // |----------------------------------------------------|\n      // |                  T1 (Full Width)                   |\n      // |----------------------------------------------------|\n      // |    |    |                 T2                  |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    | C1 |                           | C2 |    |\n      // |    |    |----|                           |----|    |\n      // |    |    |                                     |    |\n      // | L1 | L2 |           ChartArea (C0)            | R1 |\n      // |    |    |                                     |    |\n      // |    |    |----|                           |----|    |\n      // |    |    | C3 |                           | C4 |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    |                 B1                  |    |\n      // |----------------------------------------------------|\n      // |                  B2 (Full Width)                   |\n      // |----------------------------------------------------|\n      //\n      // What we do to find the best sizing, we do the following\n      // 1. Determine the minimum size of the chart area.\n      // 2. Split the remaining width equally between each vertical axis\n      // 3. Split the remaining height equally between each horizontal axis\n      // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n      // 5. Adjust the sizes of each axis based on it's minimum reported size.\n      // 6. Refit each axis\n      // 7. Position each axis in the final location\n      // 8. Tell the chart the final location of the chart area\n      // 9. Tell any axes that overlay the chart area the positions of the chart area\n      // Step 1\n\n      var chartWidth = width - leftPadding - rightPadding;\n      var chartHeight = height - topPadding - bottomPadding;\n      var chartAreaWidth = chartWidth / 2; // min 50%\n      // Step 2\n\n      var verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length; // Step 3\n      // TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n      // var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n      // Step 4\n\n      var maxChartAreaWidth = chartWidth;\n      var maxChartAreaHeight = chartHeight;\n      var outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      var minBoxSizes = [];\n      var maxPadding;\n\n      function getMinimumBoxSize(box) {\n        var minSize;\n        var isHorizontal = box.isHorizontal();\n\n        if (isHorizontal) {\n          minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n          maxChartAreaHeight -= minSize.height;\n        } else {\n          minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n          maxChartAreaWidth -= minSize.width;\n        }\n\n        minBoxSizes.push({\n          horizontal: isHorizontal,\n          width: minSize.width,\n          box: box\n        });\n      }\n\n      helpers$1.each(outerBoxes, getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n      maxPadding = findMaxPadding(outerBoxes); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n      // be if the axes are drawn at their minimum sizes.\n      // Steps 5 & 6\n      // Function to fit a box\n\n      function fitBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minBox) {\n          return minBox.box === box;\n        });\n\n        if (minBoxSize) {\n          if (minBoxSize.horizontal) {\n            var scaleMargin = {\n              left: Math.max(outerBoxSizes.left, maxPadding.left),\n              right: Math.max(outerBoxSizes.right, maxPadding.right),\n              top: 0,\n              bottom: 0\n            }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n            // on the margin. Sometimes they need to increase in size slightly\n\n            box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n          } else {\n            box.update(minBoxSize.width, maxChartAreaHeight);\n          }\n        }\n      } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n      helpers$1.each(verticalBoxes, fitBox);\n      addSizeByPosition(verticalBoxes, outerBoxSizes); // Set the Left and Right margins for the horizontal boxes\n\n      helpers$1.each(horizontalBoxes, fitBox);\n      addSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n      function finalFitVerticalBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minSize) {\n          return minSize.box === box;\n        });\n        var scaleMargin = {\n          left: 0,\n          right: 0,\n          top: outerBoxSizes.top,\n          bottom: outerBoxSizes.bottom\n        };\n\n        if (minBoxSize) {\n          box.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n        }\n      } // Let the left layout know the final margin\n\n\n      helpers$1.each(verticalBoxes, finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n      outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      addSizeByPosition(outerBoxes, outerBoxSizes); // We may be adding some padding to account for rotated x axis labels\n\n      var leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n      outerBoxSizes.left += leftPaddingAddition;\n      outerBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n      var topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n      outerBoxSizes.top += topPaddingAddition;\n      outerBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n      // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n      // without calling `fit` again\n\n      var newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n      var newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n      if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n        helpers$1.each(verticalBoxes, function (box) {\n          box.height = newMaxChartAreaHeight;\n        });\n        helpers$1.each(horizontalBoxes, function (box) {\n          if (!box.fullWidth) {\n            box.width = newMaxChartAreaWidth;\n          }\n        });\n        maxChartAreaHeight = newMaxChartAreaHeight;\n        maxChartAreaWidth = newMaxChartAreaWidth;\n      } // Step 7 - Position the boxes\n\n\n      var left = leftPadding + leftPaddingAddition;\n      var top = topPadding + topPaddingAddition;\n\n      function placeBox(box) {\n        if (box.isHorizontal()) {\n          box.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n          box.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n          box.top = top;\n          box.bottom = top + box.height; // Move to next point\n\n          top = box.bottom;\n        } else {\n          box.left = left;\n          box.right = left + box.width;\n          box.top = outerBoxSizes.top;\n          box.bottom = outerBoxSizes.top + maxChartAreaHeight; // Move to next point\n\n          left = box.right;\n        }\n      }\n\n      helpers$1.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n      left += maxChartAreaWidth;\n      top += maxChartAreaHeight;\n      helpers$1.each(rightBoxes, placeBox);\n      helpers$1.each(bottomBoxes, placeBox); // Step 8\n\n      chart.chartArea = {\n        left: outerBoxSizes.left,\n        top: outerBoxSizes.top,\n        right: outerBoxSizes.left + maxChartAreaWidth,\n        bottom: outerBoxSizes.top + maxChartAreaHeight\n      }; // Step 9\n\n      helpers$1.each(chartAreaBoxes, function (box) {\n        box.left = chart.chartArea.left;\n        box.top = chart.chartArea.top;\n        box.right = chart.chartArea.right;\n        box.bottom = chart.chartArea.bottom;\n        box.update(maxChartAreaWidth, maxChartAreaHeight);\n      });\n    }\n  };\n  /**\n   * Platform fallback implementation (minimal).\n   * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n   */\n\n  var platform_basic = {\n    acquireContext: function acquireContext(item) {\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      }\n\n      return item && item.getContext('2d') || null;\n    }\n  };\n  var platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n  var platform_dom$1 =\n  /*#__PURE__*/\n  Object.freeze({\n    default: platform_dom\n  });\n\n  function getCjsExportFromNamespace(n) {\n    return n && n.default || n;\n  }\n\n  var stylesheet = getCjsExportFromNamespace(platform_dom$1);\n  var EXPANDO_KEY = '$chartjs';\n  var CSS_PREFIX = 'chartjs-';\n  var CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\n  var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\n  var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\n  var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n  /**\n   * DOM event types -> Chart.js event types.\n   * Note: only events with different types are mapped.\n   * @see https://developer.mozilla.org/en-US/docs/Web/Events\n   */\n\n  var EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n  };\n  /**\n   * The \"used\" size is the final value of a dimension property after all calculations have\n   * been performed. This method uses the computed style of `element` but returns undefined\n   * if the computed style is not expressed in pixels. That can happen in some cases where\n   * `element` has a size relative to its parent and this last one is not yet displayed,\n   * for example because of `display: none` on a parent node.\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n   * @returns {number} Size in pixels or undefined if unknown.\n   */\n\n  function readUsedSize(element, property) {\n    var value = helpers$1.getStyle(element, property);\n    var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? Number(matches[1]) : undefined;\n  }\n  /**\n   * Initializes the canvas style and render size without modifying the canvas display size,\n   * since responsiveness is handled by the controller.resize() method. The config is used\n   * to determine the aspect ratio to apply in case no explicit height has been specified.\n   */\n\n\n  function initCanvas(canvas, config) {\n    var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n    // returns null or '' if no explicit value has been set to the canvas attribute.\n\n    var renderHeight = canvas.getAttribute('height');\n    var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n    canvas[EXPANDO_KEY] = {\n      initial: {\n        height: renderHeight,\n        width: renderWidth,\n        style: {\n          display: style.display,\n          height: style.height,\n          width: style.width\n        }\n      }\n    }; // Force canvas to display as block to avoid extra space caused by inline\n    // elements, which would interfere with the responsive resize process.\n    // https://github.com/chartjs/Chart.js/issues/2538\n\n    style.display = style.display || 'block';\n\n    if (renderWidth === null || renderWidth === '') {\n      var displayWidth = readUsedSize(canvas, 'width');\n\n      if (displayWidth !== undefined) {\n        canvas.width = displayWidth;\n      }\n    }\n\n    if (renderHeight === null || renderHeight === '') {\n      if (canvas.style.height === '') {\n        // If no explicit render height and style height, let's apply the aspect ratio,\n        // which one can be specified by the user but also by charts as default option\n        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n        canvas.height = canvas.width / (config.options.aspectRatio || 2);\n      } else {\n        var displayHeight = readUsedSize(canvas, 'height');\n\n        if (displayWidth !== undefined) {\n          canvas.height = displayHeight;\n        }\n      }\n    }\n\n    return canvas;\n  }\n  /**\n   * Detects support for options object argument in addEventListener.\n   * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n   * @private\n   */\n\n\n  var supportsEventListenerOptions = function () {\n    var supports = false;\n\n    try {\n      var options = Object.defineProperty({}, 'passive', {\n        // eslint-disable-next-line getter-return\n        get: function get() {\n          supports = true;\n        }\n      });\n      window.addEventListener('e', null, options);\n    } catch (e) {// continue regardless of error\n    }\n\n    return supports;\n  }(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n  // https://github.com/chartjs/Chart.js/issues/4287\n\n\n  var eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n  } : false;\n\n  function addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n\n  function removeListener(node, type, listener) {\n    node.removeEventListener(type, listener, eventListenerOptions);\n  }\n\n  function createEvent(type, chart, x, y, nativeEvent) {\n    return {\n      type: type,\n      chart: chart,\n      native: nativeEvent || null,\n      x: x !== undefined ? x : null,\n      y: y !== undefined ? y : null\n    };\n  }\n\n  function fromNativeEvent(event, chart) {\n    var type = EVENT_TYPES[event.type] || event.type;\n    var pos = helpers$1.getRelativePosition(event, chart);\n    return createEvent(type, chart, pos.x, pos.y, event);\n  }\n\n  function throttled(fn, thisArg) {\n    var ticking = false;\n    var args = [];\n    return function () {\n      args = Array.prototype.slice.call(arguments);\n      thisArg = thisArg || this;\n\n      if (!ticking) {\n        ticking = true;\n        helpers$1.requestAnimFrame.call(window, function () {\n          ticking = false;\n          fn.apply(thisArg, args);\n        });\n      }\n    };\n  }\n\n  function createDiv(cls) {\n    var el = document.createElement('div');\n    el.className = cls || '';\n    return el;\n  } // Implementation based on https://github.com/marcj/css-element-queries\n\n\n  function createResizer(handler) {\n    var maxSize = 1000000; // NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n    // https://github.com/chartjs/Chart.js/issues/5902\n\n    var resizer = createDiv(CSS_SIZE_MONITOR);\n    var expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n    var shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n    expand.appendChild(createDiv());\n    shrink.appendChild(createDiv());\n    resizer.appendChild(expand);\n    resizer.appendChild(shrink);\n\n    resizer._reset = function () {\n      expand.scrollLeft = maxSize;\n      expand.scrollTop = maxSize;\n      shrink.scrollLeft = maxSize;\n      shrink.scrollTop = maxSize;\n    };\n\n    var onScroll = function onScroll() {\n      resizer._reset();\n\n      handler();\n    };\n\n    addListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n    addListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n    return resizer;\n  } // https://davidwalsh.name/detect-node-insertion\n\n\n  function watchForRender(node, handler) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n    var proxy = expando.renderProxy = function (e) {\n      if (e.animationName === CSS_RENDER_ANIMATION) {\n        handler();\n      }\n    };\n\n    helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n      addListener(node, type, proxy);\n    }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n    // is removed then added back immediately (same animation frame?). Accessing the\n    // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n    // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n    // https://github.com/chartjs/Chart.js/issues/4737\n\n    expando.reflow = !!node.offsetParent;\n    node.classList.add(CSS_RENDER_MONITOR);\n  }\n\n  function unwatchForRender(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var proxy = expando.renderProxy;\n\n    if (proxy) {\n      helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n        removeListener(node, type, proxy);\n      });\n      delete expando.renderProxy;\n    }\n\n    node.classList.remove(CSS_RENDER_MONITOR);\n  }\n\n  function addResizeListener(node, listener, chart) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n    var resizer = expando.resizer = createResizer(throttled(function () {\n      if (expando.resizer) {\n        var container = chart.options.maintainAspectRatio && node.parentNode;\n        var w = container ? container.clientWidth : 0;\n        listener(createEvent('resize', chart));\n\n        if (container && container.clientWidth < w && chart.canvas) {\n          // If the container size shrank during chart resize, let's assume\n          // scrollbar appeared. So we resize again with the scrollbar visible -\n          // effectively making chart smaller and the scrollbar hidden again.\n          // Because we are inside `throttled`, and currently `ticking`, scroll\n          // events are ignored during this whole 2 resize process.\n          // If we assumed wrong and something else happened, we are resizing\n          // twice in a frame (potential performance issue)\n          listener(createEvent('resize', chart));\n        }\n      }\n    })); // The resizer needs to be attached to the node parent, so we first need to be\n    // sure that `node` is attached to the DOM before injecting the resizer element.\n\n    watchForRender(node, function () {\n      if (expando.resizer) {\n        var container = node.parentNode;\n\n        if (container && container !== resizer.parentNode) {\n          container.insertBefore(resizer, container.firstChild);\n        } // The container size might have changed, let's reset the resizer state.\n\n\n        resizer._reset();\n      }\n    });\n  }\n\n  function removeResizeListener(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var resizer = expando.resizer;\n    delete expando.resizer;\n    unwatchForRender(node);\n\n    if (resizer && resizer.parentNode) {\n      resizer.parentNode.removeChild(resizer);\n    }\n  }\n\n  function injectCSS(platform, css) {\n    // https://stackoverflow.com/q/3922139\n    var style = platform._style || document.createElement('style');\n\n    if (!platform._style) {\n      platform._style = style;\n      css = '/* Chart.js */\\n' + css;\n      style.setAttribute('type', 'text/css');\n      document.getElementsByTagName('head')[0].appendChild(style);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n\n  var platform_dom$2 = {\n    /**\n     * When `true`, prevents the automatic injection of the stylesheet required to\n     * correctly detect when the chart is added to the DOM and then resized. This\n     * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n     * to be manually imported to make this library compatible with any CSP.\n     * See https://github.com/chartjs/Chart.js/issues/5208\n     */\n    disableCSSInjection: false,\n\n    /**\n     * This property holds whether this platform is enabled for the current environment.\n     * Currently used by platform.js to select the proper implementation.\n     * @private\n     */\n    _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n    /**\n     * @private\n     */\n    _ensureLoaded: function _ensureLoaded() {\n      if (this._loaded) {\n        return;\n      }\n\n      this._loaded = true; // https://github.com/chartjs/Chart.js/issues/5208\n\n      if (!this.disableCSSInjection) {\n        injectCSS(this, stylesheet);\n      }\n    },\n    acquireContext: function acquireContext(item, config) {\n      if (typeof item === 'string') {\n        item = document.getElementById(item);\n      } else if (item.length) {\n        // Support for array based queries (such as jQuery)\n        item = item[0];\n      }\n\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n      // method, for example: https://github.com/kkapsner/CanvasBlocker\n      // https://github.com/chartjs/Chart.js/issues/2807\n\n\n      var context = item && item.getContext && item.getContext('2d'); // Load platform resources on first chart creation, to make possible to change\n      // platform options after importing the library (e.g. `disableCSSInjection`).\n\n      this._ensureLoaded(); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n      // inside an iframe or when running in a protected environment. We could guess the\n      // types from their toString() value but let's keep things flexible and assume it's\n      // a sufficient condition if the item has a context2D which has item as `canvas`.\n      // https://github.com/chartjs/Chart.js/issues/3887\n      // https://github.com/chartjs/Chart.js/issues/4102\n      // https://github.com/chartjs/Chart.js/issues/4152\n\n\n      if (context && context.canvas === item) {\n        initCanvas(item, config);\n        return context;\n      }\n\n      return null;\n    },\n    releaseContext: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (helpers$1.isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      helpers$1.each(initial.style || {}, function (value, key) {\n        canvas.style[key] = value;\n      }); // The canvas render size might have been changed (and thus the state stack discarded),\n      // we can't use save() and restore() to restore the initial state. So make sure that at\n      // least the canvas context is reset to the default state by setting the canvas width.\n      // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n      // eslint-disable-next-line no-self-assign\n\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n    },\n    addEventListener: function addEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        addResizeListener(canvas, listener, chart);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n      var proxies = expando.proxies || (expando.proxies = {});\n\n      var proxy = proxies[chart.id + '_' + type] = function (event) {\n        listener(fromNativeEvent(event, chart));\n      };\n\n      addListener(canvas, type, proxy);\n    },\n    removeEventListener: function removeEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        removeResizeListener(canvas);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || {};\n      var proxies = expando.proxies || {};\n      var proxy = proxies[chart.id + '_' + type];\n\n      if (!proxy) {\n        return;\n      }\n\n      removeListener(canvas, type, proxy);\n    }\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use EventTarget.addEventListener instead.\n   * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   * @function Chart.helpers.addEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.addEvent = addListener;\n  /**\n   * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n   * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n   * @function Chart.helpers.removeEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.removeEvent = removeListener; // @TODO Make possible to select another platform at build time.\n\n  var implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n  /**\n   * @namespace Chart.platform\n   * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n   * @since 2.4.0\n   */\n\n  var platform = helpers$1.extend({\n    /**\n     * @since 2.7.0\n     */\n    initialize: function initialize() {},\n\n    /**\n     * Called at chart construction time, returns a context2d instance implementing\n     * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n     * @param {*} item - The native item from which to acquire context (platform specific)\n     * @param {object} options - The chart options\n     * @returns {CanvasRenderingContext2D} context2d instance\n     */\n    acquireContext: function acquireContext() {},\n\n    /**\n     * Called at chart destruction time, releases any resources associated to the context\n     * previously returned by the acquireContext() method.\n     * @param {CanvasRenderingContext2D} context - The context2d instance\n     * @returns {boolean} true if the method succeeded, else false\n     */\n    releaseContext: function releaseContext() {},\n\n    /**\n     * Registers the specified listener on the given chart.\n     * @param {Chart} chart - Chart from which to listen for event\n     * @param {string} type - The ({@link IEvent}) type to listen for\n     * @param {function} listener - Receives a notification (an object that implements\n     * the {@link IEvent} interface) when an event of the specified type occurs.\n     */\n    addEventListener: function addEventListener() {},\n\n    /**\n     * Removes the specified listener previously registered with addEventListener.\n     * @param {Chart} chart - Chart from which to remove the listener\n     * @param {string} type - The ({@link IEvent}) type to remove\n     * @param {function} listener - The listener function to remove from the event target.\n     */\n    removeEventListener: function removeEventListener() {}\n  }, implementation);\n\n  core_defaults._set('global', {\n    plugins: {}\n  });\n  /**\n   * The plugin service singleton\n   * @namespace Chart.plugins\n   * @since 2.1.0\n   */\n\n\n  var core_plugins = {\n    /**\n     * Globally registered plugins.\n     * @private\n     */\n    _plugins: [],\n\n    /**\n     * This identifier is used to invalidate the descriptors cache attached to each chart\n     * when a global plugin is registered or unregistered. In this case, the cache ID is\n     * incremented and descriptors are regenerated during following API calls.\n     * @private\n     */\n    _cacheId: 0,\n\n    /**\n     * Registers the given plugin(s) if not already registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    register: function register(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        if (p.indexOf(plugin) === -1) {\n          p.push(plugin);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Unregisters the given plugin(s) only if registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    unregister: function unregister(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        var idx = p.indexOf(plugin);\n\n        if (idx !== -1) {\n          p.splice(idx, 1);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Remove all registered plugins.\n     * @since 2.1.5\n     */\n    clear: function clear() {\n      this._plugins = [];\n      this._cacheId++;\n    },\n\n    /**\n     * Returns the number of registered plugins?\n     * @returns {number}\n     * @since 2.1.5\n     */\n    count: function count() {\n      return this._plugins.length;\n    },\n\n    /**\n     * Returns all registered plugin instances.\n     * @returns {IPlugin[]} array of plugin objects.\n     * @since 2.1.5\n     */\n    getAll: function getAll() {\n      return this._plugins;\n    },\n\n    /**\n     * Calls enabled plugins for `chart` on the specified hook and with the given args.\n     * This method immediately returns as soon as a plugin explicitly returns false. The\n     * returned value can be used, for instance, to interrupt the current action.\n     * @param {Chart} chart - The chart instance for which plugins should be called.\n     * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n     * @param {Array} [args] - Extra arguments to apply to the hook call.\n     * @returns {boolean} false if any of the plugins return false, else returns true.\n     */\n    notify: function notify(chart, hook, args) {\n      var descriptors = this.descriptors(chart);\n      var ilen = descriptors.length;\n      var i, descriptor, plugin, params, method;\n\n      for (i = 0; i < ilen; ++i) {\n        descriptor = descriptors[i];\n        plugin = descriptor.plugin;\n        method = plugin[hook];\n\n        if (typeof method === 'function') {\n          params = [chart].concat(args || []);\n          params.push(descriptor.options);\n\n          if (method.apply(plugin, params) === false) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns descriptors of enabled plugins for the given chart.\n     * @returns {object[]} [{ plugin, options }]\n     * @private\n     */\n    descriptors: function descriptors(chart) {\n      var cache = chart.$plugins || (chart.$plugins = {});\n\n      if (cache.id === this._cacheId) {\n        return cache.descriptors;\n      }\n\n      var plugins = [];\n      var descriptors = [];\n      var config = chart && chart.config || {};\n      var options = config.options && config.options.plugins || {};\n\n      this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n        var idx = plugins.indexOf(plugin);\n\n        if (idx !== -1) {\n          return;\n        }\n\n        var id = plugin.id;\n        var opts = options[id];\n\n        if (opts === false) {\n          return;\n        }\n\n        if (opts === true) {\n          opts = helpers$1.clone(core_defaults.global.plugins[id]);\n        }\n\n        plugins.push(plugin);\n        descriptors.push({\n          plugin: plugin,\n          options: opts || {}\n        });\n      });\n\n      cache.descriptors = descriptors;\n      cache.id = this._cacheId;\n      return descriptors;\n    },\n\n    /**\n     * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n     * but in some cases, this reference can be changed by the user when updating options.\n     * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n     * @private\n     */\n    _invalidate: function _invalidate(chart) {\n      delete chart.$plugins;\n    }\n  };\n  var core_scaleService = {\n    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n    // use the new chart options to grab the correct scale\n    constructors: {},\n    // Use a registration function so that we can move to an ES6 map when we no longer need to support\n    // old browsers\n    // Scale config defaults\n    defaults: {},\n    registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n      this.constructors[type] = scaleConstructor;\n      this.defaults[type] = helpers$1.clone(scaleDefaults);\n    },\n    getScaleConstructor: function getScaleConstructor(type) {\n      return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n    },\n    getScaleDefaults: function getScaleDefaults(type) {\n      // Return the scale defaults merged with the global settings so that we always use the latest ones\n      return this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n    },\n    updateScaleDefaults: function updateScaleDefaults(type, additions) {\n      var me = this;\n\n      if (me.defaults.hasOwnProperty(type)) {\n        me.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n      }\n    },\n    addScalesToLayout: function addScalesToLayout(chart) {\n      // Adds each scale to the chart.boxes array to be sized accordingly\n      helpers$1.each(chart.scales, function (scale) {\n        // Set ILayoutItem parameters for backwards compatibility\n        scale.fullWidth = scale.options.fullWidth;\n        scale.position = scale.options.position;\n        scale.weight = scale.options.weight;\n        core_layouts.addBox(chart, scale);\n      });\n    }\n  };\n  var valueOrDefault$7 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    tooltips: {\n      enabled: true,\n      custom: null,\n      mode: 'nearest',\n      position: 'average',\n      intersect: true,\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      titleFontStyle: 'bold',\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleFontColor: '#fff',\n      titleAlign: 'left',\n      bodySpacing: 2,\n      bodyFontColor: '#fff',\n      bodyAlign: 'left',\n      footerFontStyle: 'bold',\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFontColor: '#fff',\n      footerAlign: 'left',\n      yPadding: 6,\n      xPadding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      multiKeyBackground: '#fff',\n      displayColors: true,\n      borderColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      callbacks: {\n        // Args are: (tooltipItems, data)\n        beforeTitle: helpers$1.noop,\n        title: function title(tooltipItems, data) {\n          var title = '';\n          var labels = data.labels;\n          var labelCount = labels ? labels.length : 0;\n\n          if (tooltipItems.length > 0) {\n            var item = tooltipItems[0];\n\n            if (item.label) {\n              title = item.label;\n            } else if (item.xLabel) {\n              title = item.xLabel;\n            } else if (labelCount > 0 && item.index < labelCount) {\n              title = labels[item.index];\n            }\n          }\n\n          return title;\n        },\n        afterTitle: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeBody: helpers$1.noop,\n        // Args are: (tooltipItem, data)\n        beforeLabel: helpers$1.noop,\n        label: function label(tooltipItem, data) {\n          var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n          if (label) {\n            label += ': ';\n          }\n\n          if (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n            label += tooltipItem.value;\n          } else {\n            label += tooltipItem.yLabel;\n          }\n\n          return label;\n        },\n        labelColor: function labelColor(tooltipItem, chart) {\n          var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n          var activeElement = meta.data[tooltipItem.index];\n          var view = activeElement._view;\n          return {\n            borderColor: view.borderColor,\n            backgroundColor: view.backgroundColor\n          };\n        },\n        labelTextColor: function labelTextColor() {\n          return this._options.bodyFontColor;\n        },\n        afterLabel: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        afterBody: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeFooter: helpers$1.noop,\n        footer: helpers$1.noop,\n        afterFooter: helpers$1.noop\n      }\n    }\n  });\n\n  var positioners = {\n    /**\n     * Average mode places the tooltip at the average position of the elements shown\n     * @function Chart.Tooltip.positioners.average\n     * @param elements {ChartElement[]} the elements being displayed in the tooltip\n     * @returns {object} tooltip position\n     */\n    average: function average(elements) {\n      if (!elements.length) {\n        return false;\n      }\n\n      var i, len;\n      var x = 0;\n      var y = 0;\n      var count = 0;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n\n      return {\n        x: x / count,\n        y: y / count\n      };\n    },\n\n    /**\n     * Gets the tooltip position nearest of the item nearest to the event position\n     * @function Chart.Tooltip.positioners.nearest\n     * @param elements {Chart.Element[]} the tooltip elements\n     * @param eventPosition {object} the position of the event in canvas coordinates\n     * @returns {object} the tooltip position\n     */\n    nearest: function nearest(elements, eventPosition) {\n      var x = eventPosition.x;\n      var y = eventPosition.y;\n      var minDistance = Number.POSITIVE_INFINITY;\n      var i, len, nearestElement;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var center = el.getCenterPoint();\n          var d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n\n      if (nearestElement) {\n        var tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }; // Helper to push or concat based on if the 2nd parameter is an array or not\n\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (helpers$1.isArray(toPush)) {\n        // base = base.concat(toPush);\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n\n    return base;\n  }\n  /**\n   * Returns array of strings split by newline\n   * @param {string} value - The value to split by newline.\n   * @returns {string[]} value if newline present - Returned from String split() method\n   * @function\n   */\n\n\n  function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n      return str.split('\\n');\n    }\n\n    return str;\n  }\n  /**\n   * Private helper to create a tooltip item model\n   * @param element - the chart element (point, arc, bar) to create the tooltip item for\n   * @return new tooltip item\n   */\n\n\n  function createTooltipItem(element) {\n    var xScale = element._xScale;\n    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n    var index = element._index;\n    var datasetIndex = element._datasetIndex;\n\n    var controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\n    var indexScale = controller._getIndexScale();\n\n    var valueScale = controller._getValueScale();\n\n    return {\n      xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n      yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n      label: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n      value: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n      index: index,\n      datasetIndex: datasetIndex,\n      x: element._model.x,\n      y: element._model.y\n    };\n  }\n  /**\n   * Helper to get the reset model for the tooltip\n   * @param tooltipOpts {object} the tooltip options\n   */\n\n\n  function getBaseModel(tooltipOpts) {\n    var globalDefaults = core_defaults.global;\n    return {\n      // Positioning\n      xPadding: tooltipOpts.xPadding,\n      yPadding: tooltipOpts.yPadding,\n      xAlign: tooltipOpts.xAlign,\n      yAlign: tooltipOpts.yAlign,\n      // Body\n      bodyFontColor: tooltipOpts.bodyFontColor,\n      _bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n      _bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n      _bodyAlign: tooltipOpts.bodyAlign,\n      bodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n      bodySpacing: tooltipOpts.bodySpacing,\n      // Title\n      titleFontColor: tooltipOpts.titleFontColor,\n      _titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n      _titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n      titleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n      _titleAlign: tooltipOpts.titleAlign,\n      titleSpacing: tooltipOpts.titleSpacing,\n      titleMarginBottom: tooltipOpts.titleMarginBottom,\n      // Footer\n      footerFontColor: tooltipOpts.footerFontColor,\n      _footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n      _footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n      footerFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n      _footerAlign: tooltipOpts.footerAlign,\n      footerSpacing: tooltipOpts.footerSpacing,\n      footerMarginTop: tooltipOpts.footerMarginTop,\n      // Appearance\n      caretSize: tooltipOpts.caretSize,\n      cornerRadius: tooltipOpts.cornerRadius,\n      backgroundColor: tooltipOpts.backgroundColor,\n      opacity: 0,\n      legendColorBackground: tooltipOpts.multiKeyBackground,\n      displayColors: tooltipOpts.displayColors,\n      borderColor: tooltipOpts.borderColor,\n      borderWidth: tooltipOpts.borderWidth\n    };\n  }\n  /**\n   * Get the size of the tooltip\n   */\n\n\n  function getTooltipSize(tooltip, model) {\n    var ctx = tooltip._chart.ctx;\n    var height = model.yPadding * 2; // Tooltip Padding\n\n    var width = 0; // Count of all lines in the body\n\n    var body = model.body;\n    var combinedBodyLength = body.reduce(function (count, bodyItem) {\n      return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n    }, 0);\n    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n    var titleLineCount = model.title.length;\n    var footerLineCount = model.footer.length;\n    var titleFontSize = model.titleFontSize;\n    var bodyFontSize = model.bodyFontSize;\n    var footerFontSize = model.footerFontSize;\n    height += titleLineCount * titleFontSize; // Title Lines\n\n    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n    height += combinedBodyLength * bodyFontSize; // Body Lines\n\n    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n    height += footerLineCount * footerFontSize; // Footer Lines\n\n    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n    // Title width\n\n    var widthPadding = 0;\n\n    var maxLineWidth = function maxLineWidth(line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n\n    ctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n    helpers$1.each(model.title, maxLineWidth); // Body width\n\n    ctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n    helpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n    widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n    helpers$1.each(body, function (bodyItem) {\n      helpers$1.each(bodyItem.before, maxLineWidth);\n      helpers$1.each(bodyItem.lines, maxLineWidth);\n      helpers$1.each(bodyItem.after, maxLineWidth);\n    }); // Reset back to 0\n\n    widthPadding = 0; // Footer width\n\n    ctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n    helpers$1.each(model.footer, maxLineWidth); // Add padding\n\n    width += 2 * model.xPadding;\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Helper to get the alignment of a tooltip given the size\n   */\n\n\n  function determineAlignment(tooltip, size) {\n    var model = tooltip._model;\n    var chart = tooltip._chart;\n    var chartArea = tooltip._chart.chartArea;\n    var xAlign = 'center';\n    var yAlign = 'center';\n\n    if (model.y < size.height) {\n      yAlign = 'top';\n    } else if (model.y > chart.height - size.height) {\n      yAlign = 'bottom';\n    }\n\n    var lf, rf; // functions to determine left, right alignment\n\n    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n    var midX = (chartArea.left + chartArea.right) / 2;\n    var midY = (chartArea.top + chartArea.bottom) / 2;\n\n    if (yAlign === 'center') {\n      lf = function lf(x) {\n        return x <= midX;\n      };\n\n      rf = function rf(x) {\n        return x > midX;\n      };\n    } else {\n      lf = function lf(x) {\n        return x <= size.width / 2;\n      };\n\n      rf = function rf(x) {\n        return x >= chart.width - size.width / 2;\n      };\n    }\n\n    olf = function olf(x) {\n      return x + size.width + model.caretSize + model.caretPadding > chart.width;\n    };\n\n    orf = function orf(x) {\n      return x - size.width - model.caretSize - model.caretPadding < 0;\n    };\n\n    yf = function yf(y) {\n      return y <= midY ? 'top' : 'bottom';\n    };\n\n    if (lf(model.x)) {\n      xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n      if (olf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    } else if (rf(model.x)) {\n      xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n      if (orf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    }\n\n    var opts = tooltip._options;\n    return {\n      xAlign: opts.xAlign ? opts.xAlign : xAlign,\n      yAlign: opts.yAlign ? opts.yAlign : yAlign\n    };\n  }\n  /**\n   * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n   */\n\n\n  function getBackgroundPoint(vm, size, alignment, chart) {\n    // Background Position\n    var x = vm.x;\n    var y = vm.y;\n    var caretSize = vm.caretSize;\n    var caretPadding = vm.caretPadding;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = alignment.xAlign;\n    var yAlign = alignment.yAlign;\n    var paddingAndSize = caretSize + caretPadding;\n    var radiusAndPadding = cornerRadius + caretPadding;\n\n    if (xAlign === 'right') {\n      x -= size.width;\n    } else if (xAlign === 'center') {\n      x -= size.width / 2;\n\n      if (x + size.width > chart.width) {\n        x = chart.width - size.width;\n      }\n\n      if (x < 0) {\n        x = 0;\n      }\n    }\n\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= size.height + paddingAndSize;\n    } else {\n      y -= size.height / 2;\n    }\n\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= radiusAndPadding;\n    } else if (xAlign === 'right') {\n      x += radiusAndPadding;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  function getAlignedX(vm, align) {\n    return align === 'center' ? vm.x + vm.width / 2 : align === 'right' ? vm.x + vm.width - vm.xPadding : vm.x + vm.xPadding;\n  }\n  /**\n   * Helper to build before and after body lines\n   */\n\n\n  function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n  }\n\n  var exports$3 = core_element.extend({\n    initialize: function initialize() {\n      this._model = getBaseModel(this._options);\n      this._lastActive = [];\n    },\n    // Get the title\n    // Args are: (tooltipItem, data)\n    getTitle: function getTitle() {\n      var me = this;\n      var opts = me._options;\n      var callbacks = opts.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n      var title = callbacks.title.apply(me, arguments);\n      var afterTitle = callbacks.afterTitle.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    },\n    // Args are: (tooltipItem, data)\n    getBeforeBody: function getBeforeBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n    },\n    // Args are: (tooltipItem, data)\n    getBody: function getBody(tooltipItems, data) {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var bodyItems = [];\n      helpers$1.each(tooltipItems, function (tooltipItem) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n        pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n        pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    },\n    // Args are: (tooltipItem, data)\n    getAfterBody: function getAfterBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n    },\n    // Get the footer and beforeFooter and afterFooter lines\n    // Args are: (tooltipItem, data)\n    getFooter: function getFooter() {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n      var footer = callbacks.footer.apply(me, arguments);\n      var afterFooter = callbacks.afterFooter.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    },\n    update: function update(changed) {\n      var me = this;\n      var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n      // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n      // which breaks any animations.\n\n      var existingModel = me._model;\n      var model = me._model = getBaseModel(opts);\n      var active = me._active;\n      var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n      var alignment = {\n        xAlign: existingModel.xAlign,\n        yAlign: existingModel.yAlign\n      };\n      var backgroundPoint = {\n        x: existingModel.x,\n        y: existingModel.y\n      };\n      var tooltipSize = {\n        width: existingModel.width,\n        height: existingModel.height\n      };\n      var tooltipPosition = {\n        x: existingModel.caretX,\n        y: existingModel.caretY\n      };\n      var i, len;\n\n      if (active.length) {\n        model.opacity = 1;\n        var labelColors = [];\n        var labelTextColors = [];\n        tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n        var tooltipItems = [];\n\n        for (i = 0, len = active.length; i < len; ++i) {\n          tooltipItems.push(createTooltipItem(active[i]));\n        } // If the user provided a filter function, use it to modify the tooltip items\n\n\n        if (opts.filter) {\n          tooltipItems = tooltipItems.filter(function (a) {\n            return opts.filter(a, data);\n          });\n        } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n        if (opts.itemSort) {\n          tooltipItems = tooltipItems.sort(function (a, b) {\n            return opts.itemSort(a, b, data);\n          });\n        } // Determine colors for boxes\n\n\n        helpers$1.each(tooltipItems, function (tooltipItem) {\n          labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n          labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n        }); // Build the Text Lines\n\n        model.title = me.getTitle(tooltipItems, data);\n        model.beforeBody = me.getBeforeBody(tooltipItems, data);\n        model.body = me.getBody(tooltipItems, data);\n        model.afterBody = me.getAfterBody(tooltipItems, data);\n        model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n        model.x = tooltipPosition.x;\n        model.y = tooltipPosition.y;\n        model.caretPadding = opts.caretPadding;\n        model.labelColors = labelColors;\n        model.labelTextColors = labelTextColors; // data points\n\n        model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n        tooltipSize = getTooltipSize(this, model);\n        alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n        backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n      } else {\n        model.opacity = 0;\n      }\n\n      model.xAlign = alignment.xAlign;\n      model.yAlign = alignment.yAlign;\n      model.x = backgroundPoint.x;\n      model.y = backgroundPoint.y;\n      model.width = tooltipSize.width;\n      model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n      model.caretX = tooltipPosition.x;\n      model.caretY = tooltipPosition.y;\n      me._model = model;\n\n      if (changed && opts.custom) {\n        opts.custom.call(me, model);\n      }\n\n      return me;\n    },\n    drawCaret: function drawCaret(tooltipPoint, size) {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    },\n    getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n      var x1, x2, x3, y1, y2, y3;\n      var caretSize = vm.caretSize;\n      var cornerRadius = vm.cornerRadius;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var ptX = tooltipPoint.x;\n      var ptY = tooltipPoint.y;\n      var width = size.width;\n      var height = size.height;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          x3 = x1;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          x3 = x1;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          x2 = vm.caretX;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          y3 = y1;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          y3 = y1; // invert drawing order\n\n          var tmp = x3;\n          x3 = x1;\n          x1 = tmp;\n        }\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    },\n    drawTitle: function drawTitle(pt, vm, ctx) {\n      var title = vm.title;\n\n      if (title.length) {\n        pt.x = getAlignedX(vm, vm._titleAlign);\n        ctx.textAlign = vm._titleAlign;\n        ctx.textBaseline = 'top';\n        var titleFontSize = vm.titleFontSize;\n        var titleSpacing = vm.titleSpacing;\n        ctx.fillStyle = vm.titleFontColor;\n        ctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n        var i, len;\n\n        for (i = 0, len = title.length; i < len; ++i) {\n          ctx.fillText(title[i], pt.x, pt.y);\n          pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n          if (i + 1 === title.length) {\n            pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n          }\n        }\n      }\n    },\n    drawBody: function drawBody(pt, vm, ctx) {\n      var bodyFontSize = vm.bodyFontSize;\n      var bodySpacing = vm.bodySpacing;\n      var bodyAlign = vm._bodyAlign;\n      var body = vm.body;\n      var drawColorBoxes = vm.displayColors;\n      var labelColors = vm.labelColors;\n      var xLinePadding = 0;\n      var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n      var textColor;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'top';\n      ctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n      pt.x = getAlignedX(vm, bodyAlign); // Before Body\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, pt.x + xLinePadding, pt.y);\n        pt.y += bodyFontSize + bodySpacing;\n      }; // Before body lines\n\n\n      ctx.fillStyle = vm.bodyFontColor;\n      helpers$1.each(vm.beforeBody, fillLineOfText);\n      xLinePadding = drawColorBoxes && bodyAlign !== 'right' ? bodyAlign === 'center' ? bodyFontSize / 2 + 1 : bodyFontSize + 2 : 0; // Draw body lines now\n\n      helpers$1.each(body, function (bodyItem, i) {\n        textColor = vm.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        helpers$1.each(bodyItem.before, fillLineOfText);\n        helpers$1.each(bodyItem.lines, function (line) {\n          // Draw Legend-like boxes if needed\n          if (drawColorBoxes) {\n            // Fill a white rect so that colours merge nicely if the opacity is < 1\n            ctx.fillStyle = vm.legendColorBackground;\n            ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Border\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = labelColors[i].borderColor;\n            ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n            ctx.fillStyle = labelColors[i].backgroundColor;\n            ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n            ctx.fillStyle = textColor;\n          }\n\n          fillLineOfText(line);\n        });\n        helpers$1.each(bodyItem.after, fillLineOfText);\n      }); // Reset back to 0 for after body\n\n      xLinePadding = 0; // After body lines\n\n      helpers$1.each(vm.afterBody, fillLineOfText);\n      pt.y -= bodySpacing; // Remove last body spacing\n    },\n    drawFooter: function drawFooter(pt, vm, ctx) {\n      var footer = vm.footer;\n\n      if (footer.length) {\n        pt.x = getAlignedX(vm, vm._footerAlign);\n        pt.y += vm.footerMarginTop;\n        ctx.textAlign = vm._footerAlign;\n        ctx.textBaseline = 'top';\n        ctx.fillStyle = vm.footerFontColor;\n        ctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n        helpers$1.each(footer, function (line) {\n          ctx.fillText(line, pt.x, pt.y);\n          pt.y += vm.footerFontSize + vm.footerSpacing;\n        });\n      }\n    },\n    drawBackground: function drawBackground(pt, vm, ctx, tooltipSize) {\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.strokeStyle = vm.borderColor;\n      ctx.lineWidth = vm.borderWidth;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var x = pt.x;\n      var y = pt.y;\n      var width = tooltipSize.width;\n      var height = tooltipSize.height;\n      var radius = vm.cornerRadius;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (vm.borderWidth > 0) {\n        ctx.stroke();\n      }\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n\n      if (vm.opacity === 0) {\n        return;\n      }\n\n      var tooltipSize = {\n        width: vm.width,\n        height: vm.height\n      };\n      var pt = {\n        x: vm.x,\n        y: vm.y\n      }; // IE11/Edge does not like very small opacities, so snap to 0\n\n      var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n      var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n      if (this._options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity; // Draw Background\n\n        this.drawBackground(pt, vm, ctx, tooltipSize); // Draw Title, Body, and Footer\n\n        pt.y += vm.yPadding; // Titles\n\n        this.drawTitle(pt, vm, ctx); // Body\n\n        this.drawBody(pt, vm, ctx); // Footer\n\n        this.drawFooter(pt, vm, ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     * @returns {boolean} true if the tooltip changed\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me._options;\n      var changed = false;\n      me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n      if (e.type === 'mouseout') {\n        me._active = [];\n      } else {\n        me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n      } // Remember Last Actives\n\n\n      changed = !helpers$1.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n      if (changed) {\n        me._lastActive = me._active;\n\n        if (options.enabled || options.custom) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true);\n          me.pivot();\n        }\n      }\n\n      return changed;\n    }\n  });\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n\n  var positioners_1 = positioners;\n  var core_tooltip = exports$3;\n  core_tooltip.positioners = positioners_1;\n  var valueOrDefault$8 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    elements: {},\n    events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n    hover: {\n      onHover: null,\n      mode: 'nearest',\n      intersect: true,\n      animationDuration: 400\n    },\n    onClick: null,\n    maintainAspectRatio: true,\n    responsive: true,\n    responsiveAnimationDuration: 0\n  });\n  /**\n   * Recursively merge the given config objects representing the `scales` option\n   * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n   * returns a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeScaleConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers$1.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n  /**\n   * Recursively merge the given config objects as the root options by handling\n   * default scale options for the `scales` and `scale` properties, then returns\n   * a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = mergeScaleConfig(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use mergeConfig for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = mergeConfig(core_defaults.global, core_defaults[config.type], config.options || {});\n    return config;\n  }\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers$1.each(chart.scales, function (scale) {\n      core_layouts.removeBox(chart, scale);\n    });\n    newOptions = mergeConfig(core_defaults.global, core_defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  helpers$1.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers$1.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      core_plugins.notify(me, 'beforeInit');\n      helpers$1.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      core_plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers$1.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      core_animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers$1.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        core_plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (options.onResize) {\n          options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers$1.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers$1.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers$1.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers$1.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      core_scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      core_plugins._invalidate(me);\n\n      if (core_plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers$1.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      core_plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      core_layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      core_plugins.notify(me, 'afterScaleUpdate');\n      core_plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      core_plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      core_plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var animationOptions = me.options.animation;\n      var duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n      var lazy = config.lazy;\n\n      if (core_plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var onComplete = function onComplete(animation) {\n        core_plugins.notify(me, 'afterRender');\n        helpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && duration) {\n        var animation = new core_animation({\n          numSteps: duration / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers$1.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        core_animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new core_animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers$1.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers$1.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      core_plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      core_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      core_plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      core_plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n\n    /**\n     * Get the single element that was clicked on\n     * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n     */\n    getElementAtEvent: function getElementAtEvent(e) {\n      return core_interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return core_interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return core_interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = core_interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return core_interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers$1.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      core_plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new core_tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers$1.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers$1.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      core_plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers$1.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * NOTE(SB) We actually don't use this container anymore but we need to keep it\n   * for backward compatibility. Though, it can still be useful for plugins that\n   * would need to work on multiple charts?!\n   */\n\n  Chart.instances = {};\n  var core_controller = Chart; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.types = {};\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.configMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.configMerge = mergeConfig;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.scaleMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.scaleMerge = mergeScaleConfig;\n\n  var core_helpers = function core_helpers() {\n    // -- Basic js utility methods\n    helpers$1.where = function (collection, filterCallback) {\n      if (helpers$1.isArray(collection) && Array.prototype.filter) {\n        return collection.filter(filterCallback);\n      }\n\n      var filtered = [];\n      helpers$1.each(collection, function (item) {\n        if (filterCallback(item)) {\n          filtered.push(item);\n        }\n      });\n      return filtered;\n    };\n\n    helpers$1.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n      return array.findIndex(callback, scope);\n    } : function (array, callback, scope) {\n      scope = scope === undefined ? array : scope;\n\n      for (var i = 0, ilen = array.length; i < ilen; ++i) {\n        if (callback.call(scope, array[i], i, array)) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n\n    helpers$1.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to start of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = -1;\n      }\n\n      for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    };\n\n    helpers$1.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to end of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = arrayToSearch.length;\n      }\n\n      for (var i = startIndex - 1; i >= 0; i--) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    }; // -- Math methods\n\n\n    helpers$1.isNumber = function (n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    };\n\n    helpers$1.almostEquals = function (x, y, epsilon) {\n      return Math.abs(x - y) < epsilon;\n    };\n\n    helpers$1.almostWhole = function (x, epsilon) {\n      var rounded = Math.round(x);\n      return rounded - epsilon < x && rounded + epsilon > x;\n    };\n\n    helpers$1.max = function (array) {\n      return array.reduce(function (max, value) {\n        if (!isNaN(value)) {\n          return Math.max(max, value);\n        }\n\n        return max;\n      }, Number.NEGATIVE_INFINITY);\n    };\n\n    helpers$1.min = function (array) {\n      return array.reduce(function (min, value) {\n        if (!isNaN(value)) {\n          return Math.min(min, value);\n        }\n\n        return min;\n      }, Number.POSITIVE_INFINITY);\n    };\n\n    helpers$1.sign = Math.sign ? function (x) {\n      return Math.sign(x);\n    } : function (x) {\n      x = +x; // convert to a number\n\n      if (x === 0 || isNaN(x)) {\n        return x;\n      }\n\n      return x > 0 ? 1 : -1;\n    };\n    helpers$1.log10 = Math.log10 ? function (x) {\n      return Math.log10(x);\n    } : function (x) {\n      var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n      // Check for whole powers of 10,\n      // which due to floating point rounding error should be corrected.\n\n      var powerOf10 = Math.round(exponent);\n      var isPowerOf10 = x === Math.pow(10, powerOf10);\n      return isPowerOf10 ? powerOf10 : exponent;\n    };\n\n    helpers$1.toRadians = function (degrees) {\n      return degrees * (Math.PI / 180);\n    };\n\n    helpers$1.toDegrees = function (radians) {\n      return radians * (180 / Math.PI);\n    };\n    /**\n     * Returns the number of decimal places\n     * i.e. the number of digits after the decimal point, of the value of this Number.\n     * @param {number} x - A number.\n     * @returns {number} The number of decimal places.\n     * @private\n     */\n\n\n    helpers$1._decimalPlaces = function (x) {\n      if (!helpers$1.isFinite(x)) {\n        return;\n      }\n\n      var e = 1;\n      var p = 0;\n\n      while (Math.round(x * e) / e !== x) {\n        e *= 10;\n        p++;\n      }\n\n      return p;\n    }; // Gets the angle from vertical upright to the point about a centre.\n\n\n    helpers$1.getAngleFromPoint = function (centrePoint, anglePoint) {\n      var distanceFromXCenter = anglePoint.x - centrePoint.x;\n      var distanceFromYCenter = anglePoint.y - centrePoint.y;\n      var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n      var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n      if (angle < -0.5 * Math.PI) {\n        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n      }\n\n      return {\n        angle: angle,\n        distance: radialDistanceFromCenter\n      };\n    };\n\n    helpers$1.distanceBetweenPoints = function (pt1, pt2) {\n      return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**\n     * Provided for backward compatibility, not available anymore\n     * @function Chart.helpers.aliasPixel\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     */\n\n\n    helpers$1.aliasPixel = function (pixelWidth) {\n      return pixelWidth % 2 === 0 ? 0 : 0.5;\n    };\n    /**\n     * Returns the aligned pixel value to avoid anti-aliasing blur\n     * @param {Chart} chart - The chart instance.\n     * @param {number} pixel - A pixel value.\n     * @param {number} width - The width of the element.\n     * @returns {number} The aligned pixel value.\n     * @private\n     */\n\n\n    helpers$1._alignPixel = function (chart, pixel, width) {\n      var devicePixelRatio = chart.currentDevicePixelRatio;\n      var halfWidth = width / 2;\n      return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n    };\n\n    helpers$1.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n      // Props to Rob Spencer at scaled innovation for his post on splining between points\n      // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n      // This function must also respect \"skipped\" points\n      var previous = firstPoint.skip ? middlePoint : firstPoint;\n      var current = middlePoint;\n      var next = afterPoint.skip ? middlePoint : afterPoint;\n      var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n      var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n      var s01 = d01 / (d01 + d12);\n      var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n      s01 = isNaN(s01) ? 0 : s01;\n      s12 = isNaN(s12) ? 0 : s12;\n      var fa = t * s01; // scaling factor for triangle Ta\n\n      var fb = t * s12;\n      return {\n        previous: {\n          x: current.x - fa * (next.x - previous.x),\n          y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n          x: current.x + fb * (next.x - previous.x),\n          y: current.y + fb * (next.y - previous.y)\n        }\n      };\n    };\n\n    helpers$1.EPSILON = Number.EPSILON || 1e-14;\n\n    helpers$1.splineCurveMonotone = function (points) {\n      // This function calculates Bézier control points in a similar way than |splineCurve|,\n      // but preserves monotonicity of the provided data and ensures no local extremums are added\n      // between the dataset discrete points due to the interpolation.\n      // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n      var pointsWithTangents = (points || []).map(function (point) {\n        return {\n          model: point._model,\n          deltaK: 0,\n          mK: 0\n        };\n      }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n      var pointsLen = pointsWithTangents.length;\n      var i, pointBefore, pointCurrent, pointAfter;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointAfter && !pointAfter.model.skip) {\n          var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n          pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n        }\n\n        if (!pointBefore || pointBefore.model.skip) {\n          pointCurrent.mK = pointCurrent.deltaK;\n        } else if (!pointAfter || pointAfter.model.skip) {\n          pointCurrent.mK = pointBefore.deltaK;\n        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n          pointCurrent.mK = 0;\n        } else {\n          pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n        }\n      } // Adjust tangents to ensure monotonic properties\n\n\n      var alphaK, betaK, tauK, squaredMagnitude;\n\n      for (i = 0; i < pointsLen - 1; ++i) {\n        pointCurrent = pointsWithTangents[i];\n        pointAfter = pointsWithTangents[i + 1];\n\n        if (pointCurrent.model.skip || pointAfter.model.skip) {\n          continue;\n        }\n\n        if (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n          pointCurrent.mK = pointAfter.mK = 0;\n          continue;\n        }\n\n        alphaK = pointCurrent.mK / pointCurrent.deltaK;\n        betaK = pointAfter.mK / pointCurrent.deltaK;\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n        if (squaredMagnitude <= 9) {\n          continue;\n        }\n\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n      } // Compute control points\n\n\n      var deltaX;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointBefore && !pointBefore.model.skip) {\n          deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n          pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n          pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n        }\n\n        if (pointAfter && !pointAfter.model.skip) {\n          deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n          pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n          pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n        }\n      }\n    };\n\n    helpers$1.nextItem = function (collection, index, loop) {\n      if (loop) {\n        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n      }\n\n      return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n    };\n\n    helpers$1.previousItem = function (collection, index, loop) {\n      if (loop) {\n        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n      }\n\n      return index <= 0 ? collection[0] : collection[index - 1];\n    }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n    helpers$1.niceNum = function (range, round) {\n      var exponent = Math.floor(helpers$1.log10(range));\n      var fraction = range / Math.pow(10, exponent);\n      var niceFraction;\n\n      if (round) {\n        if (fraction < 1.5) {\n          niceFraction = 1;\n        } else if (fraction < 3) {\n          niceFraction = 2;\n        } else if (fraction < 7) {\n          niceFraction = 5;\n        } else {\n          niceFraction = 10;\n        }\n      } else if (fraction <= 1.0) {\n        niceFraction = 1;\n      } else if (fraction <= 2) {\n        niceFraction = 2;\n      } else if (fraction <= 5) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n\n      return niceFraction * Math.pow(10, exponent);\n    }; // Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n    helpers$1.requestAnimFrame = function () {\n      if (typeof window === 'undefined') {\n        return function (callback) {\n          callback();\n        };\n      }\n\n      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n        return window.setTimeout(callback, 1000 / 60);\n      };\n    }(); // -- DOM methods\n\n\n    helpers$1.getRelativePosition = function (evt, chart) {\n      var mouseX, mouseY;\n      var e = evt.originalEvent || evt;\n      var canvas = evt.target || evt.srcElement;\n      var boundingRect = canvas.getBoundingClientRect();\n      var touches = e.touches;\n\n      if (touches && touches.length > 0) {\n        mouseX = touches[0].clientX;\n        mouseY = touches[0].clientY;\n      } else {\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n      } // Scale mouse coordinates into canvas coordinates\n      // by following the pattern laid out by 'jerryj' in the comments of\n      // https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n      var paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n      var paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n      var paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n      var paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n      var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n      var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n      // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n      mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n      mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n      return {\n        x: mouseX,\n        y: mouseY\n      };\n    }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n    function parseMaxStyle(styleValue, node, parentProperty) {\n      var valueInPixels;\n\n      if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n\n        if (styleValue.indexOf('%') !== -1) {\n          // percentage * size in dimension\n          valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n      } else {\n        valueInPixels = styleValue;\n      }\n\n      return valueInPixels;\n    }\n    /**\n     * Returns if the given value contains an effective constraint.\n     * @private\n     */\n\n\n    function isConstrainedValue(value) {\n      return value !== undefined && value !== null && value !== 'none';\n    }\n    /**\n     * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n     * @param {HTMLElement} domNode - the node to check the constraint on\n     * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n     * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n     * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n     */\n\n\n    function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n      var view = document.defaultView;\n\n      var parentNode = helpers$1._getParentNode(domNode);\n\n      var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n      var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n      var hasCNode = isConstrainedValue(constrainedNode);\n      var hasCContainer = isConstrainedValue(constrainedContainer);\n      var infinity = Number.POSITIVE_INFINITY;\n\n      if (hasCNode || hasCContainer) {\n        return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n      }\n\n      return 'none';\n    } // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintWidth = function (domNode) {\n      return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n    }; // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintHeight = function (domNode) {\n      return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n    };\n    /**\n     * @private\n    \t */\n\n\n    helpers$1._calculatePadding = function (container, padding, parentDimension) {\n      padding = helpers$1.getStyle(container, padding);\n      return padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n    };\n    /**\n     * @private\n     */\n\n\n    helpers$1._getParentNode = function (domNode) {\n      var parent = domNode.parentNode;\n\n      if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n      }\n\n      return parent;\n    };\n\n    helpers$1.getMaximumWidth = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientWidth;\n      }\n\n      var clientWidth = container.clientWidth;\n\n      var paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\n      var paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n      var w = clientWidth - paddingLeft - paddingRight;\n      var cw = helpers$1.getConstraintWidth(domNode);\n      return isNaN(cw) ? w : Math.min(w, cw);\n    };\n\n    helpers$1.getMaximumHeight = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientHeight;\n      }\n\n      var clientHeight = container.clientHeight;\n\n      var paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\n      var paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n      var h = clientHeight - paddingTop - paddingBottom;\n      var ch = helpers$1.getConstraintHeight(domNode);\n      return isNaN(ch) ? h : Math.min(h, ch);\n    };\n\n    helpers$1.getStyle = function (el, property) {\n      return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n    };\n\n    helpers$1.retinaScale = function (chart, forceRatio) {\n      var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n      if (pixelRatio === 1) {\n        return;\n      }\n\n      var canvas = chart.canvas;\n      var height = chart.height;\n      var width = chart.width;\n      canvas.height = height * pixelRatio;\n      canvas.width = width * pixelRatio;\n      chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n      // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n      // See https://github.com/chartjs/Chart.js/issues/3575\n\n      if (!canvas.style.height && !canvas.style.width) {\n        canvas.style.height = height + 'px';\n        canvas.style.width = width + 'px';\n      }\n    }; // -- Canvas methods\n\n\n    helpers$1.fontString = function (pixelSize, fontStyle, fontFamily) {\n      return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n    };\n\n    helpers$1.longestText = function (ctx, font, arrayOfThings, cache) {\n      cache = cache || {};\n      var data = cache.data = cache.data || {};\n      var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n      if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n      }\n\n      ctx.font = font;\n      var longest = 0;\n      helpers$1.each(arrayOfThings, function (thing) {\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n          longest = helpers$1.measureText(ctx, data, gc, longest, thing);\n        } else if (helpers$1.isArray(thing)) {\n          // if it is an array lets measure each element\n          // to do maybe simplify this function a bit so we can do this more recursively?\n          helpers$1.each(thing, function (nestedThing) {\n            // Undefined strings and arrays should not be measured\n            if (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n              longest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n            }\n          });\n        }\n      });\n      var gcLen = gc.length / 2;\n\n      if (gcLen > arrayOfThings.length) {\n        for (var i = 0; i < gcLen; i++) {\n          delete data[gc[i]];\n        }\n\n        gc.splice(0, gcLen);\n      }\n\n      return longest;\n    };\n\n    helpers$1.measureText = function (ctx, data, gc, longest, string) {\n      var textWidth = data[string];\n\n      if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n      }\n\n      if (textWidth > longest) {\n        longest = textWidth;\n      }\n\n      return longest;\n    };\n\n    helpers$1.numberOfLabelLines = function (arrayOfThings) {\n      var numberOfLines = 1;\n      helpers$1.each(arrayOfThings, function (thing) {\n        if (helpers$1.isArray(thing)) {\n          if (thing.length > numberOfLines) {\n            numberOfLines = thing.length;\n          }\n        }\n      });\n      return numberOfLines;\n    };\n\n    helpers$1.color = !chartjsColor ? function (value) {\n      console.error('Color.js not found!');\n      return value;\n    } : function (value) {\n      /* global CanvasGradient */\n      if (value instanceof CanvasGradient) {\n        value = core_defaults.global.defaultColor;\n      }\n\n      return chartjsColor(value);\n    };\n\n    helpers$1.getHoverColor = function (colorValue) {\n      /* global CanvasPattern */\n      return colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient ? colorValue : helpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n    };\n  };\n\n  function _abstract() {\n    throw new Error('This method is not implemented: either no adapter can ' + 'be found or an incomplete integration was provided.');\n  }\n  /**\n   * Date adapter (current used by the time scale)\n   * @namespace Chart._adapters._date\n   * @memberof Chart._adapters\n   * @private\n   */\n\n  /**\n   * Currently supported unit string values.\n   * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n   * @memberof Chart._adapters._date\n   * @name Unit\n   */\n\n  /**\n   * @class\n   */\n\n\n  function DateAdapter(options) {\n    this.options = options || {};\n  }\n\n  helpers$1.extend(DateAdapter.prototype,\n  /** @lends DateAdapter */\n  {\n    /**\n     * Returns a map of time formats for the supported formatting units defined\n     * in Unit as well as 'datetime' representing a detailed date/time string.\n     * @returns {{string: string}}\n     */\n    formats: _abstract,\n\n    /**\n     * Parses the given `value` and return the associated timestamp.\n     * @param {any} value - the value to parse (usually comes from the data)\n     * @param {string} [format] - the expected data format\n     * @returns {(number|null)}\n     * @function\n     */\n    parse: _abstract,\n\n    /**\n     * Returns the formatted date in the specified `format` for a given `timestamp`.\n     * @param {number} timestamp - the timestamp to format\n     * @param {string} format - the date/time token\n     * @return {string}\n     * @function\n     */\n    format: _abstract,\n\n    /**\n     * Adds the specified `amount` of `unit` to the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {number} amount - the amount to add\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    add: _abstract,\n\n    /**\n     * Returns the number of `unit` between the given timestamps.\n     * @param {number} max - the input timestamp (reference)\n     * @param {number} min - the timestamp to substract\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    diff: _abstract,\n\n    /**\n     * Returns start of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n     * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n     * @function\n     */\n    startOf: _abstract,\n\n    /**\n     * Returns end of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @function\n     */\n    endOf: _abstract,\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility for scale.getValueForPixel(),\n     * this method should be overridden only by the moment adapter.\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(value) {\n      return value;\n    }\n  });\n\n  DateAdapter.override = function (members) {\n    helpers$1.extend(DateAdapter.prototype, members);\n  };\n\n  var _date = DateAdapter;\n  var core_adapters = {\n    _date: _date\n  };\n  /**\n   * Namespace to hold static tick generation functions\n   * @namespace Chart.Ticks\n   */\n\n  var core_ticks = {\n    /**\n     * Namespace to hold formatters for different types of ticks\n     * @namespace Chart.Ticks.formatters\n     */\n    formatters: {\n      /**\n       * Formatter for value labels\n       * @method Chart.Ticks.formatters.values\n       * @param value the value to display\n       * @return {string|string[]} the label to display\n       */\n      values: function values(value) {\n        return helpers$1.isArray(value) ? value : '' + value;\n      },\n\n      /**\n       * Formatter for linear numeric ticks\n       * @method Chart.Ticks.formatters.linear\n       * @param tickValue {number} the value to be formatted\n       * @param index {number} the position of the tickValue parameter in the ticks array\n       * @param ticks {number[]} the list of ticks being converted\n       * @return {string} string representation of the tickValue parameter\n       */\n      linear: function linear(tickValue, index, ticks) {\n        // If we have lots of ticks, don't use the ones\n        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n        if (Math.abs(delta) > 1) {\n          if (tickValue !== Math.floor(tickValue)) {\n            // not an integer\n            delta = tickValue - Math.floor(tickValue);\n          }\n        }\n\n        var logDelta = helpers$1.log10(Math.abs(delta));\n        var tickString = '';\n\n        if (tickValue !== 0) {\n          var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n          if (maxTick < 1e-4) {\n            // all ticks are small numbers; use scientific notation\n            var logTick = helpers$1.log10(Math.abs(tickValue));\n            tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n          } else {\n            var numDecimal = -1 * Math.floor(logDelta);\n            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n            tickString = tickValue.toFixed(numDecimal);\n          }\n        } else {\n          tickString = '0'; // never show decimal places for 0\n        }\n\n        return tickString;\n      },\n      logarithmic: function logarithmic(tickValue, index, ticks) {\n        var remain = tickValue / Math.pow(10, Math.floor(helpers$1.log10(tickValue)));\n\n        if (tickValue === 0) {\n          return '0';\n        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n          return tickValue.toExponential();\n        }\n\n        return '';\n      }\n    }\n  };\n  var valueOrDefault$9 = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\n  core_defaults._set('scale', {\n    display: true,\n    position: 'left',\n    offset: false,\n    // grid line settings\n    gridLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickMarkLength: 10,\n      zeroLineWidth: 1,\n      zeroLineColor: 'rgba(0,0,0,0.25)',\n      zeroLineBorderDash: [],\n      zeroLineBorderDashOffset: 0.0,\n      offsetGridLines: false,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    // scale label\n    scaleLabel: {\n      // display property\n      display: false,\n      // actual label\n      labelString: '',\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    // label settings\n    ticks: {\n      beginAtZero: false,\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      padding: 0,\n      reverse: false,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 0,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: core_ticks.formatters.values,\n      minor: {},\n      major: {}\n    }\n  });\n\n  function labelsFromTicks(ticks) {\n    var labels = [];\n    var i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      labels.push(ticks[i].label);\n    }\n\n    return labels;\n  }\n\n  function getPixelForGridLine(scale, index, offsetGridLines) {\n    var lineValue = scale.getPixelForTick(index);\n\n    if (offsetGridLines) {\n      if (scale.getTicks().length === 1) {\n        lineValue -= scale.isHorizontal() ? Math.max(lineValue - scale.left, scale.right - lineValue) : Math.max(lineValue - scale.top, scale.bottom - lineValue);\n      } else if (index === 0) {\n        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n      } else {\n        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n      }\n    }\n\n    return lineValue;\n  }\n\n  function computeTextSize(context, tick, font) {\n    return helpers$1.isArray(tick) ? helpers$1.longestText(context, font, tick) : context.measureText(tick).width;\n  }\n\n  var core_scale = core_element.extend({\n    /**\n     * Get the padding needed for the scale\n     * @method getPadding\n     * @private\n     * @returns {Padding} the necessary padding\n     */\n    getPadding: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    },\n\n    /**\n     * Returns the scale tick objects ({label, major})\n     * @since 2.7\n     */\n    getTicks: function getTicks() {\n      return this._ticks;\n    },\n    // These methods are ordered by lifecyle. Utilities then follow.\n    // Any function defined here is inherited by all scale types.\n    // Any function can be extended by the scale type\n    mergeTicksOptions: function mergeTicksOptions() {\n      var ticks = this.options.ticks;\n\n      if (ticks.minor === false) {\n        ticks.minor = {\n          display: false\n        };\n      }\n\n      if (ticks.major === false) {\n        ticks.major = {\n          display: false\n        };\n      }\n\n      for (var key in ticks) {\n        if (key !== 'major' && key !== 'minor') {\n          if (typeof ticks.minor[key] === 'undefined') {\n            ticks.minor[key] = ticks[key];\n          }\n\n          if (typeof ticks.major[key] === 'undefined') {\n            ticks.major[key] = ticks[key];\n          }\n        }\n      }\n    },\n    beforeUpdate: function beforeUpdate() {\n      helpers$1.callback(this.options.beforeUpdate, [this]);\n    },\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = helpers$1.extend({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me._maxLabelLines = 0;\n      me.longestLabelWidth = 0;\n      me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Data min/max\n\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n      // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n      // and must not be accessed directly from outside this class. `this.ticks` being\n      // around for long time and not marked as private, we can't change its structure\n      // without unexpected breaking changes. If you need to access the scale ticks,\n      // use scale.getTicks() instead.\n\n      me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n      // we still support no return (`this.ticks` internally set by calling this method).\n\n      ticks = me.buildTicks() || []; // Allow modification of ticks in callback.\n\n      ticks = me.afterBuildTicks(ticks) || ticks;\n      me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n      // COMPAT, we still support no return (`this.ticks` internally changed by calling\n      // this method and supposed to contain only string values).\n\n      labels = me.convertTicksToLabels(ticks) || me.ticks;\n      me.afterTickToLabelConversion();\n      me.ticks = labels; // BACKWARD COMPATIBILITY\n      // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n      // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        label = labels[i];\n        tick = ticks[i];\n\n        if (!tick) {\n          ticks.push(tick = {\n            label: label,\n            major: false\n          });\n        } else {\n          tick.label = label;\n        }\n      }\n\n      me._ticks = ticks; // Tick Rotation\n\n      me.beforeCalculateTickRotation();\n      me.calculateTickRotation();\n      me.afterCalculateTickRotation(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: function afterUpdate() {\n      helpers$1.callback(this.options.afterUpdate, [this]);\n    },\n    //\n    beforeSetDimensions: function beforeSetDimensions() {\n      helpers$1.callback(this.options.beforeSetDimensions, [this]);\n    },\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    },\n    afterSetDimensions: function afterSetDimensions() {\n      helpers$1.callback(this.options.afterSetDimensions, [this]);\n    },\n    // Data limits\n    beforeDataLimits: function beforeDataLimits() {\n      helpers$1.callback(this.options.beforeDataLimits, [this]);\n    },\n    determineDataLimits: helpers$1.noop,\n    afterDataLimits: function afterDataLimits() {\n      helpers$1.callback(this.options.afterDataLimits, [this]);\n    },\n    //\n    beforeBuildTicks: function beforeBuildTicks() {\n      helpers$1.callback(this.options.beforeBuildTicks, [this]);\n    },\n    buildTicks: helpers$1.noop,\n    afterBuildTicks: function afterBuildTicks(ticks) {\n      var me = this; // ticks is empty for old axis implementations here\n\n      if (helpers$1.isArray(ticks) && ticks.length) {\n        return helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n      } // Support old implementations (that modified `this.ticks` directly in buildTicks)\n\n\n      me.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n      return ticks;\n    },\n    beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n      helpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this; // Convert ticks to strings\n\n      var tickOpts = me.options.ticks;\n      me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n    },\n    afterTickToLabelConversion: function afterTickToLabelConversion() {\n      helpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n    },\n    //\n    beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n      helpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n    },\n    calculateTickRotation: function calculateTickRotation() {\n      var me = this;\n      var context = me.ctx;\n      var tickOpts = me.options.ticks;\n      var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n      // between x offsets between 0 and 1.\n\n      var tickFont = helpers$1.options._parseFont(tickOpts);\n\n      context.font = tickFont.string;\n      var labelRotation = tickOpts.minRotation || 0;\n\n      if (labels.length && me.options.display && me.isHorizontal()) {\n        var originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n        var labelWidth = originalLabelWidth;\n        var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n        var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n        while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n          var angleRadians = helpers$1.toRadians(labelRotation);\n          cosRotation = Math.cos(angleRadians);\n          sinRotation = Math.sin(angleRadians);\n\n          if (sinRotation * originalLabelWidth > me.maxHeight) {\n            // go back one step\n            labelRotation--;\n            break;\n          }\n\n          labelRotation++;\n          labelWidth = cosRotation * originalLabelWidth;\n        }\n      }\n\n      me.labelRotation = labelRotation;\n    },\n    afterCalculateTickRotation: function afterCalculateTickRotation() {\n      helpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n    },\n    //\n    beforeFit: function beforeFit() {\n      helpers$1.callback(this.options.beforeFit, [this]);\n    },\n    fit: function fit() {\n      var me = this; // Reset\n\n      var minSize = me.minSize = {\n        width: 0,\n        height: 0\n      };\n      var labels = labelsFromTicks(me._ticks);\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var scaleLabelOpts = opts.scaleLabel;\n      var gridLineOpts = opts.gridLines;\n\n      var display = me._isVisible();\n\n      var position = opts.position;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var tickFont = parseFont(tickOpts);\n      var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n      if (isHorizontal) {\n        // subtract the margins to line up with the chartArea if we are a full width scale\n        minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n      } else {\n        minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } // height\n\n\n      if (isHorizontal) {\n        minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } else {\n        minSize.height = me.maxHeight; // fill all the height\n      } // Are we showing a title for the scale?\n\n\n      if (scaleLabelOpts.display && display) {\n        var scaleLabelFont = parseFont(scaleLabelOpts);\n        var scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n        var deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n        if (isHorizontal) {\n          minSize.height += deltaHeight;\n        } else {\n          minSize.width += deltaHeight;\n        }\n      } // Don't bother fitting the ticks if we are not showing the labels\n\n\n      if (tickOpts.display && display) {\n        var largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n        var tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n        var lineSpace = tickFont.size * 0.5;\n        var tickPadding = me.options.ticks.padding; // Store max number of lines and widest label for _autoSkip\n\n        me._maxLabelLines = tallestLabelHeightInLines;\n        me.longestLabelWidth = largestTextWidth;\n\n        if (isHorizontal) {\n          var angleRadians = helpers$1.toRadians(me.labelRotation);\n          var cosRotation = Math.cos(angleRadians);\n          var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n          var labelHeight = sinRotation * largestTextWidth + tickFont.lineHeight * tallestLabelHeightInLines + lineSpace; // padding\n\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          me.ctx.font = tickFont.string;\n          var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n          var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n          var offsetLeft = me.getPixelForTick(0) - me.left;\n          var offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n          var paddingLeft, paddingRight; // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n          // which means that the right padding is dominated by the font height\n\n          if (me.labelRotation !== 0) {\n            paddingLeft = position === 'bottom' ? cosRotation * firstLabelWidth : cosRotation * lineSpace;\n            paddingRight = position === 'bottom' ? cosRotation * lineSpace : cosRotation * lastLabelWidth;\n          } else {\n            paddingLeft = firstLabelWidth / 2;\n            paddingRight = lastLabelWidth / 2;\n          }\n\n          me.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n        } else {\n          // A vertical axis is more constrained by the width. Labels are the\n          // dominant factor here, so get that length first and account for padding\n          if (tickOpts.mirror) {\n            largestTextWidth = 0;\n          } else {\n            // use lineSpace for consistency with horizontal axis\n            // tickPadding is not implemented for horizontal\n            largestTextWidth += tickPadding + lineSpace;\n          }\n\n          minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n          me.paddingTop = tickFont.size / 2;\n          me.paddingBottom = tickFont.size / 2;\n        }\n      }\n\n      me.handleMargins();\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n\n    /**\n     * Handle margins and padding interactions\n     * @private\n     */\n    handleMargins: function handleMargins() {\n      var me = this;\n\n      if (me.margins) {\n        me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n        me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n        me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n        me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n      }\n    },\n    afterFit: function afterFit() {\n      helpers$1.callback(this.options.afterFit, [this]);\n    },\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    isFullWidth: function isFullWidth() {\n      return this.options.fullWidth;\n    },\n    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n    getRightValue: function getRightValue(rawValue) {\n      // Null and undefined values first\n      if (helpers$1.isNullOrUndef(rawValue)) {\n        return NaN;\n      } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n      if ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n        return NaN;\n      } // If it is in fact an object, dive in one more level\n\n\n      if (rawValue) {\n        if (this.isHorizontal()) {\n          if (rawValue.x !== undefined) {\n            return this.getRightValue(rawValue.x);\n          }\n        } else if (rawValue.y !== undefined) {\n          return this.getRightValue(rawValue.y);\n        }\n      } // Value is good, return it\n\n\n      return rawValue;\n    },\n\n    /**\n     * Used to get the value to display in the tooltip for the data at the given index\n     * @param index\n     * @param datasetIndex\n     */\n    getLabelForIndex: helpers$1.noop,\n\n    /**\n     * Returns the location of the given data point. Value can either be an index or a numerical value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param value\n     * @param index\n     * @param datasetIndex\n     */\n    getPixelForValue: helpers$1.noop,\n\n    /**\n     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param pixel\n     */\n    getValueForPixel: helpers$1.noop,\n\n    /**\n     * Returns the location of the tick at the given index\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForTick: function getPixelForTick(index) {\n      var me = this;\n      var offset = me.options.offset;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n        var pixel = tickWidth * index + me.paddingLeft;\n\n        if (offset) {\n          pixel += tickWidth / 2;\n        }\n\n        var finalVal = me.left + pixel;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n      return me.top + index * (innerHeight / (me._ticks.length - 1));\n    },\n\n    /**\n     * Utility for getting the pixel location of a percentage of scale\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForDecimal: function getPixelForDecimal(decimal) {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var valueOffset = innerWidth * decimal + me.paddingLeft;\n        var finalVal = me.left + valueOffset;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      return me.top + decimal * me.height;\n    },\n\n    /**\n     * Returns the pixel for the minimum chart value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getBasePixel: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    },\n    getBaseValue: function getBaseValue() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    },\n\n    /**\n     * Returns a subset of ticks to be plotted to avoid overlapping labels.\n     * @private\n     */\n    _autoSkip: function _autoSkip(ticks) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor;\n      var tickCount = ticks.length;\n      var skipRatio = false;\n      var maxTicks = optionTicks.maxTicksLimit; // Total space needed to display all ticks. First and last ticks are\n      // drawn as their center at end of axis, so tickCount-1\n\n      var ticksLength = me._tickSize() * (tickCount - 1); // Axis length\n\n      var axisLength = isHorizontal ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.PaddingBottom);\n      var result = [];\n      var i, tick;\n\n      if (ticksLength > axisLength) {\n        skipRatio = 1 + Math.floor(ticksLength / axisLength);\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n      }\n\n      for (i = 0; i < tickCount; i++) {\n        tick = ticks[i];\n\n        if (skipRatio > 1 && i % skipRatio > 0) {\n          // leave tick in place but make sure it's not displayed (#4635)\n          delete tick.label;\n        }\n\n        result.push(tick);\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _tickSize: function _tickSize() {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor; // Calculate space needed by label in axis direction.\n\n      var rot = helpers$1.toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = me.longestLabelWidth + padding || 0;\n\n      var tickFont = helpers$1.options._parseFont(optionTicks);\n\n      var h = me._maxLabelLines * tickFont.lineHeight + padding || 0; // Calculate space needed for 1 tick in axis direction.\n\n      return isHorizontal ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    },\n\n    /**\n     * @private\n     */\n    _isVisible: function _isVisible() {\n      var me = this;\n      var chart = me.chart;\n      var display = me.options.display;\n      var i, ilen, meta;\n\n      if (display !== 'auto') {\n        return !!display;\n      } // When 'auto', the scale is visible if at least one associated dataset is visible.\n\n\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n\n          if (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Actually draw the scale on the canvas\n     * @param {object} chartArea - the area of the chart to draw full grid lines on\n     */\n    draw: function draw(chartArea) {\n      var me = this;\n      var options = me.options;\n\n      if (!me._isVisible()) {\n        return;\n      }\n\n      var chart = me.chart;\n      var context = me.ctx;\n      var globalDefaults = core_defaults.global;\n      var defaultFontColor = globalDefaults.defaultFontColor;\n      var optionTicks = options.ticks.minor;\n      var optionMajorTicks = options.ticks.major || optionTicks;\n      var gridLines = options.gridLines;\n      var scaleLabel = options.scaleLabel;\n      var position = options.position;\n      var isRotated = me.labelRotation !== 0;\n      var isMirrored = optionTicks.mirror;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n      var tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n      var tickFont = parseFont(optionTicks);\n      var lineHeight = tickFont.lineHeight;\n      var majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n      var majorTickFont = parseFont(optionMajorTicks);\n      var tickPadding = optionTicks.padding;\n      var labelOffset = optionTicks.labelOffset;\n      var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n      var scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n      var scaleLabelFont = parseFont(scaleLabel);\n      var scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n      var labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n      var itemsToDraw = [];\n      var axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n      var alignPixel = helpers$1._alignPixel;\n      var borderValue, tickStart, tickEnd;\n\n      if (position === 'top') {\n        borderValue = alignPixel(chart, me.bottom, axisWidth);\n        tickStart = me.bottom - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else if (position === 'bottom') {\n        borderValue = alignPixel(chart, me.top, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignPixel(chart, me.right, axisWidth);\n        tickStart = me.right - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else {\n        borderValue = alignPixel(chart, me.left, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.left + tl;\n      }\n\n      var epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n      helpers$1.each(ticks, function (tick, index) {\n        // autoskipper skipped this tick (#4635)\n        if (helpers$1.isNullOrUndef(tick.label)) {\n          return;\n        }\n\n        var label = tick.label;\n        var lineWidth, lineColor, borderDash, borderDashOffset;\n\n        if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n          // Draw the first index specially\n          lineWidth = gridLines.zeroLineWidth;\n          lineColor = gridLines.zeroLineColor;\n          borderDash = gridLines.zeroLineBorderDash || [];\n          borderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n        } else {\n          lineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n          lineColor = valueAtIndexOrDefault(gridLines.color, index);\n          borderDash = gridLines.borderDash || [];\n          borderDashOffset = gridLines.borderDashOffset || 0.0;\n        } // Common properties\n\n\n        var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n        var labelCount = helpers$1.isArray(label) ? label.length : 1;\n        var lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n        if (isHorizontal) {\n          var labelYOffset = tl + tickPadding;\n\n          if (lineValue < me.left - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n          ty1 = tickStart;\n          ty2 = tickEnd;\n          labelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n          if (position === 'top') {\n            y1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n            y2 = chartArea.bottom;\n            textOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'left';\n            labelY = me.bottom - labelYOffset;\n          } else {\n            y1 = chartArea.top;\n            y2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n            textOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'right';\n            labelY = me.top + labelYOffset;\n          }\n        } else {\n          var labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n          if (lineValue < me.top - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tickStart;\n          tx2 = tickEnd;\n          ty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n          labelY = me.getPixelForTick(index) + labelOffset;\n          textOffset = (1 - labelCount) * lineHeight / 2;\n\n          if (position === 'left') {\n            x1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n            x2 = chartArea.right;\n            textAlign = isMirrored ? 'left' : 'right';\n            labelX = me.right - labelXOffset;\n          } else {\n            x1 = chartArea.left;\n            x2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n            textAlign = isMirrored ? 'right' : 'left';\n            labelX = me.left + labelXOffset;\n          }\n        }\n\n        itemsToDraw.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          labelX: labelX,\n          labelY: labelY,\n          glWidth: lineWidth,\n          glColor: lineColor,\n          glBorderDash: borderDash,\n          glBorderDashOffset: borderDashOffset,\n          rotation: -1 * labelRotationRadians,\n          label: label,\n          major: tick.major,\n          textOffset: textOffset,\n          textAlign: textAlign\n        });\n      }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n      helpers$1.each(itemsToDraw, function (itemToDraw) {\n        var glWidth = itemToDraw.glWidth;\n        var glColor = itemToDraw.glColor;\n\n        if (gridLines.display && glWidth && glColor) {\n          context.save();\n          context.lineWidth = glWidth;\n          context.strokeStyle = glColor;\n\n          if (context.setLineDash) {\n            context.setLineDash(itemToDraw.glBorderDash);\n            context.lineDashOffset = itemToDraw.glBorderDashOffset;\n          }\n\n          context.beginPath();\n\n          if (gridLines.drawTicks) {\n            context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n            context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n          }\n\n          if (gridLines.drawOnChartArea) {\n            context.moveTo(itemToDraw.x1, itemToDraw.y1);\n            context.lineTo(itemToDraw.x2, itemToDraw.y2);\n          }\n\n          context.stroke();\n          context.restore();\n        }\n\n        if (optionTicks.display) {\n          // Make sure we draw text in the correct color and font\n          context.save();\n          context.translate(itemToDraw.labelX, itemToDraw.labelY);\n          context.rotate(itemToDraw.rotation);\n          context.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n          context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n          context.textBaseline = 'middle';\n          context.textAlign = itemToDraw.textAlign;\n          var label = itemToDraw.label;\n          var y = itemToDraw.textOffset;\n\n          if (helpers$1.isArray(label)) {\n            for (var i = 0; i < label.length; ++i) {\n              // We just make sure the multiline element is a string here..\n              context.fillText('' + label[i], 0, y);\n              y += lineHeight;\n            }\n          } else {\n            context.fillText(label, 0, y);\n          }\n\n          context.restore();\n        }\n      });\n\n      if (scaleLabel.display) {\n        // Draw the scale label\n        var scaleLabelX;\n        var scaleLabelY;\n        var rotation = 0;\n        var halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n        if (isHorizontal) {\n          scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n          scaleLabelY = position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n        } else {\n          var isLeft = position === 'left';\n          scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n          scaleLabelY = me.top + (me.bottom - me.top) / 2;\n          rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n        }\n\n        context.save();\n        context.translate(scaleLabelX, scaleLabelY);\n        context.rotate(rotation);\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n        context.font = scaleLabelFont.string;\n        context.fillText(scaleLabel.labelString, 0, 0);\n        context.restore();\n      }\n\n      if (axisWidth) {\n        // Draw the line at the edge of the axis\n        var firstLineWidth = axisWidth;\n        var lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n        var x1, x2, y1, y2;\n\n        if (isHorizontal) {\n          x1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n          x2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n          y1 = y2 = borderValue;\n        } else {\n          y1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n          y2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n          x1 = x2 = borderValue;\n        }\n\n        context.lineWidth = axisWidth;\n        context.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n      }\n    }\n  });\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var scale_category = core_scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n\n      if (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n        return me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + widthOffset;\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + heightOffset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults = defaultConfig;\n  scale_category._defaults = _defaults;\n  var noop = helpers$1.noop;\n  var isNullOrUndef = helpers$1.isNullOrUndef;\n  /**\n   * Generate a set of linear ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks(generationOptions, dataRange) {\n    var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n    // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n    // for details.\n\n    var MIN_SPACING = 1e-14;\n    var stepSize = generationOptions.stepSize;\n    var unit = stepSize || 1;\n    var maxNumSpaces = generationOptions.maxTicks - 1;\n    var min = generationOptions.min;\n    var max = generationOptions.max;\n    var precision = generationOptions.precision;\n    var rmin = dataRange.min;\n    var rmax = dataRange.max;\n    var spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n    var factor, niceMin, niceMax, numSpaces; // Beyond MIN_SPACING floating point numbers being to lose precision\n    // such that we can't do the math necessary to generate ticks\n\n    if (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n      return [rmin, rmax];\n    }\n\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n    if (numSpaces > maxNumSpaces) {\n      // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n      spacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n    }\n\n    if (stepSize || isNullOrUndef(precision)) {\n      // If a precision is not specified, calculate factor based on spacing\n      factor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n    } else {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n    if (stepSize) {\n      // If very close to our whole number, use it.\n      if (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n        niceMin = min;\n      }\n\n      if (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n        niceMax = max;\n      }\n    }\n\n    numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n    if (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    ticks.push(isNullOrUndef(min) ? niceMin : min);\n\n    for (var j = 1; j < numSpaces; ++j) {\n      ticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n    }\n\n    ticks.push(isNullOrUndef(max) ? niceMax : max);\n    return ticks;\n  }\n\n  var scale_linearbase = core_scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers$1.sign(me.min);\n        var maxSign = helpers$1.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var stepSize = tickOpts.stepSize;\n      var maxTicksLimit = tickOpts.maxTicksLimit;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me._computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    },\n    _computeTickLimit: function _computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    },\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      core_scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n  var defaultConfig$1 = {\n    position: 'left',\n    ticks: {\n      callback: core_ticks.formatters.linear\n    }\n  };\n  var scale_linear = scale_linearbase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers$1.min(values);\n          var maxVal = helpers$1.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      var me = this;\n      var tickFont;\n\n      if (me.isHorizontal()) {\n        return Math.ceil(me.width / 40);\n      }\n\n      tickFont = helpers$1.options._parseFont(me.options.ticks);\n      return Math.ceil(me.height / tickFont.lineHeight);\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$1 = defaultConfig$1;\n  scale_linear._defaults = _defaults$1;\n  var valueOrDefault$a = helpers$1.valueOrDefault;\n  /**\n   * Generate a set of logarithmic ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks$1(generationOptions, dataRange) {\n    var ticks = [];\n    var tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n    var endExp = Math.floor(helpers$1.log10(dataRange.max));\n    var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    var exp, significand;\n\n    if (tickVal === 0) {\n      exp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n      significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n      ticks.push(tickVal);\n      tickVal = significand * Math.pow(10, exp);\n    } else {\n      exp = Math.floor(helpers$1.log10(tickVal));\n      significand = Math.floor(tickVal / Math.pow(10, exp));\n    }\n\n    var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n    do {\n      ticks.push(tickVal);\n      ++significand;\n\n      if (significand === 10) {\n        significand = 1;\n        ++exp;\n        precision = exp >= 0 ? 1 : precision;\n      }\n\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n    var lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n    ticks.push(lastTick);\n    return ticks;\n  }\n\n  var defaultConfig$2 = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: core_ticks.formatters.logarithmic\n    }\n  }; // TODO(v3): change this to positiveOrDefault\n\n  function nonNegativeOrDefault(value, defaultValue) {\n    return helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n  }\n\n  var scale_logarithmic = core_scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers$1.min(valuesForType);\n            var maxVal = helpers$1.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = nonNegativeOrDefault(tickOpts.min, me.min);\n      me.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: nonNegativeOrDefault(tickOpts.min),\n        max: nonNegativeOrDefault(tickOpts.max)\n      };\n      var ticks = me.ticks = generateTicks$1(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      core_scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {number} value - The minimum not zero value.\n     * @return {number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers$1.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$2 = defaultConfig$2;\n  scale_logarithmic._defaults = _defaults$2;\n  var valueOrDefault$b = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\n  var resolve$7 = helpers$1.options.resolve;\n  var defaultConfig$3 = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: core_ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getTickBackdropHeight(opts) {\n    var tickOpts = opts.ticks;\n\n    if (tickOpts.display && opts.display) {\n      return valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n    }\n\n    return 0;\n  }\n\n  function measureLabelSize(ctx, lineHeight, label) {\n    if (helpers$1.isArray(label)) {\n      return {\n        w: helpers$1.longestText(ctx, ctx.font, label),\n        h: label.length * lineHeight\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: lineHeight\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    // Right, this is really confusing and there is a lot of maths going on here\n    // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n    //\n    // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n    //\n    // Solution:\n    //\n    // We assume the radius of the polygon is half the size of the canvas at first\n    // at each index we check if the text overlaps.\n    //\n    // Where it does, we store that angle and that index.\n    //\n    // After finding the largest index and angle we calculate how much we need to remove\n    // from the shape radius to move the point inwards by that x.\n    //\n    // We average the left and right distances to get the maximum shape radius that can fit in the box\n    // along with labels.\n    //\n    // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n    // on each side, removing that from the size, halving it and adding the left x protrusion width.\n    //\n    // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n    // and position it in the most space efficient manner\n    //\n    // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n    var plFont = helpers$1.options._parseFont(scale.options.pointLabels); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n\n    var furthestLimits = {\n      l: 0,\n      r: scale.width,\n      t: 0,\n      b: scale.height - scale.paddingTop\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.string;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n      textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers$1.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, lineHeight) {\n    var y = position.y + lineHeight / 2;\n    var i, ilen;\n\n    if (helpers$1.isArray(text)) {\n      for (i = 0, ilen = text.length; i < ilen; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += lineHeight;\n      }\n    } else {\n      ctx.fillText(text, position.x, y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var gridLineOpts = opts.gridLines;\n    var pointLabelOpts = opts.pointLabels;\n    var lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n    var lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n    var tickBackdropHeight = getTickBackdropHeight(opts);\n    ctx.save();\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = lineColor;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n      ctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n    }\n\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n    ctx.font = plFont.string;\n    ctx.textBaseline = 'middle';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display && lineWidth && lineColor) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra pixels out for some label spacing\n        var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers$1.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n      }\n    }\n\n    ctx.restore();\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    var circular = gridLineOpts.circular;\n    var valueCount = getValueCount(scale);\n    var lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n    var lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n    var pointPosition;\n\n    if (!circular && !valueCount || !lineColor || !lineWidth) {\n      return;\n    }\n\n    ctx.save();\n    ctx.strokeStyle = lineColor;\n    ctx.lineWidth = lineWidth;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(gridLineOpts.borderDash || []);\n      ctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n    }\n\n    ctx.beginPath();\n\n    if (circular) {\n      // Draw circular arcs between the points\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n    } else {\n      // Draw straight lines connecting each index\n      pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  function numberOrZero(param) {\n    return helpers$1.isNumber(param) ? param : 0;\n  }\n\n  var scale_radialLinear = scale_linearbase.extend({\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers$1.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers$1.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      scale_linearbase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0);\n\n        var tickFont = helpers$1.options._parseFont(tickOpts);\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n\n        helpers$1.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n              ctx.font = tickFont.string;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFont.size + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n      }\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$3 = defaultConfig$3;\n  scale_radialLinear._defaults = _defaults$3;\n  var valueOrDefault$c = helpers$1.valueOrDefault; // Integer constants are from the ES6 spec.\n\n  var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\n  var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n  var INTERVALS = {\n    millisecond: {\n      common: true,\n      size: 1,\n      steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n    },\n    second: {\n      common: true,\n      size: 1000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    minute: {\n      common: true,\n      size: 60000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    hour: {\n      common: true,\n      size: 3600000,\n      steps: [1, 2, 3, 6, 12]\n    },\n    day: {\n      common: true,\n      size: 86400000,\n      steps: [1, 2, 5]\n    },\n    week: {\n      common: false,\n      size: 604800000,\n      steps: [1, 2, 3, 4]\n    },\n    month: {\n      common: true,\n      size: 2.628e9,\n      steps: [1, 2, 3]\n    },\n    quarter: {\n      common: false,\n      size: 7.884e9,\n      steps: [1, 2, 3, 4]\n    },\n    year: {\n      common: true,\n      size: 3.154e10\n    }\n  };\n  var UNITS = Object.keys(INTERVALS);\n\n  function sorter(a, b) {\n    return a - b;\n  }\n\n  function arrayUnique(items) {\n    var hash = {};\n    var out = [];\n    var i, ilen, item;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n\n      if (!hash[item]) {\n        hash[item] = true;\n        out.push(item);\n      }\n    }\n\n    return out;\n  }\n  /**\n   * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n   * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n   * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n   * extremity (left + width or top + height). Note that it would be more optimized to directly\n   * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n   * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n   *\n   * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n   * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n   * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n   * If 'series', timestamps will be positioned at the same distance from each other. In this\n   * case, only timestamps that break the time linearity are registered, meaning that in the\n   * best case, all timestamps are linear, the table contains only min and max.\n   */\n\n\n  function buildLookupTable(timestamps, min, max, distribution) {\n    if (distribution === 'linear' || !timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    var table = [];\n    var items = [min];\n    var i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n\n    items.push(max);\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i]; // only add points that breaks the scale linearity\n\n      if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  } // @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\n  function lookup(table, key, value) {\n    var lo = 0;\n    var hi = table.length - 1;\n    var mid, i0, i1;\n\n    while (lo >= 0 && lo <= hi) {\n      mid = lo + hi >> 1;\n      i0 = table[mid - 1] || null;\n      i1 = table[mid];\n\n      if (!i0) {\n        // given value is outside table (before first item)\n        return {\n          lo: null,\n          hi: i1\n        };\n      } else if (i1[key] < value) {\n        lo = mid + 1;\n      } else if (i0[key] > value) {\n        hi = mid - 1;\n      } else {\n        return {\n          lo: i0,\n          hi: i1\n        };\n      }\n    } // given value is outside table (after last item)\n\n\n    return {\n      lo: i1,\n      hi: null\n    };\n  }\n  /**\n   * Linearly interpolates the given source `value` using the table items `skey` values and\n   * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n   * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n   * index [0, 1] or [n - 1, n] are used for the interpolation.\n   */\n\n\n  function interpolate$1(table, skey, sval, tkey) {\n    var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n    var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n    var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n    var span = next[skey] - prev[skey];\n    var ratio = span ? (sval - prev[skey]) / span : 0;\n    var offset = (next[tkey] - prev[tkey]) * ratio;\n    return prev[tkey] + offset;\n  }\n\n  function toTimestamp(scale, input) {\n    var adapter = scale._adapter;\n    var options = scale.options.time;\n    var parser = options.parser;\n    var format = parser || options.format;\n    var value = input;\n\n    if (typeof parser === 'function') {\n      value = parser(value);\n    } // Only parse if its not a timestamp already\n\n\n    if (!helpers$1.isFinite(value)) {\n      value = typeof format === 'string' ? adapter.parse(value, format) : adapter.parse(value);\n    }\n\n    if (value !== null) {\n      return +value;\n    } // Labels are in an incompatible format and no `parser` has been provided.\n    // The user might still use the deprecated `format` option for parsing.\n\n\n    if (!parser && typeof format === 'function') {\n      value = format(input); // `format` could return something else than a timestamp, if so, parse it\n\n      if (!helpers$1.isFinite(value)) {\n        value = adapter.parse(value);\n      }\n    }\n\n    return value;\n  }\n\n  function parse(scale, input) {\n    if (helpers$1.isNullOrUndef(input)) {\n      return null;\n    }\n\n    var options = scale.options.time;\n    var value = toTimestamp(scale, scale.getRightValue(input));\n\n    if (value === null) {\n      return value;\n    }\n\n    if (options.round) {\n      value = +scale._adapter.startOf(value, options.round);\n    }\n\n    return value;\n  }\n  /**\n   * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n   * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n   */\n\n\n  function determineStepSize(min, max, unit, capacity) {\n    var range = max - min;\n    var interval = INTERVALS[unit];\n    var milliseconds = interval.size;\n    var steps = interval.steps;\n    var i, ilen, factor;\n\n    if (!steps) {\n      return Math.ceil(range / (capacity * milliseconds));\n    }\n\n    for (i = 0, ilen = steps.length; i < ilen; ++i) {\n      factor = steps[i];\n\n      if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n        break;\n      }\n    }\n\n    return factor;\n  }\n  /**\n   * Figures out what unit results in an appropriate number of auto-generated ticks\n   */\n\n\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    var ilen = UNITS.length;\n    var i, interval, factor;\n\n    for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n      interval = INTERVALS[UNITS[i]];\n      factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n        return UNITS[i];\n      }\n    }\n\n    return UNITS[ilen - 1];\n  }\n  /**\n   * Figures out what unit to format a set of ticks with\n   */\n\n\n  function determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n    var ilen = UNITS.length;\n    var i, unit;\n\n    for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n      unit = UNITS[i];\n\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n        return unit;\n      }\n    }\n\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n  }\n\n  function determineMajorUnit(unit) {\n    for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n      if (INTERVALS[UNITS[i]].common) {\n        return UNITS[i];\n      }\n    }\n  }\n  /**\n   * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n   * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n   * Important: this method can return ticks outside the min and max range, it's the\n   * responsibility of the calling code to clamp values if needed.\n   */\n\n\n  function generate(scale, min, max, capacity) {\n    var adapter = scale._adapter;\n    var options = scale.options;\n    var timeOpts = options.time;\n    var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n    var major = determineMajorUnit(minor);\n    var stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n    var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    var majorTicksEnabled = options.ticks.major.enabled;\n    var interval = INTERVALS[minor];\n    var first = min;\n    var last = max;\n    var ticks = [];\n    var time;\n\n    if (!stepSize) {\n      stepSize = determineStepSize(min, max, minor, capacity);\n    } // For 'week' unit, handle the first day of week option\n\n\n    if (weekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n      last = +adapter.startOf(last, 'isoWeek', weekday);\n    } // Align first/last ticks on unit\n\n\n    first = +adapter.startOf(first, weekday ? 'day' : minor);\n    last = +adapter.startOf(last, weekday ? 'day' : minor); // Make sure that the last tick include max\n\n    if (last < max) {\n      last = +adapter.add(last, 1, minor);\n    }\n\n    time = first;\n\n    if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n      // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n      // we first aligned time on the previous `major` unit then add the number of full\n      // stepSize there is between first and the previous major time.\n      time = +adapter.startOf(time, major);\n      time = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n    }\n\n    for (; time < last; time = +adapter.add(time, stepSize, minor)) {\n      ticks.push(+time);\n    }\n\n    ticks.push(+time);\n    return ticks;\n  }\n  /**\n   * Returns the start and end offsets from edges in the form of {start, end}\n   * where each value is a relative width to the scale and ranges between 0 and 1.\n   * They add extra margins on the both sides by scaling down the original scale.\n   * Offsets are added when the `offset` option is true.\n   */\n\n\n  function computeOffsets(table, ticks, min, max, options) {\n    var start = 0;\n    var end = 0;\n    var first, last;\n\n    if (options.offset && ticks.length) {\n      if (!options.time.min) {\n        first = interpolate$1(table, 'time', ticks[0], 'pos');\n\n        if (ticks.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n        }\n      }\n\n      if (!options.time.max) {\n        last = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\n        if (ticks.length === 1) {\n          end = last;\n        } else {\n          end = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n        }\n      }\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  }\n\n  function ticksFromTimestamps(scale, values, majorUnit) {\n    var ticks = [];\n    var i, ilen, value, major;\n\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n      value = values[i];\n      major = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n      ticks.push({\n        value: value,\n        major: major\n      });\n    }\n\n    return ticks;\n  }\n\n  var defaultConfig$4 = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var scale_time = core_scale.extend({\n    initialize: function initialize() {\n      this.mergeTicksOptions();\n      core_scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options;\n      var time = options.time || (options.time = {});\n      var adapter = me._adapter = new core_adapters._date(options.adapters.date); // DEPRECATIONS: output a message only one time per update\n\n      if (time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      } // Backward compatibility: before introducing adapter, `displayFormats` was\n      // supposed to contain *all* unit/string pairs but this can't be resolved\n      // when loading the scale (adapters are loaded afterward), so let's populate\n      // missing formats on update\n\n\n      helpers$1.mergeIf(time.displayFormats, adapter.formats());\n      return core_scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp;\n      var dataLabels = chart.data.labels || []; // Convert labels to timestamps\n\n      for (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n        labels.push(parse(me, dataLabels[i]));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers$1.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(me, data[j]);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            for (j = 0, jlen = labels.length; j < jlen; ++j) {\n              timestamps.push(labels[j]);\n            }\n\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n      max = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n      if (options.ticks.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var adapter = me._adapter;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers$1.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var adapter = me._adapter;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = +adapter.startOf(time, majorUnit);\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var isReverse = me.options.ticks.reverse;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n      var pos = interpolate$1(me._table, 'time', time, 'pos');\n      var offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n      return isReverse ? start - offset : start + offset;\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(me, value);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n      var time = interpolate$1(me._table, 'pos', pos, 'time'); // DEPRECATION, we should return time directly\n\n      return me._adapter._create(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers$1.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this; // pick the longest format (milliseconds) for guestimation\n\n      var format = me.options.time.displayFormats.millisecond;\n      var exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$4 = defaultConfig$4;\n  scale_time._defaults = _defaults$4;\n  var scales = {\n    category: scale_category,\n    linear: scale_linear,\n    logarithmic: scale_logarithmic,\n    radialLinear: scale_radialLinear,\n    time: scale_time\n  };\n  var FORMATS = {\n    datetime: 'MMM D, YYYY, h:mm:ss a',\n    millisecond: 'h:mm:ss.SSS a',\n    second: 'h:mm:ss a',\n    minute: 'h:mm a',\n    hour: 'hA',\n    day: 'MMM D',\n    week: 'll',\n    month: 'MMM YYYY',\n    quarter: '[Q]Q - YYYY',\n    year: 'YYYY'\n  };\n\n  core_adapters._date.override(typeof moment === 'function' ? {\n    _id: 'moment',\n    // DEBUG ONLY\n    formats: function formats() {\n      return FORMATS;\n    },\n    parse: function parse(value, format) {\n      if (typeof value === 'string' && typeof format === 'string') {\n        value = moment(value, format);\n      } else if (!(value instanceof moment)) {\n        value = moment(value);\n      }\n\n      return value.isValid() ? value.valueOf() : null;\n    },\n    format: function format(time, _format) {\n      return moment(time).format(_format);\n    },\n    add: function add(time, amount, unit) {\n      return moment(time).add(amount, unit).valueOf();\n    },\n    diff: function diff(max, min, unit) {\n      return moment.duration(moment(max).diff(moment(min))).as(unit);\n    },\n    startOf: function startOf(time, unit, weekday) {\n      time = moment(time);\n\n      if (unit === 'isoWeek') {\n        return time.isoWeekday(weekday).valueOf();\n      }\n\n      return time.startOf(unit).valueOf();\n    },\n    endOf: function endOf(time, unit) {\n      return moment(time).endOf(unit).valueOf();\n    },\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility with scale.getValueForPixel().\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(time) {\n      return moment(time);\n    }\n  } : {});\n\n  core_defaults._set('global', {\n    plugins: {\n      filler: {\n        propagate: true\n      }\n    }\n  });\n\n  var mappers = {\n    dataset: function dataset(source) {\n      var index = source.fill;\n      var chart = source.chart;\n      var meta = chart.getDatasetMeta(index);\n      var visible = meta && chart.isDatasetVisible(index);\n      var points = visible && meta.dataset._children || [];\n      var length = points.length || 0;\n      return !length ? null : function (point, i) {\n        return i < length && points[i]._view || null;\n      };\n    },\n    boundary: function boundary(source) {\n      var boundary = source.boundary;\n      var x = boundary ? boundary.x : null;\n      var y = boundary ? boundary.y : null;\n      return function (point) {\n        return {\n          x: x === null ? point.x : x,\n          y: y === null ? point.y : y\n        };\n      };\n    }\n  }; // @todo if (fill[0] === '#')\n\n  function decodeFill(el, index, count) {\n    var model = el._model || {};\n    var fill = model.fill;\n    var target;\n\n    if (fill === undefined) {\n      fill = !!model.backgroundColor;\n    }\n\n    if (fill === false || fill === null) {\n      return false;\n    }\n\n    if (fill === true) {\n      return 'origin';\n    }\n\n    target = parseFloat(fill, 10);\n\n    if (isFinite(target) && Math.floor(target) === target) {\n      if (fill[0] === '-' || fill[0] === '+') {\n        target = index + target;\n      }\n\n      if (target === index || target < 0 || target >= count) {\n        return false;\n      }\n\n      return target;\n    }\n\n    switch (fill) {\n      // compatibility\n      case 'bottom':\n        return 'start';\n\n      case 'top':\n        return 'end';\n\n      case 'zero':\n        return 'origin';\n      // supported boundaries\n\n      case 'origin':\n      case 'start':\n      case 'end':\n        return fill;\n      // invalid fill values\n\n      default:\n        return false;\n    }\n  }\n\n  function computeBoundary(source) {\n    var model = source.el._model || {};\n    var scale = source.el._scale || {};\n    var fill = source.fill;\n    var target = null;\n    var horizontal;\n\n    if (isFinite(fill)) {\n      return null;\n    } // Backward compatibility: until v3, we still need to support boundary values set on\n    // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n    // controllers might still use it (e.g. the Smith chart).\n\n\n    if (fill === 'start') {\n      target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n    } else if (fill === 'end') {\n      target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n    } else if (model.scaleZero !== undefined) {\n      target = model.scaleZero;\n    } else if (scale.getBasePosition) {\n      target = scale.getBasePosition();\n    } else if (scale.getBasePixel) {\n      target = scale.getBasePixel();\n    }\n\n    if (target !== undefined && target !== null) {\n      if (target.x !== undefined && target.y !== undefined) {\n        return target;\n      }\n\n      if (helpers$1.isFinite(target)) {\n        horizontal = scale.isHorizontal();\n        return {\n          x: horizontal ? target : null,\n          y: horizontal ? null : target\n        };\n      }\n    }\n\n    return null;\n  }\n\n  function resolveTarget(sources, index, propagate) {\n    var source = sources[index];\n    var fill = source.fill;\n    var visited = [index];\n    var target;\n\n    if (!propagate) {\n      return fill;\n    }\n\n    while (fill !== false && visited.indexOf(fill) === -1) {\n      if (!isFinite(fill)) {\n        return fill;\n      }\n\n      target = sources[fill];\n\n      if (!target) {\n        return false;\n      }\n\n      if (target.visible) {\n        return fill;\n      }\n\n      visited.push(fill);\n      fill = target.fill;\n    }\n\n    return false;\n  }\n\n  function createMapper(source) {\n    var fill = source.fill;\n    var type = 'dataset';\n\n    if (fill === false) {\n      return null;\n    }\n\n    if (!isFinite(fill)) {\n      type = 'boundary';\n    }\n\n    return mappers[type](source);\n  }\n\n  function isDrawable(point) {\n    return point && !point.skip;\n  }\n\n  function drawArea(ctx, curve0, curve1, len0, len1) {\n    var i;\n\n    if (!len0 || !len1) {\n      return;\n    } // building first area curve (normal)\n\n\n    ctx.moveTo(curve0[0].x, curve0[0].y);\n\n    for (i = 1; i < len0; ++i) {\n      helpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n    } // joining the two area curves\n\n\n    ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n    for (i = len1 - 1; i > 0; --i) {\n      helpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n    }\n  }\n\n  function doFill(ctx, points, mapper, view, color, loop) {\n    var count = points.length;\n    var span = view.spanGaps;\n    var curve0 = [];\n    var curve1 = [];\n    var len0 = 0;\n    var len1 = 0;\n    var i, ilen, index, p0, p1, d0, d1;\n    ctx.beginPath();\n\n    for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n      index = i % count;\n      p0 = points[index]._view;\n      p1 = mapper(p0, index, view);\n      d0 = isDrawable(p0);\n      d1 = isDrawable(p1);\n\n      if (d0 && d1) {\n        len0 = curve0.push(p0);\n        len1 = curve1.push(p1);\n      } else if (len0 && len1) {\n        if (!span) {\n          drawArea(ctx, curve0, curve1, len0, len1);\n          len0 = len1 = 0;\n          curve0 = [];\n          curve1 = [];\n        } else {\n          if (d0) {\n            curve0.push(p0);\n          }\n\n          if (d1) {\n            curve1.push(p1);\n          }\n        }\n      }\n    }\n\n    drawArea(ctx, curve0, curve1, len0, len1);\n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n  }\n\n  var plugin_filler = {\n    id: 'filler',\n    afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n      var count = (chart.data.datasets || []).length;\n      var propagate = options.propagate;\n      var sources = [];\n      var meta, i, el, source;\n\n      for (i = 0; i < count; ++i) {\n        meta = chart.getDatasetMeta(i);\n        el = meta.dataset;\n        source = null;\n\n        if (el && el._model && el instanceof elements.Line) {\n          source = {\n            visible: chart.isDatasetVisible(i),\n            fill: decodeFill(el, i, count),\n            chart: chart,\n            el: el\n          };\n        }\n\n        meta.$filler = source;\n        sources.push(source);\n      }\n\n      for (i = 0; i < count; ++i) {\n        source = sources[i];\n\n        if (!source) {\n          continue;\n        }\n\n        source.fill = resolveTarget(sources, i, propagate);\n        source.boundary = computeBoundary(source);\n        source.mapper = createMapper(source);\n      }\n    },\n    beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n      var meta = args.meta.$filler;\n\n      if (!meta) {\n        return;\n      }\n\n      var ctx = chart.ctx;\n      var el = meta.el;\n      var view = el._view;\n      var points = el._children || [];\n      var mapper = meta.mapper;\n      var color = view.backgroundColor || core_defaults.global.defaultColor;\n\n      if (mapper && color && points.length) {\n        helpers$1.canvas.clipArea(ctx, chart.chartArea);\n        doFill(ctx, points, mapper, view, color, el._loop);\n        helpers$1.canvas.unclipArea(ctx);\n      }\n    }\n  };\n  var noop$1 = helpers$1.noop;\n  var valueOrDefault$d = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    legend: {\n      display: true,\n      position: 'top',\n      fullWidth: true,\n      reverse: false,\n      weight: 1000,\n      // a callback that will handle\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.datasetIndex;\n        var ci = this.chart;\n        var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n        ci.update();\n      },\n      onHover: null,\n      onLeave: null,\n      labels: {\n        boxWidth: 40,\n        padding: 10,\n        // Generates labels shown in the legend\n        // Valid properties to return:\n        // text : text to display\n        // fillStyle : fill of coloured box\n        // strokeStyle: stroke of coloured box\n        // hidden : if this legend item refers to a hidden item\n        // lineCap : cap style for line\n        // lineDash\n        // lineDashOffset :\n        // lineJoin :\n        // lineWidth :\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          return helpers$1.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n            return {\n              text: dataset.label,\n              fillStyle: !helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n              hidden: !chart.isDatasetVisible(i),\n              lineCap: dataset.borderCapStyle,\n              lineDash: dataset.borderDash,\n              lineDashOffset: dataset.borderDashOffset,\n              lineJoin: dataset.borderJoinStyle,\n              lineWidth: dataset.borderWidth,\n              strokeStyle: dataset.borderColor,\n              pointStyle: dataset.pointStyle,\n              // Below is extra data used for toggling the datasets\n              datasetIndex: i\n            };\n          }, this) : [];\n        }\n      }\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n\n      for (var i = 0; i < chart.data.datasets.length; i++) {\n        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n        if (chart.data.datasets[i].label) {\n          text.push(chart.data.datasets[i].label);\n        }\n\n        text.push('</li>');\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    }\n  });\n  /**\n   * Helper function to get the box width based on the usePointStyle option\n   * @param {object} labelopts - the label options on the legend\n   * @param {number} fontSize - the label font size\n   * @return {number} width of the color box area\n   */\n\n\n  function getBoxWidth(labelOpts, fontSize) {\n    return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ? fontSize : labelOpts.boxWidth;\n  }\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Legend = core_element.extend({\n    initialize: function initialize(config) {\n      helpers$1.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n      this.legendHitBoxes = [];\n      /**\n      \t * @private\n      \t */\n\n      this._hoveredItem = null; // Are we in doughnut mode which has a different data type\n\n      this.doughnutMode = false;\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    // Any function defined here is inherited by all legend types.\n    // Any function can be extended by the legend type\n    beforeUpdate: noop$1,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$1,\n    //\n    beforeSetDimensions: noop$1,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$1,\n    //\n    beforeBuildLabels: noop$1,\n    buildLabels: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n\n      me.legendItems = legendItems;\n    },\n    afterBuildLabels: noop$1,\n    //\n    beforeFit: noop$1,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var display = opts.display;\n      var ctx = me.ctx;\n\n      var labelFont = helpers$1.options._parseFont(labelOpts);\n\n      var fontSize = labelFont.size; // Reset hit boxes\n\n      var hitboxes = me.legendHitBoxes = [];\n      var minSize = me.minSize;\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = display ? 10 : 0;\n      } else {\n        minSize.width = display ? 10 : 0;\n        minSize.height = me.maxHeight; // fill all the height\n      } // Increase sizes here\n\n\n      if (display) {\n        ctx.font = labelFont.string;\n\n        if (isHorizontal) {\n          // Labels\n          // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n          var lineWidths = me.lineWidths = [0];\n          var totalHeight = 0;\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n            if (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n              totalHeight += fontSize + labelOpts.padding;\n              lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n            } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: width,\n              height: fontSize\n            };\n            lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n          });\n          minSize.height += totalHeight;\n        } else {\n          var vPadding = labelOpts.padding;\n          var columnWidths = me.columnWidths = [];\n          var totalWidth = labelOpts.padding;\n          var currentColWidth = 0;\n          var currentColHeight = 0;\n          var itemHeight = fontSize + vPadding;\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n            if (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n              totalWidth += currentColWidth + labelOpts.padding;\n              columnWidths.push(currentColWidth); // previous column width\n\n              currentColWidth = 0;\n              currentColHeight = 0;\n            } // Get max width\n\n\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: itemWidth,\n              height: fontSize\n            };\n          });\n          totalWidth += currentColWidth;\n          columnWidths.push(currentColWidth);\n          minSize.width += totalWidth;\n        }\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$1,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    // Actually draw the legend on the canvas\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor;\n      var lineDefault = globalDefaults.elements.line;\n      var legendWidth = me.width;\n      var lineWidths = me.lineWidths;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\n        var labelFont = helpers$1.options._parseFont(labelOpts);\n\n        var fontSize = labelFont.size;\n        var cursor; // Canvas setup\n\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.strokeStyle = fontColor; // for strikethrough effect\n\n        ctx.fillStyle = fontColor; // render in correct colour\n\n        ctx.font = labelFont.string;\n        var boxWidth = getBoxWidth(labelOpts, fontSize);\n        var hitboxes = me.legendHitBoxes; // current position\n\n        var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n          if (isNaN(boxWidth) || boxWidth <= 0) {\n            return;\n          } // Set the ctx for the box\n\n\n          ctx.save();\n          var lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n          ctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n          ctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n          ctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n          ctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n          if (ctx.setLineDash) {\n            // IE 9 and 10 do not support line dash\n            ctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n          }\n\n          if (opts.labels && opts.labels.usePointStyle) {\n            // Recalculate x and y for drawPoint() because its expecting\n            // x and y to be center of figure (instead of top left)\n            var radius = boxWidth * Math.SQRT2 / 2;\n            var centerX = x + boxWidth / 2;\n            var centerY = y + fontSize / 2; // Draw pointStyle as legend symbol\n\n            helpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n          } else {\n            // Draw box as legend symbol\n            if (lineWidth !== 0) {\n              ctx.strokeRect(x, y, boxWidth, fontSize);\n            }\n\n            ctx.fillRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.restore();\n        };\n\n        var fillText = function fillText(x, y, legendItem, textWidth) {\n          var halfFontSize = fontSize / 2;\n          var xLeft = boxWidth + halfFontSize + x;\n          var yMiddle = y + halfFontSize;\n          ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n          if (legendItem.hidden) {\n            // Strikethrough the text if hidden\n            ctx.beginPath();\n            ctx.lineWidth = 2;\n            ctx.moveTo(xLeft, yMiddle);\n            ctx.lineTo(xLeft + textWidth, yMiddle);\n            ctx.stroke();\n          }\n        }; // Horizontal\n\n\n        var isHorizontal = me.isHorizontal();\n\n        if (isHorizontal) {\n          cursor = {\n            x: me.left + (legendWidth - lineWidths[0]) / 2 + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        } else {\n          cursor = {\n            x: me.left + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        }\n\n        var itemHeight = fontSize + labelOpts.padding;\n        helpers$1.each(me.legendItems, function (legendItem, i) {\n          var textWidth = ctx.measureText(legendItem.text).width;\n          var width = boxWidth + fontSize / 2 + textWidth;\n          var x = cursor.x;\n          var y = cursor.y; // Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n          // instead of me.right and me.bottom because me.width and me.height\n          // may have been changed since me.minSize was calculated\n\n          if (isHorizontal) {\n            if (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n              y = cursor.y += itemHeight;\n              cursor.line++;\n              x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2 + labelOpts.padding;\n            }\n          } else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n            x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n            y = cursor.y = me.top + labelOpts.padding;\n            cursor.line++;\n          }\n\n          drawLegendBox(x, y, legendItem);\n          hitboxes[i].left = x;\n          hitboxes[i].top = y; // Fill the actual label\n\n          fillText(x, y, legendItem, textWidth);\n\n          if (isHorizontal) {\n            cursor.x += width + labelOpts.padding;\n          } else {\n            cursor.y += itemHeight;\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getLegendItemAt: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        // See if we are touching one of the dataset boxes\n        lh = me.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            // Touching an element\n            return me.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n      var type = e.type === 'mouseup' ? 'click' : e.type;\n      var hoveredItem;\n\n      if (type === 'mousemove') {\n        if (!opts.onHover && !opts.onLeave) {\n          return;\n        }\n      } else if (type === 'click') {\n        if (!opts.onClick) {\n          return;\n        }\n      } else {\n        return;\n      } // Chart event already has relative position in it\n\n\n      hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n      if (type === 'click') {\n        if (hoveredItem && opts.onClick) {\n          // use e.native for backwards compatibility\n          opts.onClick.call(me, e.native, hoveredItem);\n        }\n      } else {\n        if (opts.onLeave && hoveredItem !== me._hoveredItem) {\n          if (me._hoveredItem) {\n            opts.onLeave.call(me, e.native, me._hoveredItem);\n          }\n\n          me._hoveredItem = hoveredItem;\n        }\n\n        if (opts.onHover && hoveredItem) {\n          // use e.native for backwards compatibility\n          opts.onHover.call(me, e.native, hoveredItem);\n        }\n      }\n    }\n  });\n\n  function createNewLegendAndAttach(chart, legendOpts) {\n    var legend = new Legend({\n      ctx: chart.ctx,\n      options: legendOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, legend, legendOpts);\n    core_layouts.addBox(chart, legend);\n    chart.legend = legend;\n  }\n\n  var plugin_legend = {\n    id: 'legend',\n\n    /**\n     * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n     * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Legend,\n    beforeInit: function beforeInit(chart) {\n      var legendOpts = chart.options.legend;\n\n      if (legendOpts) {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var legendOpts = chart.options.legend;\n      var legend = chart.legend;\n\n      if (legendOpts) {\n        helpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n        if (legend) {\n          core_layouts.configure(chart, legend, legendOpts);\n          legend.options = legendOpts;\n        } else {\n          createNewLegendAndAttach(chart, legendOpts);\n        }\n      } else if (legend) {\n        core_layouts.removeBox(chart, legend);\n        delete chart.legend;\n      }\n    },\n    afterEvent: function afterEvent(chart, e) {\n      var legend = chart.legend;\n\n      if (legend) {\n        legend.handleEvent(e);\n      }\n    }\n  };\n  var noop$2 = helpers$1.noop;\n\n  core_defaults._set('global', {\n    title: {\n      display: false,\n      fontStyle: 'bold',\n      fullWidth: true,\n      padding: 10,\n      position: 'top',\n      text: '',\n      weight: 2000 // by default greater than legend (1000) to be above\n\n    }\n  });\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Title = core_element.extend({\n    initialize: function initialize(config) {\n      var me = this;\n      helpers$1.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n      me.legendHitBoxes = [];\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    beforeUpdate: noop$2,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$2,\n    //\n    beforeSetDimensions: noop$2,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$2,\n    //\n    beforeBuildLabels: noop$2,\n    buildLabels: noop$2,\n    afterBuildLabels: noop$2,\n    //\n    beforeFit: noop$2,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var display = opts.display;\n      var minSize = me.minSize;\n      var lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\n      var fontOpts = helpers$1.options._parseFont(opts);\n\n      var textSize = display ? lineCount * fontOpts.lineHeight + opts.padding * 2 : 0;\n\n      if (me.isHorizontal()) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = textSize;\n      } else {\n        minSize.width = textSize;\n        minSize.height = me.maxHeight; // fill all the height\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$2,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    },\n    // Actually draw the title block on the canvas\n    draw: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n\n      if (opts.display) {\n        var fontOpts = helpers$1.options._parseFont(opts);\n\n        var lineHeight = fontOpts.lineHeight;\n        var offset = lineHeight / 2 + opts.padding;\n        var rotation = 0;\n        var top = me.top;\n        var left = me.left;\n        var bottom = me.bottom;\n        var right = me.right;\n        var maxWidth, titleX, titleY;\n        ctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\n        ctx.font = fontOpts.string; // Horizontal\n\n        if (me.isHorizontal()) {\n          titleX = left + (right - left) / 2; // midpoint of the width\n\n          titleY = top + offset;\n          maxWidth = right - left;\n        } else {\n          titleX = opts.position === 'left' ? left + offset : right - offset;\n          titleY = top + (bottom - top) / 2;\n          maxWidth = bottom - top;\n          rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n        }\n\n        ctx.save();\n        ctx.translate(titleX, titleY);\n        ctx.rotate(rotation);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        var text = opts.text;\n\n        if (helpers$1.isArray(text)) {\n          var y = 0;\n\n          for (var i = 0; i < text.length; ++i) {\n            ctx.fillText(text[i], 0, y, maxWidth);\n            y += lineHeight;\n          }\n        } else {\n          ctx.fillText(text, 0, 0, maxWidth);\n        }\n\n        ctx.restore();\n      }\n    }\n  });\n\n  function createNewTitleBlockAndAttach(chart, titleOpts) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: titleOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, title, titleOpts);\n    core_layouts.addBox(chart, title);\n    chart.titleBlock = title;\n  }\n\n  var plugin_title = {\n    id: 'title',\n\n    /**\n     * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n     * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Title,\n    beforeInit: function beforeInit(chart) {\n      var titleOpts = chart.options.title;\n\n      if (titleOpts) {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var titleOpts = chart.options.title;\n      var titleBlock = chart.titleBlock;\n\n      if (titleOpts) {\n        helpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n        if (titleBlock) {\n          core_layouts.configure(chart, titleBlock, titleOpts);\n          titleBlock.options = titleOpts;\n        } else {\n          createNewTitleBlockAndAttach(chart, titleOpts);\n        }\n      } else if (titleBlock) {\n        core_layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n      }\n    }\n  };\n  var plugins = {};\n  var filler = plugin_filler;\n  var legend = plugin_legend;\n  var title = plugin_title;\n  plugins.filler = filler;\n  plugins.legend = legend;\n  plugins.title = title;\n  /**\n   * @namespace Chart\n   */\n\n  core_controller.helpers = helpers$1; // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\n  core_helpers(core_controller);\n  core_controller._adapters = core_adapters;\n  core_controller.Animation = core_animation;\n  core_controller.animationService = core_animations;\n  core_controller.controllers = controllers;\n  core_controller.DatasetController = core_datasetController;\n  core_controller.defaults = core_defaults;\n  core_controller.Element = core_element;\n  core_controller.elements = elements;\n  core_controller.Interaction = core_interaction;\n  core_controller.layouts = core_layouts;\n  core_controller.platform = platform;\n  core_controller.plugins = core_plugins;\n  core_controller.Scale = core_scale;\n  core_controller.scaleService = core_scaleService;\n  core_controller.Ticks = core_ticks;\n  core_controller.Tooltip = core_tooltip; // Register built-in scales\n\n  core_controller.helpers.each(scales, function (scale, type) {\n    core_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n  }); // Load to register built-in adapters (as side effects)\n  // Loading built-in plugins\n\n  for (var k in plugins) {\n    if (plugins.hasOwnProperty(k)) {\n      core_controller.plugins.register(plugins[k]);\n    }\n  }\n\n  core_controller.platform.initialize();\n  var src = core_controller;\n\n  if (typeof window !== 'undefined') {\n    window.Chart = core_controller;\n  } // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Chart\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  core_controller.Chart = core_controller;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Legend\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Legend = plugins.legend._element;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Title\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Title = plugins.title._element;\n  /**\n   * Provided for backward compatibility, use Chart.plugins instead\n   * @namespace Chart.pluginService\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.pluginService = core_controller.plugins;\n  /**\n   * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n   * effect, instead simply create/register plugins via plain JavaScript objects.\n   * @interface Chart.PluginBase\n   * @deprecated since version 2.5.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.PluginBase = core_controller.Element.extend({});\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas instead.\n   * @namespace Chart.canvasHelpers\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.canvasHelpers = core_controller.helpers.canvas;\n  /**\n   * Provided for backward compatibility, use Chart.layouts instead.\n   * @namespace Chart.layoutService\n   * @deprecated since version 2.7.3\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.layoutService = core_controller.layouts;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.LinearScaleBase\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.LinearScaleBase = scale_linearbase;\n  /**\n   * Provided for backward compatibility, instead we should create a new Chart\n   * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   */\n\n  core_controller.helpers.each(['Bar', 'Bubble', 'Doughnut', 'Line', 'PolarArea', 'Radar', 'Scatter'], function (klass) {\n    core_controller[klass] = function (ctx, cfg) {\n      return new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n        type: klass.charAt(0).toLowerCase() + klass.slice(1)\n      }));\n    };\n  });\n  return src;\n});","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n} // Add methods to `Stack`.\n\n\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\nmodule.exports = Stack;","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || value !== value && other !== other;\n}\n\nmodule.exports = eq;"],"sourceRoot":""}