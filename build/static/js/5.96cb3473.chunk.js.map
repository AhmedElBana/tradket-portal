{"version":3,"sources":["../node_modules/lodash/_nativeCreate.js","../node_modules/lodash/_getMapData.js","../node_modules/lodash/_toKey.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/webpack/buildin/module.js","../node_modules/lodash/_baseIsEqual.js","../node_modules/lodash/_Map.js","../node_modules/lodash/isObject.js","../node_modules/lodash/_MapCache.js","../node_modules/lodash/keys.js","../node_modules/lodash/isLength.js","../node_modules/lodash/_isKey.js","../node_modules/lodash/isSymbol.js","../node_modules/chart.js/dist/Chart.js","../node_modules/lodash/_Stack.js","../node_modules/lodash/eq.js","../node_modules/lodash/isFunction.js","../node_modules/lodash/_freeGlobal.js","../node_modules/lodash/_toSource.js","../node_modules/lodash/_equalArrays.js","../node_modules/lodash/isArguments.js","../node_modules/lodash/isBuffer.js","../node_modules/lodash/_isIndex.js","../node_modules/lodash/isTypedArray.js","../node_modules/lodash/isArrayLike.js","../node_modules/lodash/_isStrictComparable.js","../node_modules/lodash/_matchesStrictComparable.js","../node_modules/lodash/_baseGet.js","../node_modules/lodash/_castPath.js","../node_modules/moment/moment.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/_baseIsEqualDeep.js","../node_modules/lodash/_listCacheClear.js","../node_modules/lodash/_listCacheDelete.js","../node_modules/lodash/_listCacheGet.js","../node_modules/lodash/_listCacheHas.js","../node_modules/lodash/_listCacheSet.js","../node_modules/lodash/_stackClear.js","../node_modules/lodash/_stackDelete.js","../node_modules/lodash/_stackGet.js","../node_modules/lodash/_stackHas.js","../node_modules/lodash/_stackSet.js","../node_modules/lodash/_baseIsNative.js","../node_modules/lodash/_getRawTag.js","../node_modules/lodash/_objectToString.js","../node_modules/lodash/_isMasked.js","../node_modules/lodash/_coreJsData.js","../node_modules/lodash/_getValue.js","../node_modules/lodash/_mapCacheClear.js","../node_modules/lodash/_Hash.js","../node_modules/lodash/_hashClear.js","../node_modules/lodash/_hashDelete.js","../node_modules/lodash/_hashGet.js","../node_modules/lodash/_hashHas.js","../node_modules/lodash/_hashSet.js","../node_modules/lodash/_mapCacheDelete.js","../node_modules/lodash/_isKeyable.js","../node_modules/lodash/_mapCacheGet.js","../node_modules/lodash/_mapCacheHas.js","../node_modules/lodash/_mapCacheSet.js","../node_modules/lodash/_SetCache.js","../node_modules/lodash/_setCacheAdd.js","../node_modules/lodash/_setCacheHas.js","../node_modules/lodash/_arraySome.js","../node_modules/lodash/_cacheHas.js","../node_modules/lodash/_equalByTag.js","../node_modules/lodash/_Uint8Array.js","../node_modules/lodash/_mapToArray.js","../node_modules/lodash/_setToArray.js","../node_modules/lodash/_equalObjects.js","../node_modules/lodash/_getAllKeys.js","../node_modules/lodash/_baseGetAllKeys.js","../node_modules/lodash/_arrayPush.js","../node_modules/lodash/_getSymbols.js","../node_modules/lodash/_arrayFilter.js","../node_modules/lodash/stubArray.js","../node_modules/lodash/_arrayLikeKeys.js","../node_modules/lodash/_baseTimes.js","../node_modules/lodash/_baseIsArguments.js","../node_modules/lodash/stubFalse.js","../node_modules/lodash/_baseIsTypedArray.js","../node_modules/lodash/_baseUnary.js","../node_modules/lodash/_nodeUtil.js","../node_modules/lodash/_baseKeys.js","../node_modules/lodash/_isPrototype.js","../node_modules/lodash/_nativeKeys.js","../node_modules/lodash/_overArg.js","../node_modules/lodash/_getTag.js","../node_modules/lodash/_DataView.js","../node_modules/lodash/_Promise.js","../node_modules/lodash/_Set.js","../node_modules/lodash/_WeakMap.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_baseAssignValue.js","../node_modules/lodash/_defineProperty.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js","../node_modules/lodash/_baseEach.js","../node_modules/lodash/_baseForOwn.js","../node_modules/lodash/_baseFor.js","../node_modules/lodash/_createBaseFor.js","../node_modules/lodash/_createBaseEach.js","../node_modules/lodash/_baseIteratee.js","../node_modules/lodash/_baseMatches.js","../node_modules/lodash/_baseIsMatch.js","../node_modules/lodash/_getMatchData.js","../node_modules/lodash/_baseMatchesProperty.js","../node_modules/lodash/get.js","../node_modules/lodash/_stringToPath.js","../node_modules/lodash/_memoizeCapped.js","../node_modules/lodash/memoize.js","../node_modules/lodash/toString.js","../node_modules/lodash/_baseToString.js","../node_modules/lodash/_arrayMap.js","../node_modules/lodash/hasIn.js","../node_modules/lodash/_baseHasIn.js","../node_modules/lodash/_hasPath.js","../node_modules/lodash/identity.js","../node_modules/lodash/property.js","../node_modules/lodash/_baseProperty.js","../node_modules/lodash/_basePropertyDeep.js","../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/lodash/_root.js","../node_modules/lodash/isArray.js","../node_modules/lodash/_getNative.js","../node_modules/lodash/_baseGetTag.js","../node_modules/lodash/isObjectLike.js","../node_modules/lodash/_ListCache.js","../node_modules/lodash/_assocIndexOf.js","../node_modules/lodash/_Symbol.js"],"names":["nativeCreate","__webpack_require__","getNative","Object","module","exports","isKeyable","map","key","data","__data__","isSymbol","INFINITY","value","result","process","d","__webpack_exports__","Doughnut","Pie","Line","Bar","Radar","Polar","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4___default","_extends","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","_objectWithoutProperties","obj","keys","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","ChartComponent","_React$Component","_temp","_this","this","_len","args","Array","_key","apply","concat","handleOnClick","event","chartInstance","_this$props","props","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","onElementsClick","ref","element","componentWillMount","undefined","componentDidMount","renderChart","componentDidUpdate","redraw","destroyChart","updateChart","shouldComponentUpdate","nextProps","_props","type","options","plugins","legend","height","width","nextData","transformDataProp","shadowDataProp","componentWillUnmount","memoizeDataProps","datasets","set","saveCurrentDatasets","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","forEach","dataset","label","console","error","getCurrentDatasets","config","_this2","_this3","a","helpers","configMerge","currentDatasets","nextDatasets","currentDatasetsIndexed","next","current","splice","point","pid","otherProps","rest","update","_props2","node","defaultProps","values","destroy","render","_props3","id","createElement","onClick","Component","propTypes","oneOfType","object","func","isRequired","number","arrayOf","bool","propName","componentName","controllers","Error","display","position","_React$Component2","_this5","_ref","_React$Component3","_this7","_ref2","_React$Component4","_this9","_ref3","_React$Component5","_this11","_ref4","_React$Component6","HorizontalBar","_this13","_ref5","_React$Component7","_this15","_ref6","_React$Component8","_this17","_ref7","_React$Component9","Bubble","_this19","_ref8","_React$Component10","Scatter","_this21","_ref9","defaults","webpackPolyfill","deprecate","paths","children","defineProperty","get","l","baseIsEqualDeep","isObjectLike","baseIsEqual","other","bitmask","customizer","stack","Map","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","MapCache","entries","index","clear","entry","has","arrayLikeKeys","baseKeys","isArrayLike","MAX_SAFE_INTEGER","isArray","reIsDeepProp","reIsPlainProp","test","baseGetTag","symbolTag","moment","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","lab2lch","hsl2rgb","hsl2hsv","hsl","h","s","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","r","g","b","min","Math","max","delta","w","k","reverseKeywords","JSON","stringify","pow","x","y","z","xyz","t1","t2","t3","val","hi","floor","f","p","q","t","hwb","wh","bl","ratio","cmyk","c","m","lab","y2","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","convert","Converter","arg","slice","pair","exec","from","to","round","convs","routeSpace","space","getValues","setValues","vals","fspace","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","string","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","match","hexAlpha","parseInt","parseFloat","scale","isNaN","num","str","toString","toUpperCase","name","Color","valid","lightness","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","clone","prop","spaces","maxes","charAt","capped","chans","sname","svalues","window","chartjsColor","noop","uid","isNullOrUndef","substr","isObject","isFinite","_isFinite","_x","Number","valueOrDefault","defaultValue","valueAtIndexOrDefault","callback","fn","thisArg","each","loopable","reverse","len","arrayEquals","a0","a1","ilen","v0","v1","klen","_merger","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","inherits","extensions","me","ChartElement","Surrogate","__super__","helpers_core","callCallback","array","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","chart","ctx","clearRect","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","size","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","matches","toPadding","_parseFont","globalDefaults","global","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","resolve","inputs","context","helpers$1","easing","canvas","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","ease","model","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","isNumber","core_element","exports$2","currentStep","numSteps","onAnimationProgress","onAnimationComplete","core_animation","animation","duration","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","Date","now","animating","push","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","_data","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","updateElement","buildOrUpdateElements","isExtensible","method","base","res","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","abs","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderWidth","maxW","maxH","edge","borderSkipped","horizontal","parseBorderSkipped","_inRange","skipX","skipY","bounds","rectangle","element_rectangle","rects","border","outer","inner","boundingRects","fillRect","Arc","Point","Rectangle","resolve$1","hover","mode","categoryPercentage","barPercentage","offset","gridLines","offsetGridLines","controller_bar","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","labels","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacked","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","tooltips","callbacks","title","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","join","generateLabels","ds","arcOpts","bw","e","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","j","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","sort","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","stylesheet","freeze","default","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","property","getStyle","eventListenerOptions","supports","addEventListener","passive","addListener","removeListener","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","document","className","addResizeListener","expando","resizer","expand","shrink","appendChild","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","container","maintainAspectRatio","parentNode","clientWidth","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","acquireContext","getElementById","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","pos","fromNativeEvent","addEvent","removeEvent","implementation","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","cache","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","String","split","createTooltipItem","indexScale","valueScale","getLabelForIndex","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","active","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","body","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","paddingAndSize","radiusAndPadding","getBackgroundPoint","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","resetElements","newOptions","updateConfig","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementsAtXAxis","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","_abstract","DateAdapter","Controller","types","scaleMerge","formats","parse","format","diff","startOf","endOf","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","color","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingRight","paddingBottom","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","sign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","ceil","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","unit","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","generateTicks","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","generateTicks$1","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","interpolate$1","table","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","input","adapter","_adapter","time","parser","determineMajorUnit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","milliseconds","determineStepSize","scale_time","adapters","date","warn","displayFormats","timestamp","timestamps","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","displayFormat","category","radialLinear","FORMATS","_id","valueOf","_format","amount","as","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","p1","d0","d1","doFill","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","log","LOG10E","powerOf10","isPowerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","core_helpers","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","toLowerCase","factory","ListCache","stackClear","stackDelete","stackGet","stackHas","stackSet","Stack","asyncTag","funcTag","genTag","proxyTag","tag","freeGlobal","funcToString","Function","SetCache","arraySome","cacheHas","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","equalFunc","isPartial","arrLength","othLength","seen","arrValue","othValue","compared","othIndex","baseIsArguments","objectProto","propertyIsEnumerable","isArguments","root","stubFalse","freeExports","nodeType","freeModule","Buffer","isBuffer","reIsUint","baseIsTypedArray","baseUnary","nodeUtil","nodeIsTypedArray","isTypedArray","isFunction","isLength","srcValue","castPath","toKey","path","isKey","stringToPath","hookCallback","some","hooks","isUndefined","isDate","arr","hasOwnProp","createUTC","locale","strict","createLocalOrUTC","utc","getParsingFlags","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","_isValid","flags","parsedParts","isNowValid","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","fun","momentProperties","copyConfig","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","updateInProgress","Moment","updateOffset","isMoment","absFloor","toInt","argumentForCoercion","coercedNumber","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","msg","suppressDeprecationWarnings","firstTime","deprecationHandler","deprecations","deprecateSimple","mergeConfigs","parentConfig","childConfig","Locale","aliases","addUnitAlias","shorthand","lowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","zeroFill","targetLength","forceSign","absNumber","zerosToFill","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","localeData","formatMoment","expandFormat","replace","mom","output","makeFormatFunction","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","RegExp","regexEscape","matched","p2","p3","p4","tokens","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","daysInYear","isLeapYear","parseTwoDigitYear","getSetYear","makeGetSet","keepTime","set$1","daysInMonth","modMonth","o","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","MONTHS_IN_FORMAT","defaultLocaleMonths","defaultLocaleMonthsShort","setMonth","dayOfMonth","getSetMonth","defaultMonthsShortRegex","defaultMonthsRegex","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","shiftWeekdays","ws","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minp","shortp","longp","minPieces","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","hh","dd","M","MM","yy","meridiemParse","locales","localeFamilies","normalizeLocale","loadLocale","oldLocale","_abbr","code","getSetGlobalLocale","getLocale","defineLocale","abbr","_config","parentLocale","names","chooseLocale","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","_useUTC","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","currentDateArray","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","_week","curWeek","gg","_dayOfYear","dayOfYearFromWeekInfo","_nextDay","ms","setFullYear","getDay","setUTCMinutes","getUTCMinutes","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","configFromStringAndFormat","untruncateYear","yearStr","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromRFC2822","parsedArray","monthStr","dayStr","hourStr","minuteStr","secondStr","extractFromRFC2822Strings","weekdayStr","parsedInput","weekdayProvided","weekdayActual","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","isPm","meridiemHour","meridiemFixWrap","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromStringAndArray","createFromInputFallback","configFromString","configFromObject","configFromInput","isUTC","getOwnPropertyNames","isObjectEmpty","createFromConfig","prototypeMin","prototypeMax","pickBy","moments","ordering","Duration","years","quarters","weeks","isoWeek","days","unitHasDecimal","isDurationValid","_milliseconds","_days","_months","_bubble","isDuration","absRound","separator","utcOffset","offsetFromString","chunkOffset","matcher","parts","cloneWithOffset","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","ret","diffRes","parseIso","isBefore","positiveMomentsDifference","momentsDifference","inp","isAfter","createAdder","direction","period","addSubtract","isAdding","invalid","subtract","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","addWeekYearFormatToken","getter","getSetWeekYearHelper","weeksTarget","dayOfYearData","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetSecond","parseMs","getSetMillisecond","proto","preParsePostFormat","sod","calendarFormat","asFloat","that","zoneDelta","startOfDate","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","u","getPrioritizedUnits","toArray","toObject","toDate","toISOString","keepOffset","inspect","zone","isLocal","prefix","suffix","unix","creationData","isoWeeks","weekInfo","isoWeeksInYear","parseWeekday","parseIsoWeekday","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","proto$1","get$1","field","setter","listMonthsImpl","listWeekdaysImpl","localeSorted","_calendar","_longDateFormat","formatUpper","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","isFormat","_monthsShort","monthName","_monthsParseExact","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","weekdayName","_weekdaysParseExact","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","makeGetter","thresholds","abs$1","toISOString$1","Y","D","totalSign","ymSign","daysSign","hmsSign","proto$2","monthsFromDays","withSuffix","posNegDuration","relativeTime$1","toIsoString","version","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","limit","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","equalArrays","equalByTag","equalObjects","getTag","argsTag","arrayTag","objectTag","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","assocIndexOf","LARGE_ARRAY_SIZE","pairs","isMasked","toSource","reIsHostCtor","funcProto","reIsNative","Symbol","nativeObjectToString","symToStringTag","toStringTag","isOwn","unmasked","coreJsData","maskSrcKey","IE_PROTO","Hash","hashClear","hashDelete","hashGet","hashHas","hashSet","HASH_UNDEFINED","getMapData","setCacheAdd","setCacheHas","predicate","Uint8Array","eq","mapToArray","setToArray","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","arrayBufferTag","dataViewTag","symbolProto","symbolValueOf","byteLength","byteOffset","buffer","message","getAllKeys","objProps","objLength","skipCtor","objValue","objCtor","othCtor","baseGetAllKeys","getSymbols","arrayPush","keysFunc","symbolsFunc","arrayFilter","stubArray","nativeGetSymbols","getOwnPropertySymbols","symbol","resIndex","baseTimes","isIndex","inherited","isArr","isArg","isBuff","isType","skipIndexes","iteratee","typedArrayTags","freeProcess","require","binding","isPrototype","nativeKeys","Ctor","overArg","transform","DataView","Promise","Set","WeakMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","ArrayBuffer","ctorString","baseAssignValue","keyBy","createAggregator","arrayAggregator","baseAggregator","baseIteratee","initializer","accumulator","baseEach","baseForOwn","createBaseEach","baseFor","createBaseFor","fromRight","iterable","eachFunc","baseMatches","baseMatchesProperty","identity","baseIsMatch","getMatchData","matchesStrictComparable","matchData","noCustomizer","isStrictComparable","hasIn","baseGet","memoizeCapped","rePropName","reEscapeChar","charCodeAt","quote","subString","memoize","MAX_MEMOIZE_SIZE","FUNC_ERROR_TEXT","resolver","memoized","Cache","baseToString","arrayMap","symbolToString","baseHasIn","hasPath","hasFunc","baseProperty","basePropertyDeep","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","inverse","outline","cssModule","innerRef","Card","Tag","attributes","classes","CardBody","freeSelf","baseIsNative","getValue","getRawTag","objectToString","nullTag","undefinedTag","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet"],"mappings":"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","file":"static/js/5.96cb3473.chunk.js","sourcesContent":["var getNative = require('./_getNative');\n/* Built-in method references that are verified to be native. */\n\n\nvar nativeCreate = getNative(Object, 'create');\nmodule.exports = nativeCreate;","var isKeyable = require('./_isKeyable');\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\n\n\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;\n}\n\nmodule.exports = getMapData;","var isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\n\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = toKey;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.destroyChart();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.destroyChart();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    this.saveCurrentDatasets(); // to remove the dataset metadata from this chart when the chart is destroyed\n\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.getCurrentDatasets = function getCurrentDatasets() {\n    return this.chartInstance && this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n  };\n\n  ChartComponent.prototype.saveCurrentDatasets = function saveCurrentDatasets() {\n    var _this2 = this;\n\n    this.datasets = this.datasets || {};\n    var currentDatasets = this.getCurrentDatasets();\n    currentDatasets.forEach(function (d) {\n      _this2.datasets[_this2.props.datasetKeyProvider(d)] = d;\n    });\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this3 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.getCurrentDatasets();\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this3.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.destroyChart = function destroyChart() {\n    // Put all of the datasets that have existed in the chart back on the chart\n    // so that the metadata associated with this chart get destroyed.\n    // This allows the datasets to be used in another chart. This can happen,\n    // for example, in a tabbed UI where the chart gets created each time the\n    // tab gets switched to the chart and uses the same data).\n    this.saveCurrentDatasets();\n    var datasets = Object.values(this.datasets);\n    this.chartInstance.config.data.datasets = datasets;\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this5 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this5.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this7 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this7.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this9 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this9.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this11 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this11.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this13 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this13.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this15 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this15.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this17 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this17.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this19 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this19.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this21 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this21.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","module.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\n\n\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n\n  if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {\n    return value !== value && other !== other;\n  }\n\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Map = getNative(root, 'Map');\nmodule.exports = Map;","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `MapCache`.\n\n\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\nmodule.exports = MapCache;","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\n\n\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\n\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used to match property names within property paths. */\n\n\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\n\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n\n  var type = typeof value;\n\n  if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {\n    return true;\n  }\n\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);\n}\n\nmodule.exports = isKey;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar symbolTag = '[object Symbol]';\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;\n}\n\nmodule.exports = isSymbol;","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function () {\n    try {\n      return require('moment');\n    } catch (e) {}\n  }()) : typeof define === 'function' && define.amd ? define(['require'], function (require) {\n    return factory(function () {\n      try {\n        return require('moment');\n      } catch (e) {}\n    }());\n  }) : global.Chart = factory(global.moment);\n})(this, function (moment) {\n  'use strict';\n\n  moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n  /* MIT license */\n\n  var conversions = {\n    rgb2hsl: rgb2hsl,\n    rgb2hsv: rgb2hsv,\n    rgb2hwb: rgb2hwb,\n    rgb2cmyk: rgb2cmyk,\n    rgb2keyword: rgb2keyword,\n    rgb2xyz: rgb2xyz,\n    rgb2lab: rgb2lab,\n    rgb2lch: rgb2lch,\n    hsl2rgb: hsl2rgb,\n    hsl2hsv: hsl2hsv,\n    hsl2hwb: hsl2hwb,\n    hsl2cmyk: hsl2cmyk,\n    hsl2keyword: hsl2keyword,\n    hsv2rgb: hsv2rgb,\n    hsv2hsl: hsv2hsl,\n    hsv2hwb: hsv2hwb,\n    hsv2cmyk: hsv2cmyk,\n    hsv2keyword: hsv2keyword,\n    hwb2rgb: hwb2rgb,\n    hwb2hsl: hwb2hsl,\n    hwb2hsv: hwb2hsv,\n    hwb2cmyk: hwb2cmyk,\n    hwb2keyword: hwb2keyword,\n    cmyk2rgb: cmyk2rgb,\n    cmyk2hsl: cmyk2hsl,\n    cmyk2hsv: cmyk2hsv,\n    cmyk2hwb: cmyk2hwb,\n    cmyk2keyword: cmyk2keyword,\n    keyword2rgb: keyword2rgb,\n    keyword2hsl: keyword2hsl,\n    keyword2hsv: keyword2hsv,\n    keyword2hwb: keyword2hwb,\n    keyword2cmyk: keyword2cmyk,\n    keyword2lab: keyword2lab,\n    keyword2xyz: keyword2xyz,\n    xyz2rgb: xyz2rgb,\n    xyz2lab: xyz2lab,\n    xyz2lch: xyz2lch,\n    lab2xyz: lab2xyz,\n    lab2rgb: lab2rgb,\n    lab2lch: lab2lch,\n    lch2lab: lch2lab,\n    lch2xyz: lch2xyz,\n    lch2rgb: lch2rgb\n  };\n\n  function rgb2hsl(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        l;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    l = (min + max) / 2;\n    if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n    return [h, s * 100, l * 100];\n  }\n\n  function rgb2hsv(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        v;\n    if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    v = max / 255 * 1000 / 10;\n    return [h, s, v];\n  }\n\n  function rgb2hwb(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        h = rgb2hsl(rgb)[0],\n        w = 1 / 255 * Math.min(r, Math.min(g, b)),\n        b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n    return [h, w * 100, b * 100];\n  }\n\n  function rgb2cmyk(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        c,\n        m,\n        y,\n        k;\n    k = Math.min(1 - r, 1 - g, 1 - b);\n    c = (1 - r - k) / (1 - k) || 0;\n    m = (1 - g - k) / (1 - k) || 0;\n    y = (1 - b - k) / (1 - k) || 0;\n    return [c * 100, m * 100, y * 100, k * 100];\n  }\n\n  function rgb2keyword(rgb) {\n    return reverseKeywords[JSON.stringify(rgb)];\n  }\n\n  function rgb2xyz(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255; // assume sRGB\n\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n    var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n    var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n    return [x * 100, y * 100, z * 100];\n  }\n\n  function rgb2lab(rgb) {\n    var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function rgb2lch(args) {\n    return lab2lch(rgb2lab(args));\n  }\n\n  function hsl2rgb(hsl) {\n    var h = hsl[0] / 360,\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        t1,\n        t2,\n        t3,\n        rgb,\n        val;\n\n    if (s == 0) {\n      val = l * 255;\n      return [val, val, val];\n    }\n\n    if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n    t1 = 2 * l - t2;\n    rgb = [0, 0, 0];\n\n    for (var i = 0; i < 3; i++) {\n      t3 = h + 1 / 3 * -(i - 1);\n      t3 < 0 && t3++;\n      t3 > 1 && t3--;\n      if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n      rgb[i] = val * 255;\n    }\n\n    return rgb;\n  }\n\n  function hsl2hsv(hsl) {\n    var h = hsl[0],\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        sv,\n        v;\n\n    if (l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n    }\n\n    l *= 2;\n    s *= l <= 1 ? l : 2 - l;\n    v = (l + s) / 2;\n    sv = 2 * s / (l + s);\n    return [h, sv * 100, v * 100];\n  }\n\n  function hsl2hwb(args) {\n    return rgb2hwb(hsl2rgb(args));\n  }\n\n  function hsl2cmyk(args) {\n    return rgb2cmyk(hsl2rgb(args));\n  }\n\n  function hsl2keyword(args) {\n    return rgb2keyword(hsl2rgb(args));\n  }\n\n  function hsv2rgb(hsv) {\n    var h = hsv[0] / 60,\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        hi = Math.floor(h) % 6;\n    var f = h - Math.floor(h),\n        p = 255 * v * (1 - s),\n        q = 255 * v * (1 - s * f),\n        t = 255 * v * (1 - s * (1 - f)),\n        v = 255 * v;\n\n    switch (hi) {\n      case 0:\n        return [v, t, p];\n\n      case 1:\n        return [q, v, p];\n\n      case 2:\n        return [p, v, t];\n\n      case 3:\n        return [p, q, v];\n\n      case 4:\n        return [t, p, v];\n\n      case 5:\n        return [v, p, q];\n    }\n  }\n\n  function hsv2hsl(hsv) {\n    var h = hsv[0],\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        sl,\n        l;\n    l = (2 - s) * v;\n    sl = s * v;\n    sl /= l <= 1 ? l : 2 - l;\n    sl = sl || 0;\n    l /= 2;\n    return [h, sl * 100, l * 100];\n  }\n\n  function hsv2hwb(args) {\n    return rgb2hwb(hsv2rgb(args));\n  }\n\n  function hsv2cmyk(args) {\n    return rgb2cmyk(hsv2rgb(args));\n  }\n\n  function hsv2keyword(args) {\n    return rgb2keyword(hsv2rgb(args));\n  } // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\n  function hwb2rgb(hwb) {\n    var h = hwb[0] / 360,\n        wh = hwb[1] / 100,\n        bl = hwb[2] / 100,\n        ratio = wh + bl,\n        i,\n        v,\n        f,\n        n; // wh + bl cant be > 1\n\n    if (ratio > 1) {\n      wh /= ratio;\n      bl /= ratio;\n    }\n\n    i = Math.floor(6 * h);\n    v = 1 - bl;\n    f = 6 * h - i;\n\n    if ((i & 0x01) != 0) {\n      f = 1 - f;\n    }\n\n    n = wh + f * (v - wh); // linear interpolation\n\n    switch (i) {\n      default:\n      case 6:\n      case 0:\n        r = v;\n        g = n;\n        b = wh;\n        break;\n\n      case 1:\n        r = n;\n        g = v;\n        b = wh;\n        break;\n\n      case 2:\n        r = wh;\n        g = v;\n        b = n;\n        break;\n\n      case 3:\n        r = wh;\n        g = n;\n        b = v;\n        break;\n\n      case 4:\n        r = n;\n        g = wh;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = wh;\n        b = n;\n        break;\n    }\n\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function hwb2hsl(args) {\n    return rgb2hsl(hwb2rgb(args));\n  }\n\n  function hwb2hsv(args) {\n    return rgb2hsv(hwb2rgb(args));\n  }\n\n  function hwb2cmyk(args) {\n    return rgb2cmyk(hwb2rgb(args));\n  }\n\n  function hwb2keyword(args) {\n    return rgb2keyword(hwb2rgb(args));\n  }\n\n  function cmyk2rgb(cmyk) {\n    var c = cmyk[0] / 100,\n        m = cmyk[1] / 100,\n        y = cmyk[2] / 100,\n        k = cmyk[3] / 100,\n        r,\n        g,\n        b;\n    r = 1 - Math.min(1, c * (1 - k) + k);\n    g = 1 - Math.min(1, m * (1 - k) + k);\n    b = 1 - Math.min(1, y * (1 - k) + k);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function cmyk2hsl(args) {\n    return rgb2hsl(cmyk2rgb(args));\n  }\n\n  function cmyk2hsv(args) {\n    return rgb2hsv(cmyk2rgb(args));\n  }\n\n  function cmyk2hwb(args) {\n    return rgb2hwb(cmyk2rgb(args));\n  }\n\n  function cmyk2keyword(args) {\n    return rgb2keyword(cmyk2rgb(args));\n  }\n\n  function xyz2rgb(xyz) {\n    var x = xyz[0] / 100,\n        y = xyz[1] / 100,\n        z = xyz[2] / 100,\n        r,\n        g,\n        b;\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n    r = Math.min(Math.max(0, r), 1);\n    g = Math.min(Math.max(0, g), 1);\n    b = Math.min(Math.max(0, b), 1);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function xyz2lab(xyz) {\n    var x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function xyz2lch(args) {\n    return lab2lch(xyz2lab(args));\n  }\n\n  function lab2xyz(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        x,\n        y,\n        z,\n        y2;\n\n    if (l <= 8) {\n      y = l * 100 / 903.3;\n      y2 = 7.787 * (y / 100) + 16 / 116;\n    } else {\n      y = 100 * Math.pow((l + 16) / 116, 3);\n      y2 = Math.pow(y / 100, 1 / 3);\n    }\n\n    x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n    z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n    return [x, y, z];\n  }\n\n  function lab2lch(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        hr,\n        h,\n        c;\n    hr = Math.atan2(b, a);\n    h = hr * 360 / 2 / Math.PI;\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    c = Math.sqrt(a * a + b * b);\n    return [l, c, h];\n  }\n\n  function lab2rgb(args) {\n    return xyz2rgb(lab2xyz(args));\n  }\n\n  function lch2lab(lch) {\n    var l = lch[0],\n        c = lch[1],\n        h = lch[2],\n        a,\n        b,\n        hr;\n    hr = h / 360 * 2 * Math.PI;\n    a = c * Math.cos(hr);\n    b = c * Math.sin(hr);\n    return [l, a, b];\n  }\n\n  function lch2xyz(args) {\n    return lab2xyz(lch2lab(args));\n  }\n\n  function lch2rgb(args) {\n    return lab2rgb(lch2lab(args));\n  }\n\n  function keyword2rgb(keyword) {\n    return cssKeywords[keyword];\n  }\n\n  function keyword2hsl(args) {\n    return rgb2hsl(keyword2rgb(args));\n  }\n\n  function keyword2hsv(args) {\n    return rgb2hsv(keyword2rgb(args));\n  }\n\n  function keyword2hwb(args) {\n    return rgb2hwb(keyword2rgb(args));\n  }\n\n  function keyword2cmyk(args) {\n    return rgb2cmyk(keyword2rgb(args));\n  }\n\n  function keyword2lab(args) {\n    return rgb2lab(keyword2rgb(args));\n  }\n\n  function keyword2xyz(args) {\n    return rgb2xyz(keyword2rgb(args));\n  }\n\n  var cssKeywords = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50]\n  };\n  var reverseKeywords = {};\n\n  for (var key in cssKeywords) {\n    reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n  }\n\n  var convert = function convert() {\n    return new Converter();\n  };\n\n  for (var func in conversions) {\n    // export Raw versions\n    convert[func + \"Raw\"] = function (func) {\n      // accept array or plain args\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        return conversions[func](arg);\n      };\n    }(func);\n\n    var pair = /(\\w+)2(\\w+)/.exec(func),\n        from = pair[1],\n        to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n    convert[from] = convert[from] || {};\n\n    convert[from][to] = convert[func] = function (func) {\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        var val = conversions[func](arg);\n        if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n        for (var i = 0; i < val.length; i++) {\n          val[i] = Math.round(val[i]);\n        }\n\n        return val;\n      };\n    }(func);\n  }\n  /* Converter does lazy conversion and caching */\n\n\n  var Converter = function Converter() {\n    this.convs = {};\n  };\n  /* Either get the values for a space or\n    set the values for a space, depending on args */\n\n\n  Converter.prototype.routeSpace = function (space, args) {\n    var values = args[0];\n\n    if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);\n    }\n\n    return this.setValues(space, values);\n  };\n  /* Set the values for a space, invalidating cache */\n\n\n  Converter.prototype.setValues = function (space, values) {\n    this.space = space;\n    this.convs = {};\n    this.convs[space] = values;\n    return this;\n  };\n  /* Get the values for a space. If there's already\n    a conversion for the space, fetch it, otherwise\n    compute it */\n\n\n  Converter.prototype.getValues = function (space) {\n    var vals = this.convs[space];\n\n    if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n      this.convs[space] = vals;\n    }\n\n    return vals;\n  };\n\n  [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n    Converter.prototype[space] = function (vals) {\n      return this.routeSpace(space, arguments);\n    };\n  });\n  var colorConvert = convert;\n  var colorName = {\n    \"aliceblue\": [240, 248, 255],\n    \"antiquewhite\": [250, 235, 215],\n    \"aqua\": [0, 255, 255],\n    \"aquamarine\": [127, 255, 212],\n    \"azure\": [240, 255, 255],\n    \"beige\": [245, 245, 220],\n    \"bisque\": [255, 228, 196],\n    \"black\": [0, 0, 0],\n    \"blanchedalmond\": [255, 235, 205],\n    \"blue\": [0, 0, 255],\n    \"blueviolet\": [138, 43, 226],\n    \"brown\": [165, 42, 42],\n    \"burlywood\": [222, 184, 135],\n    \"cadetblue\": [95, 158, 160],\n    \"chartreuse\": [127, 255, 0],\n    \"chocolate\": [210, 105, 30],\n    \"coral\": [255, 127, 80],\n    \"cornflowerblue\": [100, 149, 237],\n    \"cornsilk\": [255, 248, 220],\n    \"crimson\": [220, 20, 60],\n    \"cyan\": [0, 255, 255],\n    \"darkblue\": [0, 0, 139],\n    \"darkcyan\": [0, 139, 139],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"darkgray\": [169, 169, 169],\n    \"darkgreen\": [0, 100, 0],\n    \"darkgrey\": [169, 169, 169],\n    \"darkkhaki\": [189, 183, 107],\n    \"darkmagenta\": [139, 0, 139],\n    \"darkolivegreen\": [85, 107, 47],\n    \"darkorange\": [255, 140, 0],\n    \"darkorchid\": [153, 50, 204],\n    \"darkred\": [139, 0, 0],\n    \"darksalmon\": [233, 150, 122],\n    \"darkseagreen\": [143, 188, 143],\n    \"darkslateblue\": [72, 61, 139],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"darkturquoise\": [0, 206, 209],\n    \"darkviolet\": [148, 0, 211],\n    \"deeppink\": [255, 20, 147],\n    \"deepskyblue\": [0, 191, 255],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"dodgerblue\": [30, 144, 255],\n    \"firebrick\": [178, 34, 34],\n    \"floralwhite\": [255, 250, 240],\n    \"forestgreen\": [34, 139, 34],\n    \"fuchsia\": [255, 0, 255],\n    \"gainsboro\": [220, 220, 220],\n    \"ghostwhite\": [248, 248, 255],\n    \"gold\": [255, 215, 0],\n    \"goldenrod\": [218, 165, 32],\n    \"gray\": [128, 128, 128],\n    \"green\": [0, 128, 0],\n    \"greenyellow\": [173, 255, 47],\n    \"grey\": [128, 128, 128],\n    \"honeydew\": [240, 255, 240],\n    \"hotpink\": [255, 105, 180],\n    \"indianred\": [205, 92, 92],\n    \"indigo\": [75, 0, 130],\n    \"ivory\": [255, 255, 240],\n    \"khaki\": [240, 230, 140],\n    \"lavender\": [230, 230, 250],\n    \"lavenderblush\": [255, 240, 245],\n    \"lawngreen\": [124, 252, 0],\n    \"lemonchiffon\": [255, 250, 205],\n    \"lightblue\": [173, 216, 230],\n    \"lightcoral\": [240, 128, 128],\n    \"lightcyan\": [224, 255, 255],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"lightgray\": [211, 211, 211],\n    \"lightgreen\": [144, 238, 144],\n    \"lightgrey\": [211, 211, 211],\n    \"lightpink\": [255, 182, 193],\n    \"lightsalmon\": [255, 160, 122],\n    \"lightseagreen\": [32, 178, 170],\n    \"lightskyblue\": [135, 206, 250],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"lightsteelblue\": [176, 196, 222],\n    \"lightyellow\": [255, 255, 224],\n    \"lime\": [0, 255, 0],\n    \"limegreen\": [50, 205, 50],\n    \"linen\": [250, 240, 230],\n    \"magenta\": [255, 0, 255],\n    \"maroon\": [128, 0, 0],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"mediumblue\": [0, 0, 205],\n    \"mediumorchid\": [186, 85, 211],\n    \"mediumpurple\": [147, 112, 219],\n    \"mediumseagreen\": [60, 179, 113],\n    \"mediumslateblue\": [123, 104, 238],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"mediumturquoise\": [72, 209, 204],\n    \"mediumvioletred\": [199, 21, 133],\n    \"midnightblue\": [25, 25, 112],\n    \"mintcream\": [245, 255, 250],\n    \"mistyrose\": [255, 228, 225],\n    \"moccasin\": [255, 228, 181],\n    \"navajowhite\": [255, 222, 173],\n    \"navy\": [0, 0, 128],\n    \"oldlace\": [253, 245, 230],\n    \"olive\": [128, 128, 0],\n    \"olivedrab\": [107, 142, 35],\n    \"orange\": [255, 165, 0],\n    \"orangered\": [255, 69, 0],\n    \"orchid\": [218, 112, 214],\n    \"palegoldenrod\": [238, 232, 170],\n    \"palegreen\": [152, 251, 152],\n    \"paleturquoise\": [175, 238, 238],\n    \"palevioletred\": [219, 112, 147],\n    \"papayawhip\": [255, 239, 213],\n    \"peachpuff\": [255, 218, 185],\n    \"peru\": [205, 133, 63],\n    \"pink\": [255, 192, 203],\n    \"plum\": [221, 160, 221],\n    \"powderblue\": [176, 224, 230],\n    \"purple\": [128, 0, 128],\n    \"rebeccapurple\": [102, 51, 153],\n    \"red\": [255, 0, 0],\n    \"rosybrown\": [188, 143, 143],\n    \"royalblue\": [65, 105, 225],\n    \"saddlebrown\": [139, 69, 19],\n    \"salmon\": [250, 128, 114],\n    \"sandybrown\": [244, 164, 96],\n    \"seagreen\": [46, 139, 87],\n    \"seashell\": [255, 245, 238],\n    \"sienna\": [160, 82, 45],\n    \"silver\": [192, 192, 192],\n    \"skyblue\": [135, 206, 235],\n    \"slateblue\": [106, 90, 205],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"snow\": [255, 250, 250],\n    \"springgreen\": [0, 255, 127],\n    \"steelblue\": [70, 130, 180],\n    \"tan\": [210, 180, 140],\n    \"teal\": [0, 128, 128],\n    \"thistle\": [216, 191, 216],\n    \"tomato\": [255, 99, 71],\n    \"turquoise\": [64, 224, 208],\n    \"violet\": [238, 130, 238],\n    \"wheat\": [245, 222, 179],\n    \"white\": [255, 255, 255],\n    \"whitesmoke\": [245, 245, 245],\n    \"yellow\": [255, 255, 0],\n    \"yellowgreen\": [154, 205, 50]\n  };\n  /* MIT license */\n\n  var colorString = {\n    getRgba: getRgba,\n    getHsla: getHsla,\n    getRgb: getRgb,\n    getHsl: getHsl,\n    getHwb: getHwb,\n    getAlpha: getAlpha,\n    hexString: hexString,\n    rgbString: rgbString,\n    rgbaString: rgbaString,\n    percentString: percentString,\n    percentaString: percentaString,\n    hslString: hslString,\n    hslaString: hslaString,\n    hwbString: hwbString,\n    keyword: keyword\n  };\n\n  function getRgba(string) {\n    if (!string) {\n      return;\n    }\n\n    var abbr = /^#([a-fA-F0-9]{3,4})$/i,\n        hex = /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n        rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        keyword = /(\\w+)/;\n    var rgb = [0, 0, 0],\n        a = 1,\n        match = string.match(abbr),\n        hexAlpha = \"\";\n\n    if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i + 1]);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n        return [0, 0, 0, 0];\n      }\n\n      rgb = colorName[match[1]];\n\n      if (!rgb) {\n        return;\n      }\n    }\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n    }\n\n    if (!a && a != 0) {\n      a = 1;\n    } else {\n      a = scale(a, 0, 1);\n    }\n\n    rgb[3] = a;\n    return rgb;\n  }\n\n  function getHsla(string) {\n    if (!string) {\n      return;\n    }\n\n    var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hsl);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n    }\n  }\n\n  function getHwb(string) {\n    if (!string) {\n      return;\n    }\n\n    var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hwb);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n    }\n  }\n\n  function getRgb(string) {\n    var rgba = getRgba(string);\n    return rgba && rgba.slice(0, 3);\n  }\n\n  function getHsl(string) {\n    var hsla = getHsla(string);\n    return hsla && hsla.slice(0, 3);\n  }\n\n  function getAlpha(string) {\n    var vals = getRgba(string);\n\n    if (vals) {\n      return vals[3];\n    } else if (vals = getHsla(string)) {\n      return vals[3];\n    } else if (vals = getHwb(string)) {\n      return vals[3];\n    }\n  } // generators\n\n\n  function hexString(rgba, a) {\n    var a = a !== undefined && rgba.length === 3 ? a : rgba[3];\n    return \"#\" + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (a >= 0 && a < 1 ? hexDouble(Math.round(a * 255)) : \"\");\n  }\n\n  function rgbString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return rgbaString(rgba, alpha);\n    }\n\n    return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n  }\n\n  function rgbaString(rgba, alpha) {\n    if (alpha === undefined) {\n      alpha = rgba[3] !== undefined ? rgba[3] : 1;\n    }\n\n    return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n  }\n\n  function percentString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return percentaString(rgba, alpha);\n    }\n\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n  }\n\n  function percentaString(rgba, alpha) {\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n  }\n\n  function hslString(hsla, alpha) {\n    if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n      return hslaString(hsla, alpha);\n    }\n\n    return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n  }\n\n  function hslaString(hsla, alpha) {\n    if (alpha === undefined) {\n      alpha = hsla[3] !== undefined ? hsla[3] : 1;\n    }\n\n    return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n  } // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n  // (hwb have alpha optional & 1 is default value)\n\n\n  function hwbString(hwb, alpha) {\n    if (alpha === undefined) {\n      alpha = hwb[3] !== undefined ? hwb[3] : 1;\n    }\n\n    return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n  }\n\n  function keyword(rgb) {\n    return reverseNames[rgb.slice(0, 3)];\n  } // helpers\n\n\n  function scale(num, min, max) {\n    return Math.min(Math.max(min, num), max);\n  }\n\n  function hexDouble(num) {\n    var str = num.toString(16).toUpperCase();\n    return str.length < 2 ? \"0\" + str : str;\n  } //create a list of reverse color names\n\n\n  var reverseNames = {};\n\n  for (var name in colorName) {\n    reverseNames[colorName[name]] = name;\n  }\n  /* MIT license */\n\n\n  var Color = function Color(obj) {\n    if (obj instanceof Color) {\n      return obj;\n    }\n\n    if (!(this instanceof Color)) {\n      return new Color(obj);\n    }\n\n    this.valid = false;\n    this.values = {\n      rgb: [0, 0, 0],\n      hsl: [0, 0, 0],\n      hsv: [0, 0, 0],\n      hwb: [0, 0, 0],\n      cmyk: [0, 0, 0, 0],\n      alpha: 1\n    }; // parse Color() argument\n\n    var vals;\n\n    if (typeof obj === 'string') {\n      vals = colorString.getRgba(obj);\n\n      if (vals) {\n        this.setValues('rgb', vals);\n      } else if (vals = colorString.getHsla(obj)) {\n        this.setValues('hsl', vals);\n      } else if (vals = colorString.getHwb(obj)) {\n        this.setValues('hwb', vals);\n      }\n    } else if (typeof obj === 'object') {\n      vals = obj;\n\n      if (vals.r !== undefined || vals.red !== undefined) {\n        this.setValues('rgb', vals);\n      } else if (vals.l !== undefined || vals.lightness !== undefined) {\n        this.setValues('hsl', vals);\n      } else if (vals.v !== undefined || vals.value !== undefined) {\n        this.setValues('hsv', vals);\n      } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n        this.setValues('hwb', vals);\n      } else if (vals.c !== undefined || vals.cyan !== undefined) {\n        this.setValues('cmyk', vals);\n      }\n    }\n  };\n\n  Color.prototype = {\n    isValid: function isValid() {\n      return this.valid;\n    },\n    rgb: function rgb() {\n      return this.setSpace('rgb', arguments);\n    },\n    hsl: function hsl() {\n      return this.setSpace('hsl', arguments);\n    },\n    hsv: function hsv() {\n      return this.setSpace('hsv', arguments);\n    },\n    hwb: function hwb() {\n      return this.setSpace('hwb', arguments);\n    },\n    cmyk: function cmyk() {\n      return this.setSpace('cmyk', arguments);\n    },\n    rgbArray: function rgbArray() {\n      return this.values.rgb;\n    },\n    hslArray: function hslArray() {\n      return this.values.hsl;\n    },\n    hsvArray: function hsvArray() {\n      return this.values.hsv;\n    },\n    hwbArray: function hwbArray() {\n      var values = this.values;\n\n      if (values.alpha !== 1) {\n        return values.hwb.concat([values.alpha]);\n      }\n\n      return values.hwb;\n    },\n    cmykArray: function cmykArray() {\n      return this.values.cmyk;\n    },\n    rgbaArray: function rgbaArray() {\n      var values = this.values;\n      return values.rgb.concat([values.alpha]);\n    },\n    hslaArray: function hslaArray() {\n      var values = this.values;\n      return values.hsl.concat([values.alpha]);\n    },\n    alpha: function alpha(val) {\n      if (val === undefined) {\n        return this.values.alpha;\n      }\n\n      this.setValues('alpha', val);\n      return this;\n    },\n    red: function red(val) {\n      return this.setChannel('rgb', 0, val);\n    },\n    green: function green(val) {\n      return this.setChannel('rgb', 1, val);\n    },\n    blue: function blue(val) {\n      return this.setChannel('rgb', 2, val);\n    },\n    hue: function hue(val) {\n      if (val) {\n        val %= 360;\n        val = val < 0 ? 360 + val : val;\n      }\n\n      return this.setChannel('hsl', 0, val);\n    },\n    saturation: function saturation(val) {\n      return this.setChannel('hsl', 1, val);\n    },\n    lightness: function lightness(val) {\n      return this.setChannel('hsl', 2, val);\n    },\n    saturationv: function saturationv(val) {\n      return this.setChannel('hsv', 1, val);\n    },\n    whiteness: function whiteness(val) {\n      return this.setChannel('hwb', 1, val);\n    },\n    blackness: function blackness(val) {\n      return this.setChannel('hwb', 2, val);\n    },\n    value: function value(val) {\n      return this.setChannel('hsv', 2, val);\n    },\n    cyan: function cyan(val) {\n      return this.setChannel('cmyk', 0, val);\n    },\n    magenta: function magenta(val) {\n      return this.setChannel('cmyk', 1, val);\n    },\n    yellow: function yellow(val) {\n      return this.setChannel('cmyk', 2, val);\n    },\n    black: function black(val) {\n      return this.setChannel('cmyk', 3, val);\n    },\n    hexString: function hexString() {\n      return colorString.hexString(this.values.rgb);\n    },\n    rgbString: function rgbString() {\n      return colorString.rgbString(this.values.rgb, this.values.alpha);\n    },\n    rgbaString: function rgbaString() {\n      return colorString.rgbaString(this.values.rgb, this.values.alpha);\n    },\n    percentString: function percentString() {\n      return colorString.percentString(this.values.rgb, this.values.alpha);\n    },\n    hslString: function hslString() {\n      return colorString.hslString(this.values.hsl, this.values.alpha);\n    },\n    hslaString: function hslaString() {\n      return colorString.hslaString(this.values.hsl, this.values.alpha);\n    },\n    hwbString: function hwbString() {\n      return colorString.hwbString(this.values.hwb, this.values.alpha);\n    },\n    keyword: function keyword() {\n      return colorString.keyword(this.values.rgb, this.values.alpha);\n    },\n    rgbNumber: function rgbNumber() {\n      var rgb = this.values.rgb;\n      return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n    },\n    luminosity: function luminosity() {\n      // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n      var rgb = this.values.rgb;\n      var lum = [];\n\n      for (var i = 0; i < rgb.length; i++) {\n        var chan = rgb[i] / 255;\n        lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n      }\n\n      return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n    },\n    contrast: function contrast(color2) {\n      // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n      var lum1 = this.luminosity();\n      var lum2 = color2.luminosity();\n\n      if (lum1 > lum2) {\n        return (lum1 + 0.05) / (lum2 + 0.05);\n      }\n\n      return (lum2 + 0.05) / (lum1 + 0.05);\n    },\n    level: function level(color2) {\n      var contrastRatio = this.contrast(color2);\n\n      if (contrastRatio >= 7.1) {\n        return 'AAA';\n      }\n\n      return contrastRatio >= 4.5 ? 'AA' : '';\n    },\n    dark: function dark() {\n      // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n      var rgb = this.values.rgb;\n      var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n      return yiq < 128;\n    },\n    light: function light() {\n      return !this.dark();\n    },\n    negate: function negate() {\n      var rgb = [];\n\n      for (var i = 0; i < 3; i++) {\n        rgb[i] = 255 - this.values.rgb[i];\n      }\n\n      this.setValues('rgb', rgb);\n      return this;\n    },\n    lighten: function lighten(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] += hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    darken: function darken(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] -= hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    saturate: function saturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] += hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    desaturate: function desaturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] -= hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    whiten: function whiten(ratio) {\n      var hwb = this.values.hwb;\n      hwb[1] += hwb[1] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    blacken: function blacken(ratio) {\n      var hwb = this.values.hwb;\n      hwb[2] += hwb[2] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    greyscale: function greyscale() {\n      var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n      var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n      this.setValues('rgb', [val, val, val]);\n      return this;\n    },\n    clearer: function clearer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha - alpha * ratio);\n      return this;\n    },\n    opaquer: function opaquer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha + alpha * ratio);\n      return this;\n    },\n    rotate: function rotate(degrees) {\n      var hsl = this.values.hsl;\n      var hue = (hsl[0] + degrees) % 360;\n      hsl[0] = hue < 0 ? 360 + hue : hue;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n\n    /**\n     * Ported from sass implementation in C\n     * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n     */\n    mix: function mix(mixinColor, weight) {\n      var color1 = this;\n      var color2 = mixinColor;\n      var p = weight === undefined ? 0.5 : weight;\n      var w = 2 * p - 1;\n      var a = color1.alpha() - color2.alpha();\n      var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      var w2 = 1 - w1;\n      return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n    },\n    toJSON: function toJSON() {\n      return this.rgb();\n    },\n    clone: function clone() {\n      // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n      // making the final build way to big to embed in Chart.js. So let's do it manually,\n      // assuming that values to clone are 1 dimension arrays containing only numbers,\n      // except 'alpha' which is a number.\n      var result = new Color();\n      var source = this.values;\n      var target = result.values;\n      var value, type;\n\n      for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n          value = source[prop];\n          type = {}.toString.call(value);\n\n          if (type === '[object Array]') {\n            target[prop] = value.slice(0);\n          } else if (type === '[object Number]') {\n            target[prop] = value;\n          } else {\n            console.error('unexpected color value:', value);\n          }\n        }\n      }\n\n      return result;\n    }\n  };\n  Color.prototype.spaces = {\n    rgb: ['red', 'green', 'blue'],\n    hsl: ['hue', 'saturation', 'lightness'],\n    hsv: ['hue', 'saturation', 'value'],\n    hwb: ['hue', 'whiteness', 'blackness'],\n    cmyk: ['cyan', 'magenta', 'yellow', 'black']\n  };\n  Color.prototype.maxes = {\n    rgb: [255, 255, 255],\n    hsl: [360, 100, 100],\n    hsv: [360, 100, 100],\n    hwb: [360, 100, 100],\n    cmyk: [100, 100, 100, 100]\n  };\n\n  Color.prototype.getValues = function (space) {\n    var values = this.values;\n    var vals = {};\n\n    for (var i = 0; i < space.length; i++) {\n      vals[space.charAt(i)] = values[space][i];\n    }\n\n    if (values.alpha !== 1) {\n      vals.a = values.alpha;\n    } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n    return vals;\n  };\n\n  Color.prototype.setValues = function (space, vals) {\n    var values = this.values;\n    var spaces = this.spaces;\n    var maxes = this.maxes;\n    var alpha = 1;\n    var i;\n    this.valid = true;\n\n    if (space === 'alpha') {\n      alpha = vals;\n    } else if (vals.length) {\n      // [10, 10, 10]\n      values[space] = vals.slice(0, space.length);\n      alpha = vals[space.length];\n    } else if (vals[space.charAt(0)] !== undefined) {\n      // {r: 10, g: 10, b: 10}\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[space.charAt(i)];\n      }\n\n      alpha = vals.a;\n    } else if (vals[spaces[space][0]] !== undefined) {\n      // {red: 10, green: 10, blue: 10}\n      var chans = spaces[space];\n\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[chans[i]];\n      }\n\n      alpha = vals.alpha;\n    }\n\n    values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n    if (space === 'alpha') {\n      return false;\n    }\n\n    var capped; // cap values of the space prior converting all values\n\n    for (i = 0; i < space.length; i++) {\n      capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n      values[space][i] = Math.round(capped);\n    } // convert to all the other color spaces\n\n\n    for (var sname in spaces) {\n      if (sname !== space) {\n        values[sname] = colorConvert[space][sname](values[space]);\n      }\n    }\n\n    return true;\n  };\n\n  Color.prototype.setSpace = function (space, args) {\n    var vals = args[0];\n\n    if (vals === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof vals === 'number') {\n      vals = Array.prototype.slice.call(args);\n    }\n\n    this.setValues(space, vals);\n    return this;\n  };\n\n  Color.prototype.setChannel = function (space, index, val) {\n    var svalues = this.values[space];\n\n    if (val === undefined) {\n      // color.red()\n      return svalues[index];\n    } else if (val === svalues[index]) {\n      // color.red(color.red())\n      return this;\n    } // color.red(100)\n\n\n    svalues[index] = val;\n    this.setValues(space, svalues);\n    return this;\n  };\n\n  if (typeof window !== 'undefined') {\n    window.Color = Color;\n  }\n\n  var chartjsColor = Color;\n  /**\n   * @namespace Chart.helpers\n   */\n\n  var helpers = {\n    /**\n     * An empty function that can be used, for example, for optional callback.\n     */\n    noop: function noop() {},\n\n    /**\n     * Returns a unique id, sequentially generated from a global variable.\n     * @returns {number}\n     * @function\n     */\n    uid: function () {\n      var id = 0;\n      return function () {\n        return id++;\n      };\n    }(),\n\n    /**\n     * Returns true if `value` is neither null nor undefined, else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isNullOrUndef: function isNullOrUndef(value) {\n      return value === null || typeof value === 'undefined';\n    },\n\n    /**\n     * Returns true if `value` is an array (including typed arrays), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @function\n     */\n    isArray: function isArray(value) {\n      if (Array.isArray && Array.isArray(value)) {\n        return true;\n      }\n\n      var type = Object.prototype.toString.call(value);\n\n      if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns true if `value` is an object (excluding null), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isObject: function isObject(value) {\n      return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n    },\n\n    /**\n     * Returns true if `value` is a finite number, else returns false\n     * @param {*} value  - The value to test.\n     * @returns {boolean}\n     */\n    isFinite: function (_isFinite) {\n      function isFinite(_x) {\n        return _isFinite.apply(this, arguments);\n      }\n\n      isFinite.toString = function () {\n        return _isFinite.toString();\n      };\n\n      return isFinite;\n    }(function (value) {\n      return (typeof value === 'number' || value instanceof Number) && isFinite(value);\n    }),\n\n    /**\n     * Returns `value` if defined, else returns `defaultValue`.\n     * @param {*} value - The value to return if defined.\n     * @param {*} defaultValue - The value to return if `value` is undefined.\n     * @returns {*}\n     */\n    valueOrDefault: function valueOrDefault(value, defaultValue) {\n      return typeof value === 'undefined' ? defaultValue : value;\n    },\n\n    /**\n     * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n     * @param {Array} value - The array to lookup for value at `index`.\n     * @param {number} index - The index in `value` to lookup for value.\n     * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n     * @returns {*}\n     */\n    valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n      return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n    },\n\n    /**\n     * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n     * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n     * @param {function} fn - The function to call.\n     * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @returns {*}\n     */\n    callback: function callback(fn, args, thisArg) {\n      if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n      }\n    },\n\n    /**\n     * Note(SB) for performance sake, this method should only be used when loopable type\n     * is unknown or in none intensive code (not called often and small loopable). Else\n     * it's preferable to use a regular for() loop and save extra function calls.\n     * @param {object|Array} loopable - The object or array to be iterated.\n     * @param {function} fn - The function to call for each item.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n     */\n    each: function each(loopable, fn, thisArg, reverse) {\n      var i, len, keys;\n\n      if (helpers.isArray(loopable)) {\n        len = loopable.length;\n\n        if (reverse) {\n          for (i = len - 1; i >= 0; i--) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        } else {\n          for (i = 0; i < len; i++) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        }\n      } else if (helpers.isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n      }\n    },\n\n    /**\n     * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n     * @see https://stackoverflow.com/a/14853974\n     * @param {Array} a0 - The array to compare\n     * @param {Array} a1 - The array to compare\n     * @returns {boolean}\n     */\n    arrayEquals: function arrayEquals(a0, a1) {\n      var i, ilen, v0, v1;\n\n      if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n      }\n\n      for (i = 0, ilen = a0.length; i < ilen; ++i) {\n        v0 = a0[i];\n        v1 = a1[i];\n\n        if (v0 instanceof Array && v1 instanceof Array) {\n          if (!helpers.arrayEquals(v0, v1)) {\n            return false;\n          }\n        } else if (v0 !== v1) {\n          // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns a deep copy of `source` without keeping references on objects and arrays.\n     * @param {*} source - The value to clone.\n     * @returns {*}\n     */\n    clone: function clone(source) {\n      if (helpers.isArray(source)) {\n        return source.map(helpers.clone);\n      }\n\n      if (helpers.isObject(source)) {\n        var target = {};\n        var keys = Object.keys(source);\n        var klen = keys.length;\n        var k = 0;\n\n        for (; k < klen; ++k) {\n          target[keys[k]] = helpers.clone(source[keys[k]]);\n        }\n\n        return target;\n      }\n\n      return source;\n    },\n\n    /**\n     * The default merger when Chart.helpers.merge is called without merger option.\n     * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n     * @private\n     */\n    _merger: function _merger(key, target, source, options) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.merge(tval, sval, options);\n      } else {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Merges source[key] in target[key] only if target[key] is undefined.\n     * @private\n     */\n    _mergerIf: function _mergerIf(key, target, source) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.mergeIf(tval, sval);\n      } else if (!target.hasOwnProperty(key)) {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` with the given `options`.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @param {object} [options] - Merging options:\n     * @param {function} [options.merger] - The merge method (key, target, source, options)\n     * @returns {object} The `target` object.\n     */\n    merge: function merge(target, source, options) {\n      var sources = helpers.isArray(source) ? source : [source];\n      var ilen = sources.length;\n      var merge, i, keys, klen, k;\n\n      if (!helpers.isObject(target)) {\n        return target;\n      }\n\n      options = options || {};\n      merge = options.merger || helpers._merger;\n\n      for (i = 0; i < ilen; ++i) {\n        source = sources[i];\n\n        if (!helpers.isObject(source)) {\n          continue;\n        }\n\n        keys = Object.keys(source);\n\n        for (k = 0, klen = keys.length; k < klen; ++k) {\n          merge(keys[k], target, source, options);\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @returns {object} The `target` object.\n     */\n    mergeIf: function mergeIf(target, source) {\n      return helpers.merge(target, source, {\n        merger: helpers._mergerIf\n      });\n    },\n\n    /**\n     * Applies the contents of two or more objects together into the first object.\n     * @param {object} target - The target object in which all objects are merged into.\n     * @param {object} arg1 - Object containing additional properties to merge in target.\n     * @param {object} argN - Additional objects containing properties to merge in target.\n     * @returns {object} The `target` object.\n     */\n    extend: function extend(target) {\n      var setFn = function setFn(value, key) {\n        target[key] = value;\n      };\n\n      for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n        helpers.each(arguments[i], setFn);\n      }\n\n      return target;\n    },\n\n    /**\n     * Basic javascript inheritance based on the model created in Backbone.js\n     */\n    inherits: function inherits(extensions) {\n      var me = this;\n      var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n        return me.apply(this, arguments);\n      };\n\n      var Surrogate = function Surrogate() {\n        this.constructor = ChartElement;\n      };\n\n      Surrogate.prototype = me.prototype;\n      ChartElement.prototype = new Surrogate();\n      ChartElement.extend = helpers.inherits;\n\n      if (extensions) {\n        helpers.extend(ChartElement.prototype, extensions);\n      }\n\n      ChartElement.__super__ = me.prototype;\n      return ChartElement;\n    }\n  };\n  var helpers_core = helpers; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.callback instead.\n   * @function Chart.helpers.callCallback\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.callCallback = helpers.callback;\n  /**\n   * Provided for backward compatibility, use Array.prototype.indexOf instead.\n   * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n   * @function Chart.helpers.indexOf\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.indexOf = function (array, item, fromIndex) {\n    return Array.prototype.indexOf.call(array, item, fromIndex);\n  };\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n   * @function Chart.helpers.getValueOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  helpers.getValueOrDefault = helpers.valueOrDefault;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n   * @function Chart.helpers.getValueAtIndexOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n  /**\n   * Easing functions adapted from Robert Penner's easing equations.\n   * @namespace Chart.helpers.easingEffects\n   * @see http://www.robertpenner.com/easing/\n   */\n\n  var effects = {\n    linear: function linear(t) {\n      return t;\n    },\n    easeInQuad: function easeInQuad(t) {\n      return t * t;\n    },\n    easeOutQuad: function easeOutQuad(t) {\n      return -t * (t - 2);\n    },\n    easeInOutQuad: function easeInOutQuad(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t;\n      }\n\n      return -0.5 * (--t * (t - 2) - 1);\n    },\n    easeInCubic: function easeInCubic(t) {\n      return t * t * t;\n    },\n    easeOutCubic: function easeOutCubic(t) {\n      return (t = t - 1) * t * t + 1;\n    },\n    easeInOutCubic: function easeInOutCubic(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t + 2);\n    },\n    easeInQuart: function easeInQuart(t) {\n      return t * t * t * t;\n    },\n    easeOutQuart: function easeOutQuart(t) {\n      return -((t = t - 1) * t * t * t - 1);\n    },\n    easeInOutQuart: function easeInOutQuart(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t;\n      }\n\n      return -0.5 * ((t -= 2) * t * t * t - 2);\n    },\n    easeInQuint: function easeInQuint(t) {\n      return t * t * t * t * t;\n    },\n    easeOutQuint: function easeOutQuint(t) {\n      return (t = t - 1) * t * t * t * t + 1;\n    },\n    easeInOutQuint: function easeInOutQuint(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t * t * t + 2);\n    },\n    easeInSine: function easeInSine(t) {\n      return -Math.cos(t * (Math.PI / 2)) + 1;\n    },\n    easeOutSine: function easeOutSine(t) {\n      return Math.sin(t * (Math.PI / 2));\n    },\n    easeInOutSine: function easeInOutSine(t) {\n      return -0.5 * (Math.cos(Math.PI * t) - 1);\n    },\n    easeInExpo: function easeInExpo(t) {\n      return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n    },\n    easeOutExpo: function easeOutExpo(t) {\n      return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n    },\n    easeInOutExpo: function easeInOutExpo(t) {\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * Math.pow(2, 10 * (t - 1));\n      }\n\n      return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n    },\n    easeInCirc: function easeInCirc(t) {\n      if (t >= 1) {\n        return t;\n      }\n\n      return -(Math.sqrt(1 - t * t) - 1);\n    },\n    easeOutCirc: function easeOutCirc(t) {\n      return Math.sqrt(1 - (t = t - 1) * t);\n    },\n    easeInOutCirc: function easeInOutCirc(t) {\n      if ((t /= 0.5) < 1) {\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n      }\n\n      return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n    },\n    easeInElastic: function easeInElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    },\n    easeOutElastic: function easeOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n    },\n    easeInOutElastic: function easeInOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if ((t /= 0.5) === 2) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.45;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      if (t < 1) {\n        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n      }\n\n      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n    },\n    easeInBack: function easeInBack(t) {\n      var s = 1.70158;\n      return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack: function easeOutBack(t) {\n      var s = 1.70158;\n      return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack: function easeInOutBack(t) {\n      var s = 1.70158;\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n      }\n\n      return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: function easeInBounce(t) {\n      return 1 - effects.easeOutBounce(1 - t);\n    },\n    easeOutBounce: function easeOutBounce(t) {\n      if (t < 1 / 2.75) {\n        return 7.5625 * t * t;\n      }\n\n      if (t < 2 / 2.75) {\n        return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n      }\n\n      if (t < 2.5 / 2.75) {\n        return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n      }\n\n      return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n    },\n    easeInOutBounce: function easeInOutBounce(t) {\n      if (t < 0.5) {\n        return effects.easeInBounce(t * 2) * 0.5;\n      }\n\n      return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n    }\n  };\n  var helpers_easing = {\n    effects: effects\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n   * @function Chart.helpers.easingEffects\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.easingEffects = effects;\n  var PI = Math.PI;\n  var RAD_PER_DEG = PI / 180;\n  var DOUBLE_PI = PI * 2;\n  var HALF_PI = PI / 2;\n  var QUARTER_PI = PI / 4;\n  var TWO_THIRDS_PI = PI * 2 / 3;\n  /**\n   * @namespace Chart.helpers.canvas\n   */\n\n  var exports$1 = {\n    /**\n     * Clears the entire canvas associated to the given `chart`.\n     * @param {Chart} chart - The chart for which to clear the canvas.\n     */\n    clear: function clear(chart) {\n      chart.ctx.clearRect(0, 0, chart.width, chart.height);\n    },\n\n    /**\n     * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n     * given size (width, height) and the same `radius` for all corners.\n     * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n     * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n     * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n     * @param {number} width - The rectangle's width.\n     * @param {number} height - The rectangle's height.\n     * @param {number} radius - The rounded amount (in pixels) for the four corners.\n     * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n     */\n    roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n      if (radius) {\n        var r = Math.min(radius, height / 2, width / 2);\n        var left = x + r;\n        var top = y + r;\n        var right = x + width - r;\n        var bottom = y + height - r;\n        ctx.moveTo(x, top);\n\n        if (left < right && top < bottom) {\n          ctx.arc(left, top, r, -PI, -HALF_PI);\n          ctx.arc(right, top, r, -HALF_PI, 0);\n          ctx.arc(right, bottom, r, 0, HALF_PI);\n          ctx.arc(left, bottom, r, HALF_PI, PI);\n        } else if (left < right) {\n          ctx.moveTo(left, y);\n          ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n          ctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n        } else if (top < bottom) {\n          ctx.arc(left, top, r, -PI, 0);\n          ctx.arc(left, bottom, r, 0, PI);\n        } else {\n          ctx.arc(left, top, r, -PI, PI);\n        }\n\n        ctx.closePath();\n        ctx.moveTo(x, y);\n      } else {\n        ctx.rect(x, y, width, height);\n      }\n    },\n    drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n      var type, xOffset, yOffset, size, cornerRadius;\n      var rad = (rotation || 0) * RAD_PER_DEG;\n\n      if (style && typeof style === 'object') {\n        type = style.toString();\n\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n          ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n          return;\n        }\n      }\n\n      if (isNaN(radius) || radius <= 0) {\n        return;\n      }\n\n      ctx.beginPath();\n\n      switch (style) {\n        // Default includes circle\n        default:\n          ctx.arc(x, y, radius, 0, DOUBLE_PI);\n          ctx.closePath();\n          break;\n\n        case 'triangle':\n          ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          ctx.closePath();\n          break;\n\n        case 'rectRounded':\n          // NOTE: the rounded rect implementation changed to use `arc` instead of\n          // `quadraticCurveTo` since it generates better results when rect is\n          // almost a circle. 0.516 (instead of 0.5) produces results with visually\n          // closer proportion to the previous impl and it is inscribed in the\n          // circle with `radius`. For more details, see the following PRs:\n          // https://github.com/chartjs/Chart.js/issues/5597\n          // https://github.com/chartjs/Chart.js/issues/5858\n          cornerRadius = radius * 0.516;\n          size = radius - cornerRadius;\n          xOffset = Math.cos(rad + QUARTER_PI) * size;\n          yOffset = Math.sin(rad + QUARTER_PI) * size;\n          ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n          ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n          ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n          ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n          ctx.closePath();\n          break;\n\n        case 'rect':\n          if (!rotation) {\n            size = Math.SQRT1_2 * radius;\n            ctx.rect(x - size, y - size, 2 * size, 2 * size);\n            break;\n          }\n\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'rectRot':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          ctx.closePath();\n          break;\n\n        case 'crossRot':\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'cross':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'star':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          rad += QUARTER_PI;\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'line':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          break;\n\n        case 'dash':\n          ctx.moveTo(x, y);\n          ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n          break;\n      }\n\n      ctx.fill();\n      ctx.stroke();\n    },\n\n    /**\n     * Returns true if the point is inside the rectangle\n     * @param {object} point - The point to test\n     * @param {object} area - The rectangle\n     * @returns {boolean}\n     * @private\n     */\n    _isPointInArea: function _isPointInArea(point, area) {\n      var epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n      return point.x > area.left - epsilon && point.x < area.right + epsilon && point.y > area.top - epsilon && point.y < area.bottom + epsilon;\n    },\n    clipArea: function clipArea(ctx, area) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n      ctx.clip();\n    },\n    unclipArea: function unclipArea(ctx) {\n      ctx.restore();\n    },\n    lineTo: function lineTo(ctx, previous, target, flip) {\n      var stepped = target.steppedLine;\n\n      if (stepped) {\n        if (stepped === 'middle') {\n          var midpoint = (previous.x + target.x) / 2.0;\n          ctx.lineTo(midpoint, flip ? target.y : previous.y);\n          ctx.lineTo(midpoint, flip ? previous.y : target.y);\n        } else if (stepped === 'after' && !flip || stepped !== 'after' && flip) {\n          ctx.lineTo(previous.x, target.y);\n        } else {\n          ctx.lineTo(target.x, previous.y);\n        }\n\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      if (!target.tension) {\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n    }\n  };\n  var helpers_canvas = exports$1; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n   * @namespace Chart.helpers.clear\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.clear = exports$1.clear;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n   * @namespace Chart.helpers.drawRoundedRectangle\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.drawRoundedRectangle = function (ctx) {\n    ctx.beginPath();\n    exports$1.roundedRect.apply(exports$1, arguments);\n  };\n\n  var defaults = {\n    /**\n     * @private\n     */\n    _set: function _set(scope, values) {\n      return helpers_core.merge(this[scope] || (this[scope] = {}), values);\n    }\n  };\n\n  defaults._set('global', {\n    defaultColor: 'rgba(0,0,0,0.1)',\n    defaultFontColor: '#666',\n    defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    defaultFontSize: 12,\n    defaultFontStyle: 'normal',\n    defaultLineHeight: 1.2,\n    showLines: true\n  });\n\n  var core_defaults = defaults;\n  var valueOrDefault = helpers_core.valueOrDefault;\n  /**\n   * Converts the given font object into a CSS font string.\n   * @param {object} font - A font object.\n   * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n   * @private\n   */\n\n  function toFontString(font) {\n    if (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n      return null;\n    }\n\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n  }\n  /**\n   * @alias Chart.helpers.options\n   * @namespace\n   */\n\n\n  var helpers_options = {\n    /**\n     * Converts the given line height `value` in pixels for a specific font `size`.\n     * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n     * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n     * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n     * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n     * @since 2.7.0\n     */\n    toLineHeight: function toLineHeight(value, size) {\n      var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n      if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n      }\n\n      value = +matches[2];\n\n      switch (matches[3]) {\n        case 'px':\n          return value;\n\n        case '%':\n          value /= 100;\n          break;\n\n        default:\n          break;\n      }\n\n      return size * value;\n    },\n\n    /**\n     * Converts the given value into a padding object with pre-computed width/height.\n     * @param {number|object} value - If a number, set the value to all TRBL component,\n     *  else, if and object, use defined properties and sets undefined ones to 0.\n     * @returns {object} The padding values (top, right, bottom, left, width, height)\n     * @since 2.7.0\n     */\n    toPadding: function toPadding(value) {\n      var t, r, b, l;\n\n      if (helpers_core.isObject(value)) {\n        t = +value.top || 0;\n        r = +value.right || 0;\n        b = +value.bottom || 0;\n        l = +value.left || 0;\n      } else {\n        t = r = b = l = +value || 0;\n      }\n\n      return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        height: t + b,\n        width: l + r\n      };\n    },\n\n    /**\n     * Parses font options and returns the font object.\n     * @param {object} options - A object that contains font options to be parsed.\n     * @return {object} The font object.\n     * @todo Support font.* options and renamed to toFont().\n     * @private\n     */\n    _parseFont: function _parseFont(options) {\n      var globalDefaults = core_defaults.global;\n      var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n      var font = {\n        family: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n        lineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n        size: size,\n        style: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n        weight: null,\n        string: ''\n      };\n      font.string = toFontString(font);\n      return font;\n    },\n\n    /**\n     * Evaluates the given `inputs` sequentially and returns the first defined value.\n     * @param {Array} inputs - An array of values, falling back to the last value.\n     * @param {object} [context] - If defined and the current value is a function, the value\n     * is called with `context` as first argument and the result becomes the new input.\n     * @param {number} [index] - If defined and the current value is an array, the value\n     * at `index` become the new input.\n     * @since 2.7.0\n     */\n    resolve: function resolve(inputs, context, index) {\n      var i, ilen, value;\n\n      for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n        value = inputs[i];\n\n        if (value === undefined) {\n          continue;\n        }\n\n        if (context !== undefined && typeof value === 'function') {\n          value = value(context);\n        }\n\n        if (index !== undefined && helpers_core.isArray(value)) {\n          value = value[index];\n        }\n\n        if (value !== undefined) {\n          return value;\n        }\n      }\n    }\n  };\n  var helpers$1 = helpers_core;\n  var easing = helpers_easing;\n  var canvas = helpers_canvas;\n  var options = helpers_options;\n  helpers$1.easing = easing;\n  helpers$1.canvas = canvas;\n  helpers$1.options = options;\n\n  function interpolate(start, view, model, ease) {\n    var keys = Object.keys(model);\n    var i, ilen, key, actual, origin, target, type, c0, c1;\n\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      key = keys[i];\n      target = model[key]; // if a value is added to the model after pivot() has been called, the view\n      // doesn't contain it, so let's initialize the view to the target value.\n\n      if (!view.hasOwnProperty(key)) {\n        view[key] = target;\n      }\n\n      actual = view[key];\n\n      if (actual === target || key[0] === '_') {\n        continue;\n      }\n\n      if (!start.hasOwnProperty(key)) {\n        start[key] = actual;\n      }\n\n      origin = start[key];\n      type = typeof target;\n\n      if (type === typeof origin) {\n        if (type === 'string') {\n          c0 = chartjsColor(origin);\n\n          if (c0.valid) {\n            c1 = chartjsColor(target);\n\n            if (c1.valid) {\n              view[key] = c1.mix(c0, ease).rgbString();\n              continue;\n            }\n          }\n        } else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n          view[key] = origin + (target - origin) * ease;\n          continue;\n        }\n      }\n\n      view[key] = target;\n    }\n  }\n\n  var Element = function Element(configuration) {\n    helpers$1.extend(this, configuration);\n    this.initialize.apply(this, arguments);\n  };\n\n  helpers$1.extend(Element.prototype, {\n    initialize: function initialize() {\n      this.hidden = false;\n    },\n    pivot: function pivot() {\n      var me = this;\n\n      if (!me._view) {\n        me._view = helpers$1.clone(me._model);\n      }\n\n      me._start = {};\n      return me;\n    },\n    transition: function transition(ease) {\n      var me = this;\n      var model = me._model;\n      var start = me._start;\n      var view = me._view; // No animation -> No Transition\n\n      if (!model || ease === 1) {\n        me._view = model;\n        me._start = null;\n        return me;\n      }\n\n      if (!view) {\n        view = me._view = {};\n      }\n\n      if (!start) {\n        start = me._start = {};\n      }\n\n      interpolate(start, view, model, ease);\n      return me;\n    },\n    tooltipPosition: function tooltipPosition() {\n      return {\n        x: this._model.x,\n        y: this._model.y\n      };\n    },\n    hasValue: function hasValue() {\n      return helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n    }\n  });\n  Element.extend = helpers$1.inherits;\n  var core_element = Element;\n  var exports$2 = core_element.extend({\n    chart: null,\n    // the animation associated chart instance\n    currentStep: 0,\n    // the current animation step\n    numSteps: 60,\n    // default number of steps\n    easing: '',\n    // the easing to use for this animation\n    render: null,\n    // render function used by the animation service\n    onAnimationProgress: null,\n    // user specified callback to fire on each step of the animation\n    onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n  });\n  var core_animation = exports$2; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.Animation instead\n   * @prop Chart.Animation#animationObject\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'animationObject', {\n    get: function get() {\n      return this;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart.Animation#chart instead\n   * @prop Chart.Animation#chartInstance\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'chartInstance', {\n    get: function get() {\n      return this.chart;\n    },\n    set: function set(value) {\n      this.chart = value;\n    }\n  });\n\n  core_defaults._set('global', {\n    animation: {\n      duration: 1000,\n      easing: 'easeOutQuart',\n      onProgress: helpers$1.noop,\n      onComplete: helpers$1.noop\n    }\n  });\n\n  var core_animations = {\n    animations: [],\n    request: null,\n\n    /**\n     * @param {Chart} chart - The chart to animate.\n     * @param {Chart.Animation} animation - The animation that we will animate.\n     * @param {number} duration - The animation duration in ms.\n     * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n     */\n    addAnimation: function addAnimation(chart, animation, duration, lazy) {\n      var animations = this.animations;\n      var i, ilen;\n      animation.chart = chart;\n      animation.startTime = Date.now();\n      animation.duration = duration;\n\n      if (!lazy) {\n        chart.animating = true;\n      }\n\n      for (i = 0, ilen = animations.length; i < ilen; ++i) {\n        if (animations[i].chart === chart) {\n          animations[i] = animation;\n          return;\n        }\n      }\n\n      animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n      if (animations.length === 1) {\n        this.requestAnimationFrame();\n      }\n    },\n    cancelAnimation: function cancelAnimation(chart) {\n      var index = helpers$1.findIndex(this.animations, function (animation) {\n        return animation.chart === chart;\n      });\n\n      if (index !== -1) {\n        this.animations.splice(index, 1);\n        chart.animating = false;\n      }\n    },\n    requestAnimationFrame: function requestAnimationFrame() {\n      var me = this;\n\n      if (me.request === null) {\n        // Skip animation frame requests until the active one is executed.\n        // This can happen when processing mouse events, e.g. 'mousemove'\n        // and 'mouseout' events will trigger multiple renders.\n        me.request = helpers$1.requestAnimFrame.call(window, function () {\n          me.request = null;\n          me.startDigest();\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    startDigest: function startDigest() {\n      var me = this;\n      me.advance(); // Do we have more stuff to animate?\n\n      if (me.animations.length > 0) {\n        me.requestAnimationFrame();\n      }\n    },\n\n    /**\n     * @private\n     */\n    advance: function advance() {\n      var animations = this.animations;\n      var animation, chart, numSteps, nextStep;\n      var i = 0; // 1 animation per chart, so we are looping charts here\n\n      while (i < animations.length) {\n        animation = animations[i];\n        chart = animation.chart;\n        numSteps = animation.numSteps; // Make sure that currentStep starts at 1\n        // https://github.com/chartjs/Chart.js/issues/6104\n\n        nextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n        animation.currentStep = Math.min(nextStep, numSteps);\n        helpers$1.callback(animation.render, [chart, animation], chart);\n        helpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n        if (animation.currentStep >= numSteps) {\n          helpers$1.callback(animation.onAnimationComplete, [animation], chart);\n          chart.animating = false;\n          animations.splice(i, 1);\n        } else {\n          ++i;\n        }\n      }\n    }\n  };\n  var resolve = helpers$1.options.resolve;\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers$1.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  var DatasetController = function DatasetController(chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers$1.extend(DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getValueScale: function _getValueScale() {\n      return this.getScaleForId(this._getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScale: function _getIndexScale() {\n      return this.getScaleForId(this._getIndexScaleId());\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers$1.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers$1.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      var getHoverColor = helpers$1.getHoverColor;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n      model.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n      model.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      var count = arguments.length;\n      this.insertElements(this.getDataset().data.length - count, count);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  DatasetController.extend = helpers$1.inherits;\n  var core_datasetController = DatasetController;\n\n  core_defaults._set('global', {\n    elements: {\n      arc: {\n        backgroundColor: core_defaults.global.defaultColor,\n        borderColor: '#fff',\n        borderWidth: 2,\n        borderAlign: 'center'\n      }\n    }\n  });\n\n  var element_arc = core_element.extend({\n    inLabelRange: function inLabelRange(mouseX) {\n      var vm = this._view;\n\n      if (vm) {\n        return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n      }\n\n      return false;\n    },\n    inRange: function inRange(chartX, chartY) {\n      var vm = this._view;\n\n      if (vm) {\n        var pointRelativePosition = helpers$1.getAngleFromPoint(vm, {\n          x: chartX,\n          y: chartY\n        });\n        var angle = pointRelativePosition.angle;\n        var distance = pointRelativePosition.distance; // Sanitise angle range\n\n        var startAngle = vm.startAngle;\n        var endAngle = vm.endAngle;\n\n        while (endAngle < startAngle) {\n          endAngle += 2.0 * Math.PI;\n        }\n\n        while (angle > endAngle) {\n          angle -= 2.0 * Math.PI;\n        }\n\n        while (angle < startAngle) {\n          angle += 2.0 * Math.PI;\n        } // Check if within the range of the open/close angle\n\n\n        var betweenAngles = angle >= startAngle && angle <= endAngle;\n        var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n        return betweenAngles && withinRadius;\n      }\n\n      return false;\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n      var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n      return {\n        x: vm.x + Math.cos(halfAngle) * halfRadius,\n        y: vm.y + Math.sin(halfAngle) * halfRadius\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n      var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n      return {\n        x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n        y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n      };\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var sA = vm.startAngle;\n      var eA = vm.endAngle;\n      var pixelMargin = vm.borderAlign === 'inner' ? 0.33 : 0;\n      var angleMargin;\n      ctx.save();\n      ctx.beginPath();\n      ctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n      ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n      ctx.closePath();\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fill();\n\n      if (vm.borderWidth) {\n        if (vm.borderAlign === 'inner') {\n          // Draw an inner border by cliping the arc and drawing a double-width border\n          // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n          ctx.beginPath();\n          angleMargin = pixelMargin / vm.outerRadius;\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\n          if (vm.innerRadius > pixelMargin) {\n            angleMargin = pixelMargin / vm.innerRadius;\n            ctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n          } else {\n            ctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n          }\n\n          ctx.closePath();\n          ctx.clip();\n          ctx.beginPath();\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n          ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n          ctx.closePath();\n          ctx.lineWidth = vm.borderWidth * 2;\n          ctx.lineJoin = 'round';\n        } else {\n          ctx.lineWidth = vm.borderWidth;\n          ctx.lineJoin = 'bevel';\n        }\n\n        ctx.strokeStyle = vm.borderColor;\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$1 = helpers$1.valueOrDefault;\n  var defaultColor = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      line: {\n        tension: 0.4,\n        backgroundColor: defaultColor,\n        borderWidth: 3,\n        borderColor: defaultColor,\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        capBezierPoints: true,\n        fill: true // do we fill in the area between the line and its base axis\n\n      }\n    }\n  });\n\n  var element_line = core_element.extend({\n    draw: function draw() {\n      var me = this;\n      var vm = me._view;\n      var ctx = me._chart.ctx;\n      var spanGaps = vm.spanGaps;\n\n      var points = me._children.slice(); // clone array\n\n\n      var globalDefaults = core_defaults.global;\n      var globalOptionLineElements = globalDefaults.elements.line;\n      var lastDrawnIndex = -1;\n      var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n      if (me._loop && points.length) {\n        points.push(points[0]);\n      }\n\n      ctx.save(); // Stroke Line Options\n\n      ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n      if (ctx.setLineDash) {\n        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n      }\n\n      ctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n      ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n      ctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n      ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n      ctx.beginPath();\n      lastDrawnIndex = -1;\n\n      for (index = 0; index < points.length; ++index) {\n        current = points[index];\n        previous = helpers$1.previousItem(points, index);\n        currentVM = current._view; // First point moves to it's starting position no matter what\n\n        if (index === 0) {\n          if (!currentVM.skip) {\n            ctx.moveTo(currentVM.x, currentVM.y);\n            lastDrawnIndex = index;\n          }\n        } else {\n          previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n          if (!currentVM.skip) {\n            if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n              // There was a gap and this is the first point after the gap\n              ctx.moveTo(currentVM.x, currentVM.y);\n            } else {\n              // Line to next point\n              helpers$1.canvas.lineTo(ctx, previous._view, current._view);\n            }\n\n            lastDrawnIndex = index;\n          }\n        }\n      }\n\n      ctx.stroke();\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$2 = helpers$1.valueOrDefault;\n  var defaultColor$1 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      point: {\n        radius: 3,\n        pointStyle: 'circle',\n        backgroundColor: defaultColor$1,\n        borderColor: defaultColor$1,\n        borderWidth: 1,\n        // Hover\n        hitRadius: 1,\n        hoverRadius: 4,\n        hoverBorderWidth: 1\n      }\n    }\n  });\n\n  function xRange(mouseX) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n  }\n\n  function yRange(mouseY) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n  }\n\n  var element_point = core_element.extend({\n    inRange: function inRange(mouseX, mouseY) {\n      var vm = this._view;\n      return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n    },\n    inLabelRange: xRange,\n    inXRange: xRange,\n    inYRange: yRange,\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    },\n    getArea: function getArea() {\n      return Math.PI * Math.pow(this._view.radius, 2);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y,\n        padding: vm.radius + vm.borderWidth\n      };\n    },\n    draw: function draw(chartArea) {\n      var vm = this._view;\n      var ctx = this._chart.ctx;\n      var pointStyle = vm.pointStyle;\n      var rotation = vm.rotation;\n      var radius = vm.radius;\n      var x = vm.x;\n      var y = vm.y;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n      if (vm.skip) {\n        return;\n      } // Clipping for Points.\n\n\n      if (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n        ctx.strokeStyle = vm.borderColor || defaultColor;\n        ctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n        ctx.fillStyle = vm.backgroundColor || defaultColor;\n        helpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n      }\n    }\n  });\n  var defaultColor$2 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      rectangle: {\n        backgroundColor: defaultColor$2,\n        borderColor: defaultColor$2,\n        borderSkipped: 'bottom',\n        borderWidth: 0\n      }\n    }\n  });\n\n  function isVertical(vm) {\n    return vm && vm.width !== undefined;\n  }\n  /**\n   * Helper function to get the bounds of the bar regardless of the orientation\n   * @param bar {Chart.Element.Rectangle} the bar\n   * @return {Bounds} bounds of the bar\n   * @private\n   */\n\n\n  function getBarBounds(vm) {\n    var x1, x2, y1, y2, half;\n\n    if (isVertical(vm)) {\n      half = vm.width / 2;\n      x1 = vm.x - half;\n      x2 = vm.x + half;\n      y1 = Math.min(vm.y, vm.base);\n      y2 = Math.max(vm.y, vm.base);\n    } else {\n      half = vm.height / 2;\n      x1 = Math.min(vm.x, vm.base);\n      x2 = Math.max(vm.x, vm.base);\n      y1 = vm.y - half;\n      y2 = vm.y + half;\n    }\n\n    return {\n      left: x1,\n      top: y1,\n      right: x2,\n      bottom: y2\n    };\n  }\n\n  function swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n  }\n\n  function parseBorderSkipped(vm) {\n    var edge = vm.borderSkipped;\n    var res = {};\n\n    if (!edge) {\n      return res;\n    }\n\n    if (vm.horizontal) {\n      if (vm.base > vm.x) {\n        edge = swap(edge, 'left', 'right');\n      }\n    } else if (vm.base < vm.y) {\n      edge = swap(edge, 'bottom', 'top');\n    }\n\n    res[edge] = true;\n    return res;\n  }\n\n  function parseBorderWidth(vm, maxW, maxH) {\n    var value = vm.borderWidth;\n    var skip = parseBorderSkipped(vm);\n    var t, r, b, l;\n\n    if (helpers$1.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      t: skip.top || t < 0 ? 0 : t > maxH ? maxH : t,\n      r: skip.right || r < 0 ? 0 : r > maxW ? maxW : r,\n      b: skip.bottom || b < 0 ? 0 : b > maxH ? maxH : b,\n      l: skip.left || l < 0 ? 0 : l > maxW ? maxW : l\n    };\n  }\n\n  function boundingRects(vm) {\n    var bounds = getBarBounds(vm);\n    var width = bounds.right - bounds.left;\n    var height = bounds.bottom - bounds.top;\n    var border = parseBorderWidth(vm, width / 2, height / 2);\n    return {\n      outer: {\n        x: bounds.left,\n        y: bounds.top,\n        w: width,\n        h: height\n      },\n      inner: {\n        x: bounds.left + border.l,\n        y: bounds.top + border.t,\n        w: width - border.l - border.r,\n        h: height - border.t - border.b\n      }\n    };\n  }\n\n  function _inRange(vm, x, y) {\n    var skipX = x === null;\n    var skipY = y === null;\n    var bounds = !vm || skipX && skipY ? false : getBarBounds(vm);\n    return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n  }\n\n  var element_rectangle = core_element.extend({\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var rects = boundingRects(vm);\n      var outer = rects.outer;\n      var inner = rects.inner;\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n      if (outer.w === inner.w && outer.h === inner.h) {\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(outer.x, outer.y, outer.w, outer.h);\n      ctx.clip();\n      ctx.fillStyle = vm.borderColor;\n      ctx.rect(inner.x, inner.y, inner.w, inner.h);\n      ctx.fill('evenodd');\n      ctx.restore();\n    },\n    height: function height() {\n      var vm = this._view;\n      return vm.base - vm.y;\n    },\n    inRange: function inRange(mouseX, mouseY) {\n      return _inRange(this._view, mouseX, mouseY);\n    },\n    inLabelRange: function inLabelRange(mouseX, mouseY) {\n      var vm = this._view;\n      return isVertical(vm) ? _inRange(vm, mouseX, null) : _inRange(vm, null, mouseY);\n    },\n    inXRange: function inXRange(mouseX) {\n      return _inRange(this._view, mouseX, null);\n    },\n    inYRange: function inYRange(mouseY) {\n      return _inRange(this._view, null, mouseY);\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var x, y;\n\n      if (isVertical(vm)) {\n        x = vm.x;\n        y = (vm.y + vm.base) / 2;\n      } else {\n        x = (vm.x + vm.base) / 2;\n        y = vm.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return isVertical(vm) ? vm.width * Math.abs(vm.y - vm.base) : vm.height * Math.abs(vm.x - vm.base);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    }\n  });\n  var elements = {};\n  var Arc = element_arc;\n  var Line = element_line;\n  var Point = element_point;\n  var Rectangle = element_rectangle;\n  elements.Arc = Arc;\n  elements.Line = Line;\n  elements.Point = Point;\n  elements.Rectangle = Rectangle;\n  var resolve$1 = helpers$1.options.resolve;\n\n  core_defaults._set('bar', {\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }],\n      yAxes: [{\n        type: 'linear'\n      }]\n    }\n  });\n  /**\n   * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n   * @private\n   */\n\n\n  function computeMinSampleSize(scale, pixels) {\n    var min = scale.isHorizontal() ? scale.width : scale.height;\n    var ticks = scale.getTicks();\n    var prev, curr, i, ilen;\n\n    for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n      min = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n    }\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      curr = scale.getPixelForTick(i);\n      min = i > 0 ? Math.min(min, curr - prev) : min;\n      prev = curr;\n    }\n\n    return min;\n  }\n  /**\n   * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n   * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n   * mode currently always generates bars equally sized (until we introduce scriptable options?).\n   * @private\n   */\n\n\n  function computeFitCategoryTraits(index, ruler, options) {\n    var thickness = options.barThickness;\n    var count = ruler.stackCount;\n    var curr = ruler.pixels[index];\n    var size, ratio;\n\n    if (helpers$1.isNullOrUndef(thickness)) {\n      size = ruler.min * options.categoryPercentage;\n      ratio = options.barPercentage;\n    } else {\n      // When bar thickness is enforced, category and bar percentages are ignored.\n      // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n      // and deprecate barPercentage since this value is ignored when thickness is absolute.\n      size = thickness * count;\n      ratio = 1;\n    }\n\n    return {\n      chunk: size / count,\n      ratio: ratio,\n      start: curr - size / 2\n    };\n  }\n  /**\n   * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n   * percentage options are 1), based on the previous and following categories. This mode\n   * generates bars with different widths when data are not evenly spaced.\n   * @private\n   */\n\n\n  function computeFlexCategoryTraits(index, ruler, options) {\n    var pixels = ruler.pixels;\n    var curr = pixels[index];\n    var prev = index > 0 ? pixels[index - 1] : null;\n    var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    var percent = options.categoryPercentage;\n    var start, size;\n\n    if (prev === null) {\n      // first data: its size is double based on the next point or,\n      // if it's also the last data, we use the scale size.\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n\n    if (next === null) {\n      // last data: its size is also double based on the previous point.\n      next = curr + curr - prev;\n    }\n\n    start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    size = Math.abs(next - prev) / 2 * percent;\n    return {\n      chunk: size / ruler.stackCount,\n      ratio: options.barPercentage,\n      start: start\n    };\n  }\n\n  var controller_bar = core_datasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      core_datasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      var options = me._resolveElementOptions(rectangle, index);\n\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderSkipped: options.borderSkipped,\n        borderWidth: options.borderWidth,\n        datasetLabel: dataset.label,\n        label: me.chart.data.labels[index]\n      };\n\n      me._updateElementGeometry(rectangle, index, reset);\n\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    _updateElementGeometry: function _updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n\n      var vscale = me._getValueScale();\n\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {number} [last] - The dataset index\n     * @returns {string[]} The list of stack IDs\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getIndexScale();\n\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {number} [datasetIndex] - The dataset index\n     * @param {string} [name] - The stack name to find\n     * @returns {number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n\n      var scale = me._getIndexScale();\n\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers$1.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n\n      var scale = me._getValueScale();\n\n      var isHorizontal = scale.isHorizontal();\n      var datasets = chart.data.datasets;\n      var value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n      var minBarLength = scale.options.minBarLength;\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller._getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = +scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = head - base;\n\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n        size = minBarLength;\n\n        if (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n          head = base - minBarLength;\n        } else {\n          head = base + minBarLength;\n        }\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers$1.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getValueScale();\n\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers$1.canvas.unclipArea(chart.ctx);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(rectangle, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = rectangle.custom || {};\n      var options = chart.options.elements.rectangle;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderSkipped', 'borderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$1([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    }\n  });\n  var valueOrDefault$3 = helpers$1.valueOrDefault;\n  var resolve$2 = helpers$1.options.resolve;\n\n  core_defaults._set('bubble', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        // bubble should probably use a linear scale by default\n        position: 'bottom',\n        id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n      }],\n      yAxes: [{\n        type: 'linear',\n        position: 'left',\n        id: 'y-axis-0'\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          // Title doesn't make sense for scatter since we format the data as a point\n          return '';\n        },\n        label: function label(item, data) {\n          var datasetLabel = data.datasets[item.datasetIndex].label || '';\n          var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n          return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n        }\n      }\n    }\n  });\n\n  var controller_bubble = core_datasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers$1.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$2([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve$2([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n  var resolve$3 = helpers$1.options.resolve;\n  var valueOrDefault$4 = helpers$1.valueOrDefault;\n\n  core_defaults._set('doughnut', {\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    hover: {\n      mode: 'single'\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc && arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n          if (meta.data[index]) {\n            meta.data[index].hidden = !meta.data[index].hidden;\n          }\n        }\n\n        chart.update();\n      }\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutoutPercentage: 50,\n    // The rotation of the chart, where the first data arc begins.\n    rotation: Math.PI * -0.5,\n    // The total circumference of the chart.\n    circumference: Math.PI * 2.0,\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem, data) {\n          var dataLabel = data.labels[tooltipItem.index];\n          var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n          if (helpers$1.isArray(dataLabel)) {\n            // show value on first line of multiline label\n            // need to clone because we are changing the value\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n      }\n    }\n  });\n\n  var controller_doughnut = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var availableWidth = chartArea.right - chartArea.left;\n      var availableHeight = chartArea.bottom - chartArea.top;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var arcs = meta.data;\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference;\n\n      var chartWeight = me._getRingWeight(me.index);\n\n      var i, ilen; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth();\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers$1.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n      if (!arcs) {\n        // Find the outmost visible dataset\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n\n            if (i !== me.index) {\n              controller = meta.controller;\n            }\n\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arc = arcs[i];\n        options = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\n        if (options.borderAlign !== 'inner') {\n          borderWidth = options.borderWidth;\n          hoverWidth = options.hoverBorderWidth;\n          max = borderWidth > max ? borderWidth : max;\n          max = hoverWidth > max ? hoverWidth : max;\n        }\n      }\n\n      return max;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$3([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n     * @private\n     */\n    _getRingWeightOffset: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    },\n\n    /**\n     * @private\n     */\n    _getRingWeight: function _getRingWeight(dataSetIndex) {\n      return Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n    },\n\n    /**\n     * Returns the sum of all visibile data set weights.  This value can be 0.\n     * @private\n     */\n    _getVisibleDatasetWeightTotal: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length);\n    }\n  });\n\n  core_defaults._set('horizontalBar', {\n    hover: {\n      mode: 'index',\n      axis: 'y'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        position: 'bottom'\n      }],\n      yAxes: [{\n        type: 'category',\n        position: 'left',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }]\n    },\n    elements: {\n      rectangle: {\n        borderSkipped: 'left'\n      }\n    },\n    tooltips: {\n      mode: 'index',\n      axis: 'y'\n    }\n  });\n\n  var controller_horizontalBar = controller_bar.extend({\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n  var valueOrDefault$5 = helpers$1.valueOrDefault;\n  var resolve$4 = helpers$1.options.resolve;\n  var isPointInArea = helpers$1.canvas._isPointInArea;\n\n  core_defaults._set('line', {\n    showLines: true,\n    spanGaps: false,\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        id: 'x-axis-0'\n      }],\n      yAxes: [{\n        type: 'linear',\n        id: 'y-axis-0'\n      }]\n    }\n  });\n\n  function lineEnabled(dataset, options) {\n    return valueOrDefault$5(dataset.showLine, options.showLines);\n  }\n\n  var controller_line = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.getScaleForId(meta.yAxisID);\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, me.chart.options);\n      var i, ilen; // Update Line\n\n      if (showLine) {\n        // Compatibility: If the properties are defined with only the old name, use those values\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = me._resolveLineOptions(line);\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var lineModel = meta.dataset._model;\n      var x, y;\n\n      var options = me._resolvePointOptions(point, index);\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n        steppedLine: lineModel ? lineModel.steppedLine : false,\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options;\n      var elementOptions = options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill', 'cubicInterpolationMode'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[key], elementOptions[key]]);\n      } // The default behavior of lines is to break at null values, according\n      // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n      // This option gives lines the ability to span gaps\n\n\n      values.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n      values.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n      values.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n      return values;\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var lineModel = meta.dataset._model;\n      var area = chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (lineModel.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (lineModel.cubicInterpolationMode === 'monotone') {\n        helpers$1.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i)._model, model, helpers$1.nextItem(points, i)._model, lineModel.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n\n          if (isPointInArea(model, area)) {\n            if (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n              model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n              model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n            }\n\n            if (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n              model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n              model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n            }\n          }\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers$1.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers$1.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n    }\n  });\n  var resolve$5 = helpers$1.options.resolve;\n\n  core_defaults._set('polarArea', {\n    scale: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      gridLines: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    // Boolean - Whether to animate the rotation of the chart\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    startAngle: -0.5 * Math.PI,\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i);\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n\n        chart.update();\n      }\n    },\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item, data) {\n          return data.labels[item.index] + ': ' + item.yLabel;\n        }\n      }\n    }\n  });\n\n  var controller_polarArea = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var arcs = meta.data;\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max(minSize / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      });\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers$1.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      var valueOrDefault = helpers$1.valueOrDefault;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$5([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return resolve$5([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n\n  core_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\n\n  core_defaults._set('pie', {\n    cutoutPercentage: 0\n  }); // Pie charts are Doughnut chart with different defaults\n\n\n  var controller_pie = controller_doughnut;\n  var valueOrDefault$6 = helpers$1.valueOrDefault;\n  var resolve$6 = helpers$1.options.resolve;\n\n  core_defaults._set('radar', {\n    scale: {\n      type: 'radialLinear'\n    },\n    elements: {\n      line: {\n        tension: 0 // no bezier in radar\n\n      }\n    }\n  });\n\n  var controller_radar = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.chart.scale;\n      var dataset = me.getDataset();\n      var i, ilen; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      } // Utility\n\n\n      line._scale = scale;\n      line._datasetIndex = me.index; // Data\n\n      line._children = points;\n      line._loop = true; // Model\n\n      line._model = me._resolveLineOptions(line);\n      line.pivot(); // Update Points\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      } // Update bezier control points\n\n\n      me.updateBezierControlPoints(); // Now pivot the point for animation\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n      var options = me._resolvePointOptions(point, index);\n\n      var lineModel = me.getMeta().dataset._model;\n\n      var x = reset ? scale.xCenter : pointPosition.x;\n      var y = reset ? scale.yCenter : pointPosition.y; // Utility\n\n      point._scale = scale;\n      point._options = options;\n      point._datasetIndex = me.index;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        // value not used in dataset scale, but we want a consistent API between scales\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[key], options[key]]);\n      }\n\n      values.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n      return values;\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints;\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        model = points[i]._model;\n        controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i, true)._model, model, helpers$1.nextItem(points, i, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n        model.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n        model.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n        model.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n      }\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n    }\n  });\n\n  core_defaults._set('scatter', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        id: 'x-axis-1',\n        // need an ID so datasets can reference the scale\n        type: 'linear',\n        // scatter should not use a category axis\n        position: 'bottom'\n      }],\n      yAxes: [{\n        id: 'y-axis-1',\n        type: 'linear',\n        position: 'left'\n      }]\n    },\n    showLines: false,\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return ''; // doesn't make sense for scatter since data are formatted as a point\n        },\n        label: function label(item) {\n          return '(' + item.xLabel + ', ' + item.yLabel + ')';\n        }\n      }\n    }\n  }); // Scatter charts use line controllers\n\n\n  var controller_scatter = controller_line; // NOTE export a map in which the key represents the controller type, not\n  // the class, and so must be CamelCase in order to be correctly retrieved\n  // by the controller in core.controller.js (`controllers[meta.type]`).\n\n  var controllers = {\n    bar: controller_bar,\n    bubble: controller_bubble,\n    doughnut: controller_doughnut,\n    horizontalBar: controller_horizontalBar,\n    line: controller_line,\n    polarArea: controller_polarArea,\n    pie: controller_pie,\n    radar: controller_radar,\n    scatter: controller_scatter\n  };\n  /**\n   * Helper function to get relative position for an event\n   * @param {Event|IEvent} event - The event to get the position for\n   * @param {Chart} chart - The chart\n   * @returns {object} the event position\n   */\n\n  function getRelativePosition(e, chart) {\n    if (e.native) {\n      return {\n        x: e.x,\n        y: e.y\n      };\n    }\n\n    return helpers$1.getRelativePosition(e, chart);\n  }\n  /**\n   * Helper function to traverse all of the visible elements in the chart\n   * @param {Chart} chart - the chart\n   * @param {function} handler - the callback to execute for each visible item\n   */\n\n\n  function parseVisibleItems(chart, handler) {\n    var datasets = chart.data.datasets;\n    var meta, i, j, ilen, jlen;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      if (!chart.isDatasetVisible(i)) {\n        continue;\n      }\n\n      meta = chart.getDatasetMeta(i);\n\n      for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n        var element = meta.data[j];\n\n        if (!element._view.skip) {\n          handler(element);\n        }\n      }\n    }\n  }\n  /**\n   * Helper function to get the items that intersect the event position\n   * @param {ChartElement[]} items - elements to filter\n   * @param {object} position - the point to be nearest to\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getIntersectItems(chart, position) {\n    var elements = [];\n    parseVisibleItems(chart, function (element) {\n      if (element.inRange(position.x, position.y)) {\n        elements.push(element);\n      }\n    });\n    return elements;\n  }\n  /**\n   * Helper function to get the items nearest to the event position considering all visible items in teh chart\n   * @param {Chart} chart - the chart to look at elements from\n   * @param {object} position - the point to be nearest to\n   * @param {boolean} intersect - if true, only consider items that intersect the position\n   * @param {function} distanceMetric - function to provide the distance between points\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getNearestItems(chart, position, intersect, distanceMetric) {\n    var minDistance = Number.POSITIVE_INFINITY;\n    var nearestItems = [];\n    parseVisibleItems(chart, function (element) {\n      if (intersect && !element.inRange(position.x, position.y)) {\n        return;\n      }\n\n      var center = element.getCenterPoint();\n      var distance = distanceMetric(position, center);\n\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n    });\n    return nearestItems;\n  }\n  /**\n   * Get a distance metric function for two points based on the\n   * axis mode setting\n   * @param {string} axis - the axis mode. x|y|xy\n   */\n\n\n  function getDistanceMetricForAxis(axis) {\n    var useX = axis.indexOf('x') !== -1;\n    var useY = axis.indexOf('y') !== -1;\n    return function (pt1, pt2) {\n      var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n      var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n  }\n\n  function indexMode(chart, e, options) {\n    var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n    options.axis = options.axis || 'x';\n    var distanceMetric = getDistanceMetricForAxis(options.axis);\n    var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n    var elements = [];\n\n    if (!items.length) {\n      return [];\n    }\n\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      if (chart.isDatasetVisible(datasetIndex)) {\n        var meta = chart.getDatasetMeta(datasetIndex);\n        var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n        if (element && !element._view.skip) {\n          elements.push(element);\n        }\n      }\n    });\n    return elements;\n  }\n  /**\n   * @interface IInteractionOptions\n   */\n\n  /**\n   * If true, only consider items that intersect the point\n   * @name IInterfaceOptions#boolean\n   * @type Boolean\n   */\n\n  /**\n   * Contains interaction related functions\n   * @namespace Chart.Interaction\n   */\n\n\n  var core_interaction = {\n    // Helper function for different modes\n    modes: {\n      single: function single(chart, e) {\n        var position = getRelativePosition(e, chart);\n        var elements = [];\n        parseVisibleItems(chart, function (element) {\n          if (element.inRange(position.x, position.y)) {\n            elements.push(element);\n            return elements;\n          }\n        });\n        return elements.slice(0, 1);\n      },\n\n      /**\n       * @function Chart.Interaction.modes.label\n       * @deprecated since version 2.4.0\n       * @todo remove at version 3\n       * @private\n       */\n      label: indexMode,\n\n      /**\n       * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n       * @function Chart.Interaction.modes.index\n       * @since v2.4.0\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      index: indexMode,\n\n      /**\n       * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect is false, we find the nearest item and return the items in that dataset\n       * @function Chart.Interaction.modes.dataset\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      dataset: function dataset(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n        if (items.length > 0) {\n          items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n        }\n\n        return items;\n      },\n\n      /**\n       * @function Chart.Interaction.modes.x-axis\n       * @deprecated since version 2.4.0. Use index mode and intersect == true\n       * @todo remove at version 3\n       * @private\n       */\n      'x-axis': function xAxis(chart, e) {\n        return indexMode(chart, e, {\n          intersect: false\n        });\n      },\n\n      /**\n       * Point mode returns all elements that hit test based on the event position\n       * of the event\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      point: function point(chart, e) {\n        var position = getRelativePosition(e, chart);\n        return getIntersectItems(chart, position);\n      },\n\n      /**\n       * nearest mode returns the element closest to the point\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      nearest: function nearest(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        return getNearestItems(chart, position, options.intersect, distanceMetric);\n      },\n\n      /**\n       * x mode returns the elements that hit-test at the current x coordinate\n       * @function Chart.Interaction.modes.x\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      x: function x(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inXRange(position.x)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      },\n\n      /**\n       * y mode returns the elements that hit-test at the current y coordinate\n       * @function Chart.Interaction.modes.y\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      y: function y(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inYRange(position.y)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      }\n    }\n  };\n\n  function filterByPosition(array, position) {\n    return helpers$1.where(array, function (v) {\n      return v.position === position;\n    });\n  }\n\n  function sortByWeight(array, reverse) {\n    array.forEach(function (v, i) {\n      v._tmpIndex_ = i;\n      return v;\n    });\n    array.sort(function (a, b) {\n      var v0 = reverse ? b : a;\n      var v1 = reverse ? a : b;\n      return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n    });\n    array.forEach(function (v) {\n      delete v._tmpIndex_;\n    });\n  }\n\n  function findMaxPadding(boxes) {\n    var top = 0;\n    var left = 0;\n    var bottom = 0;\n    var right = 0;\n    helpers$1.each(boxes, function (box) {\n      if (box.getPadding) {\n        var boxPadding = box.getPadding();\n        top = Math.max(top, boxPadding.top);\n        left = Math.max(left, boxPadding.left);\n        bottom = Math.max(bottom, boxPadding.bottom);\n        right = Math.max(right, boxPadding.right);\n      }\n    });\n    return {\n      top: top,\n      left: left,\n      bottom: bottom,\n      right: right\n    };\n  }\n\n  function addSizeByPosition(boxes, size) {\n    helpers$1.each(boxes, function (box) {\n      size[box.position] += box.isHorizontal() ? box.height : box.width;\n    });\n  }\n\n  core_defaults._set('global', {\n    layout: {\n      padding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    }\n  });\n  /**\n   * @interface ILayoutItem\n   * @prop {string} position - The position of the item in the chart layout. Possible values are\n   * 'left', 'top', 'right', 'bottom', and 'chartArea'\n   * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n   * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n   * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n   * @prop {function} update - Takes two parameters: width and height. Returns size of item\n   * @prop {function} getPadding -  Returns an object with padding on the edges\n   * @prop {number} width - Width of item. Must be valid after update()\n   * @prop {number} height - Height of item. Must be valid after update()\n   * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n   */\n  // The layout service is very self explanatory.  It's responsible for the layout within a chart.\n  // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n  // It is this service's responsibility of carrying out that layout.\n\n\n  var core_layouts = {\n    defaults: {},\n\n    /**\n     * Register a box to a chart.\n     * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n     * @param {Chart} chart - the chart to use\n     * @param {ILayoutItem} item - the item to add to be layed out\n     */\n    addBox: function addBox(chart, item) {\n      if (!chart.boxes) {\n        chart.boxes = [];\n      } // initialize item with default values\n\n\n      item.fullWidth = item.fullWidth || false;\n      item.position = item.position || 'top';\n      item.weight = item.weight || 0;\n      chart.boxes.push(item);\n    },\n\n    /**\n     * Remove a layoutItem from a chart\n     * @param {Chart} chart - the chart to remove the box from\n     * @param {ILayoutItem} layoutItem - the item to remove from the layout\n     */\n    removeBox: function removeBox(chart, layoutItem) {\n      var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n      if (index !== -1) {\n        chart.boxes.splice(index, 1);\n      }\n    },\n\n    /**\n     * Sets (or updates) options on the given `item`.\n     * @param {Chart} chart - the chart in which the item lives (or will be added to)\n     * @param {ILayoutItem} item - the item to configure with the given options\n     * @param {object} options - the new item options.\n     */\n    configure: function configure(chart, item, options) {\n      var props = ['fullWidth', 'position', 'weight'];\n      var ilen = props.length;\n      var i = 0;\n      var prop;\n\n      for (; i < ilen; ++i) {\n        prop = props[i];\n\n        if (options.hasOwnProperty(prop)) {\n          item[prop] = options[prop];\n        }\n      }\n    },\n\n    /**\n     * Fits boxes of the given chart into the given size by having each box measure itself\n     * then running a fitting algorithm\n     * @param {Chart} chart - the chart\n     * @param {number} width - the width to fit into\n     * @param {number} height - the height to fit into\n     */\n    update: function update(chart, width, height) {\n      if (!chart) {\n        return;\n      }\n\n      var layoutOptions = chart.options.layout || {};\n      var padding = helpers$1.options.toPadding(layoutOptions.padding);\n      var leftPadding = padding.left;\n      var rightPadding = padding.right;\n      var topPadding = padding.top;\n      var bottomPadding = padding.bottom;\n      var leftBoxes = filterByPosition(chart.boxes, 'left');\n      var rightBoxes = filterByPosition(chart.boxes, 'right');\n      var topBoxes = filterByPosition(chart.boxes, 'top');\n      var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n      var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n      sortByWeight(leftBoxes, true);\n      sortByWeight(rightBoxes, false);\n      sortByWeight(topBoxes, true);\n      sortByWeight(bottomBoxes, false);\n      var verticalBoxes = leftBoxes.concat(rightBoxes);\n      var horizontalBoxes = topBoxes.concat(bottomBoxes);\n      var outerBoxes = verticalBoxes.concat(horizontalBoxes); // Essentially we now have any number of boxes on each of the 4 sides.\n      // Our canvas looks like the following.\n      // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n      // B1 is the bottom axis\n      // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n      // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n      // an error will be thrown.\n      //\n      // |----------------------------------------------------|\n      // |                  T1 (Full Width)                   |\n      // |----------------------------------------------------|\n      // |    |    |                 T2                  |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    | C1 |                           | C2 |    |\n      // |    |    |----|                           |----|    |\n      // |    |    |                                     |    |\n      // | L1 | L2 |           ChartArea (C0)            | R1 |\n      // |    |    |                                     |    |\n      // |    |    |----|                           |----|    |\n      // |    |    | C3 |                           | C4 |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    |                 B1                  |    |\n      // |----------------------------------------------------|\n      // |                  B2 (Full Width)                   |\n      // |----------------------------------------------------|\n      //\n      // What we do to find the best sizing, we do the following\n      // 1. Determine the minimum size of the chart area.\n      // 2. Split the remaining width equally between each vertical axis\n      // 3. Split the remaining height equally between each horizontal axis\n      // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n      // 5. Adjust the sizes of each axis based on it's minimum reported size.\n      // 6. Refit each axis\n      // 7. Position each axis in the final location\n      // 8. Tell the chart the final location of the chart area\n      // 9. Tell any axes that overlay the chart area the positions of the chart area\n      // Step 1\n\n      var chartWidth = width - leftPadding - rightPadding;\n      var chartHeight = height - topPadding - bottomPadding;\n      var chartAreaWidth = chartWidth / 2; // min 50%\n      // Step 2\n\n      var verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length; // Step 3\n      // TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n      // var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n      // Step 4\n\n      var maxChartAreaWidth = chartWidth;\n      var maxChartAreaHeight = chartHeight;\n      var outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      var minBoxSizes = [];\n      var maxPadding;\n\n      function getMinimumBoxSize(box) {\n        var minSize;\n        var isHorizontal = box.isHorizontal();\n\n        if (isHorizontal) {\n          minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n          maxChartAreaHeight -= minSize.height;\n        } else {\n          minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n          maxChartAreaWidth -= minSize.width;\n        }\n\n        minBoxSizes.push({\n          horizontal: isHorizontal,\n          width: minSize.width,\n          box: box\n        });\n      }\n\n      helpers$1.each(outerBoxes, getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n      maxPadding = findMaxPadding(outerBoxes); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n      // be if the axes are drawn at their minimum sizes.\n      // Steps 5 & 6\n      // Function to fit a box\n\n      function fitBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minBox) {\n          return minBox.box === box;\n        });\n\n        if (minBoxSize) {\n          if (minBoxSize.horizontal) {\n            var scaleMargin = {\n              left: Math.max(outerBoxSizes.left, maxPadding.left),\n              right: Math.max(outerBoxSizes.right, maxPadding.right),\n              top: 0,\n              bottom: 0\n            }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n            // on the margin. Sometimes they need to increase in size slightly\n\n            box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n          } else {\n            box.update(minBoxSize.width, maxChartAreaHeight);\n          }\n        }\n      } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n      helpers$1.each(verticalBoxes, fitBox);\n      addSizeByPosition(verticalBoxes, outerBoxSizes); // Set the Left and Right margins for the horizontal boxes\n\n      helpers$1.each(horizontalBoxes, fitBox);\n      addSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n      function finalFitVerticalBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minSize) {\n          return minSize.box === box;\n        });\n        var scaleMargin = {\n          left: 0,\n          right: 0,\n          top: outerBoxSizes.top,\n          bottom: outerBoxSizes.bottom\n        };\n\n        if (minBoxSize) {\n          box.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n        }\n      } // Let the left layout know the final margin\n\n\n      helpers$1.each(verticalBoxes, finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n      outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      addSizeByPosition(outerBoxes, outerBoxSizes); // We may be adding some padding to account for rotated x axis labels\n\n      var leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n      outerBoxSizes.left += leftPaddingAddition;\n      outerBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n      var topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n      outerBoxSizes.top += topPaddingAddition;\n      outerBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n      // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n      // without calling `fit` again\n\n      var newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n      var newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n      if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n        helpers$1.each(verticalBoxes, function (box) {\n          box.height = newMaxChartAreaHeight;\n        });\n        helpers$1.each(horizontalBoxes, function (box) {\n          if (!box.fullWidth) {\n            box.width = newMaxChartAreaWidth;\n          }\n        });\n        maxChartAreaHeight = newMaxChartAreaHeight;\n        maxChartAreaWidth = newMaxChartAreaWidth;\n      } // Step 7 - Position the boxes\n\n\n      var left = leftPadding + leftPaddingAddition;\n      var top = topPadding + topPaddingAddition;\n\n      function placeBox(box) {\n        if (box.isHorizontal()) {\n          box.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n          box.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n          box.top = top;\n          box.bottom = top + box.height; // Move to next point\n\n          top = box.bottom;\n        } else {\n          box.left = left;\n          box.right = left + box.width;\n          box.top = outerBoxSizes.top;\n          box.bottom = outerBoxSizes.top + maxChartAreaHeight; // Move to next point\n\n          left = box.right;\n        }\n      }\n\n      helpers$1.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n      left += maxChartAreaWidth;\n      top += maxChartAreaHeight;\n      helpers$1.each(rightBoxes, placeBox);\n      helpers$1.each(bottomBoxes, placeBox); // Step 8\n\n      chart.chartArea = {\n        left: outerBoxSizes.left,\n        top: outerBoxSizes.top,\n        right: outerBoxSizes.left + maxChartAreaWidth,\n        bottom: outerBoxSizes.top + maxChartAreaHeight\n      }; // Step 9\n\n      helpers$1.each(chartAreaBoxes, function (box) {\n        box.left = chart.chartArea.left;\n        box.top = chart.chartArea.top;\n        box.right = chart.chartArea.right;\n        box.bottom = chart.chartArea.bottom;\n        box.update(maxChartAreaWidth, maxChartAreaHeight);\n      });\n    }\n  };\n  /**\n   * Platform fallback implementation (minimal).\n   * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n   */\n\n  var platform_basic = {\n    acquireContext: function acquireContext(item) {\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      }\n\n      return item && item.getContext('2d') || null;\n    }\n  };\n  var platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n  var platform_dom$1 =\n  /*#__PURE__*/\n  Object.freeze({\n    default: platform_dom\n  });\n\n  function getCjsExportFromNamespace(n) {\n    return n && n.default || n;\n  }\n\n  var stylesheet = getCjsExportFromNamespace(platform_dom$1);\n  var EXPANDO_KEY = '$chartjs';\n  var CSS_PREFIX = 'chartjs-';\n  var CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\n  var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\n  var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\n  var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n  /**\n   * DOM event types -> Chart.js event types.\n   * Note: only events with different types are mapped.\n   * @see https://developer.mozilla.org/en-US/docs/Web/Events\n   */\n\n  var EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n  };\n  /**\n   * The \"used\" size is the final value of a dimension property after all calculations have\n   * been performed. This method uses the computed style of `element` but returns undefined\n   * if the computed style is not expressed in pixels. That can happen in some cases where\n   * `element` has a size relative to its parent and this last one is not yet displayed,\n   * for example because of `display: none` on a parent node.\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n   * @returns {number} Size in pixels or undefined if unknown.\n   */\n\n  function readUsedSize(element, property) {\n    var value = helpers$1.getStyle(element, property);\n    var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? Number(matches[1]) : undefined;\n  }\n  /**\n   * Initializes the canvas style and render size without modifying the canvas display size,\n   * since responsiveness is handled by the controller.resize() method. The config is used\n   * to determine the aspect ratio to apply in case no explicit height has been specified.\n   */\n\n\n  function initCanvas(canvas, config) {\n    var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n    // returns null or '' if no explicit value has been set to the canvas attribute.\n\n    var renderHeight = canvas.getAttribute('height');\n    var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n    canvas[EXPANDO_KEY] = {\n      initial: {\n        height: renderHeight,\n        width: renderWidth,\n        style: {\n          display: style.display,\n          height: style.height,\n          width: style.width\n        }\n      }\n    }; // Force canvas to display as block to avoid extra space caused by inline\n    // elements, which would interfere with the responsive resize process.\n    // https://github.com/chartjs/Chart.js/issues/2538\n\n    style.display = style.display || 'block';\n\n    if (renderWidth === null || renderWidth === '') {\n      var displayWidth = readUsedSize(canvas, 'width');\n\n      if (displayWidth !== undefined) {\n        canvas.width = displayWidth;\n      }\n    }\n\n    if (renderHeight === null || renderHeight === '') {\n      if (canvas.style.height === '') {\n        // If no explicit render height and style height, let's apply the aspect ratio,\n        // which one can be specified by the user but also by charts as default option\n        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n        canvas.height = canvas.width / (config.options.aspectRatio || 2);\n      } else {\n        var displayHeight = readUsedSize(canvas, 'height');\n\n        if (displayWidth !== undefined) {\n          canvas.height = displayHeight;\n        }\n      }\n    }\n\n    return canvas;\n  }\n  /**\n   * Detects support for options object argument in addEventListener.\n   * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n   * @private\n   */\n\n\n  var supportsEventListenerOptions = function () {\n    var supports = false;\n\n    try {\n      var options = Object.defineProperty({}, 'passive', {\n        // eslint-disable-next-line getter-return\n        get: function get() {\n          supports = true;\n        }\n      });\n      window.addEventListener('e', null, options);\n    } catch (e) {// continue regardless of error\n    }\n\n    return supports;\n  }(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n  // https://github.com/chartjs/Chart.js/issues/4287\n\n\n  var eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n  } : false;\n\n  function addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n\n  function removeListener(node, type, listener) {\n    node.removeEventListener(type, listener, eventListenerOptions);\n  }\n\n  function createEvent(type, chart, x, y, nativeEvent) {\n    return {\n      type: type,\n      chart: chart,\n      native: nativeEvent || null,\n      x: x !== undefined ? x : null,\n      y: y !== undefined ? y : null\n    };\n  }\n\n  function fromNativeEvent(event, chart) {\n    var type = EVENT_TYPES[event.type] || event.type;\n    var pos = helpers$1.getRelativePosition(event, chart);\n    return createEvent(type, chart, pos.x, pos.y, event);\n  }\n\n  function throttled(fn, thisArg) {\n    var ticking = false;\n    var args = [];\n    return function () {\n      args = Array.prototype.slice.call(arguments);\n      thisArg = thisArg || this;\n\n      if (!ticking) {\n        ticking = true;\n        helpers$1.requestAnimFrame.call(window, function () {\n          ticking = false;\n          fn.apply(thisArg, args);\n        });\n      }\n    };\n  }\n\n  function createDiv(cls) {\n    var el = document.createElement('div');\n    el.className = cls || '';\n    return el;\n  } // Implementation based on https://github.com/marcj/css-element-queries\n\n\n  function createResizer(handler) {\n    var maxSize = 1000000; // NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n    // https://github.com/chartjs/Chart.js/issues/5902\n\n    var resizer = createDiv(CSS_SIZE_MONITOR);\n    var expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n    var shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n    expand.appendChild(createDiv());\n    shrink.appendChild(createDiv());\n    resizer.appendChild(expand);\n    resizer.appendChild(shrink);\n\n    resizer._reset = function () {\n      expand.scrollLeft = maxSize;\n      expand.scrollTop = maxSize;\n      shrink.scrollLeft = maxSize;\n      shrink.scrollTop = maxSize;\n    };\n\n    var onScroll = function onScroll() {\n      resizer._reset();\n\n      handler();\n    };\n\n    addListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n    addListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n    return resizer;\n  } // https://davidwalsh.name/detect-node-insertion\n\n\n  function watchForRender(node, handler) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n    var proxy = expando.renderProxy = function (e) {\n      if (e.animationName === CSS_RENDER_ANIMATION) {\n        handler();\n      }\n    };\n\n    helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n      addListener(node, type, proxy);\n    }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n    // is removed then added back immediately (same animation frame?). Accessing the\n    // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n    // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n    // https://github.com/chartjs/Chart.js/issues/4737\n\n    expando.reflow = !!node.offsetParent;\n    node.classList.add(CSS_RENDER_MONITOR);\n  }\n\n  function unwatchForRender(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var proxy = expando.renderProxy;\n\n    if (proxy) {\n      helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n        removeListener(node, type, proxy);\n      });\n      delete expando.renderProxy;\n    }\n\n    node.classList.remove(CSS_RENDER_MONITOR);\n  }\n\n  function addResizeListener(node, listener, chart) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n    var resizer = expando.resizer = createResizer(throttled(function () {\n      if (expando.resizer) {\n        var container = chart.options.maintainAspectRatio && node.parentNode;\n        var w = container ? container.clientWidth : 0;\n        listener(createEvent('resize', chart));\n\n        if (container && container.clientWidth < w && chart.canvas) {\n          // If the container size shrank during chart resize, let's assume\n          // scrollbar appeared. So we resize again with the scrollbar visible -\n          // effectively making chart smaller and the scrollbar hidden again.\n          // Because we are inside `throttled`, and currently `ticking`, scroll\n          // events are ignored during this whole 2 resize process.\n          // If we assumed wrong and something else happened, we are resizing\n          // twice in a frame (potential performance issue)\n          listener(createEvent('resize', chart));\n        }\n      }\n    })); // The resizer needs to be attached to the node parent, so we first need to be\n    // sure that `node` is attached to the DOM before injecting the resizer element.\n\n    watchForRender(node, function () {\n      if (expando.resizer) {\n        var container = node.parentNode;\n\n        if (container && container !== resizer.parentNode) {\n          container.insertBefore(resizer, container.firstChild);\n        } // The container size might have changed, let's reset the resizer state.\n\n\n        resizer._reset();\n      }\n    });\n  }\n\n  function removeResizeListener(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var resizer = expando.resizer;\n    delete expando.resizer;\n    unwatchForRender(node);\n\n    if (resizer && resizer.parentNode) {\n      resizer.parentNode.removeChild(resizer);\n    }\n  }\n\n  function injectCSS(platform, css) {\n    // https://stackoverflow.com/q/3922139\n    var style = platform._style || document.createElement('style');\n\n    if (!platform._style) {\n      platform._style = style;\n      css = '/* Chart.js */\\n' + css;\n      style.setAttribute('type', 'text/css');\n      document.getElementsByTagName('head')[0].appendChild(style);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n\n  var platform_dom$2 = {\n    /**\n     * When `true`, prevents the automatic injection of the stylesheet required to\n     * correctly detect when the chart is added to the DOM and then resized. This\n     * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n     * to be manually imported to make this library compatible with any CSP.\n     * See https://github.com/chartjs/Chart.js/issues/5208\n     */\n    disableCSSInjection: false,\n\n    /**\n     * This property holds whether this platform is enabled for the current environment.\n     * Currently used by platform.js to select the proper implementation.\n     * @private\n     */\n    _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n    /**\n     * @private\n     */\n    _ensureLoaded: function _ensureLoaded() {\n      if (this._loaded) {\n        return;\n      }\n\n      this._loaded = true; // https://github.com/chartjs/Chart.js/issues/5208\n\n      if (!this.disableCSSInjection) {\n        injectCSS(this, stylesheet);\n      }\n    },\n    acquireContext: function acquireContext(item, config) {\n      if (typeof item === 'string') {\n        item = document.getElementById(item);\n      } else if (item.length) {\n        // Support for array based queries (such as jQuery)\n        item = item[0];\n      }\n\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n      // method, for example: https://github.com/kkapsner/CanvasBlocker\n      // https://github.com/chartjs/Chart.js/issues/2807\n\n\n      var context = item && item.getContext && item.getContext('2d'); // Load platform resources on first chart creation, to make possible to change\n      // platform options after importing the library (e.g. `disableCSSInjection`).\n\n      this._ensureLoaded(); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n      // inside an iframe or when running in a protected environment. We could guess the\n      // types from their toString() value but let's keep things flexible and assume it's\n      // a sufficient condition if the item has a context2D which has item as `canvas`.\n      // https://github.com/chartjs/Chart.js/issues/3887\n      // https://github.com/chartjs/Chart.js/issues/4102\n      // https://github.com/chartjs/Chart.js/issues/4152\n\n\n      if (context && context.canvas === item) {\n        initCanvas(item, config);\n        return context;\n      }\n\n      return null;\n    },\n    releaseContext: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (helpers$1.isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      helpers$1.each(initial.style || {}, function (value, key) {\n        canvas.style[key] = value;\n      }); // The canvas render size might have been changed (and thus the state stack discarded),\n      // we can't use save() and restore() to restore the initial state. So make sure that at\n      // least the canvas context is reset to the default state by setting the canvas width.\n      // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n      // eslint-disable-next-line no-self-assign\n\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n    },\n    addEventListener: function addEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        addResizeListener(canvas, listener, chart);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n      var proxies = expando.proxies || (expando.proxies = {});\n\n      var proxy = proxies[chart.id + '_' + type] = function (event) {\n        listener(fromNativeEvent(event, chart));\n      };\n\n      addListener(canvas, type, proxy);\n    },\n    removeEventListener: function removeEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        removeResizeListener(canvas);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || {};\n      var proxies = expando.proxies || {};\n      var proxy = proxies[chart.id + '_' + type];\n\n      if (!proxy) {\n        return;\n      }\n\n      removeListener(canvas, type, proxy);\n    }\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use EventTarget.addEventListener instead.\n   * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   * @function Chart.helpers.addEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.addEvent = addListener;\n  /**\n   * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n   * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n   * @function Chart.helpers.removeEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.removeEvent = removeListener; // @TODO Make possible to select another platform at build time.\n\n  var implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n  /**\n   * @namespace Chart.platform\n   * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n   * @since 2.4.0\n   */\n\n  var platform = helpers$1.extend({\n    /**\n     * @since 2.7.0\n     */\n    initialize: function initialize() {},\n\n    /**\n     * Called at chart construction time, returns a context2d instance implementing\n     * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n     * @param {*} item - The native item from which to acquire context (platform specific)\n     * @param {object} options - The chart options\n     * @returns {CanvasRenderingContext2D} context2d instance\n     */\n    acquireContext: function acquireContext() {},\n\n    /**\n     * Called at chart destruction time, releases any resources associated to the context\n     * previously returned by the acquireContext() method.\n     * @param {CanvasRenderingContext2D} context - The context2d instance\n     * @returns {boolean} true if the method succeeded, else false\n     */\n    releaseContext: function releaseContext() {},\n\n    /**\n     * Registers the specified listener on the given chart.\n     * @param {Chart} chart - Chart from which to listen for event\n     * @param {string} type - The ({@link IEvent}) type to listen for\n     * @param {function} listener - Receives a notification (an object that implements\n     * the {@link IEvent} interface) when an event of the specified type occurs.\n     */\n    addEventListener: function addEventListener() {},\n\n    /**\n     * Removes the specified listener previously registered with addEventListener.\n     * @param {Chart} chart - Chart from which to remove the listener\n     * @param {string} type - The ({@link IEvent}) type to remove\n     * @param {function} listener - The listener function to remove from the event target.\n     */\n    removeEventListener: function removeEventListener() {}\n  }, implementation);\n\n  core_defaults._set('global', {\n    plugins: {}\n  });\n  /**\n   * The plugin service singleton\n   * @namespace Chart.plugins\n   * @since 2.1.0\n   */\n\n\n  var core_plugins = {\n    /**\n     * Globally registered plugins.\n     * @private\n     */\n    _plugins: [],\n\n    /**\n     * This identifier is used to invalidate the descriptors cache attached to each chart\n     * when a global plugin is registered or unregistered. In this case, the cache ID is\n     * incremented and descriptors are regenerated during following API calls.\n     * @private\n     */\n    _cacheId: 0,\n\n    /**\n     * Registers the given plugin(s) if not already registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    register: function register(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        if (p.indexOf(plugin) === -1) {\n          p.push(plugin);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Unregisters the given plugin(s) only if registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    unregister: function unregister(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        var idx = p.indexOf(plugin);\n\n        if (idx !== -1) {\n          p.splice(idx, 1);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Remove all registered plugins.\n     * @since 2.1.5\n     */\n    clear: function clear() {\n      this._plugins = [];\n      this._cacheId++;\n    },\n\n    /**\n     * Returns the number of registered plugins?\n     * @returns {number}\n     * @since 2.1.5\n     */\n    count: function count() {\n      return this._plugins.length;\n    },\n\n    /**\n     * Returns all registered plugin instances.\n     * @returns {IPlugin[]} array of plugin objects.\n     * @since 2.1.5\n     */\n    getAll: function getAll() {\n      return this._plugins;\n    },\n\n    /**\n     * Calls enabled plugins for `chart` on the specified hook and with the given args.\n     * This method immediately returns as soon as a plugin explicitly returns false. The\n     * returned value can be used, for instance, to interrupt the current action.\n     * @param {Chart} chart - The chart instance for which plugins should be called.\n     * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n     * @param {Array} [args] - Extra arguments to apply to the hook call.\n     * @returns {boolean} false if any of the plugins return false, else returns true.\n     */\n    notify: function notify(chart, hook, args) {\n      var descriptors = this.descriptors(chart);\n      var ilen = descriptors.length;\n      var i, descriptor, plugin, params, method;\n\n      for (i = 0; i < ilen; ++i) {\n        descriptor = descriptors[i];\n        plugin = descriptor.plugin;\n        method = plugin[hook];\n\n        if (typeof method === 'function') {\n          params = [chart].concat(args || []);\n          params.push(descriptor.options);\n\n          if (method.apply(plugin, params) === false) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns descriptors of enabled plugins for the given chart.\n     * @returns {object[]} [{ plugin, options }]\n     * @private\n     */\n    descriptors: function descriptors(chart) {\n      var cache = chart.$plugins || (chart.$plugins = {});\n\n      if (cache.id === this._cacheId) {\n        return cache.descriptors;\n      }\n\n      var plugins = [];\n      var descriptors = [];\n      var config = chart && chart.config || {};\n      var options = config.options && config.options.plugins || {};\n\n      this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n        var idx = plugins.indexOf(plugin);\n\n        if (idx !== -1) {\n          return;\n        }\n\n        var id = plugin.id;\n        var opts = options[id];\n\n        if (opts === false) {\n          return;\n        }\n\n        if (opts === true) {\n          opts = helpers$1.clone(core_defaults.global.plugins[id]);\n        }\n\n        plugins.push(plugin);\n        descriptors.push({\n          plugin: plugin,\n          options: opts || {}\n        });\n      });\n\n      cache.descriptors = descriptors;\n      cache.id = this._cacheId;\n      return descriptors;\n    },\n\n    /**\n     * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n     * but in some cases, this reference can be changed by the user when updating options.\n     * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n     * @private\n     */\n    _invalidate: function _invalidate(chart) {\n      delete chart.$plugins;\n    }\n  };\n  var core_scaleService = {\n    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n    // use the new chart options to grab the correct scale\n    constructors: {},\n    // Use a registration function so that we can move to an ES6 map when we no longer need to support\n    // old browsers\n    // Scale config defaults\n    defaults: {},\n    registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n      this.constructors[type] = scaleConstructor;\n      this.defaults[type] = helpers$1.clone(scaleDefaults);\n    },\n    getScaleConstructor: function getScaleConstructor(type) {\n      return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n    },\n    getScaleDefaults: function getScaleDefaults(type) {\n      // Return the scale defaults merged with the global settings so that we always use the latest ones\n      return this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n    },\n    updateScaleDefaults: function updateScaleDefaults(type, additions) {\n      var me = this;\n\n      if (me.defaults.hasOwnProperty(type)) {\n        me.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n      }\n    },\n    addScalesToLayout: function addScalesToLayout(chart) {\n      // Adds each scale to the chart.boxes array to be sized accordingly\n      helpers$1.each(chart.scales, function (scale) {\n        // Set ILayoutItem parameters for backwards compatibility\n        scale.fullWidth = scale.options.fullWidth;\n        scale.position = scale.options.position;\n        scale.weight = scale.options.weight;\n        core_layouts.addBox(chart, scale);\n      });\n    }\n  };\n  var valueOrDefault$7 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    tooltips: {\n      enabled: true,\n      custom: null,\n      mode: 'nearest',\n      position: 'average',\n      intersect: true,\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      titleFontStyle: 'bold',\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleFontColor: '#fff',\n      titleAlign: 'left',\n      bodySpacing: 2,\n      bodyFontColor: '#fff',\n      bodyAlign: 'left',\n      footerFontStyle: 'bold',\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFontColor: '#fff',\n      footerAlign: 'left',\n      yPadding: 6,\n      xPadding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      multiKeyBackground: '#fff',\n      displayColors: true,\n      borderColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      callbacks: {\n        // Args are: (tooltipItems, data)\n        beforeTitle: helpers$1.noop,\n        title: function title(tooltipItems, data) {\n          var title = '';\n          var labels = data.labels;\n          var labelCount = labels ? labels.length : 0;\n\n          if (tooltipItems.length > 0) {\n            var item = tooltipItems[0];\n\n            if (item.label) {\n              title = item.label;\n            } else if (item.xLabel) {\n              title = item.xLabel;\n            } else if (labelCount > 0 && item.index < labelCount) {\n              title = labels[item.index];\n            }\n          }\n\n          return title;\n        },\n        afterTitle: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeBody: helpers$1.noop,\n        // Args are: (tooltipItem, data)\n        beforeLabel: helpers$1.noop,\n        label: function label(tooltipItem, data) {\n          var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n          if (label) {\n            label += ': ';\n          }\n\n          if (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n            label += tooltipItem.value;\n          } else {\n            label += tooltipItem.yLabel;\n          }\n\n          return label;\n        },\n        labelColor: function labelColor(tooltipItem, chart) {\n          var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n          var activeElement = meta.data[tooltipItem.index];\n          var view = activeElement._view;\n          return {\n            borderColor: view.borderColor,\n            backgroundColor: view.backgroundColor\n          };\n        },\n        labelTextColor: function labelTextColor() {\n          return this._options.bodyFontColor;\n        },\n        afterLabel: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        afterBody: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeFooter: helpers$1.noop,\n        footer: helpers$1.noop,\n        afterFooter: helpers$1.noop\n      }\n    }\n  });\n\n  var positioners = {\n    /**\n     * Average mode places the tooltip at the average position of the elements shown\n     * @function Chart.Tooltip.positioners.average\n     * @param elements {ChartElement[]} the elements being displayed in the tooltip\n     * @returns {object} tooltip position\n     */\n    average: function average(elements) {\n      if (!elements.length) {\n        return false;\n      }\n\n      var i, len;\n      var x = 0;\n      var y = 0;\n      var count = 0;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n\n      return {\n        x: x / count,\n        y: y / count\n      };\n    },\n\n    /**\n     * Gets the tooltip position nearest of the item nearest to the event position\n     * @function Chart.Tooltip.positioners.nearest\n     * @param elements {Chart.Element[]} the tooltip elements\n     * @param eventPosition {object} the position of the event in canvas coordinates\n     * @returns {object} the tooltip position\n     */\n    nearest: function nearest(elements, eventPosition) {\n      var x = eventPosition.x;\n      var y = eventPosition.y;\n      var minDistance = Number.POSITIVE_INFINITY;\n      var i, len, nearestElement;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var center = el.getCenterPoint();\n          var d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n\n      if (nearestElement) {\n        var tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }; // Helper to push or concat based on if the 2nd parameter is an array or not\n\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (helpers$1.isArray(toPush)) {\n        // base = base.concat(toPush);\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n\n    return base;\n  }\n  /**\n   * Returns array of strings split by newline\n   * @param {string} value - The value to split by newline.\n   * @returns {string[]} value if newline present - Returned from String split() method\n   * @function\n   */\n\n\n  function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n      return str.split('\\n');\n    }\n\n    return str;\n  }\n  /**\n   * Private helper to create a tooltip item model\n   * @param element - the chart element (point, arc, bar) to create the tooltip item for\n   * @return new tooltip item\n   */\n\n\n  function createTooltipItem(element) {\n    var xScale = element._xScale;\n    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n    var index = element._index;\n    var datasetIndex = element._datasetIndex;\n\n    var controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\n    var indexScale = controller._getIndexScale();\n\n    var valueScale = controller._getValueScale();\n\n    return {\n      xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n      yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n      label: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n      value: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n      index: index,\n      datasetIndex: datasetIndex,\n      x: element._model.x,\n      y: element._model.y\n    };\n  }\n  /**\n   * Helper to get the reset model for the tooltip\n   * @param tooltipOpts {object} the tooltip options\n   */\n\n\n  function getBaseModel(tooltipOpts) {\n    var globalDefaults = core_defaults.global;\n    return {\n      // Positioning\n      xPadding: tooltipOpts.xPadding,\n      yPadding: tooltipOpts.yPadding,\n      xAlign: tooltipOpts.xAlign,\n      yAlign: tooltipOpts.yAlign,\n      // Body\n      bodyFontColor: tooltipOpts.bodyFontColor,\n      _bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n      _bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n      _bodyAlign: tooltipOpts.bodyAlign,\n      bodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n      bodySpacing: tooltipOpts.bodySpacing,\n      // Title\n      titleFontColor: tooltipOpts.titleFontColor,\n      _titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n      _titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n      titleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n      _titleAlign: tooltipOpts.titleAlign,\n      titleSpacing: tooltipOpts.titleSpacing,\n      titleMarginBottom: tooltipOpts.titleMarginBottom,\n      // Footer\n      footerFontColor: tooltipOpts.footerFontColor,\n      _footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n      _footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n      footerFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n      _footerAlign: tooltipOpts.footerAlign,\n      footerSpacing: tooltipOpts.footerSpacing,\n      footerMarginTop: tooltipOpts.footerMarginTop,\n      // Appearance\n      caretSize: tooltipOpts.caretSize,\n      cornerRadius: tooltipOpts.cornerRadius,\n      backgroundColor: tooltipOpts.backgroundColor,\n      opacity: 0,\n      legendColorBackground: tooltipOpts.multiKeyBackground,\n      displayColors: tooltipOpts.displayColors,\n      borderColor: tooltipOpts.borderColor,\n      borderWidth: tooltipOpts.borderWidth\n    };\n  }\n  /**\n   * Get the size of the tooltip\n   */\n\n\n  function getTooltipSize(tooltip, model) {\n    var ctx = tooltip._chart.ctx;\n    var height = model.yPadding * 2; // Tooltip Padding\n\n    var width = 0; // Count of all lines in the body\n\n    var body = model.body;\n    var combinedBodyLength = body.reduce(function (count, bodyItem) {\n      return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n    }, 0);\n    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n    var titleLineCount = model.title.length;\n    var footerLineCount = model.footer.length;\n    var titleFontSize = model.titleFontSize;\n    var bodyFontSize = model.bodyFontSize;\n    var footerFontSize = model.footerFontSize;\n    height += titleLineCount * titleFontSize; // Title Lines\n\n    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n    height += combinedBodyLength * bodyFontSize; // Body Lines\n\n    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n    height += footerLineCount * footerFontSize; // Footer Lines\n\n    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n    // Title width\n\n    var widthPadding = 0;\n\n    var maxLineWidth = function maxLineWidth(line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n\n    ctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n    helpers$1.each(model.title, maxLineWidth); // Body width\n\n    ctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n    helpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n    widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n    helpers$1.each(body, function (bodyItem) {\n      helpers$1.each(bodyItem.before, maxLineWidth);\n      helpers$1.each(bodyItem.lines, maxLineWidth);\n      helpers$1.each(bodyItem.after, maxLineWidth);\n    }); // Reset back to 0\n\n    widthPadding = 0; // Footer width\n\n    ctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n    helpers$1.each(model.footer, maxLineWidth); // Add padding\n\n    width += 2 * model.xPadding;\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Helper to get the alignment of a tooltip given the size\n   */\n\n\n  function determineAlignment(tooltip, size) {\n    var model = tooltip._model;\n    var chart = tooltip._chart;\n    var chartArea = tooltip._chart.chartArea;\n    var xAlign = 'center';\n    var yAlign = 'center';\n\n    if (model.y < size.height) {\n      yAlign = 'top';\n    } else if (model.y > chart.height - size.height) {\n      yAlign = 'bottom';\n    }\n\n    var lf, rf; // functions to determine left, right alignment\n\n    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n    var midX = (chartArea.left + chartArea.right) / 2;\n    var midY = (chartArea.top + chartArea.bottom) / 2;\n\n    if (yAlign === 'center') {\n      lf = function lf(x) {\n        return x <= midX;\n      };\n\n      rf = function rf(x) {\n        return x > midX;\n      };\n    } else {\n      lf = function lf(x) {\n        return x <= size.width / 2;\n      };\n\n      rf = function rf(x) {\n        return x >= chart.width - size.width / 2;\n      };\n    }\n\n    olf = function olf(x) {\n      return x + size.width + model.caretSize + model.caretPadding > chart.width;\n    };\n\n    orf = function orf(x) {\n      return x - size.width - model.caretSize - model.caretPadding < 0;\n    };\n\n    yf = function yf(y) {\n      return y <= midY ? 'top' : 'bottom';\n    };\n\n    if (lf(model.x)) {\n      xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n      if (olf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    } else if (rf(model.x)) {\n      xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n      if (orf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    }\n\n    var opts = tooltip._options;\n    return {\n      xAlign: opts.xAlign ? opts.xAlign : xAlign,\n      yAlign: opts.yAlign ? opts.yAlign : yAlign\n    };\n  }\n  /**\n   * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n   */\n\n\n  function getBackgroundPoint(vm, size, alignment, chart) {\n    // Background Position\n    var x = vm.x;\n    var y = vm.y;\n    var caretSize = vm.caretSize;\n    var caretPadding = vm.caretPadding;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = alignment.xAlign;\n    var yAlign = alignment.yAlign;\n    var paddingAndSize = caretSize + caretPadding;\n    var radiusAndPadding = cornerRadius + caretPadding;\n\n    if (xAlign === 'right') {\n      x -= size.width;\n    } else if (xAlign === 'center') {\n      x -= size.width / 2;\n\n      if (x + size.width > chart.width) {\n        x = chart.width - size.width;\n      }\n\n      if (x < 0) {\n        x = 0;\n      }\n    }\n\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= size.height + paddingAndSize;\n    } else {\n      y -= size.height / 2;\n    }\n\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= radiusAndPadding;\n    } else if (xAlign === 'right') {\n      x += radiusAndPadding;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  function getAlignedX(vm, align) {\n    return align === 'center' ? vm.x + vm.width / 2 : align === 'right' ? vm.x + vm.width - vm.xPadding : vm.x + vm.xPadding;\n  }\n  /**\n   * Helper to build before and after body lines\n   */\n\n\n  function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n  }\n\n  var exports$3 = core_element.extend({\n    initialize: function initialize() {\n      this._model = getBaseModel(this._options);\n      this._lastActive = [];\n    },\n    // Get the title\n    // Args are: (tooltipItem, data)\n    getTitle: function getTitle() {\n      var me = this;\n      var opts = me._options;\n      var callbacks = opts.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n      var title = callbacks.title.apply(me, arguments);\n      var afterTitle = callbacks.afterTitle.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    },\n    // Args are: (tooltipItem, data)\n    getBeforeBody: function getBeforeBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n    },\n    // Args are: (tooltipItem, data)\n    getBody: function getBody(tooltipItems, data) {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var bodyItems = [];\n      helpers$1.each(tooltipItems, function (tooltipItem) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n        pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n        pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    },\n    // Args are: (tooltipItem, data)\n    getAfterBody: function getAfterBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n    },\n    // Get the footer and beforeFooter and afterFooter lines\n    // Args are: (tooltipItem, data)\n    getFooter: function getFooter() {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n      var footer = callbacks.footer.apply(me, arguments);\n      var afterFooter = callbacks.afterFooter.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    },\n    update: function update(changed) {\n      var me = this;\n      var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n      // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n      // which breaks any animations.\n\n      var existingModel = me._model;\n      var model = me._model = getBaseModel(opts);\n      var active = me._active;\n      var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n      var alignment = {\n        xAlign: existingModel.xAlign,\n        yAlign: existingModel.yAlign\n      };\n      var backgroundPoint = {\n        x: existingModel.x,\n        y: existingModel.y\n      };\n      var tooltipSize = {\n        width: existingModel.width,\n        height: existingModel.height\n      };\n      var tooltipPosition = {\n        x: existingModel.caretX,\n        y: existingModel.caretY\n      };\n      var i, len;\n\n      if (active.length) {\n        model.opacity = 1;\n        var labelColors = [];\n        var labelTextColors = [];\n        tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n        var tooltipItems = [];\n\n        for (i = 0, len = active.length; i < len; ++i) {\n          tooltipItems.push(createTooltipItem(active[i]));\n        } // If the user provided a filter function, use it to modify the tooltip items\n\n\n        if (opts.filter) {\n          tooltipItems = tooltipItems.filter(function (a) {\n            return opts.filter(a, data);\n          });\n        } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n        if (opts.itemSort) {\n          tooltipItems = tooltipItems.sort(function (a, b) {\n            return opts.itemSort(a, b, data);\n          });\n        } // Determine colors for boxes\n\n\n        helpers$1.each(tooltipItems, function (tooltipItem) {\n          labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n          labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n        }); // Build the Text Lines\n\n        model.title = me.getTitle(tooltipItems, data);\n        model.beforeBody = me.getBeforeBody(tooltipItems, data);\n        model.body = me.getBody(tooltipItems, data);\n        model.afterBody = me.getAfterBody(tooltipItems, data);\n        model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n        model.x = tooltipPosition.x;\n        model.y = tooltipPosition.y;\n        model.caretPadding = opts.caretPadding;\n        model.labelColors = labelColors;\n        model.labelTextColors = labelTextColors; // data points\n\n        model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n        tooltipSize = getTooltipSize(this, model);\n        alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n        backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n      } else {\n        model.opacity = 0;\n      }\n\n      model.xAlign = alignment.xAlign;\n      model.yAlign = alignment.yAlign;\n      model.x = backgroundPoint.x;\n      model.y = backgroundPoint.y;\n      model.width = tooltipSize.width;\n      model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n      model.caretX = tooltipPosition.x;\n      model.caretY = tooltipPosition.y;\n      me._model = model;\n\n      if (changed && opts.custom) {\n        opts.custom.call(me, model);\n      }\n\n      return me;\n    },\n    drawCaret: function drawCaret(tooltipPoint, size) {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    },\n    getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n      var x1, x2, x3, y1, y2, y3;\n      var caretSize = vm.caretSize;\n      var cornerRadius = vm.cornerRadius;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var ptX = tooltipPoint.x;\n      var ptY = tooltipPoint.y;\n      var width = size.width;\n      var height = size.height;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          x3 = x1;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          x3 = x1;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          x2 = vm.caretX;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          y3 = y1;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          y3 = y1; // invert drawing order\n\n          var tmp = x3;\n          x3 = x1;\n          x1 = tmp;\n        }\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    },\n    drawTitle: function drawTitle(pt, vm, ctx) {\n      var title = vm.title;\n\n      if (title.length) {\n        pt.x = getAlignedX(vm, vm._titleAlign);\n        ctx.textAlign = vm._titleAlign;\n        ctx.textBaseline = 'top';\n        var titleFontSize = vm.titleFontSize;\n        var titleSpacing = vm.titleSpacing;\n        ctx.fillStyle = vm.titleFontColor;\n        ctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n        var i, len;\n\n        for (i = 0, len = title.length; i < len; ++i) {\n          ctx.fillText(title[i], pt.x, pt.y);\n          pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n          if (i + 1 === title.length) {\n            pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n          }\n        }\n      }\n    },\n    drawBody: function drawBody(pt, vm, ctx) {\n      var bodyFontSize = vm.bodyFontSize;\n      var bodySpacing = vm.bodySpacing;\n      var bodyAlign = vm._bodyAlign;\n      var body = vm.body;\n      var drawColorBoxes = vm.displayColors;\n      var labelColors = vm.labelColors;\n      var xLinePadding = 0;\n      var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n      var textColor;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'top';\n      ctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n      pt.x = getAlignedX(vm, bodyAlign); // Before Body\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, pt.x + xLinePadding, pt.y);\n        pt.y += bodyFontSize + bodySpacing;\n      }; // Before body lines\n\n\n      ctx.fillStyle = vm.bodyFontColor;\n      helpers$1.each(vm.beforeBody, fillLineOfText);\n      xLinePadding = drawColorBoxes && bodyAlign !== 'right' ? bodyAlign === 'center' ? bodyFontSize / 2 + 1 : bodyFontSize + 2 : 0; // Draw body lines now\n\n      helpers$1.each(body, function (bodyItem, i) {\n        textColor = vm.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        helpers$1.each(bodyItem.before, fillLineOfText);\n        helpers$1.each(bodyItem.lines, function (line) {\n          // Draw Legend-like boxes if needed\n          if (drawColorBoxes) {\n            // Fill a white rect so that colours merge nicely if the opacity is < 1\n            ctx.fillStyle = vm.legendColorBackground;\n            ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Border\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = labelColors[i].borderColor;\n            ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n            ctx.fillStyle = labelColors[i].backgroundColor;\n            ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n            ctx.fillStyle = textColor;\n          }\n\n          fillLineOfText(line);\n        });\n        helpers$1.each(bodyItem.after, fillLineOfText);\n      }); // Reset back to 0 for after body\n\n      xLinePadding = 0; // After body lines\n\n      helpers$1.each(vm.afterBody, fillLineOfText);\n      pt.y -= bodySpacing; // Remove last body spacing\n    },\n    drawFooter: function drawFooter(pt, vm, ctx) {\n      var footer = vm.footer;\n\n      if (footer.length) {\n        pt.x = getAlignedX(vm, vm._footerAlign);\n        pt.y += vm.footerMarginTop;\n        ctx.textAlign = vm._footerAlign;\n        ctx.textBaseline = 'top';\n        ctx.fillStyle = vm.footerFontColor;\n        ctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n        helpers$1.each(footer, function (line) {\n          ctx.fillText(line, pt.x, pt.y);\n          pt.y += vm.footerFontSize + vm.footerSpacing;\n        });\n      }\n    },\n    drawBackground: function drawBackground(pt, vm, ctx, tooltipSize) {\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.strokeStyle = vm.borderColor;\n      ctx.lineWidth = vm.borderWidth;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var x = pt.x;\n      var y = pt.y;\n      var width = tooltipSize.width;\n      var height = tooltipSize.height;\n      var radius = vm.cornerRadius;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (vm.borderWidth > 0) {\n        ctx.stroke();\n      }\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n\n      if (vm.opacity === 0) {\n        return;\n      }\n\n      var tooltipSize = {\n        width: vm.width,\n        height: vm.height\n      };\n      var pt = {\n        x: vm.x,\n        y: vm.y\n      }; // IE11/Edge does not like very small opacities, so snap to 0\n\n      var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n      var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n      if (this._options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity; // Draw Background\n\n        this.drawBackground(pt, vm, ctx, tooltipSize); // Draw Title, Body, and Footer\n\n        pt.y += vm.yPadding; // Titles\n\n        this.drawTitle(pt, vm, ctx); // Body\n\n        this.drawBody(pt, vm, ctx); // Footer\n\n        this.drawFooter(pt, vm, ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     * @returns {boolean} true if the tooltip changed\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me._options;\n      var changed = false;\n      me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n      if (e.type === 'mouseout') {\n        me._active = [];\n      } else {\n        me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n      } // Remember Last Actives\n\n\n      changed = !helpers$1.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n      if (changed) {\n        me._lastActive = me._active;\n\n        if (options.enabled || options.custom) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true);\n          me.pivot();\n        }\n      }\n\n      return changed;\n    }\n  });\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n\n  var positioners_1 = positioners;\n  var core_tooltip = exports$3;\n  core_tooltip.positioners = positioners_1;\n  var valueOrDefault$8 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    elements: {},\n    events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n    hover: {\n      onHover: null,\n      mode: 'nearest',\n      intersect: true,\n      animationDuration: 400\n    },\n    onClick: null,\n    maintainAspectRatio: true,\n    responsive: true,\n    responsiveAnimationDuration: 0\n  });\n  /**\n   * Recursively merge the given config objects representing the `scales` option\n   * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n   * returns a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeScaleConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers$1.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n  /**\n   * Recursively merge the given config objects as the root options by handling\n   * default scale options for the `scales` and `scale` properties, then returns\n   * a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = mergeScaleConfig(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use mergeConfig for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = mergeConfig(core_defaults.global, core_defaults[config.type], config.options || {});\n    return config;\n  }\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers$1.each(chart.scales, function (scale) {\n      core_layouts.removeBox(chart, scale);\n    });\n    newOptions = mergeConfig(core_defaults.global, core_defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  helpers$1.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers$1.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      core_plugins.notify(me, 'beforeInit');\n      helpers$1.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      core_plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers$1.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      core_animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers$1.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        core_plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (options.onResize) {\n          options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers$1.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers$1.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers$1.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers$1.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      core_scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      core_plugins._invalidate(me);\n\n      if (core_plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers$1.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      core_plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      core_layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      core_plugins.notify(me, 'afterScaleUpdate');\n      core_plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      core_plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      core_plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var animationOptions = me.options.animation;\n      var duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n      var lazy = config.lazy;\n\n      if (core_plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var onComplete = function onComplete(animation) {\n        core_plugins.notify(me, 'afterRender');\n        helpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && duration) {\n        var animation = new core_animation({\n          numSteps: duration / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers$1.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        core_animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new core_animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers$1.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers$1.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      core_plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      core_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      core_plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      core_plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n\n    /**\n     * Get the single element that was clicked on\n     * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n     */\n    getElementAtEvent: function getElementAtEvent(e) {\n      return core_interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return core_interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return core_interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = core_interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return core_interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers$1.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      core_plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new core_tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers$1.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers$1.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      core_plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers$1.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * NOTE(SB) We actually don't use this container anymore but we need to keep it\n   * for backward compatibility. Though, it can still be useful for plugins that\n   * would need to work on multiple charts?!\n   */\n\n  Chart.instances = {};\n  var core_controller = Chart; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.types = {};\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.configMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.configMerge = mergeConfig;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.scaleMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.scaleMerge = mergeScaleConfig;\n\n  var core_helpers = function core_helpers() {\n    // -- Basic js utility methods\n    helpers$1.where = function (collection, filterCallback) {\n      if (helpers$1.isArray(collection) && Array.prototype.filter) {\n        return collection.filter(filterCallback);\n      }\n\n      var filtered = [];\n      helpers$1.each(collection, function (item) {\n        if (filterCallback(item)) {\n          filtered.push(item);\n        }\n      });\n      return filtered;\n    };\n\n    helpers$1.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n      return array.findIndex(callback, scope);\n    } : function (array, callback, scope) {\n      scope = scope === undefined ? array : scope;\n\n      for (var i = 0, ilen = array.length; i < ilen; ++i) {\n        if (callback.call(scope, array[i], i, array)) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n\n    helpers$1.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to start of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = -1;\n      }\n\n      for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    };\n\n    helpers$1.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to end of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = arrayToSearch.length;\n      }\n\n      for (var i = startIndex - 1; i >= 0; i--) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    }; // -- Math methods\n\n\n    helpers$1.isNumber = function (n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    };\n\n    helpers$1.almostEquals = function (x, y, epsilon) {\n      return Math.abs(x - y) < epsilon;\n    };\n\n    helpers$1.almostWhole = function (x, epsilon) {\n      var rounded = Math.round(x);\n      return rounded - epsilon < x && rounded + epsilon > x;\n    };\n\n    helpers$1.max = function (array) {\n      return array.reduce(function (max, value) {\n        if (!isNaN(value)) {\n          return Math.max(max, value);\n        }\n\n        return max;\n      }, Number.NEGATIVE_INFINITY);\n    };\n\n    helpers$1.min = function (array) {\n      return array.reduce(function (min, value) {\n        if (!isNaN(value)) {\n          return Math.min(min, value);\n        }\n\n        return min;\n      }, Number.POSITIVE_INFINITY);\n    };\n\n    helpers$1.sign = Math.sign ? function (x) {\n      return Math.sign(x);\n    } : function (x) {\n      x = +x; // convert to a number\n\n      if (x === 0 || isNaN(x)) {\n        return x;\n      }\n\n      return x > 0 ? 1 : -1;\n    };\n    helpers$1.log10 = Math.log10 ? function (x) {\n      return Math.log10(x);\n    } : function (x) {\n      var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n      // Check for whole powers of 10,\n      // which due to floating point rounding error should be corrected.\n\n      var powerOf10 = Math.round(exponent);\n      var isPowerOf10 = x === Math.pow(10, powerOf10);\n      return isPowerOf10 ? powerOf10 : exponent;\n    };\n\n    helpers$1.toRadians = function (degrees) {\n      return degrees * (Math.PI / 180);\n    };\n\n    helpers$1.toDegrees = function (radians) {\n      return radians * (180 / Math.PI);\n    };\n    /**\n     * Returns the number of decimal places\n     * i.e. the number of digits after the decimal point, of the value of this Number.\n     * @param {number} x - A number.\n     * @returns {number} The number of decimal places.\n     * @private\n     */\n\n\n    helpers$1._decimalPlaces = function (x) {\n      if (!helpers$1.isFinite(x)) {\n        return;\n      }\n\n      var e = 1;\n      var p = 0;\n\n      while (Math.round(x * e) / e !== x) {\n        e *= 10;\n        p++;\n      }\n\n      return p;\n    }; // Gets the angle from vertical upright to the point about a centre.\n\n\n    helpers$1.getAngleFromPoint = function (centrePoint, anglePoint) {\n      var distanceFromXCenter = anglePoint.x - centrePoint.x;\n      var distanceFromYCenter = anglePoint.y - centrePoint.y;\n      var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n      var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n      if (angle < -0.5 * Math.PI) {\n        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n      }\n\n      return {\n        angle: angle,\n        distance: radialDistanceFromCenter\n      };\n    };\n\n    helpers$1.distanceBetweenPoints = function (pt1, pt2) {\n      return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**\n     * Provided for backward compatibility, not available anymore\n     * @function Chart.helpers.aliasPixel\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     */\n\n\n    helpers$1.aliasPixel = function (pixelWidth) {\n      return pixelWidth % 2 === 0 ? 0 : 0.5;\n    };\n    /**\n     * Returns the aligned pixel value to avoid anti-aliasing blur\n     * @param {Chart} chart - The chart instance.\n     * @param {number} pixel - A pixel value.\n     * @param {number} width - The width of the element.\n     * @returns {number} The aligned pixel value.\n     * @private\n     */\n\n\n    helpers$1._alignPixel = function (chart, pixel, width) {\n      var devicePixelRatio = chart.currentDevicePixelRatio;\n      var halfWidth = width / 2;\n      return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n    };\n\n    helpers$1.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n      // Props to Rob Spencer at scaled innovation for his post on splining between points\n      // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n      // This function must also respect \"skipped\" points\n      var previous = firstPoint.skip ? middlePoint : firstPoint;\n      var current = middlePoint;\n      var next = afterPoint.skip ? middlePoint : afterPoint;\n      var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n      var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n      var s01 = d01 / (d01 + d12);\n      var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n      s01 = isNaN(s01) ? 0 : s01;\n      s12 = isNaN(s12) ? 0 : s12;\n      var fa = t * s01; // scaling factor for triangle Ta\n\n      var fb = t * s12;\n      return {\n        previous: {\n          x: current.x - fa * (next.x - previous.x),\n          y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n          x: current.x + fb * (next.x - previous.x),\n          y: current.y + fb * (next.y - previous.y)\n        }\n      };\n    };\n\n    helpers$1.EPSILON = Number.EPSILON || 1e-14;\n\n    helpers$1.splineCurveMonotone = function (points) {\n      // This function calculates Bézier control points in a similar way than |splineCurve|,\n      // but preserves monotonicity of the provided data and ensures no local extremums are added\n      // between the dataset discrete points due to the interpolation.\n      // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n      var pointsWithTangents = (points || []).map(function (point) {\n        return {\n          model: point._model,\n          deltaK: 0,\n          mK: 0\n        };\n      }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n      var pointsLen = pointsWithTangents.length;\n      var i, pointBefore, pointCurrent, pointAfter;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointAfter && !pointAfter.model.skip) {\n          var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n          pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n        }\n\n        if (!pointBefore || pointBefore.model.skip) {\n          pointCurrent.mK = pointCurrent.deltaK;\n        } else if (!pointAfter || pointAfter.model.skip) {\n          pointCurrent.mK = pointBefore.deltaK;\n        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n          pointCurrent.mK = 0;\n        } else {\n          pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n        }\n      } // Adjust tangents to ensure monotonic properties\n\n\n      var alphaK, betaK, tauK, squaredMagnitude;\n\n      for (i = 0; i < pointsLen - 1; ++i) {\n        pointCurrent = pointsWithTangents[i];\n        pointAfter = pointsWithTangents[i + 1];\n\n        if (pointCurrent.model.skip || pointAfter.model.skip) {\n          continue;\n        }\n\n        if (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n          pointCurrent.mK = pointAfter.mK = 0;\n          continue;\n        }\n\n        alphaK = pointCurrent.mK / pointCurrent.deltaK;\n        betaK = pointAfter.mK / pointCurrent.deltaK;\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n        if (squaredMagnitude <= 9) {\n          continue;\n        }\n\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n      } // Compute control points\n\n\n      var deltaX;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointBefore && !pointBefore.model.skip) {\n          deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n          pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n          pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n        }\n\n        if (pointAfter && !pointAfter.model.skip) {\n          deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n          pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n          pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n        }\n      }\n    };\n\n    helpers$1.nextItem = function (collection, index, loop) {\n      if (loop) {\n        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n      }\n\n      return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n    };\n\n    helpers$1.previousItem = function (collection, index, loop) {\n      if (loop) {\n        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n      }\n\n      return index <= 0 ? collection[0] : collection[index - 1];\n    }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n    helpers$1.niceNum = function (range, round) {\n      var exponent = Math.floor(helpers$1.log10(range));\n      var fraction = range / Math.pow(10, exponent);\n      var niceFraction;\n\n      if (round) {\n        if (fraction < 1.5) {\n          niceFraction = 1;\n        } else if (fraction < 3) {\n          niceFraction = 2;\n        } else if (fraction < 7) {\n          niceFraction = 5;\n        } else {\n          niceFraction = 10;\n        }\n      } else if (fraction <= 1.0) {\n        niceFraction = 1;\n      } else if (fraction <= 2) {\n        niceFraction = 2;\n      } else if (fraction <= 5) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n\n      return niceFraction * Math.pow(10, exponent);\n    }; // Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n    helpers$1.requestAnimFrame = function () {\n      if (typeof window === 'undefined') {\n        return function (callback) {\n          callback();\n        };\n      }\n\n      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n        return window.setTimeout(callback, 1000 / 60);\n      };\n    }(); // -- DOM methods\n\n\n    helpers$1.getRelativePosition = function (evt, chart) {\n      var mouseX, mouseY;\n      var e = evt.originalEvent || evt;\n      var canvas = evt.target || evt.srcElement;\n      var boundingRect = canvas.getBoundingClientRect();\n      var touches = e.touches;\n\n      if (touches && touches.length > 0) {\n        mouseX = touches[0].clientX;\n        mouseY = touches[0].clientY;\n      } else {\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n      } // Scale mouse coordinates into canvas coordinates\n      // by following the pattern laid out by 'jerryj' in the comments of\n      // https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n      var paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n      var paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n      var paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n      var paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n      var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n      var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n      // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n      mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n      mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n      return {\n        x: mouseX,\n        y: mouseY\n      };\n    }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n    function parseMaxStyle(styleValue, node, parentProperty) {\n      var valueInPixels;\n\n      if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n\n        if (styleValue.indexOf('%') !== -1) {\n          // percentage * size in dimension\n          valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n      } else {\n        valueInPixels = styleValue;\n      }\n\n      return valueInPixels;\n    }\n    /**\n     * Returns if the given value contains an effective constraint.\n     * @private\n     */\n\n\n    function isConstrainedValue(value) {\n      return value !== undefined && value !== null && value !== 'none';\n    }\n    /**\n     * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n     * @param {HTMLElement} domNode - the node to check the constraint on\n     * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n     * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n     * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n     */\n\n\n    function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n      var view = document.defaultView;\n\n      var parentNode = helpers$1._getParentNode(domNode);\n\n      var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n      var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n      var hasCNode = isConstrainedValue(constrainedNode);\n      var hasCContainer = isConstrainedValue(constrainedContainer);\n      var infinity = Number.POSITIVE_INFINITY;\n\n      if (hasCNode || hasCContainer) {\n        return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n      }\n\n      return 'none';\n    } // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintWidth = function (domNode) {\n      return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n    }; // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintHeight = function (domNode) {\n      return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n    };\n    /**\n     * @private\n    \t */\n\n\n    helpers$1._calculatePadding = function (container, padding, parentDimension) {\n      padding = helpers$1.getStyle(container, padding);\n      return padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n    };\n    /**\n     * @private\n     */\n\n\n    helpers$1._getParentNode = function (domNode) {\n      var parent = domNode.parentNode;\n\n      if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n      }\n\n      return parent;\n    };\n\n    helpers$1.getMaximumWidth = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientWidth;\n      }\n\n      var clientWidth = container.clientWidth;\n\n      var paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\n      var paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n      var w = clientWidth - paddingLeft - paddingRight;\n      var cw = helpers$1.getConstraintWidth(domNode);\n      return isNaN(cw) ? w : Math.min(w, cw);\n    };\n\n    helpers$1.getMaximumHeight = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientHeight;\n      }\n\n      var clientHeight = container.clientHeight;\n\n      var paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\n      var paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n      var h = clientHeight - paddingTop - paddingBottom;\n      var ch = helpers$1.getConstraintHeight(domNode);\n      return isNaN(ch) ? h : Math.min(h, ch);\n    };\n\n    helpers$1.getStyle = function (el, property) {\n      return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n    };\n\n    helpers$1.retinaScale = function (chart, forceRatio) {\n      var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n      if (pixelRatio === 1) {\n        return;\n      }\n\n      var canvas = chart.canvas;\n      var height = chart.height;\n      var width = chart.width;\n      canvas.height = height * pixelRatio;\n      canvas.width = width * pixelRatio;\n      chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n      // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n      // See https://github.com/chartjs/Chart.js/issues/3575\n\n      if (!canvas.style.height && !canvas.style.width) {\n        canvas.style.height = height + 'px';\n        canvas.style.width = width + 'px';\n      }\n    }; // -- Canvas methods\n\n\n    helpers$1.fontString = function (pixelSize, fontStyle, fontFamily) {\n      return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n    };\n\n    helpers$1.longestText = function (ctx, font, arrayOfThings, cache) {\n      cache = cache || {};\n      var data = cache.data = cache.data || {};\n      var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n      if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n      }\n\n      ctx.font = font;\n      var longest = 0;\n      helpers$1.each(arrayOfThings, function (thing) {\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n          longest = helpers$1.measureText(ctx, data, gc, longest, thing);\n        } else if (helpers$1.isArray(thing)) {\n          // if it is an array lets measure each element\n          // to do maybe simplify this function a bit so we can do this more recursively?\n          helpers$1.each(thing, function (nestedThing) {\n            // Undefined strings and arrays should not be measured\n            if (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n              longest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n            }\n          });\n        }\n      });\n      var gcLen = gc.length / 2;\n\n      if (gcLen > arrayOfThings.length) {\n        for (var i = 0; i < gcLen; i++) {\n          delete data[gc[i]];\n        }\n\n        gc.splice(0, gcLen);\n      }\n\n      return longest;\n    };\n\n    helpers$1.measureText = function (ctx, data, gc, longest, string) {\n      var textWidth = data[string];\n\n      if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n      }\n\n      if (textWidth > longest) {\n        longest = textWidth;\n      }\n\n      return longest;\n    };\n\n    helpers$1.numberOfLabelLines = function (arrayOfThings) {\n      var numberOfLines = 1;\n      helpers$1.each(arrayOfThings, function (thing) {\n        if (helpers$1.isArray(thing)) {\n          if (thing.length > numberOfLines) {\n            numberOfLines = thing.length;\n          }\n        }\n      });\n      return numberOfLines;\n    };\n\n    helpers$1.color = !chartjsColor ? function (value) {\n      console.error('Color.js not found!');\n      return value;\n    } : function (value) {\n      /* global CanvasGradient */\n      if (value instanceof CanvasGradient) {\n        value = core_defaults.global.defaultColor;\n      }\n\n      return chartjsColor(value);\n    };\n\n    helpers$1.getHoverColor = function (colorValue) {\n      /* global CanvasPattern */\n      return colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient ? colorValue : helpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n    };\n  };\n\n  function _abstract() {\n    throw new Error('This method is not implemented: either no adapter can ' + 'be found or an incomplete integration was provided.');\n  }\n  /**\n   * Date adapter (current used by the time scale)\n   * @namespace Chart._adapters._date\n   * @memberof Chart._adapters\n   * @private\n   */\n\n  /**\n   * Currently supported unit string values.\n   * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n   * @memberof Chart._adapters._date\n   * @name Unit\n   */\n\n  /**\n   * @class\n   */\n\n\n  function DateAdapter(options) {\n    this.options = options || {};\n  }\n\n  helpers$1.extend(DateAdapter.prototype,\n  /** @lends DateAdapter */\n  {\n    /**\n     * Returns a map of time formats for the supported formatting units defined\n     * in Unit as well as 'datetime' representing a detailed date/time string.\n     * @returns {{string: string}}\n     */\n    formats: _abstract,\n\n    /**\n     * Parses the given `value` and return the associated timestamp.\n     * @param {any} value - the value to parse (usually comes from the data)\n     * @param {string} [format] - the expected data format\n     * @returns {(number|null)}\n     * @function\n     */\n    parse: _abstract,\n\n    /**\n     * Returns the formatted date in the specified `format` for a given `timestamp`.\n     * @param {number} timestamp - the timestamp to format\n     * @param {string} format - the date/time token\n     * @return {string}\n     * @function\n     */\n    format: _abstract,\n\n    /**\n     * Adds the specified `amount` of `unit` to the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {number} amount - the amount to add\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    add: _abstract,\n\n    /**\n     * Returns the number of `unit` between the given timestamps.\n     * @param {number} max - the input timestamp (reference)\n     * @param {number} min - the timestamp to substract\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    diff: _abstract,\n\n    /**\n     * Returns start of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n     * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n     * @function\n     */\n    startOf: _abstract,\n\n    /**\n     * Returns end of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @function\n     */\n    endOf: _abstract,\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility for scale.getValueForPixel(),\n     * this method should be overridden only by the moment adapter.\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(value) {\n      return value;\n    }\n  });\n\n  DateAdapter.override = function (members) {\n    helpers$1.extend(DateAdapter.prototype, members);\n  };\n\n  var _date = DateAdapter;\n  var core_adapters = {\n    _date: _date\n  };\n  /**\n   * Namespace to hold static tick generation functions\n   * @namespace Chart.Ticks\n   */\n\n  var core_ticks = {\n    /**\n     * Namespace to hold formatters for different types of ticks\n     * @namespace Chart.Ticks.formatters\n     */\n    formatters: {\n      /**\n       * Formatter for value labels\n       * @method Chart.Ticks.formatters.values\n       * @param value the value to display\n       * @return {string|string[]} the label to display\n       */\n      values: function values(value) {\n        return helpers$1.isArray(value) ? value : '' + value;\n      },\n\n      /**\n       * Formatter for linear numeric ticks\n       * @method Chart.Ticks.formatters.linear\n       * @param tickValue {number} the value to be formatted\n       * @param index {number} the position of the tickValue parameter in the ticks array\n       * @param ticks {number[]} the list of ticks being converted\n       * @return {string} string representation of the tickValue parameter\n       */\n      linear: function linear(tickValue, index, ticks) {\n        // If we have lots of ticks, don't use the ones\n        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n        if (Math.abs(delta) > 1) {\n          if (tickValue !== Math.floor(tickValue)) {\n            // not an integer\n            delta = tickValue - Math.floor(tickValue);\n          }\n        }\n\n        var logDelta = helpers$1.log10(Math.abs(delta));\n        var tickString = '';\n\n        if (tickValue !== 0) {\n          var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n          if (maxTick < 1e-4) {\n            // all ticks are small numbers; use scientific notation\n            var logTick = helpers$1.log10(Math.abs(tickValue));\n            tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n          } else {\n            var numDecimal = -1 * Math.floor(logDelta);\n            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n            tickString = tickValue.toFixed(numDecimal);\n          }\n        } else {\n          tickString = '0'; // never show decimal places for 0\n        }\n\n        return tickString;\n      },\n      logarithmic: function logarithmic(tickValue, index, ticks) {\n        var remain = tickValue / Math.pow(10, Math.floor(helpers$1.log10(tickValue)));\n\n        if (tickValue === 0) {\n          return '0';\n        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n          return tickValue.toExponential();\n        }\n\n        return '';\n      }\n    }\n  };\n  var valueOrDefault$9 = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\n  core_defaults._set('scale', {\n    display: true,\n    position: 'left',\n    offset: false,\n    // grid line settings\n    gridLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickMarkLength: 10,\n      zeroLineWidth: 1,\n      zeroLineColor: 'rgba(0,0,0,0.25)',\n      zeroLineBorderDash: [],\n      zeroLineBorderDashOffset: 0.0,\n      offsetGridLines: false,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    // scale label\n    scaleLabel: {\n      // display property\n      display: false,\n      // actual label\n      labelString: '',\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    // label settings\n    ticks: {\n      beginAtZero: false,\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      padding: 0,\n      reverse: false,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 0,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: core_ticks.formatters.values,\n      minor: {},\n      major: {}\n    }\n  });\n\n  function labelsFromTicks(ticks) {\n    var labels = [];\n    var i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      labels.push(ticks[i].label);\n    }\n\n    return labels;\n  }\n\n  function getPixelForGridLine(scale, index, offsetGridLines) {\n    var lineValue = scale.getPixelForTick(index);\n\n    if (offsetGridLines) {\n      if (scale.getTicks().length === 1) {\n        lineValue -= scale.isHorizontal() ? Math.max(lineValue - scale.left, scale.right - lineValue) : Math.max(lineValue - scale.top, scale.bottom - lineValue);\n      } else if (index === 0) {\n        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n      } else {\n        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n      }\n    }\n\n    return lineValue;\n  }\n\n  function computeTextSize(context, tick, font) {\n    return helpers$1.isArray(tick) ? helpers$1.longestText(context, font, tick) : context.measureText(tick).width;\n  }\n\n  var core_scale = core_element.extend({\n    /**\n     * Get the padding needed for the scale\n     * @method getPadding\n     * @private\n     * @returns {Padding} the necessary padding\n     */\n    getPadding: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    },\n\n    /**\n     * Returns the scale tick objects ({label, major})\n     * @since 2.7\n     */\n    getTicks: function getTicks() {\n      return this._ticks;\n    },\n    // These methods are ordered by lifecyle. Utilities then follow.\n    // Any function defined here is inherited by all scale types.\n    // Any function can be extended by the scale type\n    mergeTicksOptions: function mergeTicksOptions() {\n      var ticks = this.options.ticks;\n\n      if (ticks.minor === false) {\n        ticks.minor = {\n          display: false\n        };\n      }\n\n      if (ticks.major === false) {\n        ticks.major = {\n          display: false\n        };\n      }\n\n      for (var key in ticks) {\n        if (key !== 'major' && key !== 'minor') {\n          if (typeof ticks.minor[key] === 'undefined') {\n            ticks.minor[key] = ticks[key];\n          }\n\n          if (typeof ticks.major[key] === 'undefined') {\n            ticks.major[key] = ticks[key];\n          }\n        }\n      }\n    },\n    beforeUpdate: function beforeUpdate() {\n      helpers$1.callback(this.options.beforeUpdate, [this]);\n    },\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = helpers$1.extend({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me._maxLabelLines = 0;\n      me.longestLabelWidth = 0;\n      me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Data min/max\n\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n      // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n      // and must not be accessed directly from outside this class. `this.ticks` being\n      // around for long time and not marked as private, we can't change its structure\n      // without unexpected breaking changes. If you need to access the scale ticks,\n      // use scale.getTicks() instead.\n\n      me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n      // we still support no return (`this.ticks` internally set by calling this method).\n\n      ticks = me.buildTicks() || []; // Allow modification of ticks in callback.\n\n      ticks = me.afterBuildTicks(ticks) || ticks;\n      me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n      // COMPAT, we still support no return (`this.ticks` internally changed by calling\n      // this method and supposed to contain only string values).\n\n      labels = me.convertTicksToLabels(ticks) || me.ticks;\n      me.afterTickToLabelConversion();\n      me.ticks = labels; // BACKWARD COMPATIBILITY\n      // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n      // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        label = labels[i];\n        tick = ticks[i];\n\n        if (!tick) {\n          ticks.push(tick = {\n            label: label,\n            major: false\n          });\n        } else {\n          tick.label = label;\n        }\n      }\n\n      me._ticks = ticks; // Tick Rotation\n\n      me.beforeCalculateTickRotation();\n      me.calculateTickRotation();\n      me.afterCalculateTickRotation(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: function afterUpdate() {\n      helpers$1.callback(this.options.afterUpdate, [this]);\n    },\n    //\n    beforeSetDimensions: function beforeSetDimensions() {\n      helpers$1.callback(this.options.beforeSetDimensions, [this]);\n    },\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    },\n    afterSetDimensions: function afterSetDimensions() {\n      helpers$1.callback(this.options.afterSetDimensions, [this]);\n    },\n    // Data limits\n    beforeDataLimits: function beforeDataLimits() {\n      helpers$1.callback(this.options.beforeDataLimits, [this]);\n    },\n    determineDataLimits: helpers$1.noop,\n    afterDataLimits: function afterDataLimits() {\n      helpers$1.callback(this.options.afterDataLimits, [this]);\n    },\n    //\n    beforeBuildTicks: function beforeBuildTicks() {\n      helpers$1.callback(this.options.beforeBuildTicks, [this]);\n    },\n    buildTicks: helpers$1.noop,\n    afterBuildTicks: function afterBuildTicks(ticks) {\n      var me = this; // ticks is empty for old axis implementations here\n\n      if (helpers$1.isArray(ticks) && ticks.length) {\n        return helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n      } // Support old implementations (that modified `this.ticks` directly in buildTicks)\n\n\n      me.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n      return ticks;\n    },\n    beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n      helpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this; // Convert ticks to strings\n\n      var tickOpts = me.options.ticks;\n      me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n    },\n    afterTickToLabelConversion: function afterTickToLabelConversion() {\n      helpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n    },\n    //\n    beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n      helpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n    },\n    calculateTickRotation: function calculateTickRotation() {\n      var me = this;\n      var context = me.ctx;\n      var tickOpts = me.options.ticks;\n      var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n      // between x offsets between 0 and 1.\n\n      var tickFont = helpers$1.options._parseFont(tickOpts);\n\n      context.font = tickFont.string;\n      var labelRotation = tickOpts.minRotation || 0;\n\n      if (labels.length && me.options.display && me.isHorizontal()) {\n        var originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n        var labelWidth = originalLabelWidth;\n        var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n        var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n        while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n          var angleRadians = helpers$1.toRadians(labelRotation);\n          cosRotation = Math.cos(angleRadians);\n          sinRotation = Math.sin(angleRadians);\n\n          if (sinRotation * originalLabelWidth > me.maxHeight) {\n            // go back one step\n            labelRotation--;\n            break;\n          }\n\n          labelRotation++;\n          labelWidth = cosRotation * originalLabelWidth;\n        }\n      }\n\n      me.labelRotation = labelRotation;\n    },\n    afterCalculateTickRotation: function afterCalculateTickRotation() {\n      helpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n    },\n    //\n    beforeFit: function beforeFit() {\n      helpers$1.callback(this.options.beforeFit, [this]);\n    },\n    fit: function fit() {\n      var me = this; // Reset\n\n      var minSize = me.minSize = {\n        width: 0,\n        height: 0\n      };\n      var labels = labelsFromTicks(me._ticks);\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var scaleLabelOpts = opts.scaleLabel;\n      var gridLineOpts = opts.gridLines;\n\n      var display = me._isVisible();\n\n      var position = opts.position;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var tickFont = parseFont(tickOpts);\n      var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n      if (isHorizontal) {\n        // subtract the margins to line up with the chartArea if we are a full width scale\n        minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n      } else {\n        minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } // height\n\n\n      if (isHorizontal) {\n        minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } else {\n        minSize.height = me.maxHeight; // fill all the height\n      } // Are we showing a title for the scale?\n\n\n      if (scaleLabelOpts.display && display) {\n        var scaleLabelFont = parseFont(scaleLabelOpts);\n        var scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n        var deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n        if (isHorizontal) {\n          minSize.height += deltaHeight;\n        } else {\n          minSize.width += deltaHeight;\n        }\n      } // Don't bother fitting the ticks if we are not showing the labels\n\n\n      if (tickOpts.display && display) {\n        var largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n        var tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n        var lineSpace = tickFont.size * 0.5;\n        var tickPadding = me.options.ticks.padding; // Store max number of lines and widest label for _autoSkip\n\n        me._maxLabelLines = tallestLabelHeightInLines;\n        me.longestLabelWidth = largestTextWidth;\n\n        if (isHorizontal) {\n          var angleRadians = helpers$1.toRadians(me.labelRotation);\n          var cosRotation = Math.cos(angleRadians);\n          var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n          var labelHeight = sinRotation * largestTextWidth + tickFont.lineHeight * tallestLabelHeightInLines + lineSpace; // padding\n\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          me.ctx.font = tickFont.string;\n          var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n          var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n          var offsetLeft = me.getPixelForTick(0) - me.left;\n          var offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n          var paddingLeft, paddingRight; // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n          // which means that the right padding is dominated by the font height\n\n          if (me.labelRotation !== 0) {\n            paddingLeft = position === 'bottom' ? cosRotation * firstLabelWidth : cosRotation * lineSpace;\n            paddingRight = position === 'bottom' ? cosRotation * lineSpace : cosRotation * lastLabelWidth;\n          } else {\n            paddingLeft = firstLabelWidth / 2;\n            paddingRight = lastLabelWidth / 2;\n          }\n\n          me.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n        } else {\n          // A vertical axis is more constrained by the width. Labels are the\n          // dominant factor here, so get that length first and account for padding\n          if (tickOpts.mirror) {\n            largestTextWidth = 0;\n          } else {\n            // use lineSpace for consistency with horizontal axis\n            // tickPadding is not implemented for horizontal\n            largestTextWidth += tickPadding + lineSpace;\n          }\n\n          minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n          me.paddingTop = tickFont.size / 2;\n          me.paddingBottom = tickFont.size / 2;\n        }\n      }\n\n      me.handleMargins();\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n\n    /**\n     * Handle margins and padding interactions\n     * @private\n     */\n    handleMargins: function handleMargins() {\n      var me = this;\n\n      if (me.margins) {\n        me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n        me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n        me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n        me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n      }\n    },\n    afterFit: function afterFit() {\n      helpers$1.callback(this.options.afterFit, [this]);\n    },\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    isFullWidth: function isFullWidth() {\n      return this.options.fullWidth;\n    },\n    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n    getRightValue: function getRightValue(rawValue) {\n      // Null and undefined values first\n      if (helpers$1.isNullOrUndef(rawValue)) {\n        return NaN;\n      } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n      if ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n        return NaN;\n      } // If it is in fact an object, dive in one more level\n\n\n      if (rawValue) {\n        if (this.isHorizontal()) {\n          if (rawValue.x !== undefined) {\n            return this.getRightValue(rawValue.x);\n          }\n        } else if (rawValue.y !== undefined) {\n          return this.getRightValue(rawValue.y);\n        }\n      } // Value is good, return it\n\n\n      return rawValue;\n    },\n\n    /**\n     * Used to get the value to display in the tooltip for the data at the given index\n     * @param index\n     * @param datasetIndex\n     */\n    getLabelForIndex: helpers$1.noop,\n\n    /**\n     * Returns the location of the given data point. Value can either be an index or a numerical value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param value\n     * @param index\n     * @param datasetIndex\n     */\n    getPixelForValue: helpers$1.noop,\n\n    /**\n     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param pixel\n     */\n    getValueForPixel: helpers$1.noop,\n\n    /**\n     * Returns the location of the tick at the given index\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForTick: function getPixelForTick(index) {\n      var me = this;\n      var offset = me.options.offset;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n        var pixel = tickWidth * index + me.paddingLeft;\n\n        if (offset) {\n          pixel += tickWidth / 2;\n        }\n\n        var finalVal = me.left + pixel;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n      return me.top + index * (innerHeight / (me._ticks.length - 1));\n    },\n\n    /**\n     * Utility for getting the pixel location of a percentage of scale\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForDecimal: function getPixelForDecimal(decimal) {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var valueOffset = innerWidth * decimal + me.paddingLeft;\n        var finalVal = me.left + valueOffset;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      return me.top + decimal * me.height;\n    },\n\n    /**\n     * Returns the pixel for the minimum chart value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getBasePixel: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    },\n    getBaseValue: function getBaseValue() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    },\n\n    /**\n     * Returns a subset of ticks to be plotted to avoid overlapping labels.\n     * @private\n     */\n    _autoSkip: function _autoSkip(ticks) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor;\n      var tickCount = ticks.length;\n      var skipRatio = false;\n      var maxTicks = optionTicks.maxTicksLimit; // Total space needed to display all ticks. First and last ticks are\n      // drawn as their center at end of axis, so tickCount-1\n\n      var ticksLength = me._tickSize() * (tickCount - 1); // Axis length\n\n      var axisLength = isHorizontal ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.PaddingBottom);\n      var result = [];\n      var i, tick;\n\n      if (ticksLength > axisLength) {\n        skipRatio = 1 + Math.floor(ticksLength / axisLength);\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n      }\n\n      for (i = 0; i < tickCount; i++) {\n        tick = ticks[i];\n\n        if (skipRatio > 1 && i % skipRatio > 0) {\n          // leave tick in place but make sure it's not displayed (#4635)\n          delete tick.label;\n        }\n\n        result.push(tick);\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _tickSize: function _tickSize() {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor; // Calculate space needed by label in axis direction.\n\n      var rot = helpers$1.toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = me.longestLabelWidth + padding || 0;\n\n      var tickFont = helpers$1.options._parseFont(optionTicks);\n\n      var h = me._maxLabelLines * tickFont.lineHeight + padding || 0; // Calculate space needed for 1 tick in axis direction.\n\n      return isHorizontal ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    },\n\n    /**\n     * @private\n     */\n    _isVisible: function _isVisible() {\n      var me = this;\n      var chart = me.chart;\n      var display = me.options.display;\n      var i, ilen, meta;\n\n      if (display !== 'auto') {\n        return !!display;\n      } // When 'auto', the scale is visible if at least one associated dataset is visible.\n\n\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n\n          if (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Actually draw the scale on the canvas\n     * @param {object} chartArea - the area of the chart to draw full grid lines on\n     */\n    draw: function draw(chartArea) {\n      var me = this;\n      var options = me.options;\n\n      if (!me._isVisible()) {\n        return;\n      }\n\n      var chart = me.chart;\n      var context = me.ctx;\n      var globalDefaults = core_defaults.global;\n      var defaultFontColor = globalDefaults.defaultFontColor;\n      var optionTicks = options.ticks.minor;\n      var optionMajorTicks = options.ticks.major || optionTicks;\n      var gridLines = options.gridLines;\n      var scaleLabel = options.scaleLabel;\n      var position = options.position;\n      var isRotated = me.labelRotation !== 0;\n      var isMirrored = optionTicks.mirror;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n      var tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n      var tickFont = parseFont(optionTicks);\n      var lineHeight = tickFont.lineHeight;\n      var majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n      var majorTickFont = parseFont(optionMajorTicks);\n      var tickPadding = optionTicks.padding;\n      var labelOffset = optionTicks.labelOffset;\n      var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n      var scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n      var scaleLabelFont = parseFont(scaleLabel);\n      var scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n      var labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n      var itemsToDraw = [];\n      var axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n      var alignPixel = helpers$1._alignPixel;\n      var borderValue, tickStart, tickEnd;\n\n      if (position === 'top') {\n        borderValue = alignPixel(chart, me.bottom, axisWidth);\n        tickStart = me.bottom - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else if (position === 'bottom') {\n        borderValue = alignPixel(chart, me.top, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignPixel(chart, me.right, axisWidth);\n        tickStart = me.right - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else {\n        borderValue = alignPixel(chart, me.left, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.left + tl;\n      }\n\n      var epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n      helpers$1.each(ticks, function (tick, index) {\n        // autoskipper skipped this tick (#4635)\n        if (helpers$1.isNullOrUndef(tick.label)) {\n          return;\n        }\n\n        var label = tick.label;\n        var lineWidth, lineColor, borderDash, borderDashOffset;\n\n        if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n          // Draw the first index specially\n          lineWidth = gridLines.zeroLineWidth;\n          lineColor = gridLines.zeroLineColor;\n          borderDash = gridLines.zeroLineBorderDash || [];\n          borderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n        } else {\n          lineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n          lineColor = valueAtIndexOrDefault(gridLines.color, index);\n          borderDash = gridLines.borderDash || [];\n          borderDashOffset = gridLines.borderDashOffset || 0.0;\n        } // Common properties\n\n\n        var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n        var labelCount = helpers$1.isArray(label) ? label.length : 1;\n        var lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n        if (isHorizontal) {\n          var labelYOffset = tl + tickPadding;\n\n          if (lineValue < me.left - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n          ty1 = tickStart;\n          ty2 = tickEnd;\n          labelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n          if (position === 'top') {\n            y1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n            y2 = chartArea.bottom;\n            textOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'left';\n            labelY = me.bottom - labelYOffset;\n          } else {\n            y1 = chartArea.top;\n            y2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n            textOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'right';\n            labelY = me.top + labelYOffset;\n          }\n        } else {\n          var labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n          if (lineValue < me.top - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tickStart;\n          tx2 = tickEnd;\n          ty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n          labelY = me.getPixelForTick(index) + labelOffset;\n          textOffset = (1 - labelCount) * lineHeight / 2;\n\n          if (position === 'left') {\n            x1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n            x2 = chartArea.right;\n            textAlign = isMirrored ? 'left' : 'right';\n            labelX = me.right - labelXOffset;\n          } else {\n            x1 = chartArea.left;\n            x2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n            textAlign = isMirrored ? 'right' : 'left';\n            labelX = me.left + labelXOffset;\n          }\n        }\n\n        itemsToDraw.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          labelX: labelX,\n          labelY: labelY,\n          glWidth: lineWidth,\n          glColor: lineColor,\n          glBorderDash: borderDash,\n          glBorderDashOffset: borderDashOffset,\n          rotation: -1 * labelRotationRadians,\n          label: label,\n          major: tick.major,\n          textOffset: textOffset,\n          textAlign: textAlign\n        });\n      }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n      helpers$1.each(itemsToDraw, function (itemToDraw) {\n        var glWidth = itemToDraw.glWidth;\n        var glColor = itemToDraw.glColor;\n\n        if (gridLines.display && glWidth && glColor) {\n          context.save();\n          context.lineWidth = glWidth;\n          context.strokeStyle = glColor;\n\n          if (context.setLineDash) {\n            context.setLineDash(itemToDraw.glBorderDash);\n            context.lineDashOffset = itemToDraw.glBorderDashOffset;\n          }\n\n          context.beginPath();\n\n          if (gridLines.drawTicks) {\n            context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n            context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n          }\n\n          if (gridLines.drawOnChartArea) {\n            context.moveTo(itemToDraw.x1, itemToDraw.y1);\n            context.lineTo(itemToDraw.x2, itemToDraw.y2);\n          }\n\n          context.stroke();\n          context.restore();\n        }\n\n        if (optionTicks.display) {\n          // Make sure we draw text in the correct color and font\n          context.save();\n          context.translate(itemToDraw.labelX, itemToDraw.labelY);\n          context.rotate(itemToDraw.rotation);\n          context.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n          context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n          context.textBaseline = 'middle';\n          context.textAlign = itemToDraw.textAlign;\n          var label = itemToDraw.label;\n          var y = itemToDraw.textOffset;\n\n          if (helpers$1.isArray(label)) {\n            for (var i = 0; i < label.length; ++i) {\n              // We just make sure the multiline element is a string here..\n              context.fillText('' + label[i], 0, y);\n              y += lineHeight;\n            }\n          } else {\n            context.fillText(label, 0, y);\n          }\n\n          context.restore();\n        }\n      });\n\n      if (scaleLabel.display) {\n        // Draw the scale label\n        var scaleLabelX;\n        var scaleLabelY;\n        var rotation = 0;\n        var halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n        if (isHorizontal) {\n          scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n          scaleLabelY = position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n        } else {\n          var isLeft = position === 'left';\n          scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n          scaleLabelY = me.top + (me.bottom - me.top) / 2;\n          rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n        }\n\n        context.save();\n        context.translate(scaleLabelX, scaleLabelY);\n        context.rotate(rotation);\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n        context.font = scaleLabelFont.string;\n        context.fillText(scaleLabel.labelString, 0, 0);\n        context.restore();\n      }\n\n      if (axisWidth) {\n        // Draw the line at the edge of the axis\n        var firstLineWidth = axisWidth;\n        var lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n        var x1, x2, y1, y2;\n\n        if (isHorizontal) {\n          x1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n          x2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n          y1 = y2 = borderValue;\n        } else {\n          y1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n          y2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n          x1 = x2 = borderValue;\n        }\n\n        context.lineWidth = axisWidth;\n        context.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n      }\n    }\n  });\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var scale_category = core_scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n\n      if (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n        return me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + widthOffset;\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + heightOffset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults = defaultConfig;\n  scale_category._defaults = _defaults;\n  var noop = helpers$1.noop;\n  var isNullOrUndef = helpers$1.isNullOrUndef;\n  /**\n   * Generate a set of linear ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks(generationOptions, dataRange) {\n    var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n    // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n    // for details.\n\n    var MIN_SPACING = 1e-14;\n    var stepSize = generationOptions.stepSize;\n    var unit = stepSize || 1;\n    var maxNumSpaces = generationOptions.maxTicks - 1;\n    var min = generationOptions.min;\n    var max = generationOptions.max;\n    var precision = generationOptions.precision;\n    var rmin = dataRange.min;\n    var rmax = dataRange.max;\n    var spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n    var factor, niceMin, niceMax, numSpaces; // Beyond MIN_SPACING floating point numbers being to lose precision\n    // such that we can't do the math necessary to generate ticks\n\n    if (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n      return [rmin, rmax];\n    }\n\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n    if (numSpaces > maxNumSpaces) {\n      // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n      spacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n    }\n\n    if (stepSize || isNullOrUndef(precision)) {\n      // If a precision is not specified, calculate factor based on spacing\n      factor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n    } else {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n    if (stepSize) {\n      // If very close to our whole number, use it.\n      if (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n        niceMin = min;\n      }\n\n      if (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n        niceMax = max;\n      }\n    }\n\n    numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n    if (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    ticks.push(isNullOrUndef(min) ? niceMin : min);\n\n    for (var j = 1; j < numSpaces; ++j) {\n      ticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n    }\n\n    ticks.push(isNullOrUndef(max) ? niceMax : max);\n    return ticks;\n  }\n\n  var scale_linearbase = core_scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers$1.sign(me.min);\n        var maxSign = helpers$1.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var stepSize = tickOpts.stepSize;\n      var maxTicksLimit = tickOpts.maxTicksLimit;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me._computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    },\n    _computeTickLimit: function _computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    },\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      core_scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n  var defaultConfig$1 = {\n    position: 'left',\n    ticks: {\n      callback: core_ticks.formatters.linear\n    }\n  };\n  var scale_linear = scale_linearbase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers$1.min(values);\n          var maxVal = helpers$1.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      var me = this;\n      var tickFont;\n\n      if (me.isHorizontal()) {\n        return Math.ceil(me.width / 40);\n      }\n\n      tickFont = helpers$1.options._parseFont(me.options.ticks);\n      return Math.ceil(me.height / tickFont.lineHeight);\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$1 = defaultConfig$1;\n  scale_linear._defaults = _defaults$1;\n  var valueOrDefault$a = helpers$1.valueOrDefault;\n  /**\n   * Generate a set of logarithmic ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks$1(generationOptions, dataRange) {\n    var ticks = [];\n    var tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n    var endExp = Math.floor(helpers$1.log10(dataRange.max));\n    var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    var exp, significand;\n\n    if (tickVal === 0) {\n      exp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n      significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n      ticks.push(tickVal);\n      tickVal = significand * Math.pow(10, exp);\n    } else {\n      exp = Math.floor(helpers$1.log10(tickVal));\n      significand = Math.floor(tickVal / Math.pow(10, exp));\n    }\n\n    var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n    do {\n      ticks.push(tickVal);\n      ++significand;\n\n      if (significand === 10) {\n        significand = 1;\n        ++exp;\n        precision = exp >= 0 ? 1 : precision;\n      }\n\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n    var lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n    ticks.push(lastTick);\n    return ticks;\n  }\n\n  var defaultConfig$2 = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: core_ticks.formatters.logarithmic\n    }\n  }; // TODO(v3): change this to positiveOrDefault\n\n  function nonNegativeOrDefault(value, defaultValue) {\n    return helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n  }\n\n  var scale_logarithmic = core_scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers$1.min(valuesForType);\n            var maxVal = helpers$1.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = nonNegativeOrDefault(tickOpts.min, me.min);\n      me.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: nonNegativeOrDefault(tickOpts.min),\n        max: nonNegativeOrDefault(tickOpts.max)\n      };\n      var ticks = me.ticks = generateTicks$1(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      core_scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {number} value - The minimum not zero value.\n     * @return {number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers$1.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$2 = defaultConfig$2;\n  scale_logarithmic._defaults = _defaults$2;\n  var valueOrDefault$b = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\n  var resolve$7 = helpers$1.options.resolve;\n  var defaultConfig$3 = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: core_ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getTickBackdropHeight(opts) {\n    var tickOpts = opts.ticks;\n\n    if (tickOpts.display && opts.display) {\n      return valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n    }\n\n    return 0;\n  }\n\n  function measureLabelSize(ctx, lineHeight, label) {\n    if (helpers$1.isArray(label)) {\n      return {\n        w: helpers$1.longestText(ctx, ctx.font, label),\n        h: label.length * lineHeight\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: lineHeight\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    // Right, this is really confusing and there is a lot of maths going on here\n    // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n    //\n    // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n    //\n    // Solution:\n    //\n    // We assume the radius of the polygon is half the size of the canvas at first\n    // at each index we check if the text overlaps.\n    //\n    // Where it does, we store that angle and that index.\n    //\n    // After finding the largest index and angle we calculate how much we need to remove\n    // from the shape radius to move the point inwards by that x.\n    //\n    // We average the left and right distances to get the maximum shape radius that can fit in the box\n    // along with labels.\n    //\n    // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n    // on each side, removing that from the size, halving it and adding the left x protrusion width.\n    //\n    // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n    // and position it in the most space efficient manner\n    //\n    // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n    var plFont = helpers$1.options._parseFont(scale.options.pointLabels); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n\n    var furthestLimits = {\n      l: 0,\n      r: scale.width,\n      t: 0,\n      b: scale.height - scale.paddingTop\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.string;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n      textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers$1.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, lineHeight) {\n    var y = position.y + lineHeight / 2;\n    var i, ilen;\n\n    if (helpers$1.isArray(text)) {\n      for (i = 0, ilen = text.length; i < ilen; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += lineHeight;\n      }\n    } else {\n      ctx.fillText(text, position.x, y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var gridLineOpts = opts.gridLines;\n    var pointLabelOpts = opts.pointLabels;\n    var lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n    var lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n    var tickBackdropHeight = getTickBackdropHeight(opts);\n    ctx.save();\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = lineColor;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n      ctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n    }\n\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n    ctx.font = plFont.string;\n    ctx.textBaseline = 'middle';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display && lineWidth && lineColor) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra pixels out for some label spacing\n        var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers$1.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n      }\n    }\n\n    ctx.restore();\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    var circular = gridLineOpts.circular;\n    var valueCount = getValueCount(scale);\n    var lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n    var lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n    var pointPosition;\n\n    if (!circular && !valueCount || !lineColor || !lineWidth) {\n      return;\n    }\n\n    ctx.save();\n    ctx.strokeStyle = lineColor;\n    ctx.lineWidth = lineWidth;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(gridLineOpts.borderDash || []);\n      ctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n    }\n\n    ctx.beginPath();\n\n    if (circular) {\n      // Draw circular arcs between the points\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n    } else {\n      // Draw straight lines connecting each index\n      pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  function numberOrZero(param) {\n    return helpers$1.isNumber(param) ? param : 0;\n  }\n\n  var scale_radialLinear = scale_linearbase.extend({\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers$1.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers$1.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      scale_linearbase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0);\n\n        var tickFont = helpers$1.options._parseFont(tickOpts);\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n\n        helpers$1.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n              ctx.font = tickFont.string;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFont.size + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n      }\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$3 = defaultConfig$3;\n  scale_radialLinear._defaults = _defaults$3;\n  var valueOrDefault$c = helpers$1.valueOrDefault; // Integer constants are from the ES6 spec.\n\n  var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\n  var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n  var INTERVALS = {\n    millisecond: {\n      common: true,\n      size: 1,\n      steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n    },\n    second: {\n      common: true,\n      size: 1000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    minute: {\n      common: true,\n      size: 60000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    hour: {\n      common: true,\n      size: 3600000,\n      steps: [1, 2, 3, 6, 12]\n    },\n    day: {\n      common: true,\n      size: 86400000,\n      steps: [1, 2, 5]\n    },\n    week: {\n      common: false,\n      size: 604800000,\n      steps: [1, 2, 3, 4]\n    },\n    month: {\n      common: true,\n      size: 2.628e9,\n      steps: [1, 2, 3]\n    },\n    quarter: {\n      common: false,\n      size: 7.884e9,\n      steps: [1, 2, 3, 4]\n    },\n    year: {\n      common: true,\n      size: 3.154e10\n    }\n  };\n  var UNITS = Object.keys(INTERVALS);\n\n  function sorter(a, b) {\n    return a - b;\n  }\n\n  function arrayUnique(items) {\n    var hash = {};\n    var out = [];\n    var i, ilen, item;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n\n      if (!hash[item]) {\n        hash[item] = true;\n        out.push(item);\n      }\n    }\n\n    return out;\n  }\n  /**\n   * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n   * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n   * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n   * extremity (left + width or top + height). Note that it would be more optimized to directly\n   * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n   * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n   *\n   * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n   * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n   * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n   * If 'series', timestamps will be positioned at the same distance from each other. In this\n   * case, only timestamps that break the time linearity are registered, meaning that in the\n   * best case, all timestamps are linear, the table contains only min and max.\n   */\n\n\n  function buildLookupTable(timestamps, min, max, distribution) {\n    if (distribution === 'linear' || !timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    var table = [];\n    var items = [min];\n    var i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n\n    items.push(max);\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i]; // only add points that breaks the scale linearity\n\n      if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  } // @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\n  function lookup(table, key, value) {\n    var lo = 0;\n    var hi = table.length - 1;\n    var mid, i0, i1;\n\n    while (lo >= 0 && lo <= hi) {\n      mid = lo + hi >> 1;\n      i0 = table[mid - 1] || null;\n      i1 = table[mid];\n\n      if (!i0) {\n        // given value is outside table (before first item)\n        return {\n          lo: null,\n          hi: i1\n        };\n      } else if (i1[key] < value) {\n        lo = mid + 1;\n      } else if (i0[key] > value) {\n        hi = mid - 1;\n      } else {\n        return {\n          lo: i0,\n          hi: i1\n        };\n      }\n    } // given value is outside table (after last item)\n\n\n    return {\n      lo: i1,\n      hi: null\n    };\n  }\n  /**\n   * Linearly interpolates the given source `value` using the table items `skey` values and\n   * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n   * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n   * index [0, 1] or [n - 1, n] are used for the interpolation.\n   */\n\n\n  function interpolate$1(table, skey, sval, tkey) {\n    var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n    var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n    var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n    var span = next[skey] - prev[skey];\n    var ratio = span ? (sval - prev[skey]) / span : 0;\n    var offset = (next[tkey] - prev[tkey]) * ratio;\n    return prev[tkey] + offset;\n  }\n\n  function toTimestamp(scale, input) {\n    var adapter = scale._adapter;\n    var options = scale.options.time;\n    var parser = options.parser;\n    var format = parser || options.format;\n    var value = input;\n\n    if (typeof parser === 'function') {\n      value = parser(value);\n    } // Only parse if its not a timestamp already\n\n\n    if (!helpers$1.isFinite(value)) {\n      value = typeof format === 'string' ? adapter.parse(value, format) : adapter.parse(value);\n    }\n\n    if (value !== null) {\n      return +value;\n    } // Labels are in an incompatible format and no `parser` has been provided.\n    // The user might still use the deprecated `format` option for parsing.\n\n\n    if (!parser && typeof format === 'function') {\n      value = format(input); // `format` could return something else than a timestamp, if so, parse it\n\n      if (!helpers$1.isFinite(value)) {\n        value = adapter.parse(value);\n      }\n    }\n\n    return value;\n  }\n\n  function parse(scale, input) {\n    if (helpers$1.isNullOrUndef(input)) {\n      return null;\n    }\n\n    var options = scale.options.time;\n    var value = toTimestamp(scale, scale.getRightValue(input));\n\n    if (value === null) {\n      return value;\n    }\n\n    if (options.round) {\n      value = +scale._adapter.startOf(value, options.round);\n    }\n\n    return value;\n  }\n  /**\n   * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n   * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n   */\n\n\n  function determineStepSize(min, max, unit, capacity) {\n    var range = max - min;\n    var interval = INTERVALS[unit];\n    var milliseconds = interval.size;\n    var steps = interval.steps;\n    var i, ilen, factor;\n\n    if (!steps) {\n      return Math.ceil(range / (capacity * milliseconds));\n    }\n\n    for (i = 0, ilen = steps.length; i < ilen; ++i) {\n      factor = steps[i];\n\n      if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n        break;\n      }\n    }\n\n    return factor;\n  }\n  /**\n   * Figures out what unit results in an appropriate number of auto-generated ticks\n   */\n\n\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    var ilen = UNITS.length;\n    var i, interval, factor;\n\n    for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n      interval = INTERVALS[UNITS[i]];\n      factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n        return UNITS[i];\n      }\n    }\n\n    return UNITS[ilen - 1];\n  }\n  /**\n   * Figures out what unit to format a set of ticks with\n   */\n\n\n  function determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n    var ilen = UNITS.length;\n    var i, unit;\n\n    for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n      unit = UNITS[i];\n\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n        return unit;\n      }\n    }\n\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n  }\n\n  function determineMajorUnit(unit) {\n    for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n      if (INTERVALS[UNITS[i]].common) {\n        return UNITS[i];\n      }\n    }\n  }\n  /**\n   * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n   * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n   * Important: this method can return ticks outside the min and max range, it's the\n   * responsibility of the calling code to clamp values if needed.\n   */\n\n\n  function generate(scale, min, max, capacity) {\n    var adapter = scale._adapter;\n    var options = scale.options;\n    var timeOpts = options.time;\n    var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n    var major = determineMajorUnit(minor);\n    var stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n    var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    var majorTicksEnabled = options.ticks.major.enabled;\n    var interval = INTERVALS[minor];\n    var first = min;\n    var last = max;\n    var ticks = [];\n    var time;\n\n    if (!stepSize) {\n      stepSize = determineStepSize(min, max, minor, capacity);\n    } // For 'week' unit, handle the first day of week option\n\n\n    if (weekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n      last = +adapter.startOf(last, 'isoWeek', weekday);\n    } // Align first/last ticks on unit\n\n\n    first = +adapter.startOf(first, weekday ? 'day' : minor);\n    last = +adapter.startOf(last, weekday ? 'day' : minor); // Make sure that the last tick include max\n\n    if (last < max) {\n      last = +adapter.add(last, 1, minor);\n    }\n\n    time = first;\n\n    if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n      // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n      // we first aligned time on the previous `major` unit then add the number of full\n      // stepSize there is between first and the previous major time.\n      time = +adapter.startOf(time, major);\n      time = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n    }\n\n    for (; time < last; time = +adapter.add(time, stepSize, minor)) {\n      ticks.push(+time);\n    }\n\n    ticks.push(+time);\n    return ticks;\n  }\n  /**\n   * Returns the start and end offsets from edges in the form of {start, end}\n   * where each value is a relative width to the scale and ranges between 0 and 1.\n   * They add extra margins on the both sides by scaling down the original scale.\n   * Offsets are added when the `offset` option is true.\n   */\n\n\n  function computeOffsets(table, ticks, min, max, options) {\n    var start = 0;\n    var end = 0;\n    var first, last;\n\n    if (options.offset && ticks.length) {\n      if (!options.time.min) {\n        first = interpolate$1(table, 'time', ticks[0], 'pos');\n\n        if (ticks.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n        }\n      }\n\n      if (!options.time.max) {\n        last = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\n        if (ticks.length === 1) {\n          end = last;\n        } else {\n          end = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n        }\n      }\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  }\n\n  function ticksFromTimestamps(scale, values, majorUnit) {\n    var ticks = [];\n    var i, ilen, value, major;\n\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n      value = values[i];\n      major = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n      ticks.push({\n        value: value,\n        major: major\n      });\n    }\n\n    return ticks;\n  }\n\n  var defaultConfig$4 = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var scale_time = core_scale.extend({\n    initialize: function initialize() {\n      this.mergeTicksOptions();\n      core_scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options;\n      var time = options.time || (options.time = {});\n      var adapter = me._adapter = new core_adapters._date(options.adapters.date); // DEPRECATIONS: output a message only one time per update\n\n      if (time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      } // Backward compatibility: before introducing adapter, `displayFormats` was\n      // supposed to contain *all* unit/string pairs but this can't be resolved\n      // when loading the scale (adapters are loaded afterward), so let's populate\n      // missing formats on update\n\n\n      helpers$1.mergeIf(time.displayFormats, adapter.formats());\n      return core_scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp;\n      var dataLabels = chart.data.labels || []; // Convert labels to timestamps\n\n      for (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n        labels.push(parse(me, dataLabels[i]));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers$1.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(me, data[j]);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            for (j = 0, jlen = labels.length; j < jlen; ++j) {\n              timestamps.push(labels[j]);\n            }\n\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n      max = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n      if (options.ticks.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var adapter = me._adapter;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers$1.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var adapter = me._adapter;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = +adapter.startOf(time, majorUnit);\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var isReverse = me.options.ticks.reverse;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n      var pos = interpolate$1(me._table, 'time', time, 'pos');\n      var offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n      return isReverse ? start - offset : start + offset;\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(me, value);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n      var time = interpolate$1(me._table, 'pos', pos, 'time'); // DEPRECATION, we should return time directly\n\n      return me._adapter._create(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers$1.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this; // pick the longest format (milliseconds) for guestimation\n\n      var format = me.options.time.displayFormats.millisecond;\n      var exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$4 = defaultConfig$4;\n  scale_time._defaults = _defaults$4;\n  var scales = {\n    category: scale_category,\n    linear: scale_linear,\n    logarithmic: scale_logarithmic,\n    radialLinear: scale_radialLinear,\n    time: scale_time\n  };\n  var FORMATS = {\n    datetime: 'MMM D, YYYY, h:mm:ss a',\n    millisecond: 'h:mm:ss.SSS a',\n    second: 'h:mm:ss a',\n    minute: 'h:mm a',\n    hour: 'hA',\n    day: 'MMM D',\n    week: 'll',\n    month: 'MMM YYYY',\n    quarter: '[Q]Q - YYYY',\n    year: 'YYYY'\n  };\n\n  core_adapters._date.override(typeof moment === 'function' ? {\n    _id: 'moment',\n    // DEBUG ONLY\n    formats: function formats() {\n      return FORMATS;\n    },\n    parse: function parse(value, format) {\n      if (typeof value === 'string' && typeof format === 'string') {\n        value = moment(value, format);\n      } else if (!(value instanceof moment)) {\n        value = moment(value);\n      }\n\n      return value.isValid() ? value.valueOf() : null;\n    },\n    format: function format(time, _format) {\n      return moment(time).format(_format);\n    },\n    add: function add(time, amount, unit) {\n      return moment(time).add(amount, unit).valueOf();\n    },\n    diff: function diff(max, min, unit) {\n      return moment.duration(moment(max).diff(moment(min))).as(unit);\n    },\n    startOf: function startOf(time, unit, weekday) {\n      time = moment(time);\n\n      if (unit === 'isoWeek') {\n        return time.isoWeekday(weekday).valueOf();\n      }\n\n      return time.startOf(unit).valueOf();\n    },\n    endOf: function endOf(time, unit) {\n      return moment(time).endOf(unit).valueOf();\n    },\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility with scale.getValueForPixel().\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(time) {\n      return moment(time);\n    }\n  } : {});\n\n  core_defaults._set('global', {\n    plugins: {\n      filler: {\n        propagate: true\n      }\n    }\n  });\n\n  var mappers = {\n    dataset: function dataset(source) {\n      var index = source.fill;\n      var chart = source.chart;\n      var meta = chart.getDatasetMeta(index);\n      var visible = meta && chart.isDatasetVisible(index);\n      var points = visible && meta.dataset._children || [];\n      var length = points.length || 0;\n      return !length ? null : function (point, i) {\n        return i < length && points[i]._view || null;\n      };\n    },\n    boundary: function boundary(source) {\n      var boundary = source.boundary;\n      var x = boundary ? boundary.x : null;\n      var y = boundary ? boundary.y : null;\n      return function (point) {\n        return {\n          x: x === null ? point.x : x,\n          y: y === null ? point.y : y\n        };\n      };\n    }\n  }; // @todo if (fill[0] === '#')\n\n  function decodeFill(el, index, count) {\n    var model = el._model || {};\n    var fill = model.fill;\n    var target;\n\n    if (fill === undefined) {\n      fill = !!model.backgroundColor;\n    }\n\n    if (fill === false || fill === null) {\n      return false;\n    }\n\n    if (fill === true) {\n      return 'origin';\n    }\n\n    target = parseFloat(fill, 10);\n\n    if (isFinite(target) && Math.floor(target) === target) {\n      if (fill[0] === '-' || fill[0] === '+') {\n        target = index + target;\n      }\n\n      if (target === index || target < 0 || target >= count) {\n        return false;\n      }\n\n      return target;\n    }\n\n    switch (fill) {\n      // compatibility\n      case 'bottom':\n        return 'start';\n\n      case 'top':\n        return 'end';\n\n      case 'zero':\n        return 'origin';\n      // supported boundaries\n\n      case 'origin':\n      case 'start':\n      case 'end':\n        return fill;\n      // invalid fill values\n\n      default:\n        return false;\n    }\n  }\n\n  function computeBoundary(source) {\n    var model = source.el._model || {};\n    var scale = source.el._scale || {};\n    var fill = source.fill;\n    var target = null;\n    var horizontal;\n\n    if (isFinite(fill)) {\n      return null;\n    } // Backward compatibility: until v3, we still need to support boundary values set on\n    // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n    // controllers might still use it (e.g. the Smith chart).\n\n\n    if (fill === 'start') {\n      target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n    } else if (fill === 'end') {\n      target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n    } else if (model.scaleZero !== undefined) {\n      target = model.scaleZero;\n    } else if (scale.getBasePosition) {\n      target = scale.getBasePosition();\n    } else if (scale.getBasePixel) {\n      target = scale.getBasePixel();\n    }\n\n    if (target !== undefined && target !== null) {\n      if (target.x !== undefined && target.y !== undefined) {\n        return target;\n      }\n\n      if (helpers$1.isFinite(target)) {\n        horizontal = scale.isHorizontal();\n        return {\n          x: horizontal ? target : null,\n          y: horizontal ? null : target\n        };\n      }\n    }\n\n    return null;\n  }\n\n  function resolveTarget(sources, index, propagate) {\n    var source = sources[index];\n    var fill = source.fill;\n    var visited = [index];\n    var target;\n\n    if (!propagate) {\n      return fill;\n    }\n\n    while (fill !== false && visited.indexOf(fill) === -1) {\n      if (!isFinite(fill)) {\n        return fill;\n      }\n\n      target = sources[fill];\n\n      if (!target) {\n        return false;\n      }\n\n      if (target.visible) {\n        return fill;\n      }\n\n      visited.push(fill);\n      fill = target.fill;\n    }\n\n    return false;\n  }\n\n  function createMapper(source) {\n    var fill = source.fill;\n    var type = 'dataset';\n\n    if (fill === false) {\n      return null;\n    }\n\n    if (!isFinite(fill)) {\n      type = 'boundary';\n    }\n\n    return mappers[type](source);\n  }\n\n  function isDrawable(point) {\n    return point && !point.skip;\n  }\n\n  function drawArea(ctx, curve0, curve1, len0, len1) {\n    var i;\n\n    if (!len0 || !len1) {\n      return;\n    } // building first area curve (normal)\n\n\n    ctx.moveTo(curve0[0].x, curve0[0].y);\n\n    for (i = 1; i < len0; ++i) {\n      helpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n    } // joining the two area curves\n\n\n    ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n    for (i = len1 - 1; i > 0; --i) {\n      helpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n    }\n  }\n\n  function doFill(ctx, points, mapper, view, color, loop) {\n    var count = points.length;\n    var span = view.spanGaps;\n    var curve0 = [];\n    var curve1 = [];\n    var len0 = 0;\n    var len1 = 0;\n    var i, ilen, index, p0, p1, d0, d1;\n    ctx.beginPath();\n\n    for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n      index = i % count;\n      p0 = points[index]._view;\n      p1 = mapper(p0, index, view);\n      d0 = isDrawable(p0);\n      d1 = isDrawable(p1);\n\n      if (d0 && d1) {\n        len0 = curve0.push(p0);\n        len1 = curve1.push(p1);\n      } else if (len0 && len1) {\n        if (!span) {\n          drawArea(ctx, curve0, curve1, len0, len1);\n          len0 = len1 = 0;\n          curve0 = [];\n          curve1 = [];\n        } else {\n          if (d0) {\n            curve0.push(p0);\n          }\n\n          if (d1) {\n            curve1.push(p1);\n          }\n        }\n      }\n    }\n\n    drawArea(ctx, curve0, curve1, len0, len1);\n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n  }\n\n  var plugin_filler = {\n    id: 'filler',\n    afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n      var count = (chart.data.datasets || []).length;\n      var propagate = options.propagate;\n      var sources = [];\n      var meta, i, el, source;\n\n      for (i = 0; i < count; ++i) {\n        meta = chart.getDatasetMeta(i);\n        el = meta.dataset;\n        source = null;\n\n        if (el && el._model && el instanceof elements.Line) {\n          source = {\n            visible: chart.isDatasetVisible(i),\n            fill: decodeFill(el, i, count),\n            chart: chart,\n            el: el\n          };\n        }\n\n        meta.$filler = source;\n        sources.push(source);\n      }\n\n      for (i = 0; i < count; ++i) {\n        source = sources[i];\n\n        if (!source) {\n          continue;\n        }\n\n        source.fill = resolveTarget(sources, i, propagate);\n        source.boundary = computeBoundary(source);\n        source.mapper = createMapper(source);\n      }\n    },\n    beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n      var meta = args.meta.$filler;\n\n      if (!meta) {\n        return;\n      }\n\n      var ctx = chart.ctx;\n      var el = meta.el;\n      var view = el._view;\n      var points = el._children || [];\n      var mapper = meta.mapper;\n      var color = view.backgroundColor || core_defaults.global.defaultColor;\n\n      if (mapper && color && points.length) {\n        helpers$1.canvas.clipArea(ctx, chart.chartArea);\n        doFill(ctx, points, mapper, view, color, el._loop);\n        helpers$1.canvas.unclipArea(ctx);\n      }\n    }\n  };\n  var noop$1 = helpers$1.noop;\n  var valueOrDefault$d = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    legend: {\n      display: true,\n      position: 'top',\n      fullWidth: true,\n      reverse: false,\n      weight: 1000,\n      // a callback that will handle\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.datasetIndex;\n        var ci = this.chart;\n        var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n        ci.update();\n      },\n      onHover: null,\n      onLeave: null,\n      labels: {\n        boxWidth: 40,\n        padding: 10,\n        // Generates labels shown in the legend\n        // Valid properties to return:\n        // text : text to display\n        // fillStyle : fill of coloured box\n        // strokeStyle: stroke of coloured box\n        // hidden : if this legend item refers to a hidden item\n        // lineCap : cap style for line\n        // lineDash\n        // lineDashOffset :\n        // lineJoin :\n        // lineWidth :\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          return helpers$1.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n            return {\n              text: dataset.label,\n              fillStyle: !helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n              hidden: !chart.isDatasetVisible(i),\n              lineCap: dataset.borderCapStyle,\n              lineDash: dataset.borderDash,\n              lineDashOffset: dataset.borderDashOffset,\n              lineJoin: dataset.borderJoinStyle,\n              lineWidth: dataset.borderWidth,\n              strokeStyle: dataset.borderColor,\n              pointStyle: dataset.pointStyle,\n              // Below is extra data used for toggling the datasets\n              datasetIndex: i\n            };\n          }, this) : [];\n        }\n      }\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n\n      for (var i = 0; i < chart.data.datasets.length; i++) {\n        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n        if (chart.data.datasets[i].label) {\n          text.push(chart.data.datasets[i].label);\n        }\n\n        text.push('</li>');\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    }\n  });\n  /**\n   * Helper function to get the box width based on the usePointStyle option\n   * @param {object} labelopts - the label options on the legend\n   * @param {number} fontSize - the label font size\n   * @return {number} width of the color box area\n   */\n\n\n  function getBoxWidth(labelOpts, fontSize) {\n    return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ? fontSize : labelOpts.boxWidth;\n  }\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Legend = core_element.extend({\n    initialize: function initialize(config) {\n      helpers$1.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n      this.legendHitBoxes = [];\n      /**\n      \t * @private\n      \t */\n\n      this._hoveredItem = null; // Are we in doughnut mode which has a different data type\n\n      this.doughnutMode = false;\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    // Any function defined here is inherited by all legend types.\n    // Any function can be extended by the legend type\n    beforeUpdate: noop$1,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$1,\n    //\n    beforeSetDimensions: noop$1,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$1,\n    //\n    beforeBuildLabels: noop$1,\n    buildLabels: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n\n      me.legendItems = legendItems;\n    },\n    afterBuildLabels: noop$1,\n    //\n    beforeFit: noop$1,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var display = opts.display;\n      var ctx = me.ctx;\n\n      var labelFont = helpers$1.options._parseFont(labelOpts);\n\n      var fontSize = labelFont.size; // Reset hit boxes\n\n      var hitboxes = me.legendHitBoxes = [];\n      var minSize = me.minSize;\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = display ? 10 : 0;\n      } else {\n        minSize.width = display ? 10 : 0;\n        minSize.height = me.maxHeight; // fill all the height\n      } // Increase sizes here\n\n\n      if (display) {\n        ctx.font = labelFont.string;\n\n        if (isHorizontal) {\n          // Labels\n          // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n          var lineWidths = me.lineWidths = [0];\n          var totalHeight = 0;\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n            if (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n              totalHeight += fontSize + labelOpts.padding;\n              lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n            } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: width,\n              height: fontSize\n            };\n            lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n          });\n          minSize.height += totalHeight;\n        } else {\n          var vPadding = labelOpts.padding;\n          var columnWidths = me.columnWidths = [];\n          var totalWidth = labelOpts.padding;\n          var currentColWidth = 0;\n          var currentColHeight = 0;\n          var itemHeight = fontSize + vPadding;\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n            if (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n              totalWidth += currentColWidth + labelOpts.padding;\n              columnWidths.push(currentColWidth); // previous column width\n\n              currentColWidth = 0;\n              currentColHeight = 0;\n            } // Get max width\n\n\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: itemWidth,\n              height: fontSize\n            };\n          });\n          totalWidth += currentColWidth;\n          columnWidths.push(currentColWidth);\n          minSize.width += totalWidth;\n        }\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$1,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    // Actually draw the legend on the canvas\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor;\n      var lineDefault = globalDefaults.elements.line;\n      var legendWidth = me.width;\n      var lineWidths = me.lineWidths;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\n        var labelFont = helpers$1.options._parseFont(labelOpts);\n\n        var fontSize = labelFont.size;\n        var cursor; // Canvas setup\n\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.strokeStyle = fontColor; // for strikethrough effect\n\n        ctx.fillStyle = fontColor; // render in correct colour\n\n        ctx.font = labelFont.string;\n        var boxWidth = getBoxWidth(labelOpts, fontSize);\n        var hitboxes = me.legendHitBoxes; // current position\n\n        var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n          if (isNaN(boxWidth) || boxWidth <= 0) {\n            return;\n          } // Set the ctx for the box\n\n\n          ctx.save();\n          var lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n          ctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n          ctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n          ctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n          ctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n          if (ctx.setLineDash) {\n            // IE 9 and 10 do not support line dash\n            ctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n          }\n\n          if (opts.labels && opts.labels.usePointStyle) {\n            // Recalculate x and y for drawPoint() because its expecting\n            // x and y to be center of figure (instead of top left)\n            var radius = boxWidth * Math.SQRT2 / 2;\n            var centerX = x + boxWidth / 2;\n            var centerY = y + fontSize / 2; // Draw pointStyle as legend symbol\n\n            helpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n          } else {\n            // Draw box as legend symbol\n            if (lineWidth !== 0) {\n              ctx.strokeRect(x, y, boxWidth, fontSize);\n            }\n\n            ctx.fillRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.restore();\n        };\n\n        var fillText = function fillText(x, y, legendItem, textWidth) {\n          var halfFontSize = fontSize / 2;\n          var xLeft = boxWidth + halfFontSize + x;\n          var yMiddle = y + halfFontSize;\n          ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n          if (legendItem.hidden) {\n            // Strikethrough the text if hidden\n            ctx.beginPath();\n            ctx.lineWidth = 2;\n            ctx.moveTo(xLeft, yMiddle);\n            ctx.lineTo(xLeft + textWidth, yMiddle);\n            ctx.stroke();\n          }\n        }; // Horizontal\n\n\n        var isHorizontal = me.isHorizontal();\n\n        if (isHorizontal) {\n          cursor = {\n            x: me.left + (legendWidth - lineWidths[0]) / 2 + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        } else {\n          cursor = {\n            x: me.left + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        }\n\n        var itemHeight = fontSize + labelOpts.padding;\n        helpers$1.each(me.legendItems, function (legendItem, i) {\n          var textWidth = ctx.measureText(legendItem.text).width;\n          var width = boxWidth + fontSize / 2 + textWidth;\n          var x = cursor.x;\n          var y = cursor.y; // Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n          // instead of me.right and me.bottom because me.width and me.height\n          // may have been changed since me.minSize was calculated\n\n          if (isHorizontal) {\n            if (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n              y = cursor.y += itemHeight;\n              cursor.line++;\n              x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2 + labelOpts.padding;\n            }\n          } else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n            x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n            y = cursor.y = me.top + labelOpts.padding;\n            cursor.line++;\n          }\n\n          drawLegendBox(x, y, legendItem);\n          hitboxes[i].left = x;\n          hitboxes[i].top = y; // Fill the actual label\n\n          fillText(x, y, legendItem, textWidth);\n\n          if (isHorizontal) {\n            cursor.x += width + labelOpts.padding;\n          } else {\n            cursor.y += itemHeight;\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getLegendItemAt: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        // See if we are touching one of the dataset boxes\n        lh = me.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            // Touching an element\n            return me.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n      var type = e.type === 'mouseup' ? 'click' : e.type;\n      var hoveredItem;\n\n      if (type === 'mousemove') {\n        if (!opts.onHover && !opts.onLeave) {\n          return;\n        }\n      } else if (type === 'click') {\n        if (!opts.onClick) {\n          return;\n        }\n      } else {\n        return;\n      } // Chart event already has relative position in it\n\n\n      hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n      if (type === 'click') {\n        if (hoveredItem && opts.onClick) {\n          // use e.native for backwards compatibility\n          opts.onClick.call(me, e.native, hoveredItem);\n        }\n      } else {\n        if (opts.onLeave && hoveredItem !== me._hoveredItem) {\n          if (me._hoveredItem) {\n            opts.onLeave.call(me, e.native, me._hoveredItem);\n          }\n\n          me._hoveredItem = hoveredItem;\n        }\n\n        if (opts.onHover && hoveredItem) {\n          // use e.native for backwards compatibility\n          opts.onHover.call(me, e.native, hoveredItem);\n        }\n      }\n    }\n  });\n\n  function createNewLegendAndAttach(chart, legendOpts) {\n    var legend = new Legend({\n      ctx: chart.ctx,\n      options: legendOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, legend, legendOpts);\n    core_layouts.addBox(chart, legend);\n    chart.legend = legend;\n  }\n\n  var plugin_legend = {\n    id: 'legend',\n\n    /**\n     * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n     * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Legend,\n    beforeInit: function beforeInit(chart) {\n      var legendOpts = chart.options.legend;\n\n      if (legendOpts) {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var legendOpts = chart.options.legend;\n      var legend = chart.legend;\n\n      if (legendOpts) {\n        helpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n        if (legend) {\n          core_layouts.configure(chart, legend, legendOpts);\n          legend.options = legendOpts;\n        } else {\n          createNewLegendAndAttach(chart, legendOpts);\n        }\n      } else if (legend) {\n        core_layouts.removeBox(chart, legend);\n        delete chart.legend;\n      }\n    },\n    afterEvent: function afterEvent(chart, e) {\n      var legend = chart.legend;\n\n      if (legend) {\n        legend.handleEvent(e);\n      }\n    }\n  };\n  var noop$2 = helpers$1.noop;\n\n  core_defaults._set('global', {\n    title: {\n      display: false,\n      fontStyle: 'bold',\n      fullWidth: true,\n      padding: 10,\n      position: 'top',\n      text: '',\n      weight: 2000 // by default greater than legend (1000) to be above\n\n    }\n  });\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Title = core_element.extend({\n    initialize: function initialize(config) {\n      var me = this;\n      helpers$1.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n      me.legendHitBoxes = [];\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    beforeUpdate: noop$2,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$2,\n    //\n    beforeSetDimensions: noop$2,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$2,\n    //\n    beforeBuildLabels: noop$2,\n    buildLabels: noop$2,\n    afterBuildLabels: noop$2,\n    //\n    beforeFit: noop$2,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var display = opts.display;\n      var minSize = me.minSize;\n      var lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\n      var fontOpts = helpers$1.options._parseFont(opts);\n\n      var textSize = display ? lineCount * fontOpts.lineHeight + opts.padding * 2 : 0;\n\n      if (me.isHorizontal()) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = textSize;\n      } else {\n        minSize.width = textSize;\n        minSize.height = me.maxHeight; // fill all the height\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$2,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    },\n    // Actually draw the title block on the canvas\n    draw: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n\n      if (opts.display) {\n        var fontOpts = helpers$1.options._parseFont(opts);\n\n        var lineHeight = fontOpts.lineHeight;\n        var offset = lineHeight / 2 + opts.padding;\n        var rotation = 0;\n        var top = me.top;\n        var left = me.left;\n        var bottom = me.bottom;\n        var right = me.right;\n        var maxWidth, titleX, titleY;\n        ctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\n        ctx.font = fontOpts.string; // Horizontal\n\n        if (me.isHorizontal()) {\n          titleX = left + (right - left) / 2; // midpoint of the width\n\n          titleY = top + offset;\n          maxWidth = right - left;\n        } else {\n          titleX = opts.position === 'left' ? left + offset : right - offset;\n          titleY = top + (bottom - top) / 2;\n          maxWidth = bottom - top;\n          rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n        }\n\n        ctx.save();\n        ctx.translate(titleX, titleY);\n        ctx.rotate(rotation);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        var text = opts.text;\n\n        if (helpers$1.isArray(text)) {\n          var y = 0;\n\n          for (var i = 0; i < text.length; ++i) {\n            ctx.fillText(text[i], 0, y, maxWidth);\n            y += lineHeight;\n          }\n        } else {\n          ctx.fillText(text, 0, 0, maxWidth);\n        }\n\n        ctx.restore();\n      }\n    }\n  });\n\n  function createNewTitleBlockAndAttach(chart, titleOpts) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: titleOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, title, titleOpts);\n    core_layouts.addBox(chart, title);\n    chart.titleBlock = title;\n  }\n\n  var plugin_title = {\n    id: 'title',\n\n    /**\n     * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n     * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Title,\n    beforeInit: function beforeInit(chart) {\n      var titleOpts = chart.options.title;\n\n      if (titleOpts) {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var titleOpts = chart.options.title;\n      var titleBlock = chart.titleBlock;\n\n      if (titleOpts) {\n        helpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n        if (titleBlock) {\n          core_layouts.configure(chart, titleBlock, titleOpts);\n          titleBlock.options = titleOpts;\n        } else {\n          createNewTitleBlockAndAttach(chart, titleOpts);\n        }\n      } else if (titleBlock) {\n        core_layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n      }\n    }\n  };\n  var plugins = {};\n  var filler = plugin_filler;\n  var legend = plugin_legend;\n  var title = plugin_title;\n  plugins.filler = filler;\n  plugins.legend = legend;\n  plugins.title = title;\n  /**\n   * @namespace Chart\n   */\n\n  core_controller.helpers = helpers$1; // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\n  core_helpers(core_controller);\n  core_controller._adapters = core_adapters;\n  core_controller.Animation = core_animation;\n  core_controller.animationService = core_animations;\n  core_controller.controllers = controllers;\n  core_controller.DatasetController = core_datasetController;\n  core_controller.defaults = core_defaults;\n  core_controller.Element = core_element;\n  core_controller.elements = elements;\n  core_controller.Interaction = core_interaction;\n  core_controller.layouts = core_layouts;\n  core_controller.platform = platform;\n  core_controller.plugins = core_plugins;\n  core_controller.Scale = core_scale;\n  core_controller.scaleService = core_scaleService;\n  core_controller.Ticks = core_ticks;\n  core_controller.Tooltip = core_tooltip; // Register built-in scales\n\n  core_controller.helpers.each(scales, function (scale, type) {\n    core_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n  }); // Load to register built-in adapters (as side effects)\n  // Loading built-in plugins\n\n  for (var k in plugins) {\n    if (plugins.hasOwnProperty(k)) {\n      core_controller.plugins.register(plugins[k]);\n    }\n  }\n\n  core_controller.platform.initialize();\n  var src = core_controller;\n\n  if (typeof window !== 'undefined') {\n    window.Chart = core_controller;\n  } // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Chart\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  core_controller.Chart = core_controller;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Legend\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Legend = plugins.legend._element;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Title\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Title = plugins.title._element;\n  /**\n   * Provided for backward compatibility, use Chart.plugins instead\n   * @namespace Chart.pluginService\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.pluginService = core_controller.plugins;\n  /**\n   * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n   * effect, instead simply create/register plugins via plain JavaScript objects.\n   * @interface Chart.PluginBase\n   * @deprecated since version 2.5.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.PluginBase = core_controller.Element.extend({});\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas instead.\n   * @namespace Chart.canvasHelpers\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.canvasHelpers = core_controller.helpers.canvas;\n  /**\n   * Provided for backward compatibility, use Chart.layouts instead.\n   * @namespace Chart.layoutService\n   * @deprecated since version 2.7.3\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.layoutService = core_controller.layouts;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.LinearScaleBase\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.LinearScaleBase = scale_linearbase;\n  /**\n   * Provided for backward compatibility, instead we should create a new Chart\n   * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   */\n\n  core_controller.helpers.each(['Bar', 'Bubble', 'Doughnut', 'Line', 'PolarArea', 'Radar', 'Scatter'], function (klass) {\n    core_controller[klass] = function (ctx, cfg) {\n      return new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n        type: klass.charAt(0).toLowerCase() + klass.slice(1)\n      }));\n    };\n  });\n  return src;\n});","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n} // Add methods to `Stack`.\n\n\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\nmodule.exports = Stack;","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || value !== value && other !== other;\n}\n\nmodule.exports = eq;","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n/** `Object#toString` result references. */\n\n\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\n\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  } // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\n\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\nmodule.exports = freeGlobal;","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\n\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n\n    try {\n      return func + '';\n    } catch (e) {}\n  }\n\n  return '';\n}\n\nmodule.exports = toSource;","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\n\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(array);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var index = -1,\n      result = true,\n      seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;\n  stack.set(array, other);\n  stack.set(other, array); // Ignore non-index properties.\n\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);\n    }\n\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n\n      result = false;\n      break;\n    } // Recursively compare arrays (susceptible to call stack limits).\n\n\n    if (seen) {\n      if (!arraySome(other, function (othValue, othIndex) {\n        if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n          return seen.push(othIndex);\n        }\n      })) {\n        result = false;\n        break;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n      result = false;\n      break;\n    }\n  }\n\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\n\nvar isArguments = baseIsArguments(function () {\n  return arguments;\n}()) ? baseIsArguments : function (value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n};\nmodule.exports = isArguments;","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Built-in value references. */\n\nvar Buffer = moduleExports ? root.Buffer : undefined;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\n\nvar isBuffer = nativeIsBuffer || stubFalse;\nmodule.exports = isBuffer;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/** Used to detect unsigned integer values. */\n\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\n\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n}\n\nmodule.exports = isIndex;","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n/* Node.js helper references. */\n\n\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\n\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\nmodule.exports = isTypedArray;","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\n\n\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;","var isObject = require('./isObject');\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\n\n\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function (object) {\n    if (object == null) {\n      return false;\n    }\n\n    return object[key] === srcValue && (srcValue !== undefined || key in Object(object));\n  };\n}\n\nmodule.exports = matchesStrictComparable;","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\n\n\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n\n  return index && index == length ? object : undefined;\n}\n\nmodule.exports = baseGet;","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\n\n\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;","//! moment.js\n;\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.moment = factory();\n})(this, function () {\n  'use strict';\n\n  var hookCallback;\n\n  function hooks() {\n    return hookCallback.apply(null, arguments);\n  } // This is done to register the method called with moment()\n  // without creating circular dependencies.\n\n\n  function setHookCallback(callback) {\n    hookCallback = callback;\n  }\n\n  function isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n  }\n\n  function isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n  }\n\n  function isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n      return Object.getOwnPropertyNames(obj).length === 0;\n    } else {\n      var k;\n\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  function isUndefined(input) {\n    return input === void 0;\n  }\n\n  function isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n  }\n\n  function isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n  }\n\n  function map(arr, fn) {\n    var res = [],\n        i;\n\n    for (i = 0; i < arr.length; ++i) {\n      res.push(fn(arr[i], i));\n    }\n\n    return res;\n  }\n\n  function hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n  }\n\n  function extend(a, b) {\n    for (var i in b) {\n      if (hasOwnProp(b, i)) {\n        a[i] = b[i];\n      }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n      a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n      a.valueOf = b.valueOf;\n    }\n\n    return a;\n  }\n\n  function createUTC(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n  }\n\n  function defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n      empty: false,\n      unusedTokens: [],\n      unusedInput: [],\n      overflow: -2,\n      charsLeftOver: 0,\n      nullInput: false,\n      invalidMonth: null,\n      invalidFormat: false,\n      userInvalidated: false,\n      iso: false,\n      parsedDateParts: [],\n      meridiem: null,\n      rfc2822: false,\n      weekdayMismatch: false\n    };\n  }\n\n  function getParsingFlags(m) {\n    if (m._pf == null) {\n      m._pf = defaultParsingFlags();\n    }\n\n    return m._pf;\n  }\n\n  var some;\n\n  if (Array.prototype.some) {\n    some = Array.prototype.some;\n  } else {\n    some = function some(fun) {\n      var t = Object(this);\n      var len = t.length >>> 0;\n\n      for (var i = 0; i < len; i++) {\n        if (i in t && fun.call(this, t[i], i, t)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  }\n\n  function isValid(m) {\n    if (m._isValid == null) {\n      var flags = getParsingFlags(m);\n      var parsedParts = some.call(flags.parsedDateParts, function (i) {\n        return i != null;\n      });\n      var isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n\n      if (m._strict) {\n        isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n      }\n\n      if (Object.isFrozen == null || !Object.isFrozen(m)) {\n        m._isValid = isNowValid;\n      } else {\n        return isNowValid;\n      }\n    }\n\n    return m._isValid;\n  }\n\n  function createInvalid(flags) {\n    var m = createUTC(NaN);\n\n    if (flags != null) {\n      extend(getParsingFlags(m), flags);\n    } else {\n      getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n  } // Plugins that add properties should also add the key here (null value),\n  // so we can properly clone ourselves.\n\n\n  var momentProperties = hooks.momentProperties = [];\n\n  function copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n      to._isAMomentObject = from._isAMomentObject;\n    }\n\n    if (!isUndefined(from._i)) {\n      to._i = from._i;\n    }\n\n    if (!isUndefined(from._f)) {\n      to._f = from._f;\n    }\n\n    if (!isUndefined(from._l)) {\n      to._l = from._l;\n    }\n\n    if (!isUndefined(from._strict)) {\n      to._strict = from._strict;\n    }\n\n    if (!isUndefined(from._tzm)) {\n      to._tzm = from._tzm;\n    }\n\n    if (!isUndefined(from._isUTC)) {\n      to._isUTC = from._isUTC;\n    }\n\n    if (!isUndefined(from._offset)) {\n      to._offset = from._offset;\n    }\n\n    if (!isUndefined(from._pf)) {\n      to._pf = getParsingFlags(from);\n    }\n\n    if (!isUndefined(from._locale)) {\n      to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n      for (i = 0; i < momentProperties.length; i++) {\n        prop = momentProperties[i];\n        val = from[prop];\n\n        if (!isUndefined(val)) {\n          to[prop] = val;\n        }\n      }\n    }\n\n    return to;\n  }\n\n  var updateInProgress = false; // Moment prototype object\n\n  function Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\n    if (!this.isValid()) {\n      this._d = new Date(NaN);\n    } // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n\n\n    if (updateInProgress === false) {\n      updateInProgress = true;\n      hooks.updateOffset(this);\n      updateInProgress = false;\n    }\n  }\n\n  function isMoment(obj) {\n    return obj instanceof Moment || obj != null && obj._isAMomentObject != null;\n  }\n\n  function absFloor(number) {\n    if (number < 0) {\n      // -0 -> 0\n      return Math.ceil(number) || 0;\n    } else {\n      return Math.floor(number);\n    }\n  }\n\n  function toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n      value = absFloor(coercedNumber);\n    }\n\n    return value;\n  } // compare two arrays, return the number of differences\n\n\n  function compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n\n    for (i = 0; i < len; i++) {\n      if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n        diffs++;\n      }\n    }\n\n    return diffs + lengthDiff;\n  }\n\n  function warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n      console.warn('Deprecation warning: ' + msg);\n    }\n  }\n\n  function deprecate(msg, fn) {\n    var firstTime = true;\n    return extend(function () {\n      if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(null, msg);\n      }\n\n      if (firstTime) {\n        var args = [];\n        var arg;\n\n        for (var i = 0; i < arguments.length; i++) {\n          arg = '';\n\n          if (typeof arguments[i] === 'object') {\n            arg += '\\n[' + i + '] ';\n\n            for (var key in arguments[0]) {\n              arg += key + ': ' + arguments[0][key] + ', ';\n            }\n\n            arg = arg.slice(0, -2); // Remove trailing comma and space\n          } else {\n            arg = arguments[i];\n          }\n\n          args.push(arg);\n        }\n\n        warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + new Error().stack);\n        firstTime = false;\n      }\n\n      return fn.apply(this, arguments);\n    }, fn);\n  }\n\n  var deprecations = {};\n\n  function deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n      hooks.deprecationHandler(name, msg);\n    }\n\n    if (!deprecations[name]) {\n      warn(msg);\n      deprecations[name] = true;\n    }\n  }\n\n  hooks.suppressDeprecationWarnings = false;\n  hooks.deprecationHandler = null;\n\n  function isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n  }\n\n  function set(config) {\n    var prop, i;\n\n    for (i in config) {\n      prop = config[i];\n\n      if (isFunction(prop)) {\n        this[i] = prop;\n      } else {\n        this['_' + i] = prop;\n      }\n    }\n\n    this._config = config; // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n\n    this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\\d{1,2}/.source);\n  }\n\n  function mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig),\n        prop;\n\n    for (prop in childConfig) {\n      if (hasOwnProp(childConfig, prop)) {\n        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n          res[prop] = {};\n          extend(res[prop], parentConfig[prop]);\n          extend(res[prop], childConfig[prop]);\n        } else if (childConfig[prop] != null) {\n          res[prop] = childConfig[prop];\n        } else {\n          delete res[prop];\n        }\n      }\n    }\n\n    for (prop in parentConfig) {\n      if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {\n        // make sure changes to properties don't modify parent config\n        res[prop] = extend({}, res[prop]);\n      }\n    }\n\n    return res;\n  }\n\n  function Locale(config) {\n    if (config != null) {\n      this.set(config);\n    }\n  }\n\n  var keys;\n\n  if (Object.keys) {\n    keys = Object.keys;\n  } else {\n    keys = function keys(obj) {\n      var i,\n          res = [];\n\n      for (i in obj) {\n        if (hasOwnProp(obj, i)) {\n          res.push(i);\n        }\n      }\n\n      return res;\n    };\n  }\n\n  var defaultCalendar = {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  };\n\n  function calendar(key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n  }\n\n  var defaultLongDateFormat = {\n    LTS: 'h:mm:ss A',\n    LT: 'h:mm A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A'\n  };\n\n  function longDateFormat(key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n      return val.slice(1);\n    });\n    return this._longDateFormat[key];\n  }\n\n  var defaultInvalidDate = 'Invalid date';\n\n  function invalidDate() {\n    return this._invalidDate;\n  }\n\n  var defaultOrdinal = '%d';\n  var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n  function ordinal(number) {\n    return this._ordinal.replace('%d', number);\n  }\n\n  var defaultRelativeTime = {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  };\n\n  function relativeTime(number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\n  }\n\n  function pastFuture(diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n\n  var aliases = {};\n\n  function addUnitAlias(unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n  }\n\n  function normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n  }\n\n  function normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n      if (hasOwnProp(inputObject, prop)) {\n        normalizedProp = normalizeUnits(prop);\n\n        if (normalizedProp) {\n          normalizedInput[normalizedProp] = inputObject[prop];\n        }\n      }\n    }\n\n    return normalizedInput;\n  }\n\n  var priorities = {};\n\n  function addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n  }\n\n  function getPrioritizedUnits(unitsObj) {\n    var units = [];\n\n    for (var u in unitsObj) {\n      units.push({\n        unit: u,\n        priority: priorities[u]\n      });\n    }\n\n    units.sort(function (a, b) {\n      return a.priority - b.priority;\n    });\n    return units;\n  }\n\n  function zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? forceSign ? '+' : '' : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n  }\n\n  var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n  var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n  var formatFunctions = {};\n  var formatTokenFunctions = {}; // token:    'M'\n  // padded:   ['MM', 2]\n  // ordinal:  'Mo'\n  // callback: function () { this.month() + 1 }\n\n  function addFormatToken(token, padded, ordinal, callback) {\n    var func = callback;\n\n    if (typeof callback === 'string') {\n      func = function func() {\n        return this[callback]();\n      };\n    }\n\n    if (token) {\n      formatTokenFunctions[token] = func;\n    }\n\n    if (padded) {\n      formatTokenFunctions[padded[0]] = function () {\n        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n      };\n    }\n\n    if (ordinal) {\n      formatTokenFunctions[ordinal] = function () {\n        return this.localeData().ordinal(func.apply(this, arguments), token);\n      };\n    }\n  }\n\n  function removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n      return input.replace(/^\\[|\\]$/g, '');\n    }\n\n    return input.replace(/\\\\/g, '');\n  }\n\n  function makeFormatFunction(format) {\n    var array = format.match(formattingTokens),\n        i,\n        length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n      if (formatTokenFunctions[array[i]]) {\n        array[i] = formatTokenFunctions[array[i]];\n      } else {\n        array[i] = removeFormattingTokens(array[i]);\n      }\n    }\n\n    return function (mom) {\n      var output = '',\n          i;\n\n      for (i = 0; i < length; i++) {\n        output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n      }\n\n      return output;\n    };\n  } // format date using native date object\n\n\n  function formatMoment(m, format) {\n    if (!m.isValid()) {\n      return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n    return formatFunctions[format](m);\n  }\n\n  function expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n      return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n\n    while (i >= 0 && localFormattingTokens.test(format)) {\n      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n      localFormattingTokens.lastIndex = 0;\n      i -= 1;\n    }\n\n    return format;\n  }\n\n  var match1 = /\\d/; //       0 - 9\n\n  var match2 = /\\d\\d/; //      00 - 99\n\n  var match3 = /\\d{3}/; //     000 - 999\n\n  var match4 = /\\d{4}/; //    0000 - 9999\n\n  var match6 = /[+-]?\\d{6}/; // -999999 - 999999\n\n  var match1to2 = /\\d\\d?/; //       0 - 99\n\n  var match3to4 = /\\d\\d\\d\\d?/; //     999 - 9999\n\n  var match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\n  var match1to3 = /\\d{1,3}/; //       0 - 999\n\n  var match1to4 = /\\d{1,4}/; //       0 - 9999\n\n  var match1to6 = /[+-]?\\d{1,6}/; // -999999 - 999999\n\n  var matchUnsigned = /\\d+/; //       0 - inf\n\n  var matchSigned = /[+-]?\\d+/; //    -inf - inf\n\n  var matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\n  var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n  var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n  // any word (or two) characters or numbers including two/three word month in arabic.\n  // includes scottish gaelic two word and hyphenated months\n\n  var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n  var regexes = {};\n\n  function addRegexToken(token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n      return isStrict && strictRegex ? strictRegex : regex;\n    };\n  }\n\n  function getParseRegexForToken(token, config) {\n    if (!hasOwnProp(regexes, token)) {\n      return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n  } // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\n\n  function unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n      return p1 || p2 || p3 || p4;\n    }));\n  }\n\n  function regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n\n  var tokens = {};\n\n  function addParseToken(token, callback) {\n    var i,\n        func = callback;\n\n    if (typeof token === 'string') {\n      token = [token];\n    }\n\n    if (isNumber(callback)) {\n      func = function func(input, array) {\n        array[callback] = toInt(input);\n      };\n    }\n\n    for (i = 0; i < token.length; i++) {\n      tokens[token[i]] = func;\n    }\n  }\n\n  function addWeekParseToken(token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n      config._w = config._w || {};\n      callback(input, config._w, config, token);\n    });\n  }\n\n  function addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n      tokens[token](input, config._a, config, token);\n    }\n  }\n\n  var YEAR = 0;\n  var MONTH = 1;\n  var DATE = 2;\n  var HOUR = 3;\n  var MINUTE = 4;\n  var SECOND = 5;\n  var MILLISECOND = 6;\n  var WEEK = 7;\n  var WEEKDAY = 8; // FORMATTING\n\n  addFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n  });\n  addFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n  });\n  addFormatToken(0, ['YYYY', 4], 0, 'year');\n  addFormatToken(0, ['YYYYY', 5], 0, 'year');\n  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year'); // ALIASES\n\n  addUnitAlias('year', 'y'); // PRIORITIES\n\n  addUnitPriority('year', 1); // PARSING\n\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n  });\n  addParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n  });\n  addParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n  }); // HELPERS\n\n  function daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n  }\n\n  function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  } // HOOKS\n\n\n  hooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n  }; // MOMENTS\n\n\n  var getSetYear = makeGetSet('FullYear', true);\n\n  function getIsLeapYear() {\n    return isLeapYear(this.year());\n  }\n\n  function makeGetSet(unit, keepTime) {\n    return function (value) {\n      if (value != null) {\n        set$1(this, unit, value);\n        hooks.updateOffset(this, keepTime);\n        return this;\n      } else {\n        return get(this, unit);\n      }\n    };\n  }\n\n  function get(mom, unit) {\n    return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n  }\n\n  function set$1(mom, unit, value) {\n    if (mom.isValid() && !isNaN(value)) {\n      if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n      } else {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n      }\n    }\n  } // MOMENTS\n\n\n  function stringGet(units) {\n    units = normalizeUnits(units);\n\n    if (isFunction(this[units])) {\n      return this[units]();\n    }\n\n    return this;\n  }\n\n  function stringSet(units, value) {\n    if (typeof units === 'object') {\n      units = normalizeObjectUnits(units);\n      var prioritized = getPrioritizedUnits(units);\n\n      for (var i = 0; i < prioritized.length; i++) {\n        this[prioritized[i].unit](units[prioritized[i].unit]);\n      }\n    } else {\n      units = normalizeUnits(units);\n\n      if (isFunction(this[units])) {\n        return this[units](value);\n      }\n    }\n\n    return this;\n  }\n\n  function mod(n, x) {\n    return (n % x + x) % x;\n  }\n\n  var indexOf;\n\n  if (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n  } else {\n    indexOf = function indexOf(o) {\n      // I know\n      var i;\n\n      for (i = 0; i < this.length; ++i) {\n        if (this[i] === o) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n  }\n\n  function daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n      return NaN;\n    }\n\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n  } // FORMATTING\n\n\n  addFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n  });\n  addFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n  });\n  addFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n  }); // ALIASES\n\n  addUnitAlias('month', 'M'); // PRIORITY\n\n  addUnitPriority('month', 8); // PARSING\n\n  addRegexToken('M', match1to2);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM', function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n  addParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n  });\n  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.\n\n\n    if (month != null) {\n      array[MONTH] = month;\n    } else {\n      getParsingFlags(config).invalidMonth = input;\n    }\n  }); // LOCALES\n\n  var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n  var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n\n  function localeMonths(m, format) {\n    if (!m) {\n      return isArray(this._months) ? this._months : this._months['standalone'];\n    }\n\n    return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n\n  function localeMonthsShort(m, format) {\n    if (!m) {\n      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];\n    }\n\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  function handleStrictParse(monthName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = monthName.toLocaleLowerCase();\n\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n\n      for (i = 0; i < 12; ++i) {\n        mom = createUTC([2000, i]);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeMonthsParse(monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n      return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    } // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n\n      if (strict && !this._longMonthsParse[i]) {\n        this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n        this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n      }\n\n      if (!strict && !this._monthsParse[i]) {\n        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function setMonth(mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n      // No op\n      return mom;\n    }\n\n    if (typeof value === 'string') {\n      if (/^\\d+$/.test(value)) {\n        value = toInt(value);\n      } else {\n        value = mom.localeData().monthsParse(value); // TODO: Another silent failure?\n\n        if (!isNumber(value)) {\n          return mom;\n        }\n      }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\n    return mom;\n  }\n\n  function getSetMonth(value) {\n    if (value != null) {\n      setMonth(this, value);\n      hooks.updateOffset(this, true);\n      return this;\n    } else {\n      return get(this, 'Month');\n    }\n  }\n\n  function getDaysInMonth() {\n    return daysInMonth(this.year(), this.month());\n  }\n\n  var defaultMonthsShortRegex = matchWord;\n\n  function monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      } else {\n        return this._monthsShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsShortRegex')) {\n        this._monthsShortRegex = defaultMonthsShortRegex;\n      }\n\n      return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n  }\n\n  var defaultMonthsRegex = matchWord;\n\n  function monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      } else {\n        return this._monthsRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this._monthsRegex = defaultMonthsRegex;\n      }\n\n      return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n    }\n  }\n\n  function computeMonthsParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom;\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      shortPieces.push(this.monthsShort(mom, ''));\n      longPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.monthsShort(mom, ''));\n    } // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n  }\n\n  function createDate(y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date; // the date constructor remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      date = new Date(y + 400, m, d, h, M, s, ms);\n\n      if (isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n      }\n    } else {\n      date = new Date(y, m, d, h, M, s, ms);\n    }\n\n    return date;\n  }\n\n  function createUTCDate(y) {\n    var date; // the Date.UTC function remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      var args = Array.prototype.slice.call(arguments); // preserve leap years using a full 400 year cycle, then reset\n\n      args[0] = y + 400;\n      date = new Date(Date.UTC.apply(null, args));\n\n      if (isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n      }\n    } else {\n      date = new Date(Date.UTC.apply(null, arguments));\n    }\n\n    return date;\n  } // start-of-first-week - start-of-year\n\n\n  function firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n    fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n  } // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\n\n  function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear,\n        resDayOfYear;\n\n    if (dayOfYear <= 0) {\n      resYear = year - 1;\n      resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n      resYear = year + 1;\n      resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n      resYear = year;\n      resDayOfYear = dayOfYear;\n    }\n\n    return {\n      year: resYear,\n      dayOfYear: resDayOfYear\n    };\n  }\n\n  function weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek,\n        resYear;\n\n    if (week < 1) {\n      resYear = mom.year() - 1;\n      resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n      resWeek = week - weeksInYear(mom.year(), dow, doy);\n      resYear = mom.year() + 1;\n    } else {\n      resYear = mom.year();\n      resWeek = week;\n    }\n\n    return {\n      week: resWeek,\n      year: resYear\n    };\n  }\n\n  function weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n  } // FORMATTING\n\n\n  addFormatToken('w', ['ww', 2], 'wo', 'week');\n  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek'); // ALIASES\n\n  addUnitAlias('week', 'w');\n  addUnitAlias('isoWeek', 'W'); // PRIORITIES\n\n  addUnitPriority('week', 5);\n  addUnitPriority('isoWeek', 5); // PARSING\n\n  addRegexToken('w', match1to2);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2);\n  addRegexToken('WW', match1to2, match2);\n  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n  }); // HELPERS\n  // LOCALES\n\n  function localeWeek(mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n  }\n\n  var defaultLocaleWeek = {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n  };\n\n  function localeFirstDayOfWeek() {\n    return this._week.dow;\n  }\n\n  function localeFirstDayOfYear() {\n    return this._week.doy;\n  } // MOMENTS\n\n\n  function getSetWeek(input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  }\n\n  function getSetISOWeek(input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('d', 0, 'do', 'day');\n  addFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n  });\n  addFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n  });\n  addFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n  });\n  addFormatToken('e', 0, 0, 'weekday');\n  addFormatToken('E', 0, 0, 'isoWeekday'); // ALIASES\n\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E'); // PRIORITY\n\n  addUnitPriority('day', 11);\n  addUnitPriority('weekday', 11);\n  addUnitPriority('isoWeekday', 11); // PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n  addRegexToken('dd', function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n  addRegexToken('ddd', function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd', function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n  });\n  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict); // if we didn't get a weekday name, mark the date as invalid\n\n\n    if (weekday != null) {\n      week.d = weekday;\n    } else {\n      getParsingFlags(config).invalidWeekday = input;\n    }\n  });\n  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n  }); // HELPERS\n\n  function parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n      return input;\n    }\n\n    if (!isNaN(input)) {\n      return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n\n    if (typeof input === 'number') {\n      return input;\n    }\n\n    return null;\n  }\n\n  function parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n      return locale.weekdaysParse(input) % 7 || 7;\n    }\n\n    return isNaN(input) ? null : input;\n  } // LOCALES\n\n\n  function shiftWeekdays(ws, n) {\n    return ws.slice(n, 7).concat(ws.slice(0, n));\n  }\n\n  var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n\n  function localeWeekdays(m, format) {\n    var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m && m !== true && this._weekdays.isFormat.test(format) ? 'format' : 'standalone'];\n    return m === true ? shiftWeekdays(weekdays, this._week.dow) : m ? weekdays[m.day()] : weekdays;\n  }\n\n  var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n\n  function localeWeekdaysShort(m) {\n    return m === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n  }\n\n  var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n\n  function localeWeekdaysMin(m) {\n    return m === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n  }\n\n  function handleStrictParse$1(weekdayName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = weekdayName.toLocaleLowerCase();\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n\n      for (i = 0; i < 7; ++i) {\n        mom = createUTC([2000, 1]).day(i);\n        this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeWeekdaysParse(weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n      return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n      }\n\n      if (!this._weekdaysParse[i]) {\n        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function getSetDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\n    if (input != null) {\n      input = parseWeekday(input, this.localeData());\n      return this.add(input - day, 'd');\n    } else {\n      return day;\n    }\n  }\n\n  function getSetLocaleDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n  }\n\n  function getSetISODayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    } // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n\n    if (input != null) {\n      var weekday = parseIsoWeekday(input, this.localeData());\n      return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n      return this.day() || 7;\n    }\n  }\n\n  var defaultWeekdaysRegex = matchWord;\n\n  function weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = defaultWeekdaysRegex;\n      }\n\n      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }\n\n  var defaultWeekdaysShortRegex = matchWord;\n\n  function weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n      }\n\n      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n\n  var defaultWeekdaysMinRegex = matchWord;\n\n  function weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n      }\n\n      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n\n  function computeWeekdaysParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var minPieces = [],\n        shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom,\n        minp,\n        shortp,\n        longp;\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n      minp = this.weekdaysMin(mom, '');\n      shortp = this.weekdaysShort(mom, '');\n      longp = this.weekdays(mom, '');\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    } // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 7; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n  } // FORMATTING\n\n\n  function hFormat() {\n    return this.hours() % 12 || 12;\n  }\n\n  function kFormat() {\n    return this.hours() || 24;\n  }\n\n  addFormatToken('H', ['HH', 2], 0, 'hour');\n  addFormatToken('h', ['hh', 2], 0, hFormat);\n  addFormatToken('k', ['kk', 2], 0, kFormat);\n  addFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n  addFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n\n  function meridiem(token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n  }\n\n  meridiem('a', true);\n  meridiem('A', false); // ALIASES\n\n  addUnitAlias('hour', 'h'); // PRIORITY\n\n  addUnitPriority('hour', 13); // PARSING\n\n  function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }\n\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2);\n  addRegexToken('h', match1to2);\n  addRegexToken('k', match1to2);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n  });\n  addParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n  });\n  addParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n  });\n  addParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n  }); // LOCALES\n\n  function localeIsPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return (input + '').toLowerCase().charAt(0) === 'p';\n  }\n\n  var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\n  function localeMeridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    } else {\n      return isLower ? 'am' : 'AM';\n    }\n  } // MOMENTS\n  // Setting the hour should keep the time, because the user explicitly\n  // specified which hour they want. So trying to maintain the same hour (in\n  // a new timezone) makes sense. Adding/subtracting hours does not follow\n  // this rule.\n\n\n  var getSetHour = makeGetSet('Hours', true);\n  var baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n    week: defaultLocaleWeek,\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n    meridiemParse: defaultLocaleMeridiemParse\n  }; // internal storage for locale config files\n\n  var locales = {};\n  var localeFamilies = {};\n  var globalLocale;\n\n  function normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n  } // pick the locale from the array\n  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\n\n  function chooseLocale(names) {\n    var i = 0,\n        j,\n        next,\n        locale,\n        split;\n\n    while (i < names.length) {\n      split = normalizeLocale(names[i]).split('-');\n      j = split.length;\n      next = normalizeLocale(names[i + 1]);\n      next = next ? next.split('-') : null;\n\n      while (j > 0) {\n        locale = loadLocale(split.slice(0, j).join('-'));\n\n        if (locale) {\n          return locale;\n        }\n\n        if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n          //the next array item is better than a shallower substring of this one\n          break;\n        }\n\n        j--;\n      }\n\n      i++;\n    }\n\n    return globalLocale;\n  }\n\n  function loadLocale(name) {\n    var oldLocale = null; // TODO: Find a better way to register and load all the locales in Node\n\n    if (!locales[name] && typeof module !== 'undefined' && module && module.exports) {\n      try {\n        oldLocale = globalLocale._abbr;\n        var aliasedRequire = require;\n        aliasedRequire('./locale/' + name);\n        getSetGlobalLocale(oldLocale);\n      } catch (e) {}\n    }\n\n    return locales[name];\n  } // This function will load locale and then set the global locale.  If\n  // no arguments are passed in, it will simply return the current global\n  // locale key.\n\n\n  function getSetGlobalLocale(key, values) {\n    var data;\n\n    if (key) {\n      if (isUndefined(values)) {\n        data = getLocale(key);\n      } else {\n        data = defineLocale(key, values);\n      }\n\n      if (data) {\n        // moment.duration._locale = moment._locale = data;\n        globalLocale = data;\n      } else {\n        if (typeof console !== 'undefined' && console.warn) {\n          //warn user if arguments are passed but the locale could not be set\n          console.warn('Locale ' + key + ' not found. Did you forget to load it?');\n        }\n      }\n    }\n\n    return globalLocale._abbr;\n  }\n\n  function defineLocale(name, config) {\n    if (config !== null) {\n      var locale,\n          parentConfig = baseConfig;\n      config.abbr = name;\n\n      if (locales[name] != null) {\n        deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n        parentConfig = locales[name]._config;\n      } else if (config.parentLocale != null) {\n        if (locales[config.parentLocale] != null) {\n          parentConfig = locales[config.parentLocale]._config;\n        } else {\n          locale = loadLocale(config.parentLocale);\n\n          if (locale != null) {\n            parentConfig = locale._config;\n          } else {\n            if (!localeFamilies[config.parentLocale]) {\n              localeFamilies[config.parentLocale] = [];\n            }\n\n            localeFamilies[config.parentLocale].push({\n              name: name,\n              config: config\n            });\n            return null;\n          }\n        }\n      }\n\n      locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n      if (localeFamilies[name]) {\n        localeFamilies[name].forEach(function (x) {\n          defineLocale(x.name, x.config);\n        });\n      } // backwards compat for now: also set the locale\n      // make sure we set the locale AFTER all child locales have been\n      // created, so we won't end up with the child locale set.\n\n\n      getSetGlobalLocale(name);\n      return locales[name];\n    } else {\n      // useful for testing\n      delete locales[name];\n      return null;\n    }\n  }\n\n  function updateLocale(name, config) {\n    if (config != null) {\n      var locale,\n          tmpLocale,\n          parentConfig = baseConfig; // MERGE\n\n      tmpLocale = loadLocale(name);\n\n      if (tmpLocale != null) {\n        parentConfig = tmpLocale._config;\n      }\n\n      config = mergeConfigs(parentConfig, config);\n      locale = new Locale(config);\n      locale.parentLocale = locales[name];\n      locales[name] = locale; // backwards compat for now: also set the locale\n\n      getSetGlobalLocale(name);\n    } else {\n      // pass null for config to unupdate, useful for tests\n      if (locales[name] != null) {\n        if (locales[name].parentLocale != null) {\n          locales[name] = locales[name].parentLocale;\n        } else if (locales[name] != null) {\n          delete locales[name];\n        }\n      }\n    }\n\n    return locales[name];\n  } // returns locale data\n\n\n  function getLocale(key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n      key = key._locale._abbr;\n    }\n\n    if (!key) {\n      return globalLocale;\n    }\n\n    if (!isArray(key)) {\n      //short-circuit everything else\n      locale = loadLocale(key);\n\n      if (locale) {\n        return locale;\n      }\n\n      key = [key];\n    }\n\n    return chooseLocale(key);\n  }\n\n  function listLocales() {\n    return keys(locales);\n  }\n\n  function checkOverflow(m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n      overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n\n      if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n        overflow = DATE;\n      }\n\n      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n        overflow = WEEK;\n      }\n\n      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n        overflow = WEEKDAY;\n      }\n\n      getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n  } // Pick the first defined of two or three arguments.\n\n\n  function defaults(a, b, c) {\n    if (a != null) {\n      return a;\n    }\n\n    if (b != null) {\n      return b;\n    }\n\n    return c;\n  }\n\n  function currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n\n    if (config._useUTC) {\n      return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n  } // convert an array to a date.\n  // the array should mirror the parameters below\n  // note: all values past the year are optional and will default to the lowest possible value.\n  // [year, month, day , hour, minute, second, millisecond]\n\n\n  function configFromArray(config) {\n    var i,\n        date,\n        input = [],\n        currentDate,\n        expectedWeekday,\n        yearToUse;\n\n    if (config._d) {\n      return;\n    }\n\n    currentDate = currentDateArray(config); //compute day of the year from weeks and weekdays\n\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n      dayOfYearFromWeekInfo(config);\n    } //if the day of the year is set, figure out what it is\n\n\n    if (config._dayOfYear != null) {\n      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n      if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n        getParsingFlags(config)._overflowDayOfYear = true;\n      }\n\n      date = createUTCDate(yearToUse, 0, config._dayOfYear);\n      config._a[MONTH] = date.getUTCMonth();\n      config._a[DATE] = date.getUTCDate();\n    } // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n\n\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n      config._a[i] = input[i] = currentDate[i];\n    } // Zero out whatever was not defaulted, including time\n\n\n    for (; i < 7; i++) {\n      config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n    } // Check for 24:00:00.000\n\n\n    if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n      config._nextDay = true;\n      config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay(); // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n\n    if (config._tzm != null) {\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n      config._a[HOUR] = 24;\n    } // check for mismatching day of week\n\n\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n      getParsingFlags(config).weekdayMismatch = true;\n    }\n  }\n\n  function dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n    w = config._w;\n\n    if (w.GG != null || w.W != null || w.E != null) {\n      dow = 1;\n      doy = 4; // TODO: We need to take the current isoWeekYear, but that depends on\n      // how we interpret now (local, utc, fixed offset). So create\n      // a now version of current config (take local/utc/offset flags, and\n      // create now).\n\n      weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n      week = defaults(w.W, 1);\n      weekday = defaults(w.E, 1);\n\n      if (weekday < 1 || weekday > 7) {\n        weekdayOverflow = true;\n      }\n    } else {\n      dow = config._locale._week.dow;\n      doy = config._locale._week.doy;\n      var curWeek = weekOfYear(createLocal(), dow, doy);\n      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year); // Default to current week.\n\n      week = defaults(w.w, curWeek.week);\n\n      if (w.d != null) {\n        // weekday -- low day numbers are considered next week\n        weekday = w.d;\n\n        if (weekday < 0 || weekday > 6) {\n          weekdayOverflow = true;\n        }\n      } else if (w.e != null) {\n        // local weekday -- counting starts from beginning of week\n        weekday = w.e + dow;\n\n        if (w.e < 0 || w.e > 6) {\n          weekdayOverflow = true;\n        }\n      } else {\n        // default to beginning of week\n        weekday = dow;\n      }\n    }\n\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n      getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n      getParsingFlags(config)._overflowWeekday = true;\n    } else {\n      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n      config._a[YEAR] = temp.year;\n      config._dayOfYear = temp.dayOfYear;\n    }\n  } // iso 8601 regex\n  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\n\n  var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n  var isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/], ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/], ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/], ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false], ['YYYY-DDD', /\\d{4}-\\d{3}/], ['YYYY-MM', /\\d{4}-\\d\\d/, false], ['YYYYYYMMDD', /[+-]\\d{10}/], ['YYYYMMDD', /\\d{8}/], // YYYYMM is NOT allowed by the standard\n  ['GGGG[W]WWE', /\\d{4}W\\d{3}/], ['GGGG[W]WW', /\\d{4}W\\d{2}/, false], ['YYYYDDD', /\\d{7}/]]; // iso time formats and regexes\n\n  var isoTimes = [['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/], ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /\\d\\d:\\d\\d/], ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/], ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/], ['HHmmss', /\\d\\d\\d\\d\\d\\d/], ['HHmm', /\\d\\d\\d\\d/], ['HH', /\\d\\d/]];\n  var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i; // date from iso format\n\n  function configFromISO(config) {\n    var i,\n        l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime,\n        dateFormat,\n        timeFormat,\n        tzFormat;\n\n    if (match) {\n      getParsingFlags(config).iso = true;\n\n      for (i = 0, l = isoDates.length; i < l; i++) {\n        if (isoDates[i][1].exec(match[1])) {\n          dateFormat = isoDates[i][0];\n          allowTime = isoDates[i][2] !== false;\n          break;\n        }\n      }\n\n      if (dateFormat == null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[3]) {\n        for (i = 0, l = isoTimes.length; i < l; i++) {\n          if (isoTimes[i][1].exec(match[3])) {\n            // match[2] should be 'T' or space\n            timeFormat = (match[2] || ' ') + isoTimes[i][0];\n            break;\n          }\n        }\n\n        if (timeFormat == null) {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      if (!allowTime && timeFormat != null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[4]) {\n        if (tzRegex.exec(match[4])) {\n          tzFormat = 'Z';\n        } else {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n      configFromStringAndFormat(config);\n    } else {\n      config._isValid = false;\n    }\n  } // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n\n\n  var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n  function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\n\n    if (secondStr) {\n      result.push(parseInt(secondStr, 10));\n    }\n\n    return result;\n  }\n\n  function untruncateYear(yearStr) {\n    var year = parseInt(yearStr, 10);\n\n    if (year <= 49) {\n      return 2000 + year;\n    } else if (year <= 999) {\n      return 1900 + year;\n    }\n\n    return year;\n  }\n\n  function preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n  }\n\n  function checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n      // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n      var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n          weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n\n      if (weekdayProvided !== weekdayActual) {\n        getParsingFlags(config).weekdayMismatch = true;\n        config._isValid = false;\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  var obsOffsets = {\n    UT: 0,\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n  };\n\n  function calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n      return obsOffsets[obsOffset];\n    } else if (militaryOffset) {\n      // the only allowed military tz is Z\n      return 0;\n    } else {\n      var hm = parseInt(numOffset, 10);\n      var m = hm % 100,\n          h = (hm - m) / 100;\n      return h * 60 + m;\n    }\n  } // date and time from ref 2822 format\n\n\n  function configFromRFC2822(config) {\n    var match = rfc2822.exec(preprocessRFC2822(config._i));\n\n    if (match) {\n      var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n\n      if (!checkWeekday(match[1], parsedArray, config)) {\n        return;\n      }\n\n      config._a = parsedArray;\n      config._tzm = calculateOffset(match[8], match[9], match[10]);\n      config._d = createUTCDate.apply(null, config._a);\n\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n      getParsingFlags(config).rfc2822 = true;\n    } else {\n      config._isValid = false;\n    }\n  } // date from iso format or fallback\n\n\n  function configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n      config._d = new Date(+matched[1]);\n      return;\n    }\n\n    configFromISO(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n\n    configFromRFC2822(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    } // Final attempt, use Input Fallback\n\n\n    hooks.createFromInputFallback(config);\n  }\n\n  hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged and will be removed in an upcoming major release. Please refer to ' + 'http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {\n    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n  }); // constant that refers to the ISO standard\n\n  hooks.ISO_8601 = function () {}; // constant that refers to the RFC 2822 form\n\n\n  hooks.RFC_2822 = function () {}; // date from string and format string\n\n\n  function configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n      configFromISO(config);\n      return;\n    }\n\n    if (config._f === hooks.RFC_2822) {\n      configFromRFC2822(config);\n      return;\n    }\n\n    config._a = [];\n    getParsingFlags(config).empty = true; // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\n    var string = '' + config._i,\n        i,\n        parsedInput,\n        tokens,\n        token,\n        skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0]; // console.log('token', token, 'parsedInput', parsedInput,\n      //         'regex', getParseRegexForToken(token, config));\n\n      if (parsedInput) {\n        skipped = string.substr(0, string.indexOf(parsedInput));\n\n        if (skipped.length > 0) {\n          getParsingFlags(config).unusedInput.push(skipped);\n        }\n\n        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n        totalParsedInputLength += parsedInput.length;\n      } // don't parse if it's not a known token\n\n\n      if (formatTokenFunctions[token]) {\n        if (parsedInput) {\n          getParsingFlags(config).empty = false;\n        } else {\n          getParsingFlags(config).unusedTokens.push(token);\n        }\n\n        addTimeToArrayFromToken(token, parsedInput, config);\n      } else if (config._strict && !parsedInput) {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n    } // add remaining unparsed input length to the string\n\n\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n\n    if (string.length > 0) {\n      getParsingFlags(config).unusedInput.push(string);\n    } // clear _12h flag if hour is <= 12\n\n\n    if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n      getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem; // handle meridiem\n\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n    configFromArray(config);\n    checkOverflow(config);\n  }\n\n  function meridiemFixWrap(locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n      // nothing to do\n      return hour;\n    }\n\n    if (locale.meridiemHour != null) {\n      return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n      // Fallback\n      isPm = locale.isPM(meridiem);\n\n      if (isPm && hour < 12) {\n        hour += 12;\n      }\n\n      if (!isPm && hour === 12) {\n        hour = 0;\n      }\n\n      return hour;\n    } else {\n      // this is not supposed to happen\n      return hour;\n    }\n  } // date from string and array of format strings\n\n\n  function configFromStringAndArray(config) {\n    var tempConfig, bestMoment, scoreToBeat, i, currentScore;\n\n    if (config._f.length === 0) {\n      getParsingFlags(config).invalidFormat = true;\n      config._d = new Date(NaN);\n      return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n      currentScore = 0;\n      tempConfig = copyConfig({}, config);\n\n      if (config._useUTC != null) {\n        tempConfig._useUTC = config._useUTC;\n      }\n\n      tempConfig._f = config._f[i];\n      configFromStringAndFormat(tempConfig);\n\n      if (!isValid(tempConfig)) {\n        continue;\n      } // if there is any input that was not parsed add a penalty for that format\n\n\n      currentScore += getParsingFlags(tempConfig).charsLeftOver; //or tokens\n\n      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n      getParsingFlags(tempConfig).score = currentScore;\n\n      if (scoreToBeat == null || currentScore < scoreToBeat) {\n        scoreToBeat = currentScore;\n        bestMoment = tempConfig;\n      }\n    }\n\n    extend(config, bestMoment || tempConfig);\n  }\n\n  function configFromObject(config) {\n    if (config._d) {\n      return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n      return obj && parseInt(obj, 10);\n    });\n    configFromArray(config);\n  }\n\n  function createFromConfig(config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n\n    if (res._nextDay) {\n      // Adding is smart enough around DST\n      res.add(1, 'd');\n      res._nextDay = undefined;\n    }\n\n    return res;\n  }\n\n  function prepareConfig(config) {\n    var input = config._i,\n        format = config._f;\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || format === undefined && input === '') {\n      return createInvalid({\n        nullInput: true\n      });\n    }\n\n    if (typeof input === 'string') {\n      config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n      return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n      config._d = input;\n    } else if (isArray(format)) {\n      configFromStringAndArray(config);\n    } else if (format) {\n      configFromStringAndFormat(config);\n    } else {\n      configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n      config._d = null;\n    }\n\n    return config;\n  }\n\n  function configFromInput(config) {\n    var input = config._i;\n\n    if (isUndefined(input)) {\n      config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n      config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n      configFromString(config);\n    } else if (isArray(input)) {\n      config._a = map(input.slice(0), function (obj) {\n        return parseInt(obj, 10);\n      });\n      configFromArray(config);\n    } else if (isObject(input)) {\n      configFromObject(config);\n    } else if (isNumber(input)) {\n      // from milliseconds\n      config._d = new Date(input);\n    } else {\n      hooks.createFromInputFallback(config);\n    }\n  }\n\n  function createLocalOrUTC(input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n      strict = locale;\n      locale = undefined;\n    }\n\n    if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {\n      input = undefined;\n    } // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n\n\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n    return createFromConfig(c);\n  }\n\n  function createLocal(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n  }\n\n  var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other < this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  });\n  var prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other > this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  }); // Pick a moment m from moments so that m[fn](other) is true for all\n  // other. This relies on the function fn to be transitive.\n  //\n  // moments should either be an array of moment objects or an array, whose\n  // first element is an array of moment objects.\n\n  function pickBy(fn, moments) {\n    var res, i;\n\n    if (moments.length === 1 && isArray(moments[0])) {\n      moments = moments[0];\n    }\n\n    if (!moments.length) {\n      return createLocal();\n    }\n\n    res = moments[0];\n\n    for (i = 1; i < moments.length; ++i) {\n      if (!moments[i].isValid() || moments[i][fn](res)) {\n        res = moments[i];\n      }\n    }\n\n    return res;\n  } // TODO: Use [].sort instead?\n\n\n  function min() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isBefore', args);\n  }\n\n  function max() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isAfter', args);\n  }\n\n  var now = function now() {\n    return Date.now ? Date.now() : +new Date();\n  };\n\n  var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n  function isDurationValid(m) {\n    for (var key in m) {\n      if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n        return false;\n      }\n    }\n\n    var unitHasDecimal = false;\n\n    for (var i = 0; i < ordering.length; ++i) {\n      if (m[ordering[i]]) {\n        if (unitHasDecimal) {\n          return false; // only allow non-integers for smallest unit\n        }\n\n        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n          unitHasDecimal = true;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  function isValid$1() {\n    return this._isValid;\n  }\n\n  function createInvalid$1() {\n    return createDuration(NaN);\n  }\n\n  function Duration(duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n    this._isValid = isDurationValid(normalizedInput); // representation for dateAddRemove\n\n    this._milliseconds = +milliseconds + seconds * 1e3 + // 1000\n    minutes * 6e4 + // 1000 * 60\n    hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n\n    this._days = +days + weeks * 7; // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n\n    this._months = +months + quarters * 3 + years * 12;\n    this._data = {};\n    this._locale = getLocale();\n\n    this._bubble();\n  }\n\n  function isDuration(obj) {\n    return obj instanceof Duration;\n  }\n\n  function absRound(number) {\n    if (number < 0) {\n      return Math.round(-1 * number) * -1;\n    } else {\n      return Math.round(number);\n    }\n  } // FORMATTING\n\n\n  function offset(token, separator) {\n    addFormatToken(token, 0, 0, function () {\n      var offset = this.utcOffset();\n      var sign = '+';\n\n      if (offset < 0) {\n        offset = -offset;\n        sign = '-';\n      }\n\n      return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n    });\n  }\n\n  offset('Z', ':');\n  offset('ZZ', ''); // PARSING\n\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n  }); // HELPERS\n  // timezone chunker\n  // '+10:00' > ['10',  '00']\n  // '-1530'  > ['-15', '30']\n\n  var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n  function offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n      return null;\n    }\n\n    var chunk = matches[matches.length - 1] || [];\n    var parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n    return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n  } // Return a moment from input, that is local/utc/zone equivalent to model.\n\n\n  function cloneWithOffset(input, model) {\n    var res, diff;\n\n    if (model._isUTC) {\n      res = model.clone();\n      diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf(); // Use low-level api, because this fn is low-level api.\n\n      res._d.setTime(res._d.valueOf() + diff);\n\n      hooks.updateOffset(res, false);\n      return res;\n    } else {\n      return createLocal(input).local();\n    }\n  }\n\n  function getDateOffset(m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n  } // HOOKS\n  // This function will be called whenever a moment is mutated.\n  // It is intended to keep the offset in sync with the timezone.\n\n\n  hooks.updateOffset = function () {}; // MOMENTS\n  // keepLocalTime = true means only change the timezone, without\n  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n  // +0200, so we adjust the time as needed, to be valid.\n  //\n  // Keeping the time actually adds/subtracts (one hour)\n  // from the actual represented time. That is why we call updateOffset\n  // a second time. In case it wants us to change the offset again\n  // _changeInProgress == true case, then we have to adjust, because\n  // there is no such time in the given timezone.\n\n\n  function getSetOffset(input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    if (input != null) {\n      if (typeof input === 'string') {\n        input = offsetFromString(matchShortOffset, input);\n\n        if (input === null) {\n          return this;\n        }\n      } else if (Math.abs(input) < 16 && !keepMinutes) {\n        input = input * 60;\n      }\n\n      if (!this._isUTC && keepLocalTime) {\n        localAdjust = getDateOffset(this);\n      }\n\n      this._offset = input;\n      this._isUTC = true;\n\n      if (localAdjust != null) {\n        this.add(localAdjust, 'm');\n      }\n\n      if (offset !== input) {\n        if (!keepLocalTime || this._changeInProgress) {\n          addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n        } else if (!this._changeInProgress) {\n          this._changeInProgress = true;\n          hooks.updateOffset(this, true);\n          this._changeInProgress = null;\n        }\n      }\n\n      return this;\n    } else {\n      return this._isUTC ? offset : getDateOffset(this);\n    }\n  }\n\n  function getSetZone(input, keepLocalTime) {\n    if (input != null) {\n      if (typeof input !== 'string') {\n        input = -input;\n      }\n\n      this.utcOffset(input, keepLocalTime);\n      return this;\n    } else {\n      return -this.utcOffset();\n    }\n  }\n\n  function setOffsetToUTC(keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n  }\n\n  function setOffsetToLocal(keepLocalTime) {\n    if (this._isUTC) {\n      this.utcOffset(0, keepLocalTime);\n      this._isUTC = false;\n\n      if (keepLocalTime) {\n        this.subtract(getDateOffset(this), 'm');\n      }\n    }\n\n    return this;\n  }\n\n  function setOffsetToParsedOffset() {\n    if (this._tzm != null) {\n      this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n      var tZone = offsetFromString(matchOffset, this._i);\n\n      if (tZone != null) {\n        this.utcOffset(tZone);\n      } else {\n        this.utcOffset(0, true);\n      }\n    }\n\n    return this;\n  }\n\n  function hasAlignedHourOffset(input) {\n    if (!this.isValid()) {\n      return false;\n    }\n\n    input = input ? createLocal(input).utcOffset() : 0;\n    return (this.utcOffset() - input) % 60 === 0;\n  }\n\n  function isDaylightSavingTime() {\n    return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();\n  }\n\n  function isDaylightSavingTimeShifted() {\n    if (!isUndefined(this._isDSTShifted)) {\n      return this._isDSTShifted;\n    }\n\n    var c = {};\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n      var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n      this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n    } else {\n      this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n  }\n\n  function isLocal() {\n    return this.isValid() ? !this._isUTC : false;\n  }\n\n  function isUtcOffset() {\n    return this.isValid() ? this._isUTC : false;\n  }\n\n  function isUtc() {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n  } // ASP.NET json date format regex\n\n\n  var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/; // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n  // and further modified to allow for strings containing both week and day\n\n  var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n  function createDuration(input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n    match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n      duration = {\n        ms: input._milliseconds,\n        d: input._days,\n        M: input._months\n      };\n    } else if (isNumber(input)) {\n      duration = {};\n\n      if (key) {\n        duration[key] = input;\n      } else {\n        duration.milliseconds = input;\n      }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: 0,\n        d: toInt(match[DATE]) * sign,\n        h: toInt(match[HOUR]) * sign,\n        m: toInt(match[MINUTE]) * sign,\n        s: toInt(match[SECOND]) * sign,\n        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n\n      };\n    } else if (!!(match = isoRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: parseIso(match[2], sign),\n        M: parseIso(match[3], sign),\n        w: parseIso(match[4], sign),\n        d: parseIso(match[5], sign),\n        h: parseIso(match[6], sign),\n        m: parseIso(match[7], sign),\n        s: parseIso(match[8], sign)\n      };\n    } else if (duration == null) {\n      // checks for null or undefined\n      duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n      diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n      duration = {};\n      duration.ms = diffRes.milliseconds;\n      duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n      ret._locale = input._locale;\n    }\n\n    return ret;\n  }\n\n  createDuration.fn = Duration.prototype;\n  createDuration.invalid = createInvalid$1;\n\n  function parseIso(inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.')); // apply sign while we're at it\n\n    return (isNaN(res) ? 0 : res) * sign;\n  }\n\n  function positiveMomentsDifference(base, other) {\n    var res = {};\n    res.months = other.month() - base.month() + (other.year() - base.year()) * 12;\n\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n      --res.months;\n    }\n\n    res.milliseconds = +other - +base.clone().add(res.months, 'M');\n    return res;\n  }\n\n  function momentsDifference(base, other) {\n    var res;\n\n    if (!(base.isValid() && other.isValid())) {\n      return {\n        milliseconds: 0,\n        months: 0\n      };\n    }\n\n    other = cloneWithOffset(other, base);\n\n    if (base.isBefore(other)) {\n      res = positiveMomentsDifference(base, other);\n    } else {\n      res = positiveMomentsDifference(other, base);\n      res.milliseconds = -res.milliseconds;\n      res.months = -res.months;\n    }\n\n    return res;\n  } // TODO: remove 'name' arg after deprecation is removed\n\n\n  function createAdder(direction, name) {\n    return function (val, period) {\n      var dur, tmp; //invert the arguments, but complain about it\n\n      if (period !== null && !isNaN(+period)) {\n        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n        tmp = val;\n        val = period;\n        period = tmp;\n      }\n\n      val = typeof val === 'string' ? +val : val;\n      dur = createDuration(val, period);\n      addSubtract(this, dur, direction);\n      return this;\n    };\n  }\n\n  function addSubtract(mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n      // No op\n      return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (months) {\n      setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n\n    if (days) {\n      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n\n    if (milliseconds) {\n      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n\n    if (updateOffset) {\n      hooks.updateOffset(mom, days || months);\n    }\n  }\n\n  var add = createAdder(1, 'add');\n  var subtract = createAdder(-1, 'subtract');\n\n  function getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';\n  }\n\n  function calendar$1(time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n  }\n\n  function clone() {\n    return new Moment(this);\n  }\n\n  function isAfter(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() > localInput.valueOf();\n    } else {\n      return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n  }\n\n  function isBefore(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() < localInput.valueOf();\n    } else {\n      return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n  }\n\n  function isBetween(from, to, units, inclusivity) {\n    var localFrom = isMoment(from) ? from : createLocal(from),\n        localTo = isMoment(to) ? to : createLocal(to);\n\n    if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n      return false;\n    }\n\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n  }\n\n  function isSame(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() === localInput.valueOf();\n    } else {\n      inputMs = localInput.valueOf();\n      return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n  }\n\n  function isSameOrAfter(input, units) {\n    return this.isSame(input, units) || this.isAfter(input, units);\n  }\n\n  function isSameOrBefore(input, units) {\n    return this.isSame(input, units) || this.isBefore(input, units);\n  }\n\n  function diff(input, units, asFloat) {\n    var that, zoneDelta, output;\n\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n      return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n    units = normalizeUnits(units);\n\n    switch (units) {\n      case 'year':\n        output = monthDiff(this, that) / 12;\n        break;\n\n      case 'month':\n        output = monthDiff(this, that);\n        break;\n\n      case 'quarter':\n        output = monthDiff(this, that) / 3;\n        break;\n\n      case 'second':\n        output = (this - that) / 1e3;\n        break;\n      // 1000\n\n      case 'minute':\n        output = (this - that) / 6e4;\n        break;\n      // 1000 * 60\n\n      case 'hour':\n        output = (this - that) / 36e5;\n        break;\n      // 1000 * 60 * 60\n\n      case 'day':\n        output = (this - that - zoneDelta) / 864e5;\n        break;\n      // 1000 * 60 * 60 * 24, negate dst\n\n      case 'week':\n        output = (this - that - zoneDelta) / 6048e5;\n        break;\n      // 1000 * 60 * 60 * 24 * 7, negate dst\n\n      default:\n        output = this - that;\n    }\n\n    return asFloat ? output : absFloor(output);\n  }\n\n  function monthDiff(a, b) {\n    // difference in months\n    var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n    anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2,\n        adjust;\n\n    if (b - anchor < 0) {\n      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor2 - anchor);\n    } //check for negative zero, return zero if negative zero\n\n\n    return -(wholeMonthDiff + adjust) || 0;\n  }\n\n  hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n  hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n  function toString() {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n  }\n\n  function toISOString(keepOffset) {\n    if (!this.isValid()) {\n      return null;\n    }\n\n    var utc = keepOffset !== true;\n    var m = utc ? this.clone().utc() : this;\n\n    if (m.year() < 0 || m.year() > 9999) {\n      return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    if (isFunction(Date.prototype.toISOString)) {\n      // native implementation is ~50x faster, use it when we can\n      if (utc) {\n        return this.toDate().toISOString();\n      } else {\n        return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n      }\n    }\n\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n  }\n  /**\n   * Return a human readable representation of a moment that can\n   * also be evaluated to get a new moment which is the same\n   *\n   * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n   */\n\n\n  function inspect() {\n    if (!this.isValid()) {\n      return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n\n    var func = 'moment';\n    var zone = '';\n\n    if (!this.isLocal()) {\n      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n      zone = 'Z';\n    }\n\n    var prefix = '[' + func + '(\"]';\n    var year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n    return this.format(prefix + year + datetime + suffix);\n  }\n\n  function format(inputString) {\n    if (!inputString) {\n      inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n  }\n\n  function from(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        to: this,\n        from: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function fromNow(withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n  }\n\n  function to(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        from: this,\n        to: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function toNow(withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n  } // If passed a locale key, it will set the locale for this\n  // instance.  Otherwise, it will return the locale configuration\n  // variables for this instance.\n\n\n  function locale(key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n      return this._locale._abbr;\n    } else {\n      newLocaleData = getLocale(key);\n\n      if (newLocaleData != null) {\n        this._locale = newLocaleData;\n      }\n\n      return this;\n    }\n  }\n\n  var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {\n    if (key === undefined) {\n      return this.localeData();\n    } else {\n      return this.locale(key);\n    }\n  });\n\n  function localeData() {\n    return this._locale;\n  }\n\n  var MS_PER_SECOND = 1000;\n  var MS_PER_MINUTE = 60 * MS_PER_SECOND;\n  var MS_PER_HOUR = 60 * MS_PER_MINUTE;\n  var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR; // actual modulo - handles negative numbers (for dates before 1970):\n\n  function mod$1(dividend, divisor) {\n    return (dividend % divisor + divisor) % divisor;\n  }\n\n  function localStartOfDate(y, m, d) {\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return new Date(y, m, d).valueOf();\n    }\n  }\n\n  function utcStartOfDate(y, m, d) {\n    // Date.UTC remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return Date.UTC(y, m, d);\n    }\n  }\n\n  function startOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year(), 0, 1);\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month(), 1);\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date());\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_MINUTE);\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_SECOND);\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function endOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year() + 1, 0, 1) - 1;\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function valueOf() {\n    return this._d.valueOf() - (this._offset || 0) * 60000;\n  }\n\n  function unix() {\n    return Math.floor(this.valueOf() / 1000);\n  }\n\n  function toDate() {\n    return new Date(this.valueOf());\n  }\n\n  function toArray() {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n  }\n\n  function toObject() {\n    var m = this;\n    return {\n      years: m.year(),\n      months: m.month(),\n      date: m.date(),\n      hours: m.hours(),\n      minutes: m.minutes(),\n      seconds: m.seconds(),\n      milliseconds: m.milliseconds()\n    };\n  }\n\n  function toJSON() {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n  }\n\n  function isValid$2() {\n    return isValid(this);\n  }\n\n  function parsingFlags() {\n    return extend({}, getParsingFlags(this));\n  }\n\n  function invalidAt() {\n    return getParsingFlags(this).overflow;\n  }\n\n  function creationData() {\n    return {\n      input: this._i,\n      format: this._f,\n      locale: this._locale,\n      isUTC: this._isUTC,\n      strict: this._strict\n    };\n  } // FORMATTING\n\n\n  addFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n  });\n  addFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n  });\n\n  function addWeekYearFormatToken(token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n  }\n\n  addWeekYearFormatToken('gggg', 'weekYear');\n  addWeekYearFormatToken('ggggg', 'weekYear');\n  addWeekYearFormatToken('GGGG', 'isoWeekYear');\n  addWeekYearFormatToken('GGGGG', 'isoWeekYear'); // ALIASES\n\n  addUnitAlias('weekYear', 'gg');\n  addUnitAlias('isoWeekYear', 'GG'); // PRIORITY\n\n  addUnitPriority('weekYear', 1);\n  addUnitPriority('isoWeekYear', 1); // PARSING\n\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n  });\n  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n  }); // MOMENTS\n\n  function getSetWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);\n  }\n\n  function getSetISOWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);\n  }\n\n  function getISOWeeksInYear() {\n    return weeksInYear(this.year(), 1, 4);\n  }\n\n  function getWeeksInYear() {\n    var weekInfo = this.localeData()._week;\n\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n  }\n\n  function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n\n    if (input == null) {\n      return weekOfYear(this, dow, doy).year;\n    } else {\n      weeksTarget = weeksInYear(input, dow, doy);\n\n      if (week > weeksTarget) {\n        week = weeksTarget;\n      }\n\n      return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n  }\n\n  function setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n  } // FORMATTING\n\n\n  addFormatToken('Q', 0, 'Qo', 'quarter'); // ALIASES\n\n  addUnitAlias('quarter', 'Q'); // PRIORITY\n\n  addUnitPriority('quarter', 7); // PARSING\n\n  addRegexToken('Q', match1);\n  addParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n  }); // MOMENTS\n\n  function getSetQuarter(input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n  } // FORMATTING\n\n\n  addFormatToken('D', ['DD', 2], 'Do', 'date'); // ALIASES\n\n  addUnitAlias('date', 'D'); // PRIORITY\n\n  addUnitPriority('date', 9); // PARSING\n\n  addRegexToken('D', match1to2);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;\n  });\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n  }); // MOMENTS\n\n  var getSetDayOfMonth = makeGetSet('Date', true); // FORMATTING\n\n  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'); // ALIASES\n\n  addUnitAlias('dayOfYear', 'DDD'); // PRIORITY\n\n  addUnitPriority('dayOfYear', 4); // PARSING\n\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n  }); // HELPERS\n  // MOMENTS\n\n  function getSetDayOfYear(input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('m', ['mm', 2], 0, 'minute'); // ALIASES\n\n  addUnitAlias('minute', 'm'); // PRIORITY\n\n  addUnitPriority('minute', 14); // PARSING\n\n  addRegexToken('m', match1to2);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE); // MOMENTS\n\n  var getSetMinute = makeGetSet('Minutes', false); // FORMATTING\n\n  addFormatToken('s', ['ss', 2], 0, 'second'); // ALIASES\n\n  addUnitAlias('second', 's'); // PRIORITY\n\n  addUnitPriority('second', 15); // PARSING\n\n  addRegexToken('s', match1to2);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND); // MOMENTS\n\n  var getSetSecond = makeGetSet('Seconds', false); // FORMATTING\n\n  addFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n  });\n  addFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n  });\n  addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n  addFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n  });\n  addFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n  });\n  addFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n  });\n  addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n  });\n  addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n  });\n  addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n  }); // ALIASES\n\n  addUnitAlias('millisecond', 'ms'); // PRIORITY\n\n  addUnitPriority('millisecond', 16); // PARSING\n\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n  var token;\n\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n\n  function parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n  }\n\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  } // MOMENTS\n\n\n  var getSetMillisecond = makeGetSet('Milliseconds', false); // FORMATTING\n\n  addFormatToken('z', 0, 0, 'zoneAbbr');\n  addFormatToken('zz', 0, 0, 'zoneName'); // MOMENTS\n\n  function getZoneAbbr() {\n    return this._isUTC ? 'UTC' : '';\n  }\n\n  function getZoneName() {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n  }\n\n  var proto = Moment.prototype;\n  proto.add = add;\n  proto.calendar = calendar$1;\n  proto.clone = clone;\n  proto.diff = diff;\n  proto.endOf = endOf;\n  proto.format = format;\n  proto.from = from;\n  proto.fromNow = fromNow;\n  proto.to = to;\n  proto.toNow = toNow;\n  proto.get = stringGet;\n  proto.invalidAt = invalidAt;\n  proto.isAfter = isAfter;\n  proto.isBefore = isBefore;\n  proto.isBetween = isBetween;\n  proto.isSame = isSame;\n  proto.isSameOrAfter = isSameOrAfter;\n  proto.isSameOrBefore = isSameOrBefore;\n  proto.isValid = isValid$2;\n  proto.lang = lang;\n  proto.locale = locale;\n  proto.localeData = localeData;\n  proto.max = prototypeMax;\n  proto.min = prototypeMin;\n  proto.parsingFlags = parsingFlags;\n  proto.set = stringSet;\n  proto.startOf = startOf;\n  proto.subtract = subtract;\n  proto.toArray = toArray;\n  proto.toObject = toObject;\n  proto.toDate = toDate;\n  proto.toISOString = toISOString;\n  proto.inspect = inspect;\n  proto.toJSON = toJSON;\n  proto.toString = toString;\n  proto.unix = unix;\n  proto.valueOf = valueOf;\n  proto.creationData = creationData;\n  proto.year = getSetYear;\n  proto.isLeapYear = getIsLeapYear;\n  proto.weekYear = getSetWeekYear;\n  proto.isoWeekYear = getSetISOWeekYear;\n  proto.quarter = proto.quarters = getSetQuarter;\n  proto.month = getSetMonth;\n  proto.daysInMonth = getDaysInMonth;\n  proto.week = proto.weeks = getSetWeek;\n  proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n  proto.weeksInYear = getWeeksInYear;\n  proto.isoWeeksInYear = getISOWeeksInYear;\n  proto.date = getSetDayOfMonth;\n  proto.day = proto.days = getSetDayOfWeek;\n  proto.weekday = getSetLocaleDayOfWeek;\n  proto.isoWeekday = getSetISODayOfWeek;\n  proto.dayOfYear = getSetDayOfYear;\n  proto.hour = proto.hours = getSetHour;\n  proto.minute = proto.minutes = getSetMinute;\n  proto.second = proto.seconds = getSetSecond;\n  proto.millisecond = proto.milliseconds = getSetMillisecond;\n  proto.utcOffset = getSetOffset;\n  proto.utc = setOffsetToUTC;\n  proto.local = setOffsetToLocal;\n  proto.parseZone = setOffsetToParsedOffset;\n  proto.hasAlignedHourOffset = hasAlignedHourOffset;\n  proto.isDST = isDaylightSavingTime;\n  proto.isLocal = isLocal;\n  proto.isUtcOffset = isUtcOffset;\n  proto.isUtc = isUtc;\n  proto.isUTC = isUtc;\n  proto.zoneAbbr = getZoneAbbr;\n  proto.zoneName = getZoneName;\n  proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n  proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n  proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n  proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n  proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n  function createUnix(input) {\n    return createLocal(input * 1000);\n  }\n\n  function createInZone() {\n    return createLocal.apply(null, arguments).parseZone();\n  }\n\n  function preParsePostFormat(string) {\n    return string;\n  }\n\n  var proto$1 = Locale.prototype;\n  proto$1.calendar = calendar;\n  proto$1.longDateFormat = longDateFormat;\n  proto$1.invalidDate = invalidDate;\n  proto$1.ordinal = ordinal;\n  proto$1.preparse = preParsePostFormat;\n  proto$1.postformat = preParsePostFormat;\n  proto$1.relativeTime = relativeTime;\n  proto$1.pastFuture = pastFuture;\n  proto$1.set = set;\n  proto$1.months = localeMonths;\n  proto$1.monthsShort = localeMonthsShort;\n  proto$1.monthsParse = localeMonthsParse;\n  proto$1.monthsRegex = monthsRegex;\n  proto$1.monthsShortRegex = monthsShortRegex;\n  proto$1.week = localeWeek;\n  proto$1.firstDayOfYear = localeFirstDayOfYear;\n  proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n  proto$1.weekdays = localeWeekdays;\n  proto$1.weekdaysMin = localeWeekdaysMin;\n  proto$1.weekdaysShort = localeWeekdaysShort;\n  proto$1.weekdaysParse = localeWeekdaysParse;\n  proto$1.weekdaysRegex = weekdaysRegex;\n  proto$1.weekdaysShortRegex = weekdaysShortRegex;\n  proto$1.weekdaysMinRegex = weekdaysMinRegex;\n  proto$1.isPM = localeIsPM;\n  proto$1.meridiem = localeMeridiem;\n\n  function get$1(format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n  }\n\n  function listMonthsImpl(format, index, field) {\n    if (isNumber(format)) {\n      index = format;\n      format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n      return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 12; i++) {\n      out[i] = get$1(format, i, field, 'month');\n    }\n\n    return out;\n  } // ()\n  // (5)\n  // (fmt, 5)\n  // (fmt)\n  // (true)\n  // (true, 5)\n  // (true, fmt, 5)\n  // (true, fmt)\n\n\n  function listWeekdaysImpl(localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    } else {\n      format = localeSorted;\n      index = format;\n      localeSorted = false;\n\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n      return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 7; i++) {\n      out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n\n    return out;\n  }\n\n  function listMonths(format, index) {\n    return listMonthsImpl(format, index, 'months');\n  }\n\n  function listMonthsShort(format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n  }\n\n  function listWeekdays(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n  }\n\n  function listWeekdaysShort(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n  }\n\n  function listWeekdaysMin(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n  }\n\n  getSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal: function ordinal(number) {\n      var b = number % 10,\n          output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    }\n  }); // Side effect imports\n\n  hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n  hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n  var mathAbs = Math.abs;\n\n  function abs() {\n    var data = this._data;\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.months = mathAbs(data.months);\n    data.years = mathAbs(data.years);\n    return this;\n  }\n\n  function addSubtract$1(duration, input, value, direction) {\n    var other = createDuration(input, value);\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days += direction * other._days;\n    duration._months += direction * other._months;\n    return duration._bubble();\n  } // supports only 2.0-style add(1, 's') or add(duration)\n\n\n  function add$1(input, value) {\n    return addSubtract$1(this, input, value, 1);\n  } // supports only 2.0-style subtract(1, 's') or subtract(duration)\n\n\n  function subtract$1(input, value) {\n    return addSubtract$1(this, input, value, -1);\n  }\n\n  function absCeil(number) {\n    if (number < 0) {\n      return Math.floor(number);\n    } else {\n      return Math.ceil(number);\n    }\n  }\n\n  function bubble() {\n    var milliseconds = this._milliseconds;\n    var days = this._days;\n    var months = this._months;\n    var data = this._data;\n    var seconds, minutes, hours, years, monthsFromDays; // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n\n    if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n      days = 0;\n      months = 0;\n    } // The following code bubbles up values, see the tests for\n    // examples of what that means.\n\n\n    data.milliseconds = milliseconds % 1000;\n    seconds = absFloor(milliseconds / 1000);\n    data.seconds = seconds % 60;\n    minutes = absFloor(seconds / 60);\n    data.minutes = minutes % 60;\n    hours = absFloor(minutes / 60);\n    data.hours = hours % 24;\n    days += absFloor(hours / 24); // convert days to months\n\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays)); // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12;\n    data.days = days;\n    data.months = months;\n    data.years = years;\n    return this;\n  }\n\n  function daysToMonths(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n  }\n\n  function monthsToDays(months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n  }\n\n  function as(units) {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'quarter' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n\n      switch (units) {\n        case 'month':\n          return months;\n\n        case 'quarter':\n          return months / 3;\n\n        case 'year':\n          return months / 12;\n      }\n    } else {\n      // handle milliseconds separately because of floating point math errors (issue #1867)\n      days = this._days + Math.round(monthsToDays(this._months));\n\n      switch (units) {\n        case 'week':\n          return days / 7 + milliseconds / 6048e5;\n\n        case 'day':\n          return days + milliseconds / 864e5;\n\n        case 'hour':\n          return days * 24 + milliseconds / 36e5;\n\n        case 'minute':\n          return days * 1440 + milliseconds / 6e4;\n\n        case 'second':\n          return days * 86400 + milliseconds / 1000;\n        // Math.floor prevents floating point math errors here\n\n        case 'millisecond':\n          return Math.floor(days * 864e5) + milliseconds;\n\n        default:\n          throw new Error('Unknown unit ' + units);\n      }\n    }\n  } // TODO: Use this.as('ms')?\n\n\n  function valueOf$1() {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n  }\n\n  function makeAs(alias) {\n    return function () {\n      return this.as(alias);\n    };\n  }\n\n  var asMilliseconds = makeAs('ms');\n  var asSeconds = makeAs('s');\n  var asMinutes = makeAs('m');\n  var asHours = makeAs('h');\n  var asDays = makeAs('d');\n  var asWeeks = makeAs('w');\n  var asMonths = makeAs('M');\n  var asQuarters = makeAs('Q');\n  var asYears = makeAs('y');\n\n  function clone$1() {\n    return createDuration(this);\n  }\n\n  function get$2(units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n  }\n\n  function makeGetter(name) {\n    return function () {\n      return this.isValid() ? this._data[name] : NaN;\n    };\n  }\n\n  var milliseconds = makeGetter('milliseconds');\n  var seconds = makeGetter('seconds');\n  var minutes = makeGetter('minutes');\n  var hours = makeGetter('hours');\n  var days = makeGetter('days');\n  var months = makeGetter('months');\n  var years = makeGetter('years');\n\n  function weeks() {\n    return absFloor(this.days() / 7);\n  }\n\n  var round = Math.round;\n  var thresholds = {\n    ss: 44,\n    // a few seconds to seconds\n    s: 45,\n    // seconds to minute\n    m: 45,\n    // minutes to hour\n    h: 22,\n    // hours to day\n    d: 26,\n    // days to month\n    M: 11 // months to year\n\n  }; // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\n  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n  }\n\n  function relativeTime$1(posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds = round(duration.as('s'));\n    var minutes = round(duration.as('m'));\n    var hours = round(duration.as('h'));\n    var days = round(duration.as('d'));\n    var months = round(duration.as('M'));\n    var years = round(duration.as('y'));\n    var a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days] || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n  } // This function allows you to set the rounding function for relative time strings\n\n\n  function getSetRelativeTimeRounding(roundingFunction) {\n    if (roundingFunction === undefined) {\n      return round;\n    }\n\n    if (typeof roundingFunction === 'function') {\n      round = roundingFunction;\n      return true;\n    }\n\n    return false;\n  } // This function allows you to set a threshold for relative time strings\n\n\n  function getSetRelativeTimeThreshold(threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n      return false;\n    }\n\n    if (limit === undefined) {\n      return thresholds[threshold];\n    }\n\n    thresholds[threshold] = limit;\n\n    if (threshold === 's') {\n      thresholds.ss = limit - 1;\n    }\n\n    return true;\n  }\n\n  function humanize(withSuffix) {\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n  }\n\n  var abs$1 = Math.abs;\n\n  function sign(x) {\n    return (x > 0) - (x < 0) || +x;\n  }\n\n  function toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days = abs$1(this._days);\n    var months = abs$1(this._months);\n    var minutes, hours, years; // 3600 seconds -> 60 minutes -> 1 hour\n\n    minutes = absFloor(seconds / 60);\n    hours = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60; // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12; // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    var total = this.asSeconds();\n\n    if (!total) {\n      // this is the same as C#'s (Noda) and python (isodate)...\n      // but not other JS (goog.date)\n      return 'P0D';\n    }\n\n    var totalSign = total < 0 ? '-' : '';\n    var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n    return totalSign + 'P' + (Y ? ymSign + Y + 'Y' : '') + (M ? ymSign + M + 'M' : '') + (D ? daysSign + D + 'D' : '') + (h || m || s ? 'T' : '') + (h ? hmsSign + h + 'H' : '') + (m ? hmsSign + m + 'M' : '') + (s ? hmsSign + s + 'S' : '');\n  }\n\n  var proto$2 = Duration.prototype;\n  proto$2.isValid = isValid$1;\n  proto$2.abs = abs;\n  proto$2.add = add$1;\n  proto$2.subtract = subtract$1;\n  proto$2.as = as;\n  proto$2.asMilliseconds = asMilliseconds;\n  proto$2.asSeconds = asSeconds;\n  proto$2.asMinutes = asMinutes;\n  proto$2.asHours = asHours;\n  proto$2.asDays = asDays;\n  proto$2.asWeeks = asWeeks;\n  proto$2.asMonths = asMonths;\n  proto$2.asQuarters = asQuarters;\n  proto$2.asYears = asYears;\n  proto$2.valueOf = valueOf$1;\n  proto$2._bubble = bubble;\n  proto$2.clone = clone$1;\n  proto$2.get = get$2;\n  proto$2.milliseconds = milliseconds;\n  proto$2.seconds = seconds;\n  proto$2.minutes = minutes;\n  proto$2.hours = hours;\n  proto$2.days = days;\n  proto$2.weeks = weeks;\n  proto$2.months = months;\n  proto$2.years = years;\n  proto$2.humanize = humanize;\n  proto$2.toISOString = toISOString$1;\n  proto$2.toString = toISOString$1;\n  proto$2.toJSON = toISOString$1;\n  proto$2.locale = locale;\n  proto$2.localeData = localeData;\n  proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n  proto$2.lang = lang; // Side effect imports\n  // FORMATTING\n\n  addFormatToken('X', 0, 0, 'unix');\n  addFormatToken('x', 0, 0, 'valueOf'); // PARSING\n\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n  addParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n  });\n  addParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n  }); // Side effect imports\n\n  hooks.version = '2.24.0';\n  setHookCallback(createLocal);\n  hooks.fn = proto;\n  hooks.min = min;\n  hooks.max = max;\n  hooks.now = now;\n  hooks.utc = createUTC;\n  hooks.unix = createUnix;\n  hooks.months = listMonths;\n  hooks.isDate = isDate;\n  hooks.locale = getSetGlobalLocale;\n  hooks.invalid = createInvalid;\n  hooks.duration = createDuration;\n  hooks.isMoment = isMoment;\n  hooks.weekdays = listWeekdays;\n  hooks.parseZone = createInZone;\n  hooks.localeData = getLocale;\n  hooks.isDuration = isDuration;\n  hooks.monthsShort = listMonthsShort;\n  hooks.weekdaysMin = listWeekdaysMin;\n  hooks.defineLocale = defineLocale;\n  hooks.updateLocale = updateLocale;\n  hooks.locales = listLocales;\n  hooks.weekdaysShort = listWeekdaysShort;\n  hooks.normalizeUnits = normalizeUnits;\n  hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n  hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n  hooks.calendarFormat = getCalendarFormat;\n  hooks.prototype = proto; // currently HTML5 input type only supports 24-hour formats\n\n  hooks.HTML5_FMT = {\n    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',\n    // <input type=\"datetime-local\" />\n    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',\n    // <input type=\"datetime-local\" step=\"1\" />\n    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',\n    // <input type=\"datetime-local\" step=\"0.001\" />\n    DATE: 'YYYY-MM-DD',\n    // <input type=\"date\" />\n    TIME: 'HH:mm',\n    // <input type=\"time\" />\n    TIME_SECONDS: 'HH:mm:ss',\n    // <input type=\"time\" step=\"1\" />\n    TIME_MS: 'HH:mm:ss.SSS',\n    // <input type=\"time\" step=\"0.001\" />\n    WEEK: 'GGGG-[W]WW',\n    // <input type=\"week\" />\n    MONTH: 'YYYY-MM' // <input type=\"month\" />\n\n  };\n  return hooks;\n});","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n\n    objIsArr = true;\n    objIsObj = false;\n  }\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack());\n    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n      stack || (stack = new Stack());\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n\n  if (!isSameTag) {\n    return false;\n  }\n\n  stack || (stack = new Stack());\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;","var assocIndexOf = require('./_assocIndexOf');\n/** Used for built-in method references. */\n\n\nvar arrayProto = Array.prototype;\n/** Built-in value references. */\n\nvar splice = arrayProto.splice;\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n\n  var lastIndex = data.length - 1;\n\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\n\n\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n\n  return this;\n}\n\nmodule.exports = listCacheSet;","var ListCache = require('./_ListCache');\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\n\n\nfunction stackClear() {\n  this.__data__ = new ListCache();\n  this.size = 0;\n}\n\nmodule.exports = stackClear;","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n/** Used as the size to enable large array optimizations. */\n\n\nvar LARGE_ARRAY_SIZE = 200;\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\n\nfunction stackSet(key, value) {\n  var data = this.__data__;\n\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n\n    if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n\n    data = this.__data__ = new MapCache(pairs);\n  }\n\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\n\n\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n/** Used to detect host constructors (Safari). */\n\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n/** Used for built-in method references. */\n\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Used to detect if a method is native. */\n\nvar reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\n\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;","var Symbol = require('./_Symbol');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\n\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = getRawTag;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\n\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;","var coreJsData = require('./_coreJsData');\n/** Used to detect methods masquerading as native. */\n\n\nvar maskSrcKey = function () {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? 'Symbol(src)_1.' + uid : '';\n}();\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\n\n\nfunction isMasked(func) {\n  return !!maskSrcKey && maskSrcKey in func;\n}\n\nmodule.exports = isMasked;","var root = require('./_root');\n/** Used to detect overreaching core-js shims. */\n\n\nvar coreJsData = root['__core-js_shared__'];\nmodule.exports = coreJsData;","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\n\n\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash(),\n    'map': new (Map || ListCache)(),\n    'string': new Hash()\n  };\n}\n\nmodule.exports = mapCacheClear;","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `Hash`.\n\n\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\nmodule.exports = Hash;","var nativeCreate = require('./_nativeCreate');\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\n\n\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\nfunction hashGet(key) {\n  var data = this.__data__;\n\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;","var nativeCreate = require('./_nativeCreate');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\n\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;","var getMapData = require('./_getMapData');\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\n\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;\n}\n\nmodule.exports = isKeyable;","var getMapData = require('./_getMapData');\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;","var getMapData = require('./_getMapData');\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;","var getMapData = require('./_getMapData');\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\n\n\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\n\n\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n  this.__data__ = new MapCache();\n\n  while (++index < length) {\n    this.add(values[index]);\n  }\n} // Add methods to `SetCache`.\n\n\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\nmodule.exports = SetCache;","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\n\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n\n  return this;\n}\n\nmodule.exports = setCacheAdd;","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = arraySome;","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/** `Object#toString` result references. */\n\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {\n        return false;\n      }\n\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == other + '';\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      } // Assume cyclic values are equal.\n\n\n      var stacked = stack.get(object);\n\n      if (stacked) {\n        return stacked == other;\n      }\n\n      bitmask |= COMPARE_UNORDERED_FLAG; // Recursively compare objects (susceptible to call stack limits).\n\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n\n  }\n\n  return false;\n}\n\nmodule.exports = equalByTag;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Uint8Array = root.Uint8Array;\nmodule.exports = Uint8Array;","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n  map.forEach(function (value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n  set.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;","var getAllKeys = require('./_getAllKeys');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n\n  var index = objLength;\n\n  while (index--) {\n    var key = objProps[index];\n\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(object);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n  var skipCtor = isPartial;\n\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);\n    } // Recursively compare objects (susceptible to call stack limits).\n\n\n    if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {\n      result = false;\n      break;\n    }\n\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.\n\n    if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n\n  return array;\n}\n\nmodule.exports = arrayPush;","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\n\nvar getSymbols = !nativeGetSymbols ? stubArray : function (object) {\n  if (object == null) {\n    return [];\n  }\n\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function (symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\nmodule.exports = getSymbols;","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayFilter;","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && ( // Safari 9 has enumerable `arguments.length` in strict mode.\n    key == 'length' || // Node.js 0.10 has enumerable non-index properties on buffers.\n    isBuff && (key == 'offset' || key == 'parent') || // PhantomJS 2 has enumerable non-index properties on typed arrays.\n    isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || // Skip index properties.\n    isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n\n  return result;\n}\n\nmodule.exports = baseTimes;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]';\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\n\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n/** Used to identify `toStringTag` values of typed arrays. */\n\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\n\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function (value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Detect free variable `process` from Node.js. */\n\nvar freeProcess = moduleExports && freeGlobal.process;\n/** Used to access faster Node.js helpers. */\n\nvar nodeUtil = function () {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    } // Legacy `process.binding('util')` for Node.js < 10.\n\n\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}();\n\nmodule.exports = nodeUtil;","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n\n  var result = [];\n\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = baseKeys;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\n\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;\n  return value === proto;\n}\n\nmodule.exports = isPrototype;","var overArg = require('./_overArg');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeKeys = overArg(Object.keys, Object);\nmodule.exports = nativeKeys;","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function (arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n/** `Object#toString` result references. */\n\n\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\nvar dataViewTag = '[object DataView]';\n/** Used to detect maps, sets, and weakmaps. */\n\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nvar getTag = baseGetTag; // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n\nif (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {\n  getTag = function getTag(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString:\n          return dataViewTag;\n\n        case mapCtorString:\n          return mapTag;\n\n        case promiseCtorString:\n          return promiseTag;\n\n        case setCtorString:\n          return setTag;\n\n        case weakMapCtorString:\n          return weakMapTag;\n      }\n    }\n\n    return result;\n  };\n}\n\nmodule.exports = getTag;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar DataView = getNative(root, 'DataView');\nmodule.exports = DataView;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Promise = getNative(root, 'Promise');\nmodule.exports = Promise;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Set = getNative(root, 'Set');\nmodule.exports = Set;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar WeakMap = getNative(root, 'WeakMap');\nmodule.exports = WeakMap;","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var defineProperty = require('./_defineProperty');\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\n\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;","var getNative = require('./_getNative');\n\nvar defineProperty = function () {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}();\n\nmodule.exports = defineProperty;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\n\n\nvar baseEach = createBaseEach(baseForOwn);\nmodule.exports = baseEach;","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;","var createBaseFor = require('./_createBaseFor');\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\n\n\nvar baseFor = createBaseFor();\nmodule.exports = baseFor;","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function (object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;","var isArrayLike = require('./isArrayLike');\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\n\n\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n\n  if (value == null) {\n    return identity;\n  }\n\n  if (typeof value == 'object') {\n    return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);\n  }\n\n  return property(value);\n}\n\nmodule.exports = baseIteratee;","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\n\n\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n\n  return function (object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\n\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n\n  object = Object(object);\n\n  while (index--) {\n    var data = matchData[index];\n\n    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {\n      return false;\n    }\n  }\n\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack();\n\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n\n      if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = baseIsMatch;","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\n\n\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n\n  return result;\n}\n\nmodule.exports = getMatchData;","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\n\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n\n  return function (object) {\n    var objValue = get(object, path);\n    return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;","var baseGet = require('./_baseGet');\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\n\n\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;","var memoizeCapped = require('./_memoizeCapped');\n/** Used to match property names within property paths. */\n\n\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n/** Used to match backslashes in property paths. */\n\nvar reEscapeChar = /\\\\(\\\\)?/g;\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\n\nvar stringToPath = memoizeCapped(function (string) {\n  var result = [];\n\n  if (string.charCodeAt(0) === 46\n  /* . */\n  ) {\n      result.push('');\n    }\n\n  string.replace(rePropName, function (match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);\n  });\n  return result;\n});\nmodule.exports = stringToPath;","var memoize = require('./memoize');\n/** Used as the maximum memoize cache size. */\n\n\nvar MAX_MEMOIZE_SIZE = 500;\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\n\nfunction memoizeCapped(func) {\n  var result = memoize(func, function (key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n\n    return key;\n  });\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;","var MapCache = require('./_MapCache');\n/** Error message constants. */\n\n\nvar FUNC_ERROR_TEXT = 'Expected a function';\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\n\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n\n  var memoized = function memoized() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n\n  memoized.cache = new (memoize.Cache || MapCache)();\n  return memoized;\n} // Expose `MapCache`.\n\n\nmemoize.Cache = MapCache;\nmodule.exports = memoize;","var baseToString = require('./_baseToString');\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\n\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\n\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = baseToString;","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n\n  return result;\n}\n\nmodule.exports = arrayMap;","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\n\n\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\n\n\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n\n    object = object[key];\n  }\n\n  if (result || ++index != length) {\n    return result;\n  }\n\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\n\n\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function (object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;","var baseGet = require('./_baseGet');\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\n\n\nfunction basePropertyDeep(path) {\n  return function (object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `self`. */\n\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\nmodule.exports = root;","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\nmodule.exports = isArray;","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\n\n\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n/** `Object#toString` result references. */\n\n\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n\n  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n}\n\nmodule.exports = baseGetTag;","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `ListCache`.\n\n\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\nmodule.exports = ListCache;","var eq = require('./eq');\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\n\n\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = assocIndexOf;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Symbol = root.Symbol;\nmodule.exports = Symbol;"],"sourceRoot":""}