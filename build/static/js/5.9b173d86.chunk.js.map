{"version":3,"sources":["../node_modules/lodash/_Stack.js","../node_modules/lodash/eq.js","../node_modules/lodash/isTypedArray.js","../node_modules/lodash/_baseIsEqual.js","../node_modules/lodash/_arrayPush.js","../node_modules/lodash/_getSymbols.js","../node_modules/lodash/_nodeUtil.js","../node_modules/lodash/isFunction.js","../node_modules/lodash/_freeGlobal.js","../node_modules/lodash/_toSource.js","../node_modules/lodash/_equalArrays.js","../node_modules/lodash/_isStrictComparable.js","../node_modules/lodash/_matchesStrictComparable.js","../node_modules/lodash/_SetCache.js","../node_modules/lodash/_cacheHas.js","../node_modules/lodash/_Uint8Array.js","../node_modules/lodash/_getAllKeys.js","../node_modules/lodash/_baseGetAllKeys.js","../node_modules/lodash/stubArray.js","../node_modules/lodash/_arrayLikeKeys.js","../node_modules/lodash/_baseKeys.js","../node_modules/lodash/_overArg.js","../node_modules/lodash/_WeakMap.js","../node_modules/lodash/_baseAssignValue.js","../node_modules/lodash/_defineProperty.js","../node_modules/lodash/_baseIteratee.js","../node_modules/lodash/_baseToString.js","../node_modules/lodash/hasIn.js","../node_modules/lodash/_baseIsEqualDeep.js","../node_modules/lodash/_listCacheClear.js","../node_modules/lodash/_listCacheDelete.js","../node_modules/lodash/_listCacheGet.js","../node_modules/lodash/_listCacheHas.js","../node_modules/lodash/_listCacheSet.js","../node_modules/lodash/_stackClear.js","../node_modules/lodash/_stackDelete.js","../node_modules/lodash/_stackGet.js","../node_modules/lodash/_stackHas.js","../node_modules/lodash/_stackSet.js","../node_modules/lodash/_baseIsNative.js","../node_modules/lodash/_getRawTag.js","../node_modules/lodash/_objectToString.js","../node_modules/lodash/_isMasked.js","../node_modules/lodash/_coreJsData.js","../node_modules/lodash/_getValue.js","../node_modules/lodash/_mapCacheClear.js","../node_modules/lodash/_Hash.js","../node_modules/lodash/_hashClear.js","../node_modules/lodash/_hashDelete.js","../node_modules/lodash/_hashGet.js","../node_modules/lodash/_hashHas.js","../node_modules/lodash/_hashSet.js","../node_modules/lodash/_mapCacheDelete.js","../node_modules/lodash/_isKeyable.js","../node_modules/lodash/_mapCacheGet.js","../node_modules/lodash/_mapCacheHas.js","../node_modules/lodash/_mapCacheSet.js","../node_modules/lodash/_setCacheAdd.js","../node_modules/lodash/_setCacheHas.js","../node_modules/lodash/_arraySome.js","../node_modules/lodash/_equalByTag.js","../node_modules/lodash/_mapToArray.js","../node_modules/lodash/_setToArray.js","../node_modules/lodash/_equalObjects.js","../node_modules/lodash/_arrayFilter.js","../node_modules/lodash/_baseTimes.js","../node_modules/lodash/_baseIsArguments.js","../node_modules/lodash/stubFalse.js","../node_modules/lodash/_baseIsTypedArray.js","../node_modules/lodash/_nativeKeys.js","../node_modules/lodash/_DataView.js","../node_modules/lodash/_Promise.js","../node_modules/lodash/_Set.js","../node_modules/lodash/_baseMatches.js","../node_modules/lodash/_baseIsMatch.js","../node_modules/lodash/_getMatchData.js","../node_modules/lodash/_baseMatchesProperty.js","../node_modules/lodash/_stringToPath.js","../node_modules/lodash/_memoizeCapped.js","../node_modules/lodash/memoize.js","../node_modules/lodash/_baseHasIn.js","../node_modules/lodash/_hasPath.js","../node_modules/lodash/property.js","../node_modules/lodash/_baseProperty.js","../node_modules/lodash/_basePropertyDeep.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/chart.js/dist/Chart.js","../node_modules/moment/moment.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js","../node_modules/lodash/_baseEach.js","../node_modules/lodash/_baseForOwn.js","../node_modules/lodash/_baseFor.js","../node_modules/lodash/_createBaseFor.js","../node_modules/lodash/_createBaseEach.js","../node_modules/lodash/_root.js","../node_modules/lodash/isArray.js","../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/lodash/isObjectLike.js","../node_modules/lodash/_getNative.js","../node_modules/lodash/isObject.js","../node_modules/lodash/_baseGetTag.js","../node_modules/lodash/_Symbol.js","../node_modules/lodash/_toKey.js","../node_modules/lodash/_castPath.js","../node_modules/lodash/isSymbol.js","../node_modules/lodash/toString.js","../node_modules/lodash/_ListCache.js","../node_modules/lodash/_assocIndexOf.js","../node_modules/lodash/_nativeCreate.js","../node_modules/lodash/_getMapData.js","../node_modules/lodash/keys.js","../node_modules/lodash/_getTag.js","../node_modules/lodash/isArguments.js","../node_modules/lodash/isBuffer.js","../node_modules/lodash/_isIndex.js","../node_modules/lodash/isArrayLike.js","../node_modules/lodash/_baseGet.js","../node_modules/webpack/buildin/module.js","../node_modules/lodash/_Map.js","../node_modules/lodash/_MapCache.js","../node_modules/lodash/isLength.js","../node_modules/lodash/_baseUnary.js","../node_modules/lodash/_isPrototype.js","../node_modules/lodash/get.js","../node_modules/lodash/_isKey.js","../node_modules/lodash/_arrayMap.js","../node_modules/lodash/identity.js"],"names":["ListCache","__webpack_require__","stackClear","stackDelete","stackGet","stackHas","stackSet","Stack","entries","data","this","__data__","size","prototype","clear","get","has","set","module","exports","value","other","baseIsTypedArray","baseUnary","nodeUtil","nodeIsTypedArray","isTypedArray","baseIsEqualDeep","isObjectLike","baseIsEqual","bitmask","customizer","stack","array","values","index","length","offset","arrayFilter","stubArray","propertyIsEnumerable","Object","nativeGetSymbols","getOwnPropertySymbols","getSymbols","object","symbol","call","freeGlobal","freeExports","nodeType","freeModule","freeProcess","process","types","require","binding","e","baseGetTag","isObject","asyncTag","funcTag","genTag","proxyTag","tag","global","funcToString","Function","toString","func","SetCache","arraySome","cacheHas","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","equalFunc","isPartial","arrLength","othLength","stacked","result","seen","undefined","arrValue","othValue","compared","othIndex","push","key","srcValue","MapCache","setCacheAdd","setCacheHas","add","cache","Uint8Array","baseGetAllKeys","keys","arrayPush","isArray","keysFunc","symbolsFunc","baseTimes","isArguments","isBuffer","isIndex","hasOwnProperty","inherited","isArr","isArg","isBuff","isType","skipIndexes","String","isPrototype","nativeKeys","transform","arg","WeakMap","getNative","defineProperty","configurable","enumerable","writable","baseMatches","baseMatchesProperty","identity","property","Symbol","arrayMap","isSymbol","INFINITY","symbolProto","symbolToString","baseToString","baseHasIn","hasPath","path","equalArrays","equalByTag","equalObjects","getTag","argsTag","arrayTag","objectTag","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","assocIndexOf","splice","Array","pop","Map","LARGE_ARRAY_SIZE","pairs","isFunction","isMasked","toSource","reIsHostCtor","funcProto","objectProto","reIsNative","RegExp","replace","test","nativeObjectToString","symToStringTag","toStringTag","isOwn","unmasked","coreJsData","maskSrcKey","uid","exec","IE_PROTO","Hash","hash","map","string","hashClear","hashDelete","hashGet","hashHas","hashSet","entry","nativeCreate","HASH_UNDEFINED","getMapData","type","predicate","eq","mapToArray","setToArray","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","symbolTag","arrayBufferTag","dataViewTag","symbolValueOf","valueOf","byteLength","byteOffset","buffer","name","message","convert","forEach","getAllKeys","objProps","objLength","skipCtor","objValue","objCtor","constructor","othCtor","resIndex","n","iteratee","isLength","typedArrayTags","overArg","DataView","Promise","Set","baseIsMatch","getMatchData","matchesStrictComparable","source","matchData","noCustomizer","isStrictComparable","hasIn","isKey","toKey","memoizeCapped","rePropName","reEscapeChar","stringToPath","charCodeAt","match","number","quote","subString","memoize","MAX_MEMOIZE_SIZE","FUNC_ERROR_TEXT","resolver","TypeError","memoized","args","arguments","apply","Cache","castPath","hasFunc","baseProperty","basePropertyDeep","baseGet","d","__webpack_exports__","Doughnut","Pie","Line","Bar","Radar","Polar","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4___default","_extends","assign","target","i","_objectWithoutProperties","obj","indexOf","_classCallCheck","instance","Constructor","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","ChartComponent","_React$Component","_temp","_this","_len","_key","concat","handleOnClick","event","chartInstance","_this$props","props","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","onElementsClick","ref","element","componentWillMount","componentDidMount","renderChart","componentDidUpdate","redraw","destroyChart","updateChart","shouldComponentUpdate","nextProps","_props","options","plugins","legend","height","width","nextData","transformDataProp","shadowDataProp","componentWillUnmount","memoizeDataProps","datasets","saveCurrentDatasets","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","dataset","label","console","error","getCurrentDatasets","config","_this2","_this3","a","helpers","configMerge","currentDatasets","nextDatasets","currentDatasetsIndexed","next","current","point","pid","otherProps","rest","update","_props2","node","defaultProps","destroy","render","_props3","id","createElement","onClick","Component","propTypes","oneOfType","isRequired","arrayOf","bool","propName","componentName","controllers","Error","display","position","_React$Component2","_this5","_ref","_React$Component3","_this7","_ref2","_React$Component4","_this9","_ref3","_React$Component5","_this11","_ref4","_React$Component6","HorizontalBar","_this13","_ref5","_React$Component7","_this15","_ref6","_React$Component8","_this17","_ref7","_React$Component9","Bubble","_this19","_ref8","_React$Component10","Scatter","_this21","_ref9","defaults","moment","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","lab2lch","hsl2rgb","hsl2hsv","hsl","h","s","l","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","r","g","b","min","Math","max","delta","w","k","reverseKeywords","JSON","stringify","pow","x","y","z","xyz","t1","t2","t3","val","hi","floor","f","p","q","t","hwb","wh","bl","ratio","cmyk","c","m","lab","y2","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","Converter","slice","pair","from","to","round","convs","routeSpace","space","getValues","setValues","vals","fspace","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","hexAlpha","parseInt","parseFloat","scale","isNaN","num","str","toUpperCase","Color","valid","lightness","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","clone","prop","spaces","maxes","charAt","capped","chans","sname","svalues","window","chartjsColor","noop","isNullOrUndef","substr","isFinite","_isFinite","_x","Number","valueOrDefault","defaultValue","valueAtIndexOrDefault","callback","fn","thisArg","each","loopable","reverse","len","arrayEquals","a0","a1","ilen","v0","v1","klen","_merger","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","inherits","extensions","me","ChartElement","Surrogate","__super__","helpers_core","callCallback","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","chart","ctx","clearRect","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","matches","toPadding","_parseFont","globalDefaults","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","resolve","inputs","context","helpers$1","easing","canvas","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","ease","model","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","isNumber","core_element","exports$2","currentStep","numSteps","onAnimationProgress","onAnimationComplete","core_animation","animation","duration","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","Date","now","animating","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","_data","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","updateElement","buildOrUpdateElements","isExtensible","method","base","res","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","onDataShift","shift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","abs","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderWidth","maxW","maxH","edge","borderSkipped","horizontal","parseBorderSkipped","_inRange","skipX","skipY","bounds","rectangle","element_rectangle","rects","border","outer","inner","boundingRects","fillRect","Arc","Point","Rectangle","resolve$1","hover","mode","categoryPercentage","barPercentage","gridLines","offsetGridLines","controller_bar","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","labels","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","tooltips","callbacks","title","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","join","generateLabels","ds","arcOpts","bw","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","j","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","sort","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","stylesheet","freeze","default","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","getStyle","eventListenerOptions","supports","addEventListener","passive","addListener","removeListener","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","document","className","addResizeListener","expando","resizer","expand","shrink","appendChild","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","container","maintainAspectRatio","parentNode","clientWidth","proxy","renderProxy","animationName","reflow","offsetParent","classList","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","acquireContext","getElementById","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","pos","fromNativeEvent","addEvent","removeEvent","implementation","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","split","createTooltipItem","indexScale","valueScale","getLabelForIndex","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","active","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","body","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","paddingAndSize","radiusAndPadding","getBackgroundPoint","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","resetElements","newOptions","updateConfig","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementsAtXAxis","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","_abstract","DateAdapter","Controller","scaleMerge","formats","parse","format","diff","startOf","endOf","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","color","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingRight","paddingBottom","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","sign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","ceil","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","unit","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","generateTicks","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","generateTicks$1","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","out","interpolate$1","table","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","input","adapter","_adapter","time","parser","determineMajorUnit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","milliseconds","determineStepSize","scale_time","adapters","date","warn","displayFormats","timestamp","timestamps","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","displayFormat","category","radialLinear","FORMATS","_id","_format","amount","as","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","p1","d0","d1","doFill","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","log","LOG10E","powerOf10","isPowerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","core_helpers","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","toLowerCase","factory","hookCallback","some","hooks","isUndefined","isDate","arr","hasOwnProp","createUTC","locale","strict","createLocalOrUTC","utc","getParsingFlags","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","_isValid","flags","parsedParts","isNowValid","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","fun","momentProperties","copyConfig","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","updateInProgress","Moment","updateOffset","isMoment","absFloor","toInt","argumentForCoercion","coercedNumber","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","msg","suppressDeprecationWarnings","deprecate","firstTime","deprecationHandler","deprecations","deprecateSimple","mergeConfigs","parentConfig","childConfig","Locale","aliases","addUnitAlias","shorthand","lowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","zeroFill","targetLength","forceSign","absNumber","zerosToFill","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","localeData","formatMoment","expandFormat","mom","output","makeFormatFunction","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","regexEscape","matched","p2","p3","p4","tokens","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","daysInYear","isLeapYear","parseTwoDigitYear","getSetYear","makeGetSet","keepTime","set$1","daysInMonth","modMonth","o","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","MONTHS_IN_FORMAT","defaultLocaleMonths","defaultLocaleMonthsShort","setMonth","dayOfMonth","getSetMonth","defaultMonthsShortRegex","defaultMonthsRegex","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","shiftWeekdays","ws","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minp","shortp","longp","minPieces","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","hh","dd","M","MM","yy","meridiemParse","locales","localeFamilies","normalizeLocale","loadLocale","oldLocale","_abbr","code","getSetGlobalLocale","getLocale","defineLocale","abbr","_config","parentLocale","names","chooseLocale","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","_useUTC","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","currentDateArray","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","_week","curWeek","gg","_dayOfYear","dayOfYearFromWeekInfo","_nextDay","ms","setFullYear","getDay","setUTCMinutes","getUTCMinutes","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","configFromStringAndFormat","untruncateYear","yearStr","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromRFC2822","parsedArray","monthStr","dayStr","hourStr","minuteStr","secondStr","extractFromRFC2822Strings","weekdayStr","parsedInput","weekdayProvided","weekdayActual","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","isPm","meridiemHour","meridiemFixWrap","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromStringAndArray","createFromInputFallback","configFromString","configFromObject","configFromInput","isUTC","getOwnPropertyNames","isObjectEmpty","createFromConfig","prototypeMin","prototypeMax","pickBy","moments","ordering","Duration","years","quarters","weeks","isoWeek","days","unitHasDecimal","isDurationValid","_milliseconds","_days","_months","_bubble","isDuration","absRound","separator","utcOffset","offsetFromString","chunkOffset","matcher","parts","cloneWithOffset","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","ret","diffRes","parseIso","isBefore","positiveMomentsDifference","momentsDifference","inp","isAfter","createAdder","direction","period","addSubtract","isAdding","invalid","subtract","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","addWeekYearFormatToken","getter","getSetWeekYearHelper","weeksTarget","dayOfYearData","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetSecond","parseMs","getSetMillisecond","proto","preParsePostFormat","sod","calendarFormat","asFloat","that","zoneDelta","startOfDate","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","u","getPrioritizedUnits","toArray","toObject","toDate","toISOString","keepOffset","inspect","zone","isLocal","prefix","suffix","unix","creationData","isoWeeks","weekInfo","isoWeeksInYear","parseWeekday","parseIsoWeekday","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","proto$1","get$1","field","setter","listMonthsImpl","listWeekdaysImpl","localeSorted","_calendar","_longDateFormat","formatUpper","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","isFormat","_monthsShort","monthName","_monthsParseExact","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","weekdayName","_weekdaysParseExact","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","makeGetter","thresholds","abs$1","toISOString$1","Y","D","totalSign","ymSign","daysSign","hmsSign","proto$2","monthsFromDays","withSuffix","posNegDuration","relativeTime$1","toIsoString","version","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","limit","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","baseAssignValue","keyBy","createAggregator","arrayAggregator","baseAggregator","baseIteratee","initializer","accumulator","baseEach","baseForOwn","createBaseEach","baseFor","createBaseFor","fromRight","iterable","isArrayLike","eachFunc","freeSelf","root","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","inverse","outline","cssModule","innerRef","Card","Tag","attributes","classes","CardBody","baseIsNative","getValue","getRawTag","objectToString","nullTag","undefinedTag","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","isKeyable","arrayLikeKeys","baseKeys","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","ArrayBuffer","Ctor","ctorString","baseIsArguments","stubFalse","Buffer","reIsUint","webpackPolyfill","paths","children","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","reIsDeepProp","reIsPlainProp"],"mappings":"8EAAA,IAAAA,EAAgBC,EAAQ,KACxBC,EAAiBD,EAAQ,MACzBE,EAAkBF,EAAQ,MAC1BG,EAAeH,EAAQ,MACvBI,EAAeJ,EAAQ,MACvBK,EAAeL,EAAQ,MAUvB,SAAAM,EAAAC,GACA,IAAAC,EAAAC,KAAAC,SAAA,IAAAX,EAAAQ,GACAE,KAAAE,KAAAH,EAAAG,KAIAL,EAAAM,UAAAC,MAAAZ,EACAK,EAAAM,UAAA,OAAAV,EACAI,EAAAM,UAAAE,IAAAX,EACAG,EAAAM,UAAAG,IAAAX,EACAE,EAAAM,UAAAI,IAAAX,EACAY,EAAAC,QAAAZ,sBCUAW,EAAAC,QAJA,SAAAC,EAAAC,GACA,OAAAD,IAAAC,GAAAD,OAAAC,6BCjCA,IAAAC,EAAuBrB,EAAQ,MAC/BsB,EAAgBtB,EAAQ,KACxBuB,EAAevB,EAAQ,MAIvBwB,EAAAD,KAAAE,aAmBAA,EAAAD,EAAAF,EAAAE,GAAAH,EACAJ,EAAAC,QAAAO,wBC1BA,IAAAC,EAAsB1B,EAAQ,MAC9B2B,EAAmB3B,EAAQ,KA6B3BiB,EAAAC,QAZA,SAAAU,EAAAT,EAAAC,EAAAS,EAAAC,EAAAC,GACA,OAAAZ,IAAAC,IAIA,MAAAD,GAAA,MAAAC,IAAAO,EAAAR,KAAAQ,EAAAP,GACAD,OAAAC,MAGAM,EAAAP,EAAAC,EAAAS,EAAAC,EAAAF,EAAAG,yBCPAd,EAAAC,QAZA,SAAAc,EAAAC,GAKA,IAJA,IAAAC,GAAA,EACAC,EAAAF,EAAAE,OACAC,EAAAJ,EAAAG,SAEAD,EAAAC,GACAH,EAAAI,EAAAF,GAAAD,EAAAC,GAGA,OAAAF,yBCjBA,IAAAK,EAAkBrC,EAAQ,MAC1BsC,EAAgBtC,EAAQ,MAOxBuC,EAHAC,OAAA5B,UAGA2B,qBAGAE,EAAAD,OAAAE,sBASAC,EAAAF,EAAA,SAAAG,GACA,aAAAA,EACA,IAGAA,EAAAJ,OAAAI,GACAP,EAAAI,EAAAG,GAAA,SAAAC,GACA,OAAAN,EAAAO,KAAAF,EAAAC,OAPAP,EAUArB,EAAAC,QAAAyB,yBC9BA,SAAA1B,GAAA,IAAA8B,EAAiB/C,EAAQ,MAIzBgD,EAA4C9B,MAAA+B,UAAA/B,EAG5CgC,EAAAF,GAAA,iBAAA/B,SAAAgC,UAAAhC,EAMAkC,EAHAD,KAAAhC,UAAA8B,GAGAD,EAAAK,QAGA7B,EAAA,WACA,IAEA,IAAA8B,EAAAH,KAAAI,SAAAJ,EAAAI,QAAA,QAAAD,MAEA,OAAAA,GAKAF,KAAAI,SAAAJ,EAAAI,QAAA,QACG,MAAAC,KAXH,GAcAvC,EAAAC,QAAAK,+CC9BA,IAAAkC,EAAiBzD,EAAQ,KACzB0D,EAAe1D,EAAQ,KAIvB2D,EAAA,yBACAC,EAAA,oBACAC,EAAA,6BACAC,EAAA,iBA8BA7C,EAAAC,QAXA,SAAAC,GACA,IAAAuC,EAAAvC,GACA,SAKA,IAAA4C,EAAAN,EAAAtC,GACA,OAAA4C,GAAAH,GAAAG,GAAAF,GAAAE,GAAAJ,GAAAI,GAAAD,0BCnCA,SAAAE,GACA,IAAAjB,EAAA,iBAAAiB,QAAAxB,iBAAAwB,EACA/C,EAAAC,QAAA6B,0CCDA,IAGAkB,EAHAC,SAAAtD,UAGAuD,SAuBAlD,EAAAC,QAdA,SAAAkD,GACA,SAAAA,EAAA,CACA,IACA,OAAAH,EAAAnB,KAAAsB,GACK,MAAAZ,IAEL,IACA,OAAAY,EAAA,GACK,MAAAZ,KAGL,gCCxBA,IAAAa,EAAerE,EAAQ,MACvBsE,EAAgBtE,EAAQ,MACxBuE,EAAevE,EAAQ,MAIvBwE,EAAA,EACAC,EAAA,EA2EAxD,EAAAC,QA5DA,SAAAc,EAAAZ,EAAAS,EAAAC,EAAA4C,EAAA3C,GACA,IAAA4C,EAAA9C,EAAA2C,EACAI,EAAA5C,EAAAG,OACA0C,EAAAzD,EAAAe,OAEA,GAAAyC,GAAAC,KAAAF,GAAAE,EAAAD,GACA,SAIA,IAAAE,EAAA/C,EAAAjB,IAAAkB,GAEA,GAAA8C,GAAA/C,EAAAjB,IAAAM,GACA,OAAA0D,GAAA1D,EAGA,IAAAc,GAAA,EACA6C,GAAA,EACAC,EAAAnD,EAAA4C,EAAA,IAAAJ,OAAAY,EAIA,IAHAlD,EAAAf,IAAAgB,EAAAZ,GACAW,EAAAf,IAAAI,EAAAY,KAEAE,EAAA0C,GAAA,CACA,IAAAM,EAAAlD,EAAAE,GACAiD,EAAA/D,EAAAc,GAEA,GAAAJ,EACA,IAAAsD,EAAAT,EAAA7C,EAAAqD,EAAAD,EAAAhD,EAAAd,EAAAY,EAAAD,GAAAD,EAAAoD,EAAAC,EAAAjD,EAAAF,EAAAZ,EAAAW,GAGA,QAAAkD,IAAAG,EAAA,CACA,GAAAA,EACA,SAGAL,GAAA,EACA,MAIA,GAAAC,GACA,IAAAV,EAAAlD,EAAA,SAAA+D,EAAAE,GACA,IAAAd,EAAAS,EAAAK,KAAAH,IAAAC,GAAAT,EAAAQ,EAAAC,EAAAtD,EAAAC,EAAAC,IACA,OAAAiD,EAAAM,KAAAD,KAEO,CACPN,GAAA,EACA,YAEK,GAAAG,IAAAC,IAAAT,EAAAQ,EAAAC,EAAAtD,EAAAC,EAAAC,GAAA,CACLgD,GAAA,EACA,OAMA,OAFAhD,EAAA,OAAAC,GACAD,EAAA,OAAAX,GACA2D,yBC/EA,IAAArB,EAAe1D,EAAQ,KAevBiB,EAAAC,QAJA,SAAAC,GACA,OAAAA,QAAAuC,EAAAvC,wBCOAF,EAAAC,QAVA,SAAAqE,EAAAC,GACA,gBAAA5C,GACA,aAAAA,GAIAA,EAAA2C,KAAAC,SAAAP,IAAAO,GAAAD,KAAA/C,OAAAI,4BCfA,IAAA6C,EAAezF,EAAQ,KACvB0F,EAAkB1F,EAAQ,MAC1B2F,EAAkB3F,EAAQ,MAW1B,SAAAqE,EAAApC,GACA,IAAAC,GAAA,EACAC,EAAA,MAAAF,EAAA,EAAAA,EAAAE,OAGA,IAFA1B,KAAAC,SAAA,IAAA+E,IAEAvD,EAAAC,GACA1B,KAAAmF,IAAA3D,EAAAC,IAKAmC,EAAAzD,UAAAgF,IAAAvB,EAAAzD,UAAA0E,KAAAI,EACArB,EAAAzD,UAAAG,IAAA4E,EACA1E,EAAAC,QAAAmD,sBCdApD,EAAAC,QAJA,SAAA2E,EAAAN,GACA,OAAAM,EAAA9E,IAAAwE,0BCTA,IAIAO,EAJW9F,EAAQ,KAInB8F,WACA7E,EAAAC,QAAA4E,wBCLA,IAAAC,EAAqB/F,EAAQ,MAC7B2C,EAAiB3C,EAAQ,MACzBgG,EAAWhG,EAAQ,KAcnBiB,EAAAC,QAJA,SAAA0B,GACA,OAAAmD,EAAAnD,EAAAoD,EAAArD,0BCbA,IAAAsD,EAAgBjG,EAAQ,MACxBkG,EAAclG,EAAQ,KAmBtBiB,EAAAC,QALA,SAAA0B,EAAAuD,EAAAC,GACA,IAAArB,EAAAoB,EAAAvD,GACA,OAAAsD,EAAAtD,GAAAmC,EAAAkB,EAAAlB,EAAAqB,EAAAxD,yBCKA3B,EAAAC,QAJA,WACA,gCCnBA,IAAAmF,EAAgBrG,EAAQ,MACxBsG,EAAkBtG,EAAQ,KAC1BkG,EAAclG,EAAQ,KACtBuG,EAAevG,EAAQ,KACvBwG,EAAcxG,EAAQ,KACtByB,EAAmBzB,EAAQ,MAO3ByG,EAHAjE,OAAA5B,UAGA6F,eAgCAxF,EAAAC,QAtBA,SAAAC,EAAAuF,GACA,IAAAC,EAAAT,EAAA/E,GACAyF,GAAAD,GAAAL,EAAAnF,GACA0F,GAAAF,IAAAC,GAAAL,EAAApF,GACA2F,GAAAH,IAAAC,IAAAC,GAAApF,EAAAN,GACA4F,EAAAJ,GAAAC,GAAAC,GAAAC,EACA/B,EAAAgC,EAAAV,EAAAlF,EAAAgB,OAAA6E,QAAA,GACA7E,EAAA4C,EAAA5C,OAEA,QAAAoD,KAAApE,GACAuF,IAAAD,EAAA3D,KAAA3B,EAAAoE,IAAAwB,IACA,UAAAxB,GACAsB,IAAA,UAAAtB,GAAA,UAAAA,IACAuB,IAAA,UAAAvB,GAAA,cAAAA,GAAA,cAAAA,IACAiB,EAAAjB,EAAApD,KACA4C,EAAAO,KAAAC,GAIA,OAAAR,yBCzCA,IAAAkC,EAAkBjH,EAAQ,KAC1BkH,EAAiBlH,EAAQ,MAOzByG,EAHAjE,OAAA5B,UAGA6F,eAyBAxF,EAAAC,QAhBA,SAAA0B,GACA,IAAAqE,EAAArE,GACA,OAAAsE,EAAAtE,GAGA,IAAAmC,EAAA,GAEA,QAAAQ,KAAA/C,OAAAI,GACA6D,EAAA3D,KAAAF,EAAA2C,IAAA,eAAAA,GACAR,EAAAO,KAAAC,GAIA,OAAAR,uBChBA9D,EAAAC,QANA,SAAAkD,EAAA+C,GACA,gBAAAC,GACA,OAAAhD,EAAA+C,EAAAC,4BCVA,IAKAC,EALgBrH,EAAQ,IAKxBsH,CAJWtH,EAAQ,KAInB,WACAiB,EAAAC,QAAAmG,wBCNA,IAAAE,EAAqBvH,EAAQ,MAyB7BiB,EAAAC,QAbA,SAAA0B,EAAA2C,EAAApE,GACA,aAAAoE,GAAAgC,EACAA,EAAA3E,EAAA2C,EAAA,CACAiC,cAAA,EACAC,YAAA,EACAtG,QACAuG,UAAA,IAGA9E,EAAA2C,GAAApE,yBCrBA,IAAAmG,EAAgBtH,EAAQ,KAExBuH,EAAA,WACA,IACA,IAAAnD,EAAAkD,EAAA9E,OAAA,kBAEA,OADA4B,EAAA,GAAW,OACXA,EACG,MAAAZ,KALH,GAQAvC,EAAAC,QAAAqG,wBCVA,IAAAI,EAAkB3H,EAAQ,MAC1B4H,EAA0B5H,EAAQ,MAClC6H,EAAe7H,EAAQ,KACvBkG,EAAclG,EAAQ,KACtB8H,EAAe9H,EAAQ,MA4BvBiB,EAAAC,QAlBA,SAAAC,GAGA,yBAAAA,EACAA,EAGA,MAAAA,EACA0G,EAGA,iBAAA1G,EACA+E,EAAA/E,GAAAyG,EAAAzG,EAAA,GAAAA,EAAA,IAAAwG,EAAAxG,GAGA2G,EAAA3G,0BC7BA,IAAA4G,EAAa/H,EAAQ,KACrBgI,EAAehI,EAAQ,KACvBkG,EAAclG,EAAQ,KACtBiI,EAAejI,EAAQ,KAIvBkI,EAAA,IAGAC,EAAAJ,IAAAnH,eAAAqE,EACAmD,EAAAD,IAAAhE,cAAAc,EA6BAhE,EAAAC,QAnBA,SAAAmH,EAAAlH,GAEA,oBAAAA,EACA,OAAAA,EAGA,GAAA+E,EAAA/E,GAEA,OAAA6G,EAAA7G,EAAAkH,GAAA,GAGA,GAAAJ,EAAA9G,GACA,OAAAiH,IAAAtF,KAAA3B,GAAA,GAGA,IAAA4D,EAAA5D,EAAA,GACA,WAAA4D,GAAA,EAAA5D,IAAA+G,EAAA,KAAAnD,yBCrCA,IAAAuD,EAAgBtI,EAAQ,MACxBuI,EAAcvI,EAAQ,MAiCtBiB,EAAAC,QAJA,SAAA0B,EAAA4F,GACA,aAAA5F,GAAA2F,EAAA3F,EAAA4F,EAAAF,0BC/BA,IAAAhI,EAAYN,EAAQ,MACpByI,EAAkBzI,EAAQ,MAC1B0I,EAAiB1I,EAAQ,MACzB2I,EAAmB3I,EAAQ,MAC3B4I,EAAa5I,EAAQ,KACrBkG,EAAclG,EAAQ,KACtBuG,EAAevG,EAAQ,KACvByB,EAAmBzB,EAAQ,MAI3BwE,EAAA,EAGAqE,EAAA,qBACAC,EAAA,iBACAC,EAAA,kBAMAtC,EAHAjE,OAAA5B,UAGA6F,eA6DAxF,EAAAC,QA7CA,SAAA0B,EAAAxB,EAAAS,EAAAC,EAAA4C,EAAA3C,GACA,IAAAiH,EAAA9C,EAAAtD,GACAqG,EAAA/C,EAAA9E,GACA8H,EAAAF,EAAAF,EAAAF,EAAAhG,GACAuG,EAAAF,EAAAH,EAAAF,EAAAxH,GAGAgI,GAFAF,KAAAL,EAAAE,EAAAG,IAEAH,EACAM,GAFAF,KAAAN,EAAAE,EAAAI,IAEAJ,EACAO,EAAAJ,GAAAC,EAEA,GAAAG,GAAA/C,EAAA3D,GAAA,CACA,IAAA2D,EAAAnF,GACA,SAGA4H,GAAA,EACAI,GAAA,EAGA,GAAAE,IAAAF,EAEA,OADArH,MAAA,IAAAzB,GACA0I,GAAAvH,EAAAmB,GAAA6F,EAAA7F,EAAAxB,EAAAS,EAAAC,EAAA4C,EAAA3C,GAAA2G,EAAA9F,EAAAxB,EAAA8H,EAAArH,EAAAC,EAAA4C,EAAA3C,GAGA,KAAAF,EAAA2C,GAAA,CACA,IAAA+E,EAAAH,GAAA3C,EAAA3D,KAAAF,EAAA,eACA4G,EAAAH,GAAA5C,EAAA3D,KAAA1B,EAAA,eAEA,GAAAmI,GAAAC,EAAA,CACA,IAAAC,EAAAF,EAAA3G,EAAAzB,QAAAyB,EACA8G,EAAAF,EAAApI,EAAAD,QAAAC,EAEA,OADAW,MAAA,IAAAzB,GACAoE,EAAA+E,EAAAC,EAAA7H,EAAAC,EAAAC,IAIA,QAAAuH,IAIAvH,MAAA,IAAAzB,GACAqI,EAAA/F,EAAAxB,EAAAS,EAAAC,EAAA4C,EAAA3C,yBCpEAd,EAAAC,QALA,WACAT,KAAAC,SAAA,GACAD,KAAAE,KAAA,yBCTA,IAAAgJ,EAAmB3J,EAAQ,KAO3B4J,EAHAC,MAAAjJ,UAGAgJ,OA+BA3I,EAAAC,QApBA,SAAAqE,GACA,IAAA/E,EAAAC,KAAAC,SACAwB,EAAAyH,EAAAnJ,EAAA+E,GAEA,QAAArD,EAAA,KAMAA,GAFA1B,EAAA2B,OAAA,EAGA3B,EAAAsJ,MAEAF,EAAA9G,KAAAtC,EAAA0B,EAAA,KAGAzB,KAAAE,MACA,0BCnCA,IAAAgJ,EAAmB3J,EAAQ,KAkB3BiB,EAAAC,QANA,SAAAqE,GACA,IAAA/E,EAAAC,KAAAC,SACAwB,EAAAyH,EAAAnJ,EAAA+E,GACA,OAAArD,EAAA,OAAA+C,EAAAzE,EAAA0B,GAAA,0BCfA,IAAAyH,EAAmB3J,EAAQ,KAgB3BiB,EAAAC,QAJA,SAAAqE,GACA,OAAAoE,EAAAlJ,KAAAC,SAAA6E,IAAA,yBCbA,IAAAoE,EAAmB3J,EAAQ,KA2B3BiB,EAAAC,QAdA,SAAAqE,EAAApE,GACA,IAAAX,EAAAC,KAAAC,SACAwB,EAAAyH,EAAAnJ,EAAA+E,GASA,OAPArD,EAAA,KACAzB,KAAAE,KACAH,EAAA8E,KAAA,CAAAC,EAAApE,KAEAX,EAAA0B,GAAA,GAAAf,EAGAV,4BCxBA,IAAAV,EAAgBC,EAAQ,KAexBiB,EAAAC,QALA,WACAT,KAAAC,SAAA,IAAAX,EACAU,KAAAE,KAAA,uBCIAM,EAAAC,QAPA,SAAAqE,GACA,IAAA/E,EAAAC,KAAAC,SACAqE,EAAAvE,EAAA,OAAA+E,GAEA,OADA9E,KAAAE,KAAAH,EAAAG,KACAoE,uBCAA9D,EAAAC,QAJA,SAAAqE,GACA,OAAA9E,KAAAC,SAAAI,IAAAyE,wBCGAtE,EAAAC,QAJA,SAAAqE,GACA,OAAA9E,KAAAC,SAAAK,IAAAwE,0BCVA,IAAAxF,EAAgBC,EAAQ,KACxB+J,EAAU/J,EAAQ,KAClByF,EAAezF,EAAQ,KAIvBgK,EAAA,IAgCA/I,EAAAC,QApBA,SAAAqE,EAAApE,GACA,IAAAX,EAAAC,KAAAC,SAEA,GAAAF,aAAAT,EAAA,CACA,IAAAkK,EAAAzJ,EAAAE,SAEA,IAAAqJ,GAAAE,EAAA9H,OAAA6H,EAAA,EAGA,OAFAC,EAAA3E,KAAA,CAAAC,EAAApE,IACAV,KAAAE,OAAAH,EAAAG,KACAF,KAGAD,EAAAC,KAAAC,SAAA,IAAA+E,EAAAwE,GAKA,OAFAzJ,EAAAQ,IAAAuE,EAAApE,GACAV,KAAAE,KAAAH,EAAAG,KACAF,4BCnCA,IAAAyJ,EAAiBlK,EAAQ,MACzBmK,EAAenK,EAAQ,MACvB0D,EAAe1D,EAAQ,KACvBoK,EAAepK,EAAQ,MAUvBqK,EAAA,8BAGAC,EAAApG,SAAAtD,UACA2J,EAAA/H,OAAA5B,UAGAqD,EAAAqG,EAAAnG,SAGAsC,EAAA8D,EAAA9D,eAGA+D,EAAAC,OAAA,IAAAxG,EAAAnB,KAAA2D,GAAAiE,QAhBA,sBAgBA,QAAAA,QAAA,uEAmBAzJ,EAAAC,QATA,SAAAC,GACA,SAAAuC,EAAAvC,IAAAgJ,EAAAhJ,MAIA+I,EAAA/I,GAAAqJ,EAAAH,GACAM,KAAAP,EAAAjJ,2BC1CA,IAAA4G,EAAa/H,EAAQ,KAIrBuK,EAAA/H,OAAA5B,UAGA6F,EAAA8D,EAAA9D,eAOAmE,EAAAL,EAAApG,SAGA0G,EAAA9C,IAAA+C,iBAAA7F,EA+BAhE,EAAAC,QAtBA,SAAAC,GACA,IAAA4J,EAAAtE,EAAA3D,KAAA3B,EAAA0J,GACA9G,EAAA5C,EAAA0J,GAEA,IACA1J,EAAA0J,QAAA5F,EACA,IAAA+F,GAAA,EACG,MAAAxH,IAEH,IAAAuB,EAAA6F,EAAA9H,KAAA3B,GAUA,OARA6J,IACAD,EACA5J,EAAA0J,GAAA9G,SAEA5C,EAAA0J,IAIA9F,uBC5CA,IAOA6F,EAPApI,OAAA5B,UAOAuD,SAaAlD,EAAAC,QAJA,SAAAC,GACA,OAAAyJ,EAAA9H,KAAA3B,0BClBA,IAAA8J,EAAiBjL,EAAQ,MAIzBkL,EAAA,WACA,IAAAC,EAAA,SAAAC,KAAAH,KAAAjF,MAAAiF,EAAAjF,KAAAqF,UAAA,IACA,OAAAF,EAAA,iBAAAA,EAAA,GAFA,GAiBAlK,EAAAC,QAJA,SAAAkD,GACA,QAAA8G,QAAA9G,yBClBA,IAIA6G,EAJWjL,EAAQ,KAInB,sBACAiB,EAAAC,QAAA+J,sBCOAhK,EAAAC,QAJA,SAAA0B,EAAA2C,GACA,aAAA3C,OAAAqC,EAAArC,EAAA2C,0BCTA,IAAA+F,EAAWtL,EAAQ,MACnBD,EAAgBC,EAAQ,KACxB+J,EAAU/J,EAAQ,KAmBlBiB,EAAAC,QATA,WACAT,KAAAE,KAAA,EACAF,KAAAC,SAAA,CACA6K,KAAA,IAAAD,EACAE,IAAA,IAAAzB,GAAAhK,GACA0L,OAAA,IAAAH,0BCjBA,IAAAI,EAAgB1L,EAAQ,MACxB2L,EAAiB3L,EAAQ,MACzB4L,EAAc5L,EAAQ,MACtB6L,EAAc7L,EAAQ,MACtB8L,EAAc9L,EAAQ,MAUtB,SAAAsL,EAAA/K,GACA,IAAA2B,GAAA,EACAC,EAAA,MAAA5B,EAAA,EAAAA,EAAA4B,OAGA,IAFA1B,KAAAI,UAEAqB,EAAAC,GAAA,CACA,IAAA4J,EAAAxL,EAAA2B,GACAzB,KAAAO,IAAA+K,EAAA,GAAAA,EAAA,KAKAT,EAAA1K,UAAAC,MAAA6K,EACAJ,EAAA1K,UAAA,OAAA+K,EACAL,EAAA1K,UAAAE,IAAA8K,EACAN,EAAA1K,UAAAG,IAAA8K,EACAP,EAAA1K,UAAAI,IAAA8K,EACA7K,EAAAC,QAAAoK,wBC/BA,IAAAU,EAAmBhM,EAAQ,KAe3BiB,EAAAC,QALA,WACAT,KAAAC,SAAAsL,IAAA,SACAvL,KAAAE,KAAA,uBCIAM,EAAAC,QANA,SAAAqE,GACA,IAAAR,EAAAtE,KAAAM,IAAAwE,WAAA9E,KAAAC,SAAA6E,GAEA,OADA9E,KAAAE,MAAAoE,EAAA,IACAA,yBCbA,IAAAiH,EAAmBhM,EAAQ,KAI3BiM,EAAA,4BAMAxF,EAHAjE,OAAA5B,UAGA6F,eAsBAxF,EAAAC,QAXA,SAAAqE,GACA,IAAA/E,EAAAC,KAAAC,SAEA,GAAAsL,EAAA,CACA,IAAAjH,EAAAvE,EAAA+E,GACA,OAAAR,IAAAkH,OAAAhH,EAAAF,EAGA,OAAA0B,EAAA3D,KAAAtC,EAAA+E,GAAA/E,EAAA+E,QAAAN,yBC7BA,IAAA+G,EAAmBhM,EAAQ,KAO3ByG,EAHAjE,OAAA5B,UAGA6F,eAgBAxF,EAAAC,QALA,SAAAqE,GACA,IAAA/E,EAAAC,KAAAC,SACA,OAAAsL,OAAA/G,IAAAzE,EAAA+E,GAAAkB,EAAA3D,KAAAtC,EAAA+E,0BCpBA,IAAAyG,EAAmBhM,EAAQ,KAI3BiM,EAAA,4BAmBAhL,EAAAC,QAPA,SAAAqE,EAAApE,GACA,IAAAX,EAAAC,KAAAC,SAGA,OAFAD,KAAAE,MAAAF,KAAAM,IAAAwE,GAAA,IACA/E,EAAA+E,GAAAyG,QAAA/G,IAAA9D,EAAA8K,EAAA9K,EACAV,4BCpBA,IAAAyL,EAAiBlM,EAAQ,KAkBzBiB,EAAAC,QANA,SAAAqE,GACA,IAAAR,EAAAmH,EAAAzL,KAAA8E,GAAA,OAAAA,GAEA,OADA9E,KAAAE,MAAAoE,EAAA,IACAA,uBCHA9D,EAAAC,QALA,SAAAC,GACA,IAAAgL,SAAAhL,EACA,gBAAAgL,GAAA,UAAAA,GAAA,UAAAA,GAAA,WAAAA,EAAA,cAAAhL,EAAA,OAAAA,yBCTA,IAAA+K,EAAiBlM,EAAQ,KAgBzBiB,EAAAC,QAJA,SAAAqE,GACA,OAAA2G,EAAAzL,KAAA8E,GAAAzE,IAAAyE,0BCbA,IAAA2G,EAAiBlM,EAAQ,KAgBzBiB,EAAAC,QAJA,SAAAqE,GACA,OAAA2G,EAAAzL,KAAA8E,GAAAxE,IAAAwE,0BCbA,IAAA2G,EAAiBlM,EAAQ,KAqBzBiB,EAAAC,QARA,SAAAqE,EAAApE,GACA,IAAAX,EAAA0L,EAAAzL,KAAA8E,GACA5E,EAAAH,EAAAG,KAGA,OAFAH,EAAAQ,IAAAuE,EAAApE,GACAV,KAAAE,MAAAH,EAAAG,QAAA,IACAF,0BCjBA,IAAAwL,EAAA,4BAkBAhL,EAAAC,QANA,SAAAC,GAGA,OAFAV,KAAAC,SAAAM,IAAAG,EAAA8K,GAEAxL,0BCHAQ,EAAAC,QAJA,SAAAC,GACA,OAAAV,KAAAC,SAAAK,IAAAI,wBCaAF,EAAAC,QAbA,SAAAc,EAAAoK,GAIA,IAHA,IAAAlK,GAAA,EACAC,EAAA,MAAAH,EAAA,EAAAA,EAAAG,SAEAD,EAAAC,GACA,GAAAiK,EAAApK,EAAAE,KAAAF,GACA,SAIA,gCCpBA,IAAA+F,EAAa/H,EAAQ,KACrB8F,EAAiB9F,EAAQ,MACzBqM,EAASrM,EAAQ,MACjByI,EAAkBzI,EAAQ,MAC1BsM,EAAiBtM,EAAQ,MACzBuM,EAAiBvM,EAAQ,MAIzBwE,EAAA,EACAC,EAAA,EAGA+H,EAAA,mBACAC,EAAA,gBACAC,EAAA,iBACAC,EAAA,eACAC,EAAA,kBACAC,EAAA,kBACAC,EAAA,eACAC,EAAA,kBACAC,EAAA,kBACAC,EAAA,uBACAC,EAAA,oBAGA/E,EAAAJ,IAAAnH,eAAAqE,EACAkI,EAAAhF,IAAAiF,aAAAnI,EAwFAhE,EAAAC,QArEA,SAAA0B,EAAAxB,EAAA2C,EAAAlC,EAAAC,EAAA4C,EAAA3C,GACA,OAAAgC,GACA,KAAAmJ,EACA,GAAAtK,EAAAyK,YAAAjM,EAAAiM,YAAAzK,EAAA0K,YAAAlM,EAAAkM,WACA,SAGA1K,IAAA2K,OACAnM,IAAAmM,OAEA,KAAAN,EACA,QAAArK,EAAAyK,YAAAjM,EAAAiM,aAAA3I,EAAA,IAAAoB,EAAAlD,GAAA,IAAAkD,EAAA1E,KAMA,KAAAoL,EACA,KAAAC,EACA,KAAAG,EAGA,OAAAP,GAAAzJ,GAAAxB,GAEA,KAAAsL,EACA,OAAA9J,EAAA4K,MAAApM,EAAAoM,MAAA5K,EAAA6K,SAAArM,EAAAqM,QAEA,KAAAZ,EACA,KAAAE,EAIA,OAAAnK,GAAAxB,EAAA,GAEA,KAAAuL,EACA,IAAAe,EAAApB,EAEA,KAAAQ,EACA,IAAAnI,EAAA9C,EAAA2C,EAGA,GAFAkJ,MAAAnB,GAEA3J,EAAAjC,MAAAS,EAAAT,OAAAgE,EACA,SAIA,IAAAG,EAAA/C,EAAAjB,IAAA8B,GAEA,GAAAkC,EACA,OAAAA,GAAA1D,EAGAS,GAAA4C,EAEA1C,EAAAf,IAAA4B,EAAAxB,GACA,IAAA2D,EAAA0D,EAAAiF,EAAA9K,GAAA8K,EAAAtM,GAAAS,EAAAC,EAAA4C,EAAA3C,GAEA,OADAA,EAAA,OAAAa,GACAmC,EAEA,KAAAiI,EACA,GAAAG,EACA,OAAAA,EAAArK,KAAAF,IAAAuK,EAAArK,KAAA1B,GAKA,8BChGAH,EAAAC,QATA,SAAAsK,GACA,IAAAtJ,GAAA,EACA6C,EAAA8E,MAAA2B,EAAA7K,MAIA,OAHA6K,EAAAmC,QAAA,SAAAxM,EAAAoE,GACAR,IAAA7C,GAAA,CAAAqD,EAAApE,KAEA4D,uBCGA9D,EAAAC,QATA,SAAAF,GACA,IAAAkB,GAAA,EACA6C,EAAA8E,MAAA7I,EAAAL,MAIA,OAHAK,EAAA2M,QAAA,SAAAxM,GACA4D,IAAA7C,GAAAf,IAEA4D,yBCbA,IAAA6I,EAAiB5N,EAAQ,MAIzBwE,EAAA,EAMAiC,EAHAjE,OAAA5B,UAGA6F,eAgFAxF,EAAAC,QAjEA,SAAA0B,EAAAxB,EAAAS,EAAAC,EAAA4C,EAAA3C,GACA,IAAA4C,EAAA9C,EAAA2C,EACAqJ,EAAAD,EAAAhL,GACAkL,EAAAD,EAAA1L,OAIA,GAAA2L,GAHAF,EAAAxM,GACAe,SAEAwC,EACA,SAKA,IAFA,IAAAzC,EAAA4L,EAEA5L,KAAA,CACA,IAAAqD,EAAAsI,EAAA3L,GAEA,KAAAyC,EAAAY,KAAAnE,EAAAqF,EAAA3D,KAAA1B,EAAAmE,IACA,SAKA,IAAAT,EAAA/C,EAAAjB,IAAA8B,GAEA,GAAAkC,GAAA/C,EAAAjB,IAAAM,GACA,OAAA0D,GAAA1D,EAGA,IAAA2D,GAAA,EACAhD,EAAAf,IAAA4B,EAAAxB,GACAW,EAAAf,IAAAI,EAAAwB,GAGA,IAFA,IAAAmL,EAAApJ,IAEAzC,EAAA4L,GAAA,CAEA,IAAAE,EAAApL,EADA2C,EAAAsI,EAAA3L,IAEAiD,EAAA/D,EAAAmE,GAEA,GAAAzD,EACA,IAAAsD,EAAAT,EAAA7C,EAAAqD,EAAA6I,EAAAzI,EAAAnE,EAAAwB,EAAAb,GAAAD,EAAAkM,EAAA7I,EAAAI,EAAA3C,EAAAxB,EAAAW,GAIA,UAAAkD,IAAAG,EAAA4I,IAAA7I,GAAAT,EAAAsJ,EAAA7I,EAAAtD,EAAAC,EAAAC,GAAAqD,GAAA,CACAL,GAAA,EACA,MAGAgJ,MAAA,eAAAxI,GAGA,GAAAR,IAAAgJ,EAAA,CACA,IAAAE,EAAArL,EAAAsL,YACAC,EAAA/M,EAAA8M,YAEAD,GAAAE,GAAA,gBAAAvL,GAAA,gBAAAxB,KAAA,mBAAA6M,mBAAA,mBAAAE,qBACApJ,GAAA,GAMA,OAFAhD,EAAA,OAAAa,GACAb,EAAA,OAAAX,GACA2D,uBC7DA9D,EAAAC,QAjBA,SAAAc,EAAAoK,GAMA,IALA,IAAAlK,GAAA,EACAC,EAAA,MAAAH,EAAA,EAAAA,EAAAG,OACAiM,EAAA,EACArJ,EAAA,KAEA7C,EAAAC,GAAA,CACA,IAAAhB,EAAAa,EAAAE,GAEAkK,EAAAjL,EAAAe,EAAAF,KACA+C,EAAAqJ,KAAAjN,GAIA,OAAA4D,uBCHA9D,EAAAC,QAXA,SAAAmN,EAAAC,GAIA,IAHA,IAAApM,GAAA,EACA6C,EAAA8E,MAAAwE,KAEAnM,EAAAmM,GACAtJ,EAAA7C,GAAAoM,EAAApM,GAGA,OAAA6C,yBCjBA,IAAAtB,EAAiBzD,EAAQ,KACzB2B,EAAmB3B,EAAQ,KAI3B6I,EAAA,qBAaA5H,EAAAC,QAJA,SAAAC,GACA,OAAAQ,EAAAR,IAAAsC,EAAAtC,IAAA0H,uBCEA5H,EAAAC,QAJA,WACA,gCCdA,IAAAuC,EAAiBzD,EAAQ,KACzBuO,EAAevO,EAAQ,KACvB2B,EAAmB3B,EAAQ,KA8B3BwO,EAAA,GACAA,EAZA,yBAYAA,EAXA,yBAWAA,EAVA,sBAUAA,EATA,uBASAA,EARA,uBAQAA,EAPA,uBAOAA,EANA,8BAMAA,EALA,wBAKAA,EAJA,yBAIA,EACAA,EA5BA,sBA4BAA,EA3BA,kBA2BAA,EAfA,wBAeAA,EA1BA,oBA0BAA,EAdA,qBAcAA,EAzBA,iBAyBAA,EAxBA,kBAwBAA,EAvBA,qBAuBAA,EAtBA,gBAsBAA,EArBA,mBAqBAA,EApBA,mBAoBAA,EAnBA,mBAmBAA,EAlBA,gBAkBAA,EAjBA,mBAiBAA,EAhBA,qBAgBA,EAaAvN,EAAAC,QAJA,SAAAC,GACA,OAAAQ,EAAAR,IAAAoN,EAAApN,EAAAgB,WAAAqM,EAAA/K,EAAAtC,2BC5CA,IAIA+F,EAJclH,EAAQ,KAItByO,CAAAjM,OAAAwD,KAAAxD,QACAvB,EAAAC,QAAAgG,wBCLA,IAKAwH,EALgB1O,EAAQ,IAKxBsH,CAJWtH,EAAQ,KAInB,YACAiB,EAAAC,QAAAwN,wBCNA,IAKAC,EALgB3O,EAAQ,IAKxBsH,CAJWtH,EAAQ,KAInB,WACAiB,EAAAC,QAAAyN,wBCNA,IAKAC,EALgB5O,EAAQ,IAKxBsH,CAJWtH,EAAQ,KAInB,OACAiB,EAAAC,QAAA0N,wBCNA,IAAAC,EAAkB7O,EAAQ,MAC1B8O,EAAmB9O,EAAQ,MAC3B+O,EAA8B/O,EAAQ,MAsBtCiB,EAAAC,QAZA,SAAA8N,GACA,IAAAC,EAAAH,EAAAE,GAEA,UAAAC,EAAA9M,QAAA8M,EAAA,MACAF,EAAAE,EAAA,MAAAA,EAAA,OAGA,SAAArM,GACA,OAAAA,IAAAoM,GAAAH,EAAAjM,EAAAoM,EAAAC,2BCpBA,IAAA3O,EAAYN,EAAQ,MACpB4B,EAAkB5B,EAAQ,MAI1BwE,EAAA,EACAC,EAAA,EAyDAxD,EAAAC,QA7CA,SAAA0B,EAAAoM,EAAAC,EAAAnN,GACA,IAAAI,EAAA+M,EAAA9M,OACAA,EAAAD,EACAgN,GAAApN,EAEA,SAAAc,EACA,OAAAT,EAKA,IAFAS,EAAAJ,OAAAI,GAEAV,KAAA,CACA,IAAA1B,EAAAyO,EAAA/M,GAEA,GAAAgN,GAAA1O,EAAA,GAAAA,EAAA,KAAAoC,EAAApC,EAAA,MAAAA,EAAA,KAAAoC,GACA,SAIA,OAAAV,EAAAC,GAAA,CAEA,IAAAoD,GADA/E,EAAAyO,EAAA/M,IACA,GACA8L,EAAApL,EAAA2C,GACAC,EAAAhF,EAAA,GAEA,GAAA0O,GAAA1O,EAAA,IACA,QAAAyE,IAAA+I,KAAAzI,KAAA3C,GACA,aAEK,CACL,IAAAb,EAAA,IAAAzB,EAEA,GAAAwB,EACA,IAAAiD,EAAAjD,EAAAkM,EAAAxI,EAAAD,EAAA3C,EAAAoM,EAAAjN,GAGA,UAAAkD,IAAAF,EAAAnD,EAAA4D,EAAAwI,EAAAxJ,EAAAC,EAAA3C,EAAAC,GAAAgD,GACA,UAKA,gCC5DA,IAAAoK,EAAyBnP,EAAQ,MACjCgG,EAAWhG,EAAQ,KAuBnBiB,EAAAC,QAbA,SAAA0B,GAIA,IAHA,IAAAmC,EAAAiB,EAAApD,GACAT,EAAA4C,EAAA5C,OAEAA,KAAA,CACA,IAAAoD,EAAAR,EAAA5C,GACAhB,EAAAyB,EAAA2C,GACAR,EAAA5C,GAAA,CAAAoD,EAAApE,EAAAgO,EAAAhO,IAGA,OAAA4D,yBCrBA,IAAAnD,EAAkB5B,EAAQ,MAC1Bc,EAAUd,EAAQ,KAClBoP,EAAYpP,EAAQ,MACpBqP,EAAYrP,EAAQ,KACpBmP,EAAyBnP,EAAQ,MACjC+O,EAA8B/O,EAAQ,MACtCsP,EAAYtP,EAAQ,KAIpBwE,EAAA,EACAC,EAAA,EAqBAxD,EAAAC,QAXA,SAAAsH,EAAAhD,GACA,OAAA6J,EAAA7G,IAAA2G,EAAA3J,GACAuJ,EAAAO,EAAA9G,GAAAhD,GAGA,SAAA5C,GACA,IAAAoL,EAAAlN,EAAA8B,EAAA4F,GACA,YAAAvD,IAAA+I,OAAAxI,EAAA4J,EAAAxM,EAAA4F,GAAA5G,EAAA4D,EAAAwI,EAAAxJ,EAAAC,2BC5BA,IAAA8K,EAAoBvP,EAAQ,MAI5BwP,EAAA,mGAGAC,EAAA,WASAC,EAAAH,EAAA,SAAA9D,GACA,IAAA1G,EAAA,GAWA,OATA,KAAA0G,EAAAkE,WAAA,IAGA5K,EAAAO,KAAA,IAGAmG,EAAAf,QAAA8E,EAAA,SAAAI,EAAAC,EAAAC,EAAAC,GACAhL,EAAAO,KAAAwK,EAAAC,EAAArF,QAAA+E,EAAA,MAAAI,GAAAD,KAEA7K,IAEA9D,EAAAC,QAAAwO,wBC9BA,IAAAM,EAAchQ,EAAQ,MAItBiQ,EAAA,IAsBAhP,EAAAC,QAZA,SAAAkD,GACA,IAAAW,EAAAiL,EAAA5L,EAAA,SAAAmB,GAKA,OAJAM,EAAAlF,OAAAsP,GACApK,EAAAhF,QAGA0E,IAEAM,EAAAd,EAAAc,MACA,OAAAd,yBCvBA,IAAAU,EAAezF,EAAQ,KAIvBkQ,EAAA,sBA8CA,SAAAF,EAAA5L,EAAA+L,GACA,sBAAA/L,GAAA,MAAA+L,GAAA,mBAAAA,EACA,UAAAC,UAAAF,GAGA,IAAAG,EAAA,SAAAA,IACA,IAAAC,EAAAC,UACAhL,EAAA4K,IAAAK,MAAA/P,KAAA6P,KAAA,GACAzK,EAAAwK,EAAAxK,MAEA,GAAAA,EAAA9E,IAAAwE,GACA,OAAAM,EAAA/E,IAAAyE,GAGA,IAAAR,EAAAX,EAAAoM,MAAA/P,KAAA6P,GAEA,OADAD,EAAAxK,QAAA7E,IAAAuE,EAAAR,IAAAc,EACAd,GAIA,OADAsL,EAAAxK,MAAA,IAAAmK,EAAAS,OAAAhL,GACA4K,EAIAL,EAAAS,MAAAhL,EACAxE,EAAAC,QAAA8O,sBC/DA/O,EAAAC,QAJA,SAAA0B,EAAA2C,GACA,aAAA3C,GAAA2C,KAAA/C,OAAAI,0BCTA,IAAA8N,EAAe1Q,EAAQ,KACvBsG,EAAkBtG,EAAQ,KAC1BkG,EAAclG,EAAQ,KACtBwG,EAAcxG,EAAQ,KACtBuO,EAAevO,EAAQ,KACvBsP,EAAYtP,EAAQ,KAoCpBiB,EAAAC,QAxBA,SAAA0B,EAAA4F,EAAAmI,GAMA,IAJA,IAAAzO,GAAA,EACAC,GAFAqG,EAAAkI,EAAAlI,EAAA5F,IAEAT,OACA4C,GAAA,IAEA7C,EAAAC,GAAA,CACA,IAAAoD,EAAA+J,EAAA9G,EAAAtG,IAEA,KAAA6C,EAAA,MAAAnC,GAAA+N,EAAA/N,EAAA2C,IACA,MAGA3C,IAAA2C,GAGA,OAAAR,KAAA7C,GAAAC,EACA4C,KAGA5C,EAAA,MAAAS,EAAA,EAAAA,EAAAT,SACAoM,EAAApM,IAAAqE,EAAAjB,EAAApD,KAAA+D,EAAAtD,IAAA0D,EAAA1D,2BCtCA,IAAAgO,EAAmB5Q,EAAQ,MAC3B6Q,EAAuB7Q,EAAQ,MAC/BqP,EAAYrP,EAAQ,KACpBsP,EAAYtP,EAAQ,KA6BpBiB,EAAAC,QAJA,SAAAsH,GACA,OAAA6G,EAAA7G,GAAAoI,EAAAtB,EAAA9G,IAAAqI,EAAArI,wBChBAvH,EAAAC,QANA,SAAAqE,GACA,gBAAA3C,GACA,aAAAA,OAAAqC,EAAArC,EAAA2C,2BCTA,IAAAuL,EAAc9Q,EAAQ,KAgBtBiB,EAAAC,QANA,SAAAsH,GACA,gBAAA5F,GACA,OAAAkO,EAAAlO,EAAA4F,yCCZA,SAAApF,GAAApD,EAAA+Q,EAAAC,EAAA,sBAAAC,IAAAjR,EAAA+Q,EAAAC,EAAA,sBAAAE,IAAAlR,EAAA+Q,EAAAC,EAAA,sBAAAG,IAAAnR,EAAA+Q,EAAAC,EAAA,sBAAAI,IAAApR,EAAA+Q,EAAAC,EAAA,sBAAAK,IAAArR,EAAA+Q,EAAAC,EAAA,sBAAAM,IAAA,IAAAC,EAAAvR,EAAA,GAAAwR,EAAAxR,EAAAqO,EAAAkD,GAAAE,EAAAzR,EAAA,KAAA0R,EAAA1R,EAAAqO,EAAAoD,GAAAE,EAAA3R,EAAA,MAAA4R,EAAA5R,EAAAqO,EAAAsD,GAAAE,EAAA7R,EAAA,MAAA8R,EAAA9R,EAAAqO,EAAAwD,GAAAE,EAAA/R,EAAA,MAAAgS,EAAAhS,EAAAqO,EAAA0D,GAAAE,EAAAzP,OAAA0P,QAAA,SAAAC,GACA,QAAAC,EAAA,EAAiBA,EAAA7B,UAAApO,OAAsBiQ,IAAA,CACvC,IAAApD,EAAAuB,UAAA6B,GAEA,QAAA7M,KAAAyJ,EACAxM,OAAA5B,UAAA6F,eAAA3D,KAAAkM,EAAAzJ,KACA4M,EAAA5M,GAAAyJ,EAAAzJ,IAKA,OAAA4M,GAGA,SAAAE,EAAAC,EAAAtM,GACA,IAAAmM,EAAA,GAEA,QAAAC,KAAAE,EACAtM,EAAAuM,QAAAH,IAAA,GACA5P,OAAA5B,UAAA6F,eAAA3D,KAAAwP,EAAAF,KACAD,EAAAC,GAAAE,EAAAF,IAGA,OAAAD,EAGA,SAAAK,EAAAC,EAAAC,GACA,KAAAD,aAAAC,GACA,UAAAtC,UAAA,qCAIA,SAAAuC,EAAAC,EAAA9P,GACA,IAAA8P,EACA,UAAAC,eAAA,6DAGA,OAAA/P,GAAA,kBAAAA,GAAA,oBAAAA,EAAA8P,EAAA9P,EAGA,SAAAgQ,EAAAC,EAAAC,GACA,uBAAAA,GAAA,OAAAA,EACA,UAAA5C,UAAA,kEAAA4C,GAGAD,EAAAnS,UAAA4B,OAAAyQ,OAAAD,KAAApS,UAAA,CACAsN,YAAA,CACA/M,MAAA4R,EACAtL,YAAA,EACAC,UAAA,EACAF,cAAA,KAGAwL,IAAAxQ,OAAA0Q,eAAA1Q,OAAA0Q,eAAAH,EAAAC,GAAAD,EAAAI,UAAAH,GAQA,IAAAI,EAAA,qBAAAhQ,GAAiDZ,OAAA,CAAA4Q,SAAA,aAAAC,WAAA,MAAe,aAEhEC,EAAA,SAAAC,GAGA,SAAAD,IACA,IAAAE,EAAAC,EAEAjB,EAAA/R,KAAA6S,GAEA,QAAAI,EAAAnD,UAAApO,OAAAmO,EAAAzG,MAAA6J,GAAAC,EAAA,EAAmEA,EAAAD,EAAaC,IAChFrD,EAAAqD,GAAApD,UAAAoD,GAGA,OAAAH,EAAAC,EAAAd,EAAAlS,KAAA8S,EAAAzQ,KAAA0N,MAAA+C,EAAA,CAAA9S,MAAAmT,OAAAtD,KAAAmD,EAAAI,cAAA,SAAAC,GACA,IAAArB,EAAAgB,EAAAM,cACAC,EAAAP,EAAAQ,MACAC,EAAAF,EAAAE,kBACAC,EAAAH,EAAAG,kBACAC,EAAAJ,EAAAI,mBACAC,EAAAL,EAAAK,gBACAH,KAAAzB,EAAAyB,kBAAAJ,MACAK,KAAA1B,EAAA0B,kBAAAL,MACAM,KAAA3B,EAAA2B,mBAAAN,MACAO,KAAA5B,EAAA2B,mBAAAN,OACKL,EAAAa,IAAA,SAAAC,GACLd,EAAAc,WACK5B,EAAAc,EAAAD,GA+NL,OAvPAV,EAAAQ,EAAAC,GA2BAD,EAAA1S,UAAA4T,mBAAA,WACA/T,KAAAsT,mBAAA9O,GAGAqO,EAAA1S,UAAA6T,kBAAA,WACAhU,KAAAiU,eAGApB,EAAA1S,UAAA+T,mBAAA,WACA,GAAAlU,KAAAwT,MAAAW,OAGA,OAFAnU,KAAAoU,oBACApU,KAAAiU,cAIAjU,KAAAqU,eAGAxB,EAAA1S,UAAAmU,sBAAA,SAAAC,GACA,IAAAC,EAAAxU,KAAAwT,MAEA9H,GADA8I,EAAAL,OACAK,EAAA9I,MACA+I,EAAAD,EAAAC,QACAC,EAAAF,EAAAE,QACAC,EAAAH,EAAAG,OACAC,EAAAJ,EAAAI,OACAC,EAAAL,EAAAK,MAEA,QAAAN,EAAAJ,OACA,SAGA,GAAAS,IAAAL,EAAAK,QAAAC,IAAAN,EAAAM,MACA,SAGA,GAAAnJ,IAAA6I,EAAA7I,KACA,SAGA,IAAS2F,IAAOsD,EAAAJ,EAAAI,QAChB,SAGA,IAAStD,IAAOoD,EAAAF,EAAAE,SAChB,SAGA,IAAAK,EAAA9U,KAAA+U,kBAAAR,GAEA,OAASlD,IAAOrR,KAAAgV,eAAAF,KAIJzD,IAAOqD,EAAAH,EAAAG,UAGnB7B,EAAA1S,UAAA8U,qBAAA,WACAjV,KAAAoU,gBAGAvB,EAAA1S,UAAA4U,kBAAA,SAAAvB,GACA,IAAAzT,EAAAyT,EAAAzT,KAEA,yBAAAA,EAEAA,EADAC,KAAA8T,SAGA/T,GAQA8S,EAAA1S,UAAA+U,iBAAA,WACA,GAAAlV,KAAAwT,MAAAzT,KAAA,CAIA,IAAAA,EAAAC,KAAA+U,kBAAA/U,KAAAwT,OAQA,OAPAxT,KAAAgV,eAAAxD,EAAA,GAAqCzR,EAAA,CACrCoV,SAAApV,EAAAoV,UAAApV,EAAAoV,SAAApK,IAAA,SAAAxK,GACA,OAAAiR,EAAA,GAA0BjR,OAG1BP,KAAAoV,sBAEArV,IAGA8S,EAAA1S,UAAAkV,cAAA,SAAAF,GACA,IAAAG,EAAA,eAAA3C,GAAA,SAAAA,EACA4C,EAAAvV,KAAAwT,MAAAgC,qBAAA3C,EAAA4C,cACAC,EAAAP,EAAAzT,OAAA,EAEA,GAAA4T,GAAAI,IAAAH,EAAA,CACA,IAAAI,GAAA,EACAR,EAAAjI,QAAA,SAAA0I,GACAA,EAAAC,QACAF,GAAA,KAIAA,GACAG,QAAAC,MAAA,sNAKAlD,EAAA1S,UAAA6V,mBAAA,WACA,OAAAhW,KAAAsT,eAAAtT,KAAAsT,cAAA2C,OAAAlW,MAAAC,KAAAsT,cAAA2C,OAAAlW,KAAAoV,UAAA,IAGAtC,EAAA1S,UAAAiV,oBAAA,WACA,IAAAc,EAAAlW,KAEAA,KAAAmV,SAAAnV,KAAAmV,UAAA,GACAnV,KAAAgW,qBACA9I,QAAA,SAAAoD,GACA4F,EAAAf,SAAAe,EAAA1C,MAAAgC,mBAAAlF,SAIAuC,EAAA1S,UAAAkU,YAAA,WACA,IAAA8B,EAAAnW,KAEAyU,EAAAzU,KAAAwT,MAAAiB,QACA1U,EAAAC,KAAAkV,iBAAAlV,KAAAwT,OACA,GAAAxT,KAAAsT,cAAA,CAEAmB,IACAzU,KAAAsT,cAAAmB,QAAmCtD,EAAAiF,EAAKC,QAAAC,YAAAtW,KAAAsT,cAAAmB,YAKxC,IAAA8B,EAAAvW,KAAAgW,qBACAQ,EAAAzW,EAAAoV,UAAA,GACAnV,KAAAqV,cAAAkB,GACA,IAAAE,EAAiClF,IAAKgF,EAAAvW,KAAAwT,MAAAgC,oBAGtCxV,KAAAsT,cAAA2C,OAAAlW,KAAAoV,SAAAqB,EAAAzL,IAAA,SAAA2L,GACA,IAAAC,EAAAF,EAAAN,EAAA3C,MAAAgC,mBAAAkB,IAEA,GAAAC,KAAAjL,OAAAgL,EAAAhL,KAAA,CAEAiL,EAAA5W,KAAAoJ,OAAAuN,EAAA3W,KAAA2B,QACAgV,EAAA3W,KAAAmN,QAAA,SAAA0J,EAAAC,GACAF,EAAA5W,KAAA8W,GAAAH,EAAA3W,KAAA8W,KAGAH,EAAA3W,KAAA,IACA+W,EAAAlF,EAAA8E,EAAA,UAKA,OAAAlF,EAAA,GAA0BmF,EAAAG,GAE1B,OAAAJ,IAIA3W,EAAAoV,SAAA,IACA4B,EAAAnF,EAAA7R,EAAA,cAEAC,KAAAsT,cAAA2C,OAAAlW,KAAAyR,EAAA,GAAgDxR,KAAAsT,cAAA2C,OAAAlW,KAAAgX,GAChD/W,KAAAsT,cAAA0D,WAGAnE,EAAA1S,UAAA8T,YAAA,WACA,IAAAgD,EAAAjX,KAAAwT,MACAiB,EAAAwC,EAAAxC,QACAE,EAAAsC,EAAAtC,OACAjJ,EAAAuL,EAAAvL,KACAgJ,EAAAuC,EAAAvC,QACAwC,EAAAlX,KAAA8T,QACA/T,EAAAC,KAAAkV,mBAEA,qBAAAP,GAA0CtD,IAAOwB,EAAAsE,aAAAxC,YACjDF,EAAAE,UAGA3U,KAAAsT,cAAA,IAA6BnC,EAAAiF,EAAKc,EAAA,CAClCxL,OACA3L,OACA0U,UACAC,aAIA7B,EAAA1S,UAAAiU,aAAA,WAMApU,KAAAoV,sBACA,IAAAD,EAAApT,OAAAP,OAAAxB,KAAAmV,UACAnV,KAAAsT,cAAA2C,OAAAlW,KAAAoV,WACAnV,KAAAsT,cAAA8D,WAGAvE,EAAA1S,UAAAkX,OAAA,WACA,IAAAC,EAAAtX,KAAAwT,MACAoB,EAAA0C,EAAA1C,OACAC,EAAAyC,EAAAzC,MACA0C,EAAAD,EAAAC,GACA,OAAWxG,EAAAqF,EAAKoB,cAAA,UAChB3D,IAAA7T,KAAA6T,IACAe,SACAC,QACA0C,KACAE,QAAAzX,KAAAoT,iBAIAP,EAxPA,CAyPE9B,EAAAqF,EAAKsB,WAEP7E,EAAA4C,cAAA,SAAAnF,GACA,OAAAA,EAAAuF,OAGAhD,EAAA8E,UAAA,CACA5X,KAAQkR,EAAAmF,EAASwB,UAAA,CAAY3G,EAAAmF,EAASjU,OAAS8O,EAAAmF,EAASzS,OAAAkU,WACxDpE,kBAAqBxC,EAAAmF,EAASzS,KAC9B+P,kBAAqBzC,EAAAmF,EAASzS,KAC9BgQ,mBAAsB1C,EAAAmF,EAASzS,KAC/BiR,OAAU3D,EAAAmF,EAAShH,OACnBuF,OAAU1D,EAAAmF,EAASjU,OACnByR,gBAAmB3C,EAAAmF,EAASzS,KAC5B8Q,QAAWxD,EAAAmF,EAASjU,OACpBuS,QAAWzD,EAAAmF,EAAS0B,QAAS7G,EAAAmF,EAASjU,QACtCgS,OAAUlD,EAAAmF,EAAS2B,KACnBrM,KAAA,SAAA8H,EAAAwE,EAAAC,GACA,IAAS9G,EAAAiF,EAAK8B,YAAA1E,EAAAwE,IACd,WAAAG,MAAA,uBAAA3E,EAAAwE,GAAA,kBAAAC,EAAA,OAGApD,MAAS5D,EAAAmF,EAAShH,OAClBoG,mBAAsBvE,EAAAmF,EAASzS,MAE/BkP,EAAAsE,aAAA,CACAxC,OAAA,CACAyD,SAAA,EACAC,SAAA,UAEA3M,KAAA,WACAkJ,OAAA,IACAC,MAAA,IACAV,QAAA,EACAM,QAAA,GACAe,mBAAA3C,EAAA4C,eAEe,IACRjF,EAAA,SAAA8H,GAGP,SAAA9H,IAGA,OAFAuB,EAAA/R,KAAAwQ,GAEA0B,EAAAlS,KAAAsY,EAAAvI,MAAA/P,KAAA8P,YAcA,OAnBAuC,EAAA7B,EAAA8H,GAQA9H,EAAArQ,UAAAkX,OAAA,WACA,IAAAkB,EAAAvY,KAEA,OAAW+Q,EAAAqF,EAAKoB,cAAA3E,EAAArB,EAAA,GAA0CxR,KAAAwT,MAAA,CAC1DK,IAAA,SAAA2E,GACA,OAAAD,EAAAjF,cAAAkF,KAAAlF,eAEA5H,KAAA,eAIA8E,EApBO,CAqBLO,EAAAqF,EAAKsB,WACAjH,EAAA,SAAAgI,GAGP,SAAAhI,IAGA,OAFAsB,EAAA/R,KAAAyQ,GAEAyB,EAAAlS,KAAAyY,EAAA1I,MAAA/P,KAAA8P,YAcA,OAnBAuC,EAAA5B,EAAAgI,GAQAhI,EAAAtQ,UAAAkX,OAAA,WACA,IAAAqB,EAAA1Y,KAEA,OAAW+Q,EAAAqF,EAAKoB,cAAA3E,EAAArB,EAAA,GAA0CxR,KAAAwT,MAAA,CAC1DK,IAAA,SAAA8E,GACA,OAAAD,EAAApF,cAAAqF,KAAArF,eAEA5H,KAAA,UAIA+E,EApBO,CAqBLM,EAAAqF,EAAKsB,WACAhH,EAAA,SAAAkI,GAGP,SAAAlI,IAGA,OAFAqB,EAAA/R,KAAA0Q,GAEAwB,EAAAlS,KAAA4Y,EAAA7I,MAAA/P,KAAA8P,YAcA,OAnBAuC,EAAA3B,EAAAkI,GAQAlI,EAAAvQ,UAAAkX,OAAA,WACA,IAAAwB,EAAA7Y,KAEA,OAAW+Q,EAAAqF,EAAKoB,cAAA3E,EAAArB,EAAA,GAA0CxR,KAAAwT,MAAA,CAC1DK,IAAA,SAAAiF,GACA,OAAAD,EAAAvF,cAAAwF,KAAAxF,eAEA5H,KAAA,WAIAgF,EApBO,CAqBLK,EAAAqF,EAAKsB,WACA/G,EAAA,SAAAoI,GAGP,SAAApI,IAGA,OAFAoB,EAAA/R,KAAA2Q,GAEAuB,EAAAlS,KAAA+Y,EAAAhJ,MAAA/P,KAAA8P,YAcA,OAnBAuC,EAAA1B,EAAAoI,GAQApI,EAAAxQ,UAAAkX,OAAA,WACA,IAAA2B,EAAAhZ,KAEA,OAAW+Q,EAAAqF,EAAKoB,cAAA3E,EAAArB,EAAA,GAA0CxR,KAAAwT,MAAA,CAC1DK,IAAA,SAAAoF,GACA,OAAAD,EAAA1F,cAAA2F,KAAA3F,eAEA5H,KAAA,UAIAiF,EApBO,CAqBLI,EAAAqF,EAAKsB,WAuBA9G,GAtBA,SAAAsI,GAGP,SAAAC,IAGA,OAFApH,EAAA/R,KAAAmZ,GAEAjH,EAAAlS,KAAAkZ,EAAAnJ,MAAA/P,KAAA8P,YALAuC,EAAA8G,EAAAD,GAQAC,EAAAhZ,UAAAkX,OAAA,WACA,IAAA+B,EAAApZ,KAEA,OAAW+Q,EAAAqF,EAAKoB,cAAA3E,EAAArB,EAAA,GAA0CxR,KAAAwT,MAAA,CAC1DK,IAAA,SAAAwF,GACA,OAAAD,EAAA9F,cAAA+F,KAAA/F,eAEA5H,KAAA,oBAhBO,CAqBLqF,EAAAqF,EAAKsB,WACA,SAAA4B,GAGP,SAAA1I,IAGA,OAFAmB,EAAA/R,KAAA4Q,GAEAsB,EAAAlS,KAAAsZ,EAAAvJ,MAAA/P,KAAA8P,YAcA,OAnBAuC,EAAAzB,EAAA0I,GAQA1I,EAAAzQ,UAAAkX,OAAA,WACA,IAAAkC,EAAAvZ,KAEA,OAAW+Q,EAAAqF,EAAKoB,cAAA3E,EAAArB,EAAA,GAA0CxR,KAAAwT,MAAA,CAC1DK,IAAA,SAAA2F,GACA,OAAAD,EAAAjG,cAAAkG,KAAAlG,eAEA5H,KAAA,YAIAkF,EApBO,CAqBLG,EAAAqF,EAAKsB,YACA7G,EAAA,SAAA4I,GAGP,SAAA5I,IAGA,OAFAkB,EAAA/R,KAAA6Q,GAEAqB,EAAAlS,KAAAyZ,EAAA1J,MAAA/P,KAAA8P,YAcA,OAnBAuC,EAAAxB,EAAA4I,GAQA5I,EAAA1Q,UAAAkX,OAAA,WACA,IAAAqC,EAAA1Z,KAEA,OAAW+Q,EAAAqF,EAAKoB,cAAA3E,EAAArB,EAAA,GAA0CxR,KAAAwT,MAAA,CAC1DK,IAAA,SAAA8F,GACA,OAAAD,EAAApG,cAAAqG,KAAArG,eAEA5H,KAAA,gBAIAmF,EApBO,CAqBLE,EAAAqF,EAAKsB,YACA,SAAAkC,GAGP,SAAAC,IAGA,OAFA9H,EAAA/R,KAAA6Z,GAEA3H,EAAAlS,KAAA4Z,EAAA7J,MAAA/P,KAAA8P,YALAuC,EAAAwH,EAAAD,GAQAC,EAAA1Z,UAAAkX,OAAA,WACA,IAAAyC,EAAA9Z,KAEA,OAAW+Q,EAAAqF,EAAKoB,cAAA3E,EAAArB,EAAA,GAA0CxR,KAAAwT,MAAA,CAC1DK,IAAA,SAAAkG,GACA,OAAAD,EAAAxG,cAAAyG,KAAAzG,eAEA5H,KAAA,cAhBO,CAqBLqF,EAAAqF,EAAKsB,WACA,SAAAsC,GAGP,SAAAC,IAGA,OAFAlI,EAAA/R,KAAAia,GAEA/H,EAAAlS,KAAAga,EAAAjK,MAAA/P,KAAA8P,YALAuC,EAAA4H,EAAAD,GAQAC,EAAA9Z,UAAAkX,OAAA,WACA,IAAA6C,EAAAla,KAEA,OAAW+Q,EAAAqF,EAAKoB,cAAA3E,EAAArB,EAAA,GAA0CxR,KAAAwT,MAAA,CAC1DK,IAAA,SAAAsG,GACA,OAAAD,EAAA5G,cAAA6G,KAAA7G,eAEA5H,KAAA,cAhBO,CAqBLqF,EAAAqF,EAAKsB,WACevG,EAAAiF,EAAKgE,mDC7hBmC5Z,EAAAC,QAW7D,SAAA4Z,GACD,aAEAA,OAAArU,eAAA,WAAAqU,EAAA,QAAAA,EAGA,IAAAC,EAAA,CACAC,UACAC,UACAC,UACAC,WACAC,cACAC,UACAC,UACAC,QA0IA,SAAAjL,GACA,OAAAkL,EAAAF,EAAAhL,KA1IAmL,UACAC,QA0KA,SAAAC,GACA,IAAAC,EAAAD,EAAA,GACAE,EAAAF,EAAA,OACAG,EAAAH,EAAA,OAIA,WAAAG,EAGA,QAOA,CAAAF,EADA,GAFAC,IADAC,GAAA,IACA,EAAAA,EAAA,EAAAA,IAEAA,EAAAD,GACA,KAFAC,EAAAD,GAAA,EAEA,MA1LAE,QA6LA,SAAAzL,GACA,OAAA4K,EAAAO,EAAAnL,KA7LA0L,SAgMA,SAAA1L,GACA,OAAA6K,EAAAM,EAAAnL,KAhMA2L,YAmMA,SAAA3L,GACA,OAAA8K,EAAAK,EAAAnL,KAnMA4L,UACAC,QAqOA,SAAAC,GACA,IAGAC,EACAP,EAJAF,EAAAQ,EAAA,GACAP,EAAAO,EAAA,OACAE,EAAAF,EAAA,OAQA,OAJAC,EAAAR,EAAAS,EAIA,CAAAV,EAAA,KAFAS,GADAA,IAFAP,GAAA,EAAAD,GAAAS,IAEA,EAAAR,EAAA,EAAAA,IACA,GAEA,KADAA,GAAA,KA9OAS,QAkPA,SAAAjM,GACA,OAAA4K,EAAAgB,EAAA5L,KAlPAkM,SAqPA,SAAAlM,GACA,OAAA6K,EAAAe,EAAA5L,KArPAmM,YAwPA,SAAAnM,GACA,OAAA8K,EAAAc,EAAA5L,KAxPAoM,UACAC,QA+TA,SAAArM,GACA,OAAA0K,EAAA0B,EAAApM,KA/TAsM,QAkUA,SAAAtM,GACA,OAAA2K,EAAAyB,EAAApM,KAlUAuM,SAqUA,SAAAvM,GACA,OAAA6K,EAAAuB,EAAApM,KArUAwM,YAwUA,SAAAxM,GACA,OAAA8K,EAAAsB,EAAApM,KAxUAyM,WACAC,SAwVA,SAAA1M,GACA,OAAA0K,EAAA+B,EAAAzM,KAxVA2M,SA2VA,SAAA3M,GACA,OAAA2K,EAAA8B,EAAAzM,KA3VA4M,SA8VA,SAAA5M,GACA,OAAA4K,EAAA6B,EAAAzM,KA9VA6M,aAiWA,SAAA7M,GACA,OAAA8K,EAAA2B,EAAAzM,KAjWA8M,cACAC,YAmdA,SAAA/M,GACA,OAAA0K,EAAAoC,EAAA9M,KAndAgN,YAsdA,SAAAhN,GACA,OAAA2K,EAAAmC,EAAA9M,KAtdAiN,YAydA,SAAAjN,GACA,OAAA4K,EAAAkC,EAAA9M,KAzdAkN,aA4dA,SAAAlN,GACA,OAAA6K,EAAAiC,EAAA9M,KA5dAmN,YA+dA,SAAAnN,GACA,OAAAgL,EAAA8B,EAAA9M,KA/dAoN,YAkeA,SAAApN,GACA,OAAA+K,EAAA+B,EAAA9M,KAleAqN,UACAC,UACAC,QAkYA,SAAAvN,GACA,OAAAkL,EAAAoC,EAAAtN,KAlYAwN,UACAC,UACAvC,UACAwC,UACAC,QA0bA,SAAA3N,GACA,OAAAwN,EAAAE,EAAA1N,KA1bA4N,QA6bA,SAAA5N,GACA,OAAAyN,EAAAC,EAAA1N,MA3bA,SAAA0K,EAAAmD,GACA,IAMAvC,EAEAE,EARAsC,EAAAD,EAAA,OACAE,EAAAF,EAAA,OACAG,EAAAH,EAAA,OACAI,EAAAC,KAAAD,IAAAH,EAAAC,EAAAC,GACAG,EAAAD,KAAAC,IAAAL,EAAAC,EAAAC,GACAI,EAAAD,EAAAF,EASA,OALAE,GAAAF,EAAA3C,EAAA,EAA0BwC,GAAAK,EAAA7C,GAAAyC,EAAAC,GAAAI,EAAuCL,GAAAI,EAAA7C,EAAA,GAAA0C,EAAAF,GAAAM,EAA2CJ,GAAAG,IAAA7C,EAAA,GAAAwC,EAAAC,GAAAK,IAC5G9C,EAAA4C,KAAAD,IAAA,GAAA3C,EAAA,MACA,IAAAA,GAAA,KACAE,GAAAyC,EAAAE,GAAA,EAEA,CAAA7C,EAAA,KADA6C,GAAAF,EAAA,EAA0BzC,GAAA,GAAA4C,GAAAD,EAAAF,GAA2CG,GAAA,EAAAD,EAAAF,IACrE,IAAAzC,GAGA,SAAAb,EAAAkD,GACA,IAMAvC,EACAC,EAPAuC,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACAI,EAAAC,KAAAD,IAAAH,EAAAC,EAAAC,GACAG,EAAAD,KAAAC,IAAAL,EAAAC,EAAAC,GACAI,EAAAD,EAAAF,EASA,OALA1C,EAAA,GAAA4C,EAAA,EAAwBC,EAAAD,EAAA,OACxBA,GAAAF,EAAA3C,EAAA,EAA0BwC,GAAAK,EAAA7C,GAAAyC,EAAAC,GAAAI,EAAuCL,GAAAI,EAAA7C,EAAA,GAAA0C,EAAAF,GAAAM,EAA2CJ,GAAAG,IAAA7C,EAAA,GAAAwC,EAAAC,GAAAK,IAC5G9C,EAAA4C,KAAAD,IAAA,GAAA3C,EAAA,MACA,IAAAA,GAAA,KAEA,CAAAA,EAAAC,EADA4C,EAAA,YAIA,SAAAvD,EAAAiD,GACA,IAAAC,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACAvC,EAAAZ,EAAAmD,GAAA,GACAQ,EAAA,MAAAH,KAAAD,IAAAH,EAAAI,KAAAD,IAAAF,EAAAC,IACAA,EAAA,QAAAE,KAAAC,IAAAL,EAAAI,KAAAC,IAAAJ,EAAAC,IACA,OAAA1C,EAAA,IAAA+C,EAAA,IAAAL,GAGA,SAAAnD,EAAAgD,GACA,IAMAS,EANAR,EAAAD,EAAA,OACAE,EAAAF,EAAA,OACAG,EAAAH,EAAA,OASA,OAJAS,EAAAJ,KAAAD,IAAA,EAAAH,EAAA,EAAAC,EAAA,EAAAC,GAIA,OAHA,EAAAF,EAAAQ,IAAA,EAAAA,IAAA,GAGA,MAFA,EAAAP,EAAAO,IAAA,EAAAA,IAAA,GAEA,MADA,EAAAN,EAAAM,IAAA,EAAAA,IAAA,GACA,IAAAA,GAGA,SAAAxD,EAAA+C,GACA,OAAAU,EAAAC,KAAAC,UAAAZ,IAGA,SAAA9C,EAAA8C,GACA,IAAAC,EAAAD,EAAA,OACAE,EAAAF,EAAA,OACAG,EAAAH,EAAA,OAEAC,IAAA,OAAAI,KAAAQ,KAAAZ,EAAA,iBAAAA,EAAA,MACAC,IAAA,OAAAG,KAAAQ,KAAAX,EAAA,iBAAAA,EAAA,MACAC,IAAA,OAAAE,KAAAQ,KAAAV,EAAA,iBAAAA,EAAA,MACA,IAAAW,EAAA,MAAAb,EAAA,MAAAC,EAAA,MAAAC,EACAY,EAAA,MAAAd,EAAA,MAAAC,EAAA,MAAAC,EACAa,EAAA,MAAAf,EAAA,MAAAC,EAAA,MAAAC,EACA,WAAAW,EAAA,IAAAC,EAAA,IAAAC,GAGA,SAAA7D,EAAA6C,GACA,IAAAiB,EAAA/D,EAAA8C,GACAc,EAAAG,EAAA,GACAF,EAAAE,EAAA,GACAD,EAAAC,EAAA,GAaA,OARAF,GAAA,IACAC,GAAA,QACAF,GAHAA,GAAA,QAGA,QAAAT,KAAAQ,IAAAC,EAAA,WAAAA,EAAA,OACAC,IAAA,QAAAV,KAAAQ,IAAAE,EAAA,WAAAA,EAAA,OACAC,IAAA,QAAAX,KAAAQ,IAAAG,EAAA,WAAAA,EAAA,OAIA,CAHA,IAAAD,EAAA,GACA,KAAAD,EAAAC,GACA,KAAAA,EAAAC,IAQA,SAAA1D,EAAAE,GACA,IAGA0D,EACAC,EACAC,EACApB,EACAqB,EAPA5D,EAAAD,EAAA,OACAE,EAAAF,EAAA,OACAG,EAAAH,EAAA,OAOA,MAAAE,EAEA,OADA2D,EAAA,IAAA1D,EACA0D,KAIAH,EAAA,EAAAvD,GADAwD,EAAAxD,EAAA,GAAAA,GAAA,EAAAD,GAAkCC,EAAAD,EAAAC,EAAAD,GAElCsC,EAAA,QAEA,QAAA/L,EAAA,EAAmBA,EAAA,EAAOA,KAC1BmN,EAAA3D,EAAA,MAAAxJ,EAAA,IACA,GAAAmN,IACAA,EAAA,GAAAA,IACAC,EAAA,EAAAD,EAAA,EAAAF,EAAA,GAAAC,EAAAD,GAAAE,EAAoD,EAAAA,EAAA,EAAAD,EAA8B,EAAAC,EAAA,EAAAF,GAAAC,EAAAD,IAAA,IAAAE,GAAA,EAA6DF,EAC/IlB,EAAA/L,GAAA,IAAAoN,EAGA,OAAArB,EAmCA,SAAAjC,EAAAE,GACA,IAAAR,EAAAQ,EAAA,MACAP,EAAAO,EAAA,OACAE,EAAAF,EAAA,OACAqD,EAAAjB,KAAAkB,MAAA9D,GAAA,EACA+D,EAAA/D,EAAA4C,KAAAkB,MAAA9D,GACAgE,EAAA,IAAAtD,GAAA,EAAAT,GACAgE,EAAA,IAAAvD,GAAA,EAAAT,EAAA8D,GACAG,EAAA,IAAAxD,GAAA,EAAAT,GAAA,EAAA8D,IACArD,EAAA,IAAAA,EAEA,OAAAmD,GACA,OACA,OAAAnD,EAAAwD,EAAAF,GAEA,OACA,OAAAC,EAAAvD,EAAAsD,GAEA,OACA,OAAAA,EAAAtD,EAAAwD,GAEA,OACA,OAAAF,EAAAC,EAAAvD,GAEA,OACA,OAAAwD,EAAAF,EAAAtD,GAEA,OACA,OAAAA,EAAAsD,EAAAC,IA+BA,SAAAnD,EAAAqD,GACA,IAIA3N,EACAkK,EACAqD,EACAtR,EAPAuN,EAAAmE,EAAA,OACAC,EAAAD,EAAA,OACAE,EAAAF,EAAA,OACAG,EAAAF,EAAAC,EAqBA,OAfAC,EAAA,IACAF,GAAAE,EACAD,GAAAC,GAGA9N,EAAAoM,KAAAkB,MAAA,EAAA9D,GAEA+D,EAAA,EAAA/D,EAAAxJ,EAEA,MAAAA,KACAuN,EAAA,EAAAA,GAGAtR,EAAA2R,EAAAL,IAPArD,EAAA,EAAA2D,GAOAD,GAEA5N,GACA,QACA,OACA,OACAgM,EAAA9B,EACA+B,EAAAhQ,EACAiQ,EAAA0B,EACA,MAEA,OACA5B,EAAA/P,EACAgQ,EAAA/B,EACAgC,EAAA0B,EACA,MAEA,OACA5B,EAAA4B,EACA3B,EAAA/B,EACAgC,EAAAjQ,EACA,MAEA,OACA+P,EAAA4B,EACA3B,EAAAhQ,EACAiQ,EAAAhC,EACA,MAEA,OACA8B,EAAA/P,EACAgQ,EAAA2B,EACA1B,EAAAhC,EACA,MAEA,OACA8B,EAAA9B,EACA+B,EAAA2B,EACA1B,EAAAjQ,EAIA,WAAA+P,EAAA,IAAAC,EAAA,IAAAC,GAmBA,SAAAvB,EAAAoD,GACA,IAIA/B,EACAC,EACAC,EANA8B,EAAAD,EAAA,OACAE,EAAAF,EAAA,OACAjB,EAAAiB,EAAA,OACAvB,EAAAuB,EAAA,OAOA,OAHA/B,EAAA,EAAAI,KAAAD,IAAA,EAAA6B,GAAA,EAAAxB,MACAP,EAAA,EAAAG,KAAAD,IAAA,EAAA8B,GAAA,EAAAzB,MACAN,EAAA,EAAAE,KAAAD,IAAA,EAAAW,GAAA,EAAAN,MACA,KAAAR,EAAA,IAAAC,EAAA,IAAAC,GAmBA,SAAAX,EAAAyB,GACA,IAGAhB,EACAC,EACAC,EALAW,EAAAG,EAAA,OACAF,EAAAE,EAAA,OACAD,EAAAC,EAAA,OAcA,OATAf,GAAA,MAAAY,EAAA,OAAAC,EAAA,MAAAC,EACAb,EAAA,MAAAW,GAAA,KAAAC,EAAA,MAAAC,EAEAf,GAJAA,EAAA,OAAAa,GAAA,OAAAC,GAAA,MAAAC,GAIA,eAAAX,KAAAQ,IAAAZ,EAAA,YAAAA,GAAA,MACAC,IAAA,eAAAG,KAAAQ,IAAAX,EAAA,YAAAA,GAAA,MACAC,IAAA,eAAAE,KAAAQ,IAAAV,EAAA,YAAAA,GAAA,MACAF,EAAAI,KAAAD,IAAAC,KAAAC,IAAA,EAAAL,GAAA,GACAC,EAAAG,KAAAD,IAAAC,KAAAC,IAAA,EAAAJ,GAAA,GACAC,EAAAE,KAAAD,IAAAC,KAAAC,IAAA,EAAAH,GAAA,GACA,KAAAF,EAAA,IAAAC,EAAA,IAAAC,GAGA,SAAAV,EAAAwB,GACA,IAAAH,EAAAG,EAAA,GACAF,EAAAE,EAAA,GACAD,EAAAC,EAAA,GAaA,OARAF,GAAA,IACAC,GAAA,QACAF,GAHAA,GAAA,QAGA,QAAAT,KAAAQ,IAAAC,EAAA,WAAAA,EAAA,OACAC,IAAA,QAAAV,KAAAQ,IAAAE,EAAA,WAAAA,EAAA,OACAC,IAAA,QAAAX,KAAAQ,IAAAG,EAAA,WAAAA,EAAA,OAIA,CAHA,IAAAD,EAAA,GACA,KAAAD,EAAAC,GACA,KAAAA,EAAAC,IAQA,SAAArB,EAAAwC,GACA,IAGArB,EACAC,EACAC,EACAoB,EANAzE,EAAAwE,EAAA,GACAzJ,EAAAyJ,EAAA,GACAhC,EAAAgC,EAAA,GAgBA,OAVAxE,GAAA,EAEAyE,GADArB,EAAA,IAAApD,EAAA,OACA,kBAEAoD,EAAA,IAAAV,KAAAQ,KAAAlD,EAAA,WACAyE,EAAA/B,KAAAQ,IAAAE,EAAA,UAGAD,IAAA,gBAAAA,EAAA,QAAApI,EAAA,IAAA0J,EAAA,qBAAA/B,KAAAQ,IAAAnI,EAAA,IAAA0J,EAAA,GACApB,IAAA,iBAAAA,EAAA,SAAAoB,EAAAjC,EAAA,0BAAAE,KAAAQ,IAAAuB,EAAAjC,EAAA,OACA,CAAAW,EAAAC,EAAAC,GAGA,SAAA3D,EAAA8E,GACA,IAGAE,EACA5E,EACAwE,EALAtE,EAAAwE,EAAA,GACAzJ,EAAAyJ,EAAA,GACAhC,EAAAgC,EAAA,GAYA,OARAE,EAAAhC,KAAAiC,MAAAnC,EAAAzH,IACA+E,EAAA,IAAA4E,EAAA,EAAAhC,KAAAkC,IAEA,IACA9E,GAAA,KAGAwE,EAAA5B,KAAAmC,KAAA9J,IAAAyH,KACA,CAAAxC,EAAAsE,EAAAxE,GAGA,SAAAmC,EAAAzN,GACA,OAAAqN,EAAAG,EAAAxN,IAGA,SAAA0N,EAAA4C,GACA,IAGA/J,EACAyH,EACAkC,EALA1E,EAAA8E,EAAA,GACAR,EAAAQ,EAAA,GACAhF,EAAAgF,EAAA,GAOA,OAHAJ,EAAA5E,EAAA,MAAA4C,KAAAkC,GACA7J,EAAAuJ,EAAA5B,KAAAqC,IAAAL,GACAlC,EAAA8B,EAAA5B,KAAAsC,IAAAN,GACA,CAAA1E,EAAAjF,EAAAyH,GAWA,SAAAlB,EAAA2D,GACA,OAAAC,EAAAD,GA2BA,IAAAC,EAAA,CACAC,UAAA,cACAC,aAAA,cACAC,KAAA,YACAC,WAAA,cACAC,MAAA,cACAC,MAAA,cACAC,OAAA,cACAC,MAAA,QACAC,eAAA,cACAC,KAAA,UACAC,WAAA,aACAC,MAAA,YACAC,UAAA,cACAC,UAAA,aACAC,WAAA,YACAC,UAAA,aACAC,MAAA,aACAC,eAAA,cACAC,SAAA,cACAC,QAAA,YACAC,KAAA,YACAC,SAAA,UACAC,SAAA,YACAC,cAAA,aACAC,SAAA,cACAC,UAAA,UACAC,SAAA,cACAC,UAAA,cACAC,YAAA,YACAC,eAAA,YACAC,WAAA,YACAC,WAAA,aACAC,QAAA,UACAC,WAAA,cACAC,aAAA,cACAC,cAAA,YACAC,cAAA,WACAC,cAAA,WACAC,cAAA,YACAC,WAAA,YACAC,SAAA,aACAC,YAAA,YACAC,QAAA,cACAC,QAAA,cACAC,WAAA,aACAC,UAAA,YACAC,YAAA,cACAC,YAAA,YACAC,QAAA,YACAC,UAAA,cACAC,WAAA,cACAC,KAAA,YACAC,UAAA,aACAC,KAAA,cACAC,MAAA,UACAC,YAAA,aACAC,KAAA,cACAC,SAAA,cACAC,QAAA,cACAC,UAAA,YACAC,OAAA,WACAC,MAAA,cACAC,MAAA,cACAC,SAAA,cACAC,cAAA,cACAC,UAAA,YACAC,aAAA,cACAC,UAAA,cACAC,WAAA,cACAC,UAAA,cACAC,qBAAA,cACAC,UAAA,cACAC,WAAA,cACAC,UAAA,cACAC,UAAA,cACAC,YAAA,cACAC,cAAA,aACAC,aAAA,cACAC,eAAA,cACAC,eAAA,cACAC,eAAA,cACAC,YAAA,cACAC,KAAA,UACAC,UAAA,YACAC,MAAA,cACAC,QAAA,YACAC,OAAA,UACAC,iBAAA,cACAC,WAAA,UACAC,aAAA,aACAC,aAAA,cACAC,eAAA,aACAC,gBAAA,cACAC,kBAAA,YACAC,gBAAA,aACAC,gBAAA,aACAC,aAAA,YACAC,UAAA,cACAC,UAAA,cACAC,SAAA,cACAC,YAAA,cACAC,KAAA,UACAC,QAAA,cACAC,MAAA,YACAC,UAAA,aACAC,OAAA,YACAC,UAAA,WACAC,OAAA,cACAC,cAAA,cACAC,UAAA,cACAC,cAAA,cACAC,cAAA,cACAC,WAAA,cACAC,UAAA,cACAC,KAAA,aACAC,KAAA,cACAC,KAAA,cACAC,WAAA,cACAC,OAAA,YACAC,cAAA,aACAC,IAAA,UACAC,UAAA,cACAC,UAAA,aACAC,YAAA,YACAC,OAAA,cACAC,WAAA,aACAC,SAAA,YACAC,SAAA,cACAC,OAAA,YACAC,OAAA,cACAC,QAAA,cACAC,UAAA,aACAC,UAAA,cACAC,UAAA,cACAC,KAAA,cACAC,YAAA,YACAC,UAAA,aACAC,IAAA,cACAC,KAAA,YACAC,QAAA,cACAC,OAAA,YACAC,UAAA,aACAC,OAAA,cACAC,MAAA,cACAC,MAAA,cACAC,WAAA,cACAC,OAAA,YACAC,YAAA,cAEAvL,EAAA,GAEA,QAAAtZ,KAAAyb,EACAnC,EAAAC,KAAAC,UAAAiC,EAAAzb,OAGA,IAAAmI,EAAA,WACA,WAAA2c,GAGA,QAAAjmB,KAAA2W,EAAA,CAEArN,EAAAtJ,EAAA,gBAAAA,GAEA,gBAAAgD,GAEA,MADA,iBAAAA,MAAAyC,MAAAjJ,UAAA0pB,MAAAxnB,KAAAyN,YACAwK,EAAA3W,GAAAgD,IAJA,CAMKhD,GAEL,IAAAmmB,EAAA,cAAAnf,KAAAhH,GACAomB,EAAAD,EAAA,GACAE,EAAAF,EAAA,IAEA7c,EAAA8c,GAAA9c,EAAA8c,IAAA,IAEAC,GAAA/c,EAAAtJ,GAAA,SAAAA,GACA,gBAAAgD,GACA,iBAAAA,MAAAyC,MAAAjJ,UAAA0pB,MAAAxnB,KAAAyN,YACA,IAAAiP,EAAAzE,EAAA3W,GAAAgD,GACA,oBAAAoY,QAAAva,IAAAua,EAAA,OAAAA,EAEA,QAAApN,EAAA,EAAuBA,EAAAoN,EAAArd,OAAgBiQ,IACvCoN,EAAApN,GAAAoM,KAAAkM,MAAAlL,EAAApN,IAGA,OAAAoN,GAVA,CAYKpb,GAKL,IAAAimB,EAAA,WACA5pB,KAAAkqB,MAAA,IAMAN,EAAAzpB,UAAAgqB,WAAA,SAAAC,EAAAva,GACA,IAAArO,EAAAqO,EAAA,GAEA,YAAArL,IAAAhD,EAEAxB,KAAAqqB,UAAAD,IAIA,iBAAA5oB,IACAA,EAAA4H,MAAAjJ,UAAA0pB,MAAAxnB,KAAAwN,IAGA7P,KAAAsqB,UAAAF,EAAA5oB,KAKAooB,EAAAzpB,UAAAmqB,UAAA,SAAAF,EAAA5oB,GAIA,OAHAxB,KAAAoqB,QACApqB,KAAAkqB,MAAA,GACAlqB,KAAAkqB,MAAAE,GAAA5oB,EACAxB,MAOA4pB,EAAAzpB,UAAAkqB,UAAA,SAAAD,GACA,IAAAG,EAAAvqB,KAAAkqB,MAAAE,GAEA,IAAAG,EAAA,CACA,IAAAC,EAAAxqB,KAAAoqB,MACAL,EAAA/pB,KAAAkqB,MAAAM,GACAD,EAAAtd,EAAAud,GAAAJ,GAAAL,GACA/pB,KAAAkqB,MAAAE,GAAAG,EAGA,OAAAA,GAGA,qCAAArd,QAAA,SAAAkd,GACAR,EAAAzpB,UAAAiqB,GAAA,SAAAG,GACA,OAAAvqB,KAAAmqB,WAAAC,EAAAta,cAGA,IAAA2a,EAAAxd,EACAyd,EAAA,CACAlK,UAAA,cACAC,aAAA,cACAC,KAAA,YACAC,WAAA,cACAC,MAAA,cACAC,MAAA,cACAC,OAAA,cACAC,MAAA,QACAC,eAAA,cACAC,KAAA,UACAC,WAAA,aACAC,MAAA,YACAC,UAAA,cACAC,UAAA,aACAC,WAAA,YACAC,UAAA,aACAC,MAAA,aACAC,eAAA,cACAC,SAAA,cACAC,QAAA,YACAC,KAAA,YACAC,SAAA,UACAC,SAAA,YACAC,cAAA,aACAC,SAAA,cACAC,UAAA,UACAC,SAAA,cACAC,UAAA,cACAC,YAAA,YACAC,eAAA,YACAC,WAAA,YACAC,WAAA,aACAC,QAAA,UACAC,WAAA,cACAC,aAAA,cACAC,cAAA,YACAC,cAAA,WACAC,cAAA,WACAC,cAAA,YACAC,WAAA,YACAC,SAAA,aACAC,YAAA,YACAC,QAAA,cACAC,QAAA,cACAC,WAAA,aACAC,UAAA,YACAC,YAAA,cACAC,YAAA,YACAC,QAAA,YACAC,UAAA,cACAC,WAAA,cACAC,KAAA,YACAC,UAAA,aACAC,KAAA,cACAC,MAAA,UACAC,YAAA,aACAC,KAAA,cACAC,SAAA,cACAC,QAAA,cACAC,UAAA,YACAC,OAAA,WACAC,MAAA,cACAC,MAAA,cACAC,SAAA,cACAC,cAAA,cACAC,UAAA,YACAC,aAAA,cACAC,UAAA,cACAC,WAAA,cACAC,UAAA,cACAC,qBAAA,cACAC,UAAA,cACAC,WAAA,cACAC,UAAA,cACAC,UAAA,cACAC,YAAA,cACAC,cAAA,aACAC,aAAA,cACAC,eAAA,cACAC,eAAA,cACAC,eAAA,cACAC,YAAA,cACAC,KAAA,UACAC,UAAA,YACAC,MAAA,cACAC,QAAA,YACAC,OAAA,UACAC,iBAAA,cACAC,WAAA,UACAC,aAAA,aACAC,aAAA,cACAC,eAAA,aACAC,gBAAA,cACAC,kBAAA,YACAC,gBAAA,aACAC,gBAAA,aACAC,aAAA,YACAC,UAAA,cACAC,UAAA,cACAC,SAAA,cACAC,YAAA,cACAC,KAAA,UACAC,QAAA,cACAC,MAAA,YACAC,UAAA,aACAC,OAAA,YACAC,UAAA,WACAC,OAAA,cACAC,cAAA,cACAC,UAAA,cACAC,cAAA,cACAC,cAAA,cACAC,WAAA,cACAC,UAAA,cACAC,KAAA,aACAC,KAAA,cACAC,KAAA,cACAC,WAAA,cACAC,OAAA,YACAC,cAAA,aACAC,IAAA,UACAC,UAAA,cACAC,UAAA,aACAC,YAAA,YACAC,OAAA,cACAC,WAAA,aACAC,SAAA,YACAC,SAAA,cACAC,OAAA,YACAC,OAAA,cACAC,QAAA,cACAC,UAAA,aACAC,UAAA,cACAC,UAAA,cACAC,KAAA,cACAC,YAAA,YACAC,UAAA,aACAC,IAAA,cACAC,KAAA,YACAC,QAAA,cACAC,OAAA,YACAC,UAAA,aACAC,OAAA,cACAC,MAAA,cACAC,MAAA,cACAC,WAAA,cACAC,OAAA,YACAC,YAAA,cAIAgB,EAAA,CACAC,UACAC,UACAC,OA8HA,SAAA9f,GACA,IAAA+f,EAAAH,EAAA5f,GACA,OAAA+f,KAAAlB,MAAA,MA/HAmB,OAkIA,SAAAhgB,GACA,IAAAigB,EAAAJ,EAAA7f,GACA,OAAAigB,KAAApB,MAAA,MAnIAqB,SACAC,SAqIA,SAAAngB,GACA,IAAAuf,EAAAK,EAAA5f,GAEA,OAAAuf,EACAA,EAAA,IACKA,EAAAM,EAAA7f,IACLuf,EAAA,IACKA,EAAAW,EAAAlgB,IACLuf,EAAA,QADK,GA3ILa,UAiJA,SAAAL,EAAA3U,GACA,IAAAA,OAAA5R,IAAA4R,GAAA,IAAA2U,EAAArpB,OAAA0U,EAAA2U,EAAA,GACA,UAAAM,EAAAN,EAAA,IAAAM,EAAAN,EAAA,IAAAM,EAAAN,EAAA,KAAA3U,GAAA,GAAAA,EAAA,EAAAiV,EAAAtN,KAAAkM,MAAA,IAAA7T,IAAA,KAlJAkV,UAqJA,SAAAP,EAAAQ,GACA,OAAAA,EAAA,GAAAR,EAAA,IAAAA,EAAA,KACAS,EAAAT,EAAAQ,GAGA,OAAAR,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAzJAS,aACAC,cAmKA,SAAAV,EAAAQ,GACA,GAAAA,EAAA,GAAAR,EAAA,IAAAA,EAAA,KACA,OAAAW,EAAAX,EAAAQ,GAGA,IAAA5N,EAAAI,KAAAkM,MAAAc,EAAA,YACAnN,EAAAG,KAAAkM,MAAAc,EAAA,YACAlN,EAAAE,KAAAkM,MAAAc,EAAA,YACA,aAAApN,EAAA,MAAAC,EAAA,MAAAC,EAAA,MA1KA6N,iBACAC,UAmLA,SAAAV,EAAAM,GACA,OAAAA,EAAA,GAAAN,EAAA,IAAAA,EAAA,KACAW,EAAAX,EAAAM,GAGA,OAAAN,EAAA,QAAAA,EAAA,SAAAA,EAAA,SAvLAW,aACAC,UAmMA,SAAAvM,EAAAiM,GAKA,YAJA/mB,IAAA+mB,IACAA,OAAA/mB,IAAA8a,EAAA,GAAAA,EAAA,MAGA,OAAAA,EAAA,QAAAA,EAAA,SAAAA,EAAA,aAAA9a,IAAA+mB,GAAA,IAAAA,EAAA,KAAAA,EAAA,SAvMAjL,QA0MA,SAAA5C,GACA,OAAAoO,EAAApO,EAAAmM,MAAA,QAxMA,SAAAe,EAAA5f,GACA,GAAAA,EAAA,CAIA,IAKA0S,EAAA,QACAtH,EAAA,EACAjH,EAAAnE,EAAAmE,MAPA,0BAQA4c,EAAA,GAEA,GAAA5c,EAAA,CACAA,IAAA,GACA4c,EAAA5c,EAAA,GAEA,QAAAwC,EAAA,EAAqBA,EAAA+L,EAAAhc,OAAgBiQ,IACrC+L,EAAA/L,GAAAqa,SAAA7c,EAAAwC,GAAAxC,EAAAwC,GAAA,IAGAoa,IACA3V,EAAA2H,KAAAkM,MAAA+B,SAAAD,IAAA,uBAEK,GAAA5c,EAAAnE,EAAAmE,MApBL,yCAoBK,CACL4c,EAAA5c,EAAA,GACAA,IAAA,GAEA,QAAAwC,EAAA,EAAqBA,EAAA+L,EAAAhc,OAAgBiQ,IACrC+L,EAAA/L,GAAAqa,SAAA7c,EAAA0a,MAAA,EAAAlY,EAAA,EAAAA,EAAA,OAGAoa,IACA3V,EAAA2H,KAAAkM,MAAA+B,SAAAD,EAAA,uBAEK,GAAA5c,EAAAnE,EAAAmE,MA9BL,4FA8BK,CACL,QAAAwC,EAAA,EAAqBA,EAAA+L,EAAAhc,OAAgBiQ,IACrC+L,EAAA/L,GAAAqa,SAAA7c,EAAAwC,EAAA,IAGAyE,EAAA6V,WAAA9c,EAAA,SACK,GAAAA,EAAAnE,EAAAmE,MAnCL,8GAmCK,CACL,QAAAwC,EAAA,EAAqBA,EAAA+L,EAAAhc,OAAgBiQ,IACrC+L,EAAA/L,GAAAoM,KAAAkM,MAAA,KAAAgC,WAAA9c,EAAAwC,EAAA,KAGAyE,EAAA6V,WAAA9c,EAAA,SACK,GAAAA,EAAAnE,EAAAmE,MAxCL,SAwCK,CACL,kBAAAA,EAAA,GACA,gBAKA,KAFAuO,EAAAgN,EAAAvb,EAAA,KAGA,OAIA,QAAAwC,EAAA,EAAmBA,EAAA+L,EAAAhc,OAAgBiQ,IACnC+L,EAAA/L,GAAAua,EAAAxO,EAAA/L,GAAA,OAUA,OAJAyE,EAHAA,GAAA,GAAAA,EAGA8V,EAAA9V,EAAA,KAFA,EAKAsH,EAAA,GAAAtH,EACAsH,GAGA,SAAAmN,EAAA7f,GACA,GAAAA,EAAA,CAIA,IACAmE,EAAAnE,EAAAmE,MADA,4GAGA,GAAAA,EAAA,CACA,IAAAoc,EAAAU,WAAA9c,EAAA,IACAgM,EAAA+Q,EAAAF,SAAA7c,EAAA,WACAiM,EAAA8Q,EAAAD,WAAA9c,EAAA,WACAkM,EAAA6Q,EAAAD,WAAA9c,EAAA,WACAiH,EAAA8V,EAAAC,MAAAZ,GAAA,EAAAA,EAAA,KACA,OAAApQ,EAAAC,EAAAC,EAAAjF,KAIA,SAAA8U,EAAAlgB,GACA,GAAAA,EAAA,CAIA,IACAmE,EAAAnE,EAAAmE,MADA,0GAGA,GAAAA,EAAA,CACA,IAAAoc,EAAAU,WAAA9c,EAAA,IACAgM,EAAA+Q,EAAAF,SAAA7c,EAAA,WACA+O,EAAAgO,EAAAD,WAAA9c,EAAA,WACA0O,EAAAqO,EAAAD,WAAA9c,EAAA,WACAiH,EAAA8V,EAAAC,MAAAZ,GAAA,EAAAA,EAAA,KACA,OAAApQ,EAAA+C,EAAAL,EAAAzH,KAwCA,SAAAoV,EAAAT,EAAAQ,GAKA,YAJA/mB,IAAA+mB,IACAA,OAAA/mB,IAAAumB,EAAA,GAAAA,EAAA,MAGA,QAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAAAQ,EAAA,IAcA,SAAAG,EAAAX,EAAAQ,GACA,IAAA5N,EAAAI,KAAAkM,MAAAc,EAAA,YACAnN,EAAAG,KAAAkM,MAAAc,EAAA,YACAlN,EAAAE,KAAAkM,MAAAc,EAAA,YACA,cAAApN,EAAA,MAAAC,EAAA,MAAAC,EAAA,OAAA0N,GAAAR,EAAA,WAWA,SAAAa,EAAAX,EAAAM,GAKA,YAJA/mB,IAAA+mB,IACAA,OAAA/mB,IAAAymB,EAAA,GAAAA,EAAA,MAGA,QAAAA,EAAA,QAAAA,EAAA,SAAAA,EAAA,SAAAM,EAAA,IAkBA,SAAAW,EAAAE,EAAAtO,EAAAE,GACA,OAAAD,KAAAD,IAAAC,KAAAC,IAAAF,EAAAsO,GAAApO,GAGA,SAAAqN,EAAAe,GACA,IAAAC,EAAAD,EAAA1oB,SAAA,IAAA4oB,cACA,OAAAD,EAAA3qB,OAAA,MAAA2qB,IAIA,IAAAP,EAAA,GAEA,QAAA/e,KAAA2d,EACAoB,EAAApB,EAAA3d,MAKA,IAAAwf,EAAA,SAAAA,EAAA1a,GACA,OAAAA,aAAA0a,EACA1a,EAGA7R,gBAAAusB,GAIAvsB,KAAAwsB,OAAA,EACAxsB,KAAAwB,OAAA,CACAkc,IAAA,QACAxC,IAAA,QACAS,IAAA,QACA2D,IAAA,QACAI,KAAA,UACA6L,MAAA,QAKA,kBAAA1Z,GACA0Y,EAAAI,EAAAC,QAAA/Y,IAGA7R,KAAAsqB,UAAA,MAAAC,IACOA,EAAAI,EAAAE,QAAAhZ,IACP7R,KAAAsqB,UAAA,MAAAC,IACOA,EAAAI,EAAAO,OAAArZ,KACP7R,KAAAsqB,UAAA,MAAAC,GAEK,kBAAA1Y,SAGLrN,KAFA+lB,EAAA1Y,GAEA8L,QAAAnZ,IAAA+lB,EAAAvC,IACAhoB,KAAAsqB,UAAA,MAAAC,QACO/lB,IAAA+lB,EAAAlP,QAAA7W,IAAA+lB,EAAAkC,UACPzsB,KAAAsqB,UAAA,MAAAC,QACO/lB,IAAA+lB,EAAA1O,QAAArX,IAAA+lB,EAAA7pB,MACPV,KAAAsqB,UAAA,MAAAC,QACO/lB,IAAA+lB,EAAArM,QAAA1Z,IAAA+lB,EAAAmC,UACP1sB,KAAAsqB,UAAA,MAAAC,QACO/lB,IAAA+lB,EAAA5K,QAAAnb,IAAA+lB,EAAA3I,MACP5hB,KAAAsqB,UAAA,OAAAC,MArCA,IAAAgC,EAAA1a,GAaA,IAAA0Y,IA6BAgC,EAAApsB,UAAA,CACAwsB,QAAA,WACA,OAAA3sB,KAAAwsB,OAEA9O,IAAA,WACA,OAAA1d,KAAA4sB,SAAA,MAAA9c,YAEAoL,IAAA,WACA,OAAAlb,KAAA4sB,SAAA,MAAA9c,YAEA6L,IAAA,WACA,OAAA3b,KAAA4sB,SAAA,MAAA9c,YAEAwP,IAAA,WACA,OAAAtf,KAAA4sB,SAAA,MAAA9c,YAEA4P,KAAA,WACA,OAAA1f,KAAA4sB,SAAA,OAAA9c,YAEA+c,SAAA,WACA,OAAA7sB,KAAAwB,OAAAkc,KAEAoP,SAAA,WACA,OAAA9sB,KAAAwB,OAAA0Z,KAEA6R,SAAA,WACA,OAAA/sB,KAAAwB,OAAAma,KAEAqR,SAAA,WACA,IAAAxrB,EAAAxB,KAAAwB,OAEA,WAAAA,EAAA+pB,MACA/pB,EAAA8d,IAAAnM,OAAA,CAAA3R,EAAA+pB,QAGA/pB,EAAA8d,KAEA2N,UAAA,WACA,OAAAjtB,KAAAwB,OAAAke,MAEAwN,UAAA,WACA,IAAA1rB,EAAAxB,KAAAwB,OACA,OAAAA,EAAAkc,IAAAvK,OAAA,CAAA3R,EAAA+pB,SAEA4B,UAAA,WACA,IAAA3rB,EAAAxB,KAAAwB,OACA,OAAAA,EAAA0Z,IAAA/H,OAAA,CAAA3R,EAAA+pB,SAEAA,MAAA,SAAAxM,GACA,YAAAva,IAAAua,EACA/e,KAAAwB,OAAA+pB,OAGAvrB,KAAAsqB,UAAA,QAAAvL,GACA/e,OAEAgoB,IAAA,SAAAjJ,GACA,OAAA/e,KAAAotB,WAAA,QAAArO,IAEA+E,MAAA,SAAA/E,GACA,OAAA/e,KAAAotB,WAAA,QAAArO,IAEAkC,KAAA,SAAAlC,GACA,OAAA/e,KAAAotB,WAAA,QAAArO,IAEAsO,IAAA,SAAAtO,GAMA,OALAA,IAEAA,GADAA,GAAA,KACA,MAAAA,KAGA/e,KAAAotB,WAAA,QAAArO,IAEAuO,WAAA,SAAAvO,GACA,OAAA/e,KAAAotB,WAAA,QAAArO,IAEA0N,UAAA,SAAA1N,GACA,OAAA/e,KAAAotB,WAAA,QAAArO,IAEAwO,YAAA,SAAAxO,GACA,OAAA/e,KAAAotB,WAAA,QAAArO,IAEA2N,UAAA,SAAA3N,GACA,OAAA/e,KAAAotB,WAAA,QAAArO,IAEAyO,UAAA,SAAAzO,GACA,OAAA/e,KAAAotB,WAAA,QAAArO,IAEAre,MAAA,SAAAqe,GACA,OAAA/e,KAAAotB,WAAA,QAAArO,IAEA6C,KAAA,SAAA7C,GACA,OAAA/e,KAAAotB,WAAA,SAAArO,IAEA8G,QAAA,SAAA9G,GACA,OAAA/e,KAAAotB,WAAA,SAAArO,IAEA2K,OAAA,SAAA3K,GACA,OAAA/e,KAAAotB,WAAA,SAAArO,IAEAgC,MAAA,SAAAhC,GACA,OAAA/e,KAAAotB,WAAA,SAAArO,IAEAqM,UAAA,WACA,OAAAT,EAAAS,UAAAprB,KAAAwB,OAAAkc,MAEA4N,UAAA,WACA,OAAAX,EAAAW,UAAAtrB,KAAAwB,OAAAkc,IAAA1d,KAAAwB,OAAA+pB,QAEAC,WAAA,WACA,OAAAb,EAAAa,WAAAxrB,KAAAwB,OAAAkc,IAAA1d,KAAAwB,OAAA+pB,QAEAE,cAAA,WACA,OAAAd,EAAAc,cAAAzrB,KAAAwB,OAAAkc,IAAA1d,KAAAwB,OAAA+pB,QAEAI,UAAA,WACA,OAAAhB,EAAAgB,UAAA3rB,KAAAwB,OAAA0Z,IAAAlb,KAAAwB,OAAA+pB,QAEAK,WAAA,WACA,OAAAjB,EAAAiB,WAAA5rB,KAAAwB,OAAA0Z,IAAAlb,KAAAwB,OAAA+pB,QAEAM,UAAA,WACA,OAAAlB,EAAAkB,UAAA7rB,KAAAwB,OAAA8d,IAAAtf,KAAAwB,OAAA+pB,QAEAjL,QAAA,WACA,OAAAqK,EAAArK,QAAAtgB,KAAAwB,OAAAkc,IAAA1d,KAAAwB,OAAA+pB,QAEAkC,UAAA,WACA,IAAA/P,EAAA1d,KAAAwB,OAAAkc,IACA,OAAAA,EAAA,OAAAA,EAAA,MAAAA,EAAA,IAEAgQ,WAAA,WAKA,IAHA,IAAAhQ,EAAA1d,KAAAwB,OAAAkc,IACAiQ,EAAA,GAEAhc,EAAA,EAAqBA,EAAA+L,EAAAhc,OAAgBiQ,IAAA,CACrC,IAAAic,EAAAlQ,EAAA/L,GAAA,IACAgc,EAAAhc,GAAAic,GAAA,OAAAA,EAAA,MAAA7P,KAAAQ,KAAAqP,EAAA,iBAGA,YAAAD,EAAA,SAAAA,EAAA,SAAAA,EAAA,IAEAE,SAAA,SAAAC,GAEA,IAAAC,EAAA/tB,KAAA0tB,aACAM,EAAAF,EAAAJ,aAEA,OAAAK,EAAAC,GACAD,EAAA,MAAAC,EAAA,MAGAA,EAAA,MAAAD,EAAA,MAEAE,MAAA,SAAAH,GACA,IAAAI,EAAAluB,KAAA6tB,SAAAC,GAEA,OAAAI,GAAA,IACA,MAGAA,GAAA,aAEAC,KAAA,WAEA,IAAAzQ,EAAA1d,KAAAwB,OAAAkc,IAEA,OADA,IAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,QACA,KAEA0Q,MAAA,WACA,OAAApuB,KAAAmuB,QAEAE,OAAA,WAGA,IAFA,IAAA3Q,EAAA,GAEA/L,EAAA,EAAqBA,EAAA,EAAOA,IAC5B+L,EAAA/L,GAAA,IAAA3R,KAAAwB,OAAAkc,IAAA/L,GAIA,OADA3R,KAAAsqB,UAAA,MAAA5M,GACA1d,MAEAsuB,QAAA,SAAA7O,GACA,IAAAvE,EAAAlb,KAAAwB,OAAA0Z,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAuE,EACAzf,KAAAsqB,UAAA,MAAApP,GACAlb,MAEAuuB,OAAA,SAAA9O,GACA,IAAAvE,EAAAlb,KAAAwB,OAAA0Z,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAuE,EACAzf,KAAAsqB,UAAA,MAAApP,GACAlb,MAEAwuB,SAAA,SAAA/O,GACA,IAAAvE,EAAAlb,KAAAwB,OAAA0Z,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAuE,EACAzf,KAAAsqB,UAAA,MAAApP,GACAlb,MAEAyuB,WAAA,SAAAhP,GACA,IAAAvE,EAAAlb,KAAAwB,OAAA0Z,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAuE,EACAzf,KAAAsqB,UAAA,MAAApP,GACAlb,MAEA0uB,OAAA,SAAAjP,GACA,IAAAH,EAAAtf,KAAAwB,OAAA8d,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAG,EACAzf,KAAAsqB,UAAA,MAAAhL,GACAtf,MAEA2uB,QAAA,SAAAlP,GACA,IAAAH,EAAAtf,KAAAwB,OAAA8d,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAG,EACAzf,KAAAsqB,UAAA,MAAAhL,GACAtf,MAEA4uB,UAAA,WACA,IAAAlR,EAAA1d,KAAAwB,OAAAkc,IAEAqB,EAAA,GAAArB,EAAA,OAAAA,EAAA,OAAAA,EAAA,GAEA,OADA1d,KAAAsqB,UAAA,OAAAvL,QACA/e,MAEA6uB,QAAA,SAAApP,GACA,IAAA8L,EAAAvrB,KAAAwB,OAAA+pB,MAEA,OADAvrB,KAAAsqB,UAAA,QAAAiB,IAAA9L,GACAzf,MAEA8uB,QAAA,SAAArP,GACA,IAAA8L,EAAAvrB,KAAAwB,OAAA+pB,MAEA,OADAvrB,KAAAsqB,UAAA,QAAAiB,IAAA9L,GACAzf,MAEA+uB,OAAA,SAAAC,GACA,IAAA9T,EAAAlb,KAAAwB,OAAA0Z,IACAmS,GAAAnS,EAAA,GAAA8T,GAAA,IAGA,OAFA9T,EAAA,GAAAmS,EAAA,MAAAA,IACArtB,KAAAsqB,UAAA,MAAApP,GACAlb,MAOAivB,IAAA,SAAAC,EAAAC,GACA,IACArB,EAAAoB,EACA/P,OAAA3a,IAAA2qB,EAAA,GAAAA,EACAjR,EAAA,EAAAiB,EAAA,EACA/I,EAJApW,KAIAurB,QAAAuC,EAAAvC,QACA6D,IAAAlR,EAAA9H,KAAA,EAAA8H,KAAA9H,IAAA,EAAA8H,EAAA9H,IAAA,KACAiZ,EAAA,EAAAD,EACA,OAAApvB,KAAA0d,IAAA0R,EAPApvB,KAOAgoB,MAAAqH,EAAAvB,EAAA9F,MAAAoH,EAPApvB,KAOA8jB,QAAAuL,EAAAvB,EAAAhK,QAAAsL,EAPApvB,KAOAihB,OAAAoO,EAAAvB,EAAA7M,QAAAsK,MAPAvrB,KAOAurB,QAAApM,EAAA2O,EAAAvC,SAAA,EAAApM,KAEAmQ,OAAA,WACA,OAAAtvB,KAAA0d,OAEA6R,MAAA,WAKA,IAGA7uB,EAAAgL,EAHApH,EAAA,IAAAioB,EACAhe,EAAAvO,KAAAwB,OACAkQ,EAAApN,EAAA9C,OAGA,QAAAguB,KAAAjhB,EACAA,EAAAvI,eAAAwpB,KACA9uB,EAAA6N,EAAAihB,GAGA,oBAFA9jB,EAAA,GAAmBhI,SAAArB,KAAA3B,IAGnBgR,EAAA8d,GAAA9uB,EAAAmpB,MAAA,GACW,oBAAAne,EACXgG,EAAA8d,GAAA9uB,EAEAoV,QAAAC,MAAA,0BAAArV,IAKA,OAAA4D,KAGAmrB,OAAA,CACA/R,IAAA,uBACAxC,IAAA,iCACAS,IAAA,6BACA2D,IAAA,gCACAI,KAAA,qCAEA6M,EAAApsB,UAAAuvB,MAAA,CACAhS,IAAA,cACAxC,IAAA,cACAS,IAAA,cACA2D,IAAA,cACAI,KAAA,mBAGA6M,EAAApsB,UAAAkqB,UAAA,SAAAD,GAIA,IAHA,IAAA5oB,EAAAxB,KAAAwB,OACA+oB,EAAA,GAEA5Y,EAAA,EAAmBA,EAAAyY,EAAA1oB,OAAkBiQ,IACrC4Y,EAAAH,EAAAuF,OAAAhe,IAAAnQ,EAAA4oB,GAAAzY,GAQA,OALA,IAAAnQ,EAAA+pB,QACAhB,EAAAnU,EAAA5U,EAAA+pB,OAIAhB,GAGAgC,EAAApsB,UAAAmqB,UAAA,SAAAF,EAAAG,GACA,IAIA5Y,EAiCAie,EArCApuB,EAAAxB,KAAAwB,OACAiuB,EAAAzvB,KAAAyvB,OACAC,EAAA1vB,KAAA0vB,MACAnE,EAAA,EAIA,GAFAvrB,KAAAwsB,OAAA,EAEA,UAAApC,EACAmB,EAAAhB,OACK,GAAAA,EAAA7oB,OAELF,EAAA4oB,GAAAG,EAAAV,MAAA,EAAAO,EAAA1oB,QACA6pB,EAAAhB,EAAAH,EAAA1oB,aACK,QAAA8C,IAAA+lB,EAAAH,EAAAuF,OAAA,KAEL,IAAAhe,EAAA,EAAiBA,EAAAyY,EAAA1oB,OAAkBiQ,IACnCnQ,EAAA4oB,GAAAzY,GAAA4Y,EAAAH,EAAAuF,OAAAhe,IAGA4Z,EAAAhB,EAAAnU,OACK,QAAA5R,IAAA+lB,EAAAkF,EAAArF,GAAA,KAEL,IAAAyF,EAAAJ,EAAArF,GAEA,IAAAzY,EAAA,EAAiBA,EAAAyY,EAAA1oB,OAAkBiQ,IACnCnQ,EAAA4oB,GAAAzY,GAAA4Y,EAAAsF,EAAAle,IAGA4Z,EAAAhB,EAAAgB,MAKA,GAFA/pB,EAAA+pB,MAAAxN,KAAAC,IAAA,EAAAD,KAAAD,IAAA,OAAAtZ,IAAA+mB,EAAA/pB,EAAA+pB,UAEA,UAAAnB,EACA,SAKA,IAAAzY,EAAA,EAAeA,EAAAyY,EAAA1oB,OAAkBiQ,IACjCie,EAAA7R,KAAAC,IAAA,EAAAD,KAAAD,IAAA4R,EAAAtF,GAAAzY,GAAAnQ,EAAA4oB,GAAAzY,KACAnQ,EAAA4oB,GAAAzY,GAAAoM,KAAAkM,MAAA2F,GAIA,QAAAE,KAAAL,EACAK,IAAA1F,IACA5oB,EAAAsuB,GAAArF,EAAAL,GAAA0F,GAAAtuB,EAAA4oB,KAIA,UAGAmC,EAAApsB,UAAAysB,SAAA,SAAAxC,EAAAva,GACA,IAAA0a,EAAA1a,EAAA,GAEA,YAAArL,IAAA+lB,EAEAvqB,KAAAqqB,UAAAD,IAIA,kBAAAG,IACAA,EAAAnhB,MAAAjJ,UAAA0pB,MAAAxnB,KAAAwN,IAGA7P,KAAAsqB,UAAAF,EAAAG,GACAvqB,OAGAusB,EAAApsB,UAAAitB,WAAA,SAAAhD,EAAA3oB,EAAAsd,GACA,IAAAgR,EAAA/vB,KAAAwB,OAAA4oB,GAEA,YAAA5lB,IAAAua,EAEAgR,EAAAtuB,GACKsd,IAAAgR,EAAAtuB,GAELzB,MAIA+vB,EAAAtuB,GAAAsd,EACA/e,KAAAsqB,UAAAF,EAAA2F,GACA/vB,OAGA,qBAAAgwB,SACAA,OAAAzD,SAGA,IAAA0D,EAAA1D,EAKAlW,EAAA,CAIA6Z,KAAA,aAOAxlB,IAAA,WACA,IAAA6M,EAAA,EACA,kBACA,OAAAA,KAHA,GAaA4Y,cAAA,SAAAzvB,GACA,cAAAA,GAAA,qBAAAA,GASA+E,QAAA,SAAA/E,GACA,GAAA0I,MAAA3D,SAAA2D,MAAA3D,QAAA/E,GACA,SAGA,IAAAgL,EAAA3J,OAAA5B,UAAAuD,SAAArB,KAAA3B,GAEA,kBAAAgL,EAAA0kB,OAAA,iBAAA1kB,EAAA0kB,QAAA,IAaAntB,SAAA,SAAAvC,GACA,cAAAA,GAAA,oBAAAqB,OAAA5B,UAAAuD,SAAArB,KAAA3B,IAQA2vB,SAAA,SAAAC,GACA,SAAAD,EAAAE,GACA,OAAAD,EAAAvgB,MAAA/P,KAAA8P,WAOA,OAJAugB,EAAA3sB,SAAA,WACA,OAAA4sB,EAAA5sB,YAGA2sB,EATA,CAUK,SAAA3vB,GACL,yBAAAA,gBAAA8vB,SAAAH,SAAA3vB,KASA+vB,eAAA,SAAA/vB,EAAAgwB,GACA,2BAAAhwB,EAAAgwB,EAAAhwB,GAUAiwB,sBAAA,SAAAjwB,EAAAe,EAAAivB,GACA,OAAAra,EAAAoa,eAAApa,EAAA5Q,QAAA/E,KAAAe,GAAAf,EAAAgwB,IAWAE,SAAA,SAAAC,EAAAhhB,EAAAihB,GACA,GAAAD,GAAA,oBAAAA,EAAAxuB,KACA,OAAAwuB,EAAA9gB,MAAA+gB,EAAAjhB,IAaAkhB,KAAA,SAAAC,EAAAH,EAAAC,EAAAG,GACA,IAAAtf,EAAAuf,EAAA3rB,EAEA,GAAA8Q,EAAA5Q,QAAAurB,GAGA,GAFAE,EAAAF,EAAAtvB,OAEAuvB,EACA,IAAAtf,EAAAuf,EAAA,EAA2Bvf,GAAA,EAAQA,IACnCkf,EAAAxuB,KAAAyuB,EAAAE,EAAArf,WAGA,IAAAA,EAAA,EAAqBA,EAAAuf,EAASvf,IAC9Bkf,EAAAxuB,KAAAyuB,EAAAE,EAAArf,WAGO,GAAA0E,EAAApT,SAAA+tB,GAIP,IAHAzrB,EAAAxD,OAAAwD,KAAAyrB,GACAE,EAAA3rB,EAAA7D,OAEAiQ,EAAA,EAAmBA,EAAAuf,EAASvf,IAC5Bkf,EAAAxuB,KAAAyuB,EAAAE,EAAAzrB,EAAAoM,IAAApM,EAAAoM,KAYAwf,YAAA,SAAAC,EAAAC,GACA,IAAA1f,EAAA2f,EAAAC,EAAAC,EAEA,IAAAJ,IAAAC,GAAAD,EAAA1vB,SAAA2vB,EAAA3vB,OACA,SAGA,IAAAiQ,EAAA,EAAA2f,EAAAF,EAAA1vB,OAAmCiQ,EAAA2f,IAAU3f,EAI7C,GAHA4f,EAAAH,EAAAzf,GACA6f,EAAAH,EAAA1f,GAEA4f,aAAAnoB,OAAAooB,aAAApoB,OACA,IAAAiN,EAAA8a,YAAAI,EAAAC,GACA,cAES,GAAAD,IAAAC,EAET,SAIA,UAQAjC,MAAA,SAAAhhB,GACA,GAAA8H,EAAA5Q,QAAA8I,GACA,OAAAA,EAAAxD,IAAAsL,EAAAkZ,OAGA,GAAAlZ,EAAApT,SAAAsL,GAAA,CAMA,IALA,IAAAmD,EAAA,GACAnM,EAAAxD,OAAAwD,KAAAgJ,GACAkjB,EAAAlsB,EAAA7D,OACAyc,EAAA,EAEcA,EAAAsT,IAAUtT,EACxBzM,EAAAnM,EAAA4Y,IAAA9H,EAAAkZ,MAAAhhB,EAAAhJ,EAAA4Y,KAGA,OAAAzM,EAGA,OAAAnD,GAQAmjB,QAAA,SAAA5sB,EAAA4M,EAAAnD,EAAAkG,GACA,IAAAkd,EAAAjgB,EAAA5M,GACA8sB,EAAArjB,EAAAzJ,GAEAuR,EAAApT,SAAA0uB,IAAAtb,EAAApT,SAAA2uB,GACAvb,EAAAwb,MAAAF,EAAAC,EAAAnd,GAEA/C,EAAA5M,GAAAuR,EAAAkZ,MAAAqC,IAQAE,UAAA,SAAAhtB,EAAA4M,EAAAnD,GACA,IAAAojB,EAAAjgB,EAAA5M,GACA8sB,EAAArjB,EAAAzJ,GAEAuR,EAAApT,SAAA0uB,IAAAtb,EAAApT,SAAA2uB,GACAvb,EAAA0b,QAAAJ,EAAAC,GACOlgB,EAAA1L,eAAAlB,KACP4M,EAAA5M,GAAAuR,EAAAkZ,MAAAqC,KAaAC,MAAA,SAAAngB,EAAAnD,EAAAkG,GACA,IAEAod,EAAAlgB,EAAApM,EAAAksB,EAAAtT,EAFA6T,EAAA3b,EAAA5Q,QAAA8I,KAAA,CAAAA,GACA+iB,EAAAU,EAAAtwB,OAGA,IAAA2U,EAAApT,SAAAyO,GACA,OAAAA,EAMA,IAFAmgB,GADApd,KAAA,IACAwd,QAAA5b,EAAAqb,QAEA/f,EAAA,EAAiBA,EAAA2f,IAAU3f,EAG3B,GAFApD,EAAAyjB,EAAArgB,GAEA0E,EAAApT,SAAAsL,GAMA,IAFAhJ,EAAAxD,OAAAwD,KAAAgJ,GAEA4P,EAAA,EAAAsT,EAAAlsB,EAAA7D,OAAuCyc,EAAAsT,IAAUtT,EACjD0T,EAAAtsB,EAAA4Y,GAAAzM,EAAAnD,EAAAkG,GAIA,OAAA/C,GAUAqgB,QAAA,SAAArgB,EAAAnD,GACA,OAAA8H,EAAAwb,MAAAngB,EAAAnD,EAAA,CACA0jB,OAAA5b,EAAAyb,aAWAI,OAAA,SAAAxgB,GAKA,IAJA,IAAAygB,EAAA,SAAAzxB,EAAAoE,GACA4M,EAAA5M,GAAApE,GAGAiR,EAAA,EAAA2f,EAAAxhB,UAAApO,OAA8CiQ,EAAA2f,IAAU3f,EACxD0E,EAAA0a,KAAAjhB,UAAA6B,GAAAwgB,GAGA,OAAAzgB,GAMA0gB,SAAA,SAAAC,GACA,IAAAC,EAAAtyB,KACAuyB,EAAAF,KAAArsB,eAAA,eAAAqsB,EAAA5kB,YAAA,WACA,OAAA6kB,EAAAviB,MAAA/P,KAAA8P,YAGA0iB,EAAA,WACAxyB,KAAAyN,YAAA8kB,GAYA,OATAC,EAAAryB,UAAAmyB,EAAAnyB,UACAoyB,EAAApyB,UAAA,IAAAqyB,EACAD,EAAAL,OAAA7b,EAAA+b,SAEAC,GACAhc,EAAA6b,OAAAK,EAAApyB,UAAAkyB,GAGAE,EAAAE,UAAAH,EAAAnyB,UACAoyB,IAGAG,EAAArc,EAUAA,EAAAsc,aAAAtc,EAAAua,SAUAva,EAAAvE,QAAA,SAAAvQ,EAAAqxB,EAAAC,GACA,OAAAzpB,MAAAjJ,UAAA2R,QAAAzP,KAAAd,EAAAqxB,EAAAC,IAWAxc,EAAAyc,kBAAAzc,EAAAoa,eASApa,EAAA0c,yBAAA1c,EAAAsa,sBAOA,IAAAqC,EAAA,CACAC,OAAA,SAAA5T,GACA,OAAAA,GAEA6T,WAAA,SAAA7T,GACA,OAAAA,KAEA8T,YAAA,SAAA9T,GACA,OAAAA,KAAA,IAEA+T,cAAA,SAAA/T,GACA,OAAAA,GAAA,MACA,GAAAA,KAGA,MAAAA,KAAA,OAEAgU,YAAA,SAAAhU,GACA,OAAAA,OAEAiU,aAAA,SAAAjU,GACA,OAAAA,GAAA,GAAAA,IAAA,GAEAkU,eAAA,SAAAlU,GACA,OAAAA,GAAA,MACA,GAAAA,MAGA,KAAAA,GAAA,GAAAA,IAAA,IAEAmU,YAAA,SAAAnU,GACA,OAAAA,SAEAoU,aAAA,SAAApU,GACA,SAAAA,GAAA,GAAAA,MAAA,IAEAqU,eAAA,SAAArU,GACA,OAAAA,GAAA,MACA,GAAAA,SAGA,KAAAA,GAAA,GAAAA,MAAA,IAEAsU,YAAA,SAAAtU,GACA,OAAAA,WAEAuU,aAAA,SAAAvU,GACA,OAAAA,GAAA,GAAAA,QAAA,GAEAwU,eAAA,SAAAxU,GACA,OAAAA,GAAA,MACA,GAAAA,UAGA,KAAAA,GAAA,GAAAA,QAAA,IAEAyU,WAAA,SAAAzU,GACA,SAAAtB,KAAAqC,IAAAf,GAAAtB,KAAAkC,GAAA,KAEA8T,YAAA,SAAA1U,GACA,OAAAtB,KAAAsC,IAAAhB,GAAAtB,KAAAkC,GAAA,KAEA+T,cAAA,SAAA3U,GACA,WAAAtB,KAAAqC,IAAArC,KAAAkC,GAAAZ,GAAA,IAEA4U,WAAA,SAAA5U,GACA,WAAAA,EAAA,EAAAtB,KAAAQ,IAAA,MAAAc,EAAA,KAEA6U,YAAA,SAAA7U,GACA,WAAAA,EAAA,IAAAtB,KAAAQ,IAAA,MAAAc,IAEA8U,cAAA,SAAA9U,GACA,WAAAA,EACA,EAGA,IAAAA,EACA,GAGAA,GAAA,MACA,GAAAtB,KAAAQ,IAAA,MAAAc,EAAA,IAGA,MAAAtB,KAAAQ,IAAA,QAAAc,KAEA+U,WAAA,SAAA/U,GACA,OAAAA,GAAA,EACAA,IAGAtB,KAAAmC,KAAA,EAAAb,KAAA,IAEAgV,YAAA,SAAAhV,GACA,OAAAtB,KAAAmC,KAAA,GAAAb,GAAA,GAAAA,IAEAiV,cAAA,SAAAjV,GACA,OAAAA,GAAA,OACA,IAAAtB,KAAAmC,KAAA,EAAAb,KAAA,GAGA,IAAAtB,KAAAmC,KAAA,GAAAb,GAAA,GAAAA,GAAA,IAEAkV,cAAA,SAAAlV,GACA,IAAAjE,EAAA,QACA+D,EAAA,EACA/I,EAAA,EAEA,WAAAiJ,EACA,EAGA,IAAAA,EACA,GAGAF,IACAA,EAAA,IAGA/I,EAAA,GACAA,EAAA,EACAgF,EAAA+D,EAAA,GAEA/D,EAAA+D,GAAA,EAAApB,KAAAkC,IAAAlC,KAAAyW,KAAA,EAAApe,IAGAA,EAAA2H,KAAAQ,IAAA,MAAAc,GAAA,IAAAtB,KAAAsC,KAAAhB,EAAAjE,IAAA,EAAA2C,KAAAkC,IAAAd,KAEAsV,eAAA,SAAApV,GACA,IAAAjE,EAAA,QACA+D,EAAA,EACA/I,EAAA,EAEA,WAAAiJ,EACA,EAGA,IAAAA,EACA,GAGAF,IACAA,EAAA,IAGA/I,EAAA,GACAA,EAAA,EACAgF,EAAA+D,EAAA,GAEA/D,EAAA+D,GAAA,EAAApB,KAAAkC,IAAAlC,KAAAyW,KAAA,EAAApe,GAGAA,EAAA2H,KAAAQ,IAAA,MAAAc,GAAAtB,KAAAsC,KAAAhB,EAAAjE,IAAA,EAAA2C,KAAAkC,IAAAd,GAAA,IAEAuV,iBAAA,SAAArV,GACA,IAAAjE,EAAA,QACA+D,EAAA,EACA/I,EAAA,EAEA,WAAAiJ,EACA,EAGA,KAAAA,GAAA,IACA,GAGAF,IACAA,EAAA,KAGA/I,EAAA,GACAA,EAAA,EACAgF,EAAA+D,EAAA,GAEA/D,EAAA+D,GAAA,EAAApB,KAAAkC,IAAAlC,KAAAyW,KAAA,EAAApe,GAGAiJ,EAAA,EACAjJ,EAAA2H,KAAAQ,IAAA,MAAAc,GAAA,IAAAtB,KAAAsC,KAAAhB,EAAAjE,IAAA,EAAA2C,KAAAkC,IAAAd,IAAA,GAGA/I,EAAA2H,KAAAQ,IAAA,OAAAc,GAAA,IAAAtB,KAAAsC,KAAAhB,EAAAjE,IAAA,EAAA2C,KAAAkC,IAAAd,GAAA,OAEAwV,WAAA,SAAAtV,GACA,IAAAjE,EAAA,QACA,OAAAiE,MAAAjE,EAAA,GAAAiE,EAAAjE,IAEAwZ,YAAA,SAAAvV,GACA,IAAAjE,EAAA,QACA,OAAAiE,GAAA,GAAAA,IAAAjE,EAAA,GAAAiE,EAAAjE,GAAA,GAEAyZ,cAAA,SAAAxV,GACA,IAAAjE,EAAA,QAEA,OAAAiE,GAAA,MACAA,MAAA,GAAAjE,GAAA,QAAAiE,EAAAjE,GAAA,GAGA,KAAAiE,GAAA,GAAAA,IAAA,GAAAjE,GAAA,QAAAiE,EAAAjE,GAAA,IAEA0Z,aAAA,SAAAzV,GACA,SAAA2T,EAAA+B,cAAA,EAAA1V,IAEA0V,cAAA,SAAA1V,GACA,OAAAA,EAAA,OACA,OAAAA,IAGAA,EAAA,OACA,QAAAA,GAAA,UAAAA,EAAA,IAGAA,EAAA,SACA,QAAAA,GAAA,WAAAA,EAAA,MAGA,QAAAA,GAAA,YAAAA,EAAA,SAEA2V,gBAAA,SAAA3V,GACA,OAAAA,EAAA,GACA,GAAA2T,EAAA8B,aAAA,EAAAzV,GAGA,GAAA2T,EAAA+B,cAAA,EAAA1V,EAAA,QAGA4V,EAAA,CACAjC,WAWAN,EAAAwC,cAAAlC,EACA,IAAA/S,EAAAlC,KAAAkC,GACAkV,EAAAlV,EAAA,IACAmV,EAAA,EAAAnV,EACAoV,GAAApV,EAAA,EACAqV,GAAArV,EAAA,EACAsV,GAAA,EAAAtV,EAAA,EAKAuV,GAAA,CAKAp1B,MAAA,SAAAq1B,GACAA,EAAAC,IAAAC,UAAA,IAAAF,EAAA5gB,MAAA4gB,EAAA7gB,SAcAghB,YAAA,SAAAF,EAAAlX,EAAAC,EAAA5J,EAAAD,EAAAihB,GACA,GAAAA,EAAA,CACA,IAAAlY,EAAAI,KAAAD,IAAA+X,EAAAjhB,EAAA,EAAAC,EAAA,GACAihB,EAAAtX,EAAAb,EACAoY,EAAAtX,EAAAd,EACAqY,EAAAxX,EAAA3J,EAAA8I,EACAsY,EAAAxX,EAAA7J,EAAA+I,EACA+X,EAAAQ,OAAA1X,EAAAuX,GAEAD,EAAAE,GAAAD,EAAAE,GACAP,EAAAS,IAAAL,EAAAC,EAAApY,GAAAsC,GAAAoV,IACAK,EAAAS,IAAAH,EAAAD,EAAApY,GAAA0X,GAAA,GACAK,EAAAS,IAAAH,EAAAC,EAAAtY,EAAA,EAAA0X,IACAK,EAAAS,IAAAL,EAAAG,EAAAtY,EAAA0X,GAAApV,IACS6V,EAAAE,GACTN,EAAAQ,OAAAJ,EAAArX,GACAiX,EAAAS,IAAAH,EAAAD,EAAApY,GAAA0X,OACAK,EAAAS,IAAAL,EAAAC,EAAApY,EAAA0X,GAAApV,EAAAoV,KACSU,EAAAE,GACTP,EAAAS,IAAAL,EAAAC,EAAApY,GAAAsC,EAAA,GACAyV,EAAAS,IAAAL,EAAAG,EAAAtY,EAAA,EAAAsC,IAEAyV,EAAAS,IAAAL,EAAAC,EAAApY,GAAAsC,KAGAyV,EAAAU,YACAV,EAAAQ,OAAA1X,EAAAC,QAEAiX,EAAAW,KAAA7X,EAAAC,EAAA5J,EAAAD,IAGA0hB,UAAA,SAAAZ,EAAAa,EAAAV,EAAArX,EAAAC,EAAA+X,GACA,IAAA9qB,EAAA+qB,EAAAC,EAAAx2B,EAAAy2B,EACAC,GAAAJ,GAAA,GAAArB,EAEA,IAAAoB,GAAA,kBAAAA,GAGA,+BAFA7qB,EAAA6qB,EAAA7yB,aAEA,+BAAAgI,GAMA,KAAAygB,MAAA0J,OAAA,IAMA,OAFAH,EAAAmB,YAEAN,GAEA,QACAb,EAAAS,IAAA3X,EAAAC,EAAAoX,EAAA,EAAAT,GACAM,EAAAU,YACA,MAEA,eACAV,EAAAQ,OAAA1X,EAAAT,KAAAsC,IAAAuW,GAAAf,EAAApX,EAAAV,KAAAqC,IAAAwW,GAAAf,GACAe,GAAArB,GACAG,EAAAoB,OAAAtY,EAAAT,KAAAsC,IAAAuW,GAAAf,EAAApX,EAAAV,KAAAqC,IAAAwW,GAAAf,GACAe,GAAArB,GACAG,EAAAoB,OAAAtY,EAAAT,KAAAsC,IAAAuW,GAAAf,EAAApX,EAAAV,KAAAqC,IAAAwW,GAAAf,GACAH,EAAAU,YACA,MAEA,kBASAl2B,EAAA21B,GADAc,EAAA,KAAAd,GAEAY,EAAA1Y,KAAAqC,IAAAwW,EAAAtB,IAAAp1B,EACAw2B,EAAA3Y,KAAAsC,IAAAuW,EAAAtB,IAAAp1B,EACAw1B,EAAAS,IAAA3X,EAAAiY,EAAAhY,EAAAiY,EAAAC,EAAAC,EAAA3W,EAAA2W,EAAAvB,IACAK,EAAAS,IAAA3X,EAAAkY,EAAAjY,EAAAgY,EAAAE,EAAAC,EAAAvB,GAAAuB,GACAlB,EAAAS,IAAA3X,EAAAiY,EAAAhY,EAAAiY,EAAAC,EAAAC,IAAAvB,IACAK,EAAAS,IAAA3X,EAAAkY,EAAAjY,EAAAgY,EAAAE,EAAAC,EAAAvB,GAAAuB,EAAA3W,GACAyV,EAAAU,YACA,MAEA,WACA,IAAAI,EAAA,CACAt2B,EAAA6d,KAAAgZ,QAAAlB,EACAH,EAAAW,KAAA7X,EAAAte,EAAAue,EAAAve,EAAA,EAAAA,EAAA,EAAAA,GACA,MAGA02B,GAAAtB,GAIA,cACAmB,EAAA1Y,KAAAqC,IAAAwW,GAAAf,EACAa,EAAA3Y,KAAAsC,IAAAuW,GAAAf,EACAH,EAAAQ,OAAA1X,EAAAiY,EAAAhY,EAAAiY,GACAhB,EAAAoB,OAAAtY,EAAAkY,EAAAjY,EAAAgY,GACAf,EAAAoB,OAAAtY,EAAAiY,EAAAhY,EAAAiY,GACAhB,EAAAoB,OAAAtY,EAAAkY,EAAAjY,EAAAgY,GACAf,EAAAU,YACA,MAEA,eACAQ,GAAAtB,GAIA,YACAmB,EAAA1Y,KAAAqC,IAAAwW,GAAAf,EACAa,EAAA3Y,KAAAsC,IAAAuW,GAAAf,EACAH,EAAAQ,OAAA1X,EAAAiY,EAAAhY,EAAAiY,GACAhB,EAAAoB,OAAAtY,EAAAiY,EAAAhY,EAAAiY,GACAhB,EAAAQ,OAAA1X,EAAAkY,EAAAjY,EAAAgY,GACAf,EAAAoB,OAAAtY,EAAAkY,EAAAjY,EAAAgY,GACA,MAEA,WACAA,EAAA1Y,KAAAqC,IAAAwW,GAAAf,EACAa,EAAA3Y,KAAAsC,IAAAuW,GAAAf,EACAH,EAAAQ,OAAA1X,EAAAiY,EAAAhY,EAAAiY,GACAhB,EAAAoB,OAAAtY,EAAAiY,EAAAhY,EAAAiY,GACAhB,EAAAQ,OAAA1X,EAAAkY,EAAAjY,EAAAgY,GACAf,EAAAoB,OAAAtY,EAAAkY,EAAAjY,EAAAgY,GACAG,GAAAtB,GACAmB,EAAA1Y,KAAAqC,IAAAwW,GAAAf,EACAa,EAAA3Y,KAAAsC,IAAAuW,GAAAf,EACAH,EAAAQ,OAAA1X,EAAAiY,EAAAhY,EAAAiY,GACAhB,EAAAoB,OAAAtY,EAAAiY,EAAAhY,EAAAiY,GACAhB,EAAAQ,OAAA1X,EAAAkY,EAAAjY,EAAAgY,GACAf,EAAAoB,OAAAtY,EAAAkY,EAAAjY,EAAAgY,GACA,MAEA,WACAA,EAAA1Y,KAAAqC,IAAAwW,GAAAf,EACAa,EAAA3Y,KAAAsC,IAAAuW,GAAAf,EACAH,EAAAQ,OAAA1X,EAAAiY,EAAAhY,EAAAiY,GACAhB,EAAAoB,OAAAtY,EAAAiY,EAAAhY,EAAAiY,GACA,MAEA,WACAhB,EAAAQ,OAAA1X,EAAAC,GACAiX,EAAAoB,OAAAtY,EAAAT,KAAAqC,IAAAwW,GAAAf,EAAApX,EAAAV,KAAAsC,IAAAuW,GAAAf,GAIAH,EAAAsB,OACAtB,EAAAuB,eA/GAvB,EAAAwB,UAAAX,EAAA/X,EAAA+X,EAAA1hB,MAAA,EAAA4J,EAAA8X,EAAA3hB,OAAA,EAAA2hB,EAAA1hB,MAAA0hB,EAAA3hB,SAyHAuiB,eAAA,SAAAvgB,EAAAwgB,GAGA,OAAAxgB,EAAA4H,EAAA4Y,EAAAtB,KAFA,MAEAlf,EAAA4H,EAAA4Y,EAAApB,MAFA,MAEApf,EAAA6H,EAAA2Y,EAAArB,IAFA,MAEAnf,EAAA6H,EAAA2Y,EAAAnB,OAFA,MAIAoB,SAAA,SAAA3B,EAAA0B,GACA1B,EAAA4B,OACA5B,EAAAmB,YACAnB,EAAAW,KAAAe,EAAAtB,KAAAsB,EAAArB,IAAAqB,EAAApB,MAAAoB,EAAAtB,KAAAsB,EAAAnB,OAAAmB,EAAArB,KACAL,EAAA6B,QAEAC,WAAA,SAAA9B,GACAA,EAAA+B,WAEAX,OAAA,SAAApB,EAAAgC,EAAAhmB,EAAAimB,GACA,IAAAC,EAAAlmB,EAAAmmB,YAEA,GAAAD,EAAA,CACA,cAAAA,EAAA,CACA,IAAAE,GAAAJ,EAAAlZ,EAAA9M,EAAA8M,GAAA,EACAkX,EAAAoB,OAAAgB,EAAAH,EAAAjmB,EAAA+M,EAAAiZ,EAAAjZ,GACAiX,EAAAoB,OAAAgB,EAAAH,EAAAD,EAAAjZ,EAAA/M,EAAA+M,OACS,UAAAmZ,IAAAD,GAAA,UAAAC,GAAAD,EACTjC,EAAAoB,OAAAY,EAAAlZ,EAAA9M,EAAA+M,GAEAiX,EAAAoB,OAAAplB,EAAA8M,EAAAkZ,EAAAjZ,GAGAiX,EAAAoB,OAAAplB,EAAA8M,EAAA9M,EAAA+M,QAIA/M,EAAAqmB,QAKArC,EAAAsC,cAAAL,EAAAD,EAAAO,sBAAAP,EAAAQ,kBAAAP,EAAAD,EAAAS,sBAAAT,EAAAU,kBAAAT,EAAAjmB,EAAAwmB,kBAAAxmB,EAAAumB,sBAAAN,EAAAjmB,EAAA0mB,kBAAA1mB,EAAAymB,sBAAAzmB,EAAA8M,EAAA9M,EAAA+M,GAJAiX,EAAAoB,OAAAplB,EAAA8M,EAAA9M,EAAA+M,KAOA4Z,GAAA7C,GAUA9C,EAAAtyB,MAAAo1B,GAAAp1B,MASAsyB,EAAA4F,qBAAA,SAAA5C,GACAA,EAAAmB,YACArB,GAAAI,YAAA7lB,MAAAylB,GAAA1lB,YAGA,IAAAsK,GAAA,CAIAme,KAAA,SAAAC,EAAAh3B,GACA,OAAAkxB,EAAAb,MAAA7xB,KAAAw4B,KAAAx4B,KAAAw4B,GAAA,IAAgEh3B,KAIhE4Y,GAAAme,KAAA,UACAE,aAAA,kBACAC,iBAAA,OACAC,kBAAA,qDACAC,gBAAA,GACAC,iBAAA,SACAC,kBAAA,IACAC,WAAA,IAGA,IAAAC,GAAA5e,GACAqW,GAAAiC,EAAAjC,eAqBAwI,GAAA,CASAC,aAAA,SAAAx4B,EAAAR,GACA,IAAAi5B,GAAA,GAAAz4B,GAAAyO,MAAA,wCAEA,IAAAgqB,GAAA,WAAAA,EAAA,GACA,WAAAj5B,EAKA,OAFAQ,GAAAy4B,EAAA,GAEAA,EAAA,IACA,SACA,OAAAz4B,EAEA,QACAA,GAAA,IAOA,OAAAR,EAAAQ,GAUA04B,UAAA,SAAA14B,GACA,IAAA2e,EAAA1B,EAAAE,EAAAxC,EAWA,OATAqX,EAAAzvB,SAAAvC,IACA2e,GAAA3e,EAAAq1B,KAAA,EACApY,GAAAjd,EAAAs1B,OAAA,EACAnY,GAAAnd,EAAAu1B,QAAA,EACA5a,GAAA3a,EAAAo1B,MAAA,GAEAzW,EAAA1B,EAAAE,EAAAxC,GAAA3a,GAAA,EAGA,CACAq1B,IAAA1W,EACA2W,MAAArY,EACAsY,OAAApY,EACAiY,KAAAza,EACAzG,OAAAyK,EAAAxB,EACAhJ,MAAAwG,EAAAsC,IAWA0b,WAAA,SAAA5kB,GACA,IAAA6kB,EAAAN,GAAAz1B,OACArD,EAAAuwB,GAAAhc,EAAA8kB,SAAAD,EAAAV,iBACAY,EAAA,CACAC,OAAAhJ,GAAAhc,EAAAilB,WAAAJ,EAAAX,mBACAgB,WAAAjH,EAAAje,QAAAykB,aAAAzI,GAAAhc,EAAAklB,WAAAL,EAAAR,mBAAA54B,GACAA,OACAq2B,MAAA9F,GAAAhc,EAAAmlB,UAAAN,EAAAT,kBACA1J,OAAA,KACAnkB,OAAA,IAGA,OADAwuB,EAAAxuB,OA7FA,SAAAwuB,GACA,OAAAA,GAAA9G,EAAAvC,cAAAqJ,EAAAt5B,OAAAwyB,EAAAvC,cAAAqJ,EAAAC,QACA,MAGAD,EAAAjD,MAAAiD,EAAAjD,MAAA,SAAAiD,EAAArK,OAAAqK,EAAArK,OAAA,QAAAqK,EAAAt5B,KAAA,MAAAs5B,EAAAC,OAwFAI,CAAAL,GACAA,GAYAM,QAAA,SAAAC,EAAAC,EAAAv4B,GACA,IAAAkQ,EAAA2f,EAAA5wB,EAEA,IAAAiR,EAAA,EAAA2f,EAAAyI,EAAAr4B,OAAuCiQ,EAAA2f,IAAU3f,EAGjD,QAAAnN,KAFA9D,EAAAq5B,EAAApoB,WAMAnN,IAAAw1B,GAAA,oBAAAt5B,IACAA,IAAAs5B,SAGAx1B,IAAA/C,GAAAixB,EAAAjtB,QAAA/E,KACAA,IAAAe,SAGA+C,IAAA9D,GACA,OAAAA,IAKAu5B,GAAAvH,EACAwH,GAAAjF,EACAkF,GAAA9B,GACA5jB,GAAAwkB,GACAgB,GAAAC,UACAD,GAAAE,UACAF,GAAAxlB,WAkDA,IAAA2lB,GAAA,SAAAC,GACAJ,GAAA/H,OAAAlyB,KAAAq6B,GACAr6B,KAAAs6B,WAAAvqB,MAAA/P,KAAA8P,YAGAmqB,GAAA/H,OAAAkI,GAAAj6B,UAAA,CACAm6B,WAAA,WACAt6B,KAAAu6B,QAAA,GAEAC,MAAA,WACA,IAAAlI,EAAAtyB,KAOA,OALAsyB,EAAAmI,QACAnI,EAAAmI,MAAAR,GAAA1K,MAAA+C,EAAAoI,SAGApI,EAAAqI,OAAA,GACArI,GAEAsI,WAAA,SAAAC,GACA,IAAAvI,EAAAtyB,KACA86B,EAAAxI,EAAAoI,OACAK,EAAAzI,EAAAqI,OACAK,EAAA1I,EAAAmI,MAEA,OAAAK,GAAA,IAAAD,GAMAG,IACAA,EAAA1I,EAAAmI,MAAA,IAGAM,IACAA,EAAAzI,EAAAqI,OAAA,IApFA,SAAAI,EAAAC,EAAAF,EAAAD,GACA,IACAlpB,EAAA2f,EAAAxsB,EAAAm2B,EAAAC,EAAAxpB,EAAAhG,EAAAyvB,EAAAC,EADA71B,EAAAxD,OAAAwD,KAAAu1B,GAGA,IAAAnpB,EAAA,EAAA2f,EAAA/rB,EAAA7D,OAAmCiQ,EAAA2f,IAAU3f,EAW7C,GAVA7M,EAAAS,EAAAoM,GACAD,EAAAopB,EAAAh2B,GAGAk2B,EAAAh1B,eAAAlB,KACAk2B,EAAAl2B,GAAA4M,IAGAupB,EAAAD,EAAAl2B,MAEA4M,GAAA,MAAA5M,EAAA,IAWA,GAPAi2B,EAAA/0B,eAAAlB,KACAi2B,EAAAj2B,GAAAm2B,GAGAC,EAAAH,EAAAj2B,IACA4G,SAAAgG,YAEAwpB,EACA,cAAAxvB,GAGA,IAFAyvB,EAAAlL,EAAAiL,IAEA1O,QACA4O,EAAAnL,EAAAve,IAEA8a,MAAA,CACAwO,EAAAl2B,GAAAs2B,EAAAnM,IAAAkM,EAAAN,GAAAvP,YACA,eAGS,GAAA2O,GAAA5J,SAAA6K,IAAAjB,GAAA5J,SAAA3e,GAAA,CACTspB,EAAAl2B,GAAAo2B,GAAAxpB,EAAAwpB,GAAAL,EACA,SAIAG,EAAAl2B,GAAA4M,GA2CA2pB,CAAAN,EAAAC,EAAAF,EAAAD,GACAvI,IAdAA,EAAAmI,MAAAK,EACAxI,EAAAqI,OAAA,KACArI,IAcAgJ,gBAAA,WACA,OACA9c,EAAAxe,KAAA06B,OAAAlc,EACAC,EAAAze,KAAA06B,OAAAjc,IAGA8c,SAAA,WACA,OAAAtB,GAAAuB,SAAAx7B,KAAA06B,OAAAlc,IAAAyb,GAAAuB,SAAAx7B,KAAA06B,OAAAjc,MAGA2b,GAAAlI,OAAA+H,GAAA7H,SACA,IAAAqJ,GAAArB,GACAsB,GAAAD,GAAAvJ,OAAA,CACAuD,MAAA,KAEAkG,YAAA,EAEAC,SAAA,GAEA1B,OAAA,GAEA7iB,OAAA,KAEAwkB,oBAAA,KAEAC,oBAAA,OAGAC,GAAAL,GASA35B,OAAA+E,eAAA40B,GAAAv7B,UAAA,mBACAE,IAAA,WACA,OAAAL,QAUA+B,OAAA+E,eAAA40B,GAAAv7B,UAAA,iBACAE,IAAA,WACA,OAAAL,KAAAy1B,OAEAl1B,IAAA,SAAAG,GACAV,KAAAy1B,MAAA/0B,KAIAs4B,GAAAT,KAAA,UACAyD,UAAA,CACAC,SAAA,IACA/B,OAAA,eACAgC,WAAAjC,GAAA/J,KACAiM,WAAAlC,GAAA/J,QAIA,IAAAkM,GAAA,CACAC,WAAA,GACAC,QAAA,KAQAC,aAAA,SAAA9G,EAAAuG,EAAAC,EAAAO,GACA,IACA7qB,EAAA2f,EADA+K,EAAAr8B,KAAAq8B,WAUA,IARAL,EAAAvG,QACAuG,EAAAS,UAAAC,KAAAC,MACAX,EAAAC,WAEAO,IACA/G,EAAAmH,WAAA,GAGAjrB,EAAA,EAAA2f,EAAA+K,EAAA36B,OAA2CiQ,EAAA2f,IAAU3f,EACrD,GAAA0qB,EAAA1qB,GAAA8jB,UAEA,YADA4G,EAAA1qB,GAAAqqB,GAKAK,EAAAx3B,KAAAm3B,GAEA,IAAAK,EAAA36B,QACA1B,KAAA68B,yBAGAC,gBAAA,SAAArH,GACA,IAAAh0B,EAAAw4B,GAAA8C,UAAA/8B,KAAAq8B,WAAA,SAAAL,GACA,OAAAA,EAAAvG,aAGA,IAAAh0B,IACAzB,KAAAq8B,WAAAlzB,OAAA1H,EAAA,GACAg0B,EAAAmH,WAAA,IAGAC,sBAAA,WACA,IAAAvK,EAAAtyB,KAEA,OAAAsyB,EAAAgK,UAIAhK,EAAAgK,QAAArC,GAAA+C,iBAAA36B,KAAA2tB,OAAA,WACAsC,EAAAgK,QAAA,KACAhK,EAAA2K,kBAQAA,YAAA,WACAj9B,KACAk9B,UADAl9B,KAGAq8B,WAAA36B,OAAA,GAHA1B,KAIA68B,yBAOAK,QAAA,WAKA,IAJA,IACAlB,EAAAvG,EAAAmG,EAAAuB,EADAd,EAAAr8B,KAAAq8B,WAEA1qB,EAAA,EAEAA,EAAA0qB,EAAA36B,QACAs6B,EAAAK,EAAA1qB,GACA8jB,EAAAuG,EAAAvG,MACAmG,EAAAI,EAAAJ,SAGAuB,EAAApf,KAAAkB,OAAAyd,KAAAC,MAAAX,EAAAS,WAAAT,EAAAC,SAAAL,GAAA,EACAI,EAAAL,YAAA5d,KAAAD,IAAAqf,EAAAvB,GACA3B,GAAArJ,SAAAoL,EAAA3kB,OAAA,CAAAoe,EAAAuG,GAAAvG,GACAwE,GAAArJ,SAAAoL,EAAAH,oBAAA,CAAAG,GAAAvG,GAEAuG,EAAAL,aAAAC,GACA3B,GAAArJ,SAAAoL,EAAAF,oBAAA,CAAAE,GAAAvG,GACAA,EAAAmH,WAAA,EACAP,EAAAlzB,OAAAwI,EAAA,MAEAA,IAKAmoB,GAAAG,GAAAxlB,QAAAqlB,QACAsD,GAAA,0CA8CA,SAAAC,GAAA97B,EAAA+7B,GACA,IAAAC,EAAAh8B,EAAAi8B,SAEA,GAAAD,EAAA,CAIA,IAAAE,EAAAF,EAAAE,UACAh8B,EAAAg8B,EAAA3rB,QAAAwrB,IAEA,IAAA77B,GACAg8B,EAAAt0B,OAAA1H,EAAA,GAGAg8B,EAAA/7B,OAAA,IAIA07B,GAAAlwB,QAAA,SAAApI,UACAvD,EAAAuD,YAEAvD,EAAAi8B,WAIA,IAAAE,GAAA,SAAAjI,EAAAkI,GACA39B,KAAAs6B,WAAA7E,EAAAkI,IAGA1D,GAAA/H,OAAAwL,GAAAv9B,UAAA,CAKAy9B,mBAAA,KAMAC,gBAAA,KACAvD,WAAA,SAAA7E,EAAAkI,GACA39B,KACAy1B,QADAz1B,KAEAyB,MAAAk8B,EAFA39B,KAGA89B,aAHA99B,KAIA+9B,eAEAC,YAAA,SAAAL,GACA39B,KAAAyB,MAAAk8B,GAEAG,WAAA,WACA,IAAAxL,EAAAtyB,KACAi+B,EAAA3L,EAAA4L,UACAtoB,EAAA0c,EAAA6L,aAEA,OAAAF,EAAAG,SAAAH,EAAAG,WAAA9L,EAAAmD,MAAA4I,SACAJ,EAAAG,QAAAxoB,EAAAwoB,SAAA9L,EAAAmD,MAAAhhB,QAAA4pB,OAAAC,MAAA,GAAA/mB,IAGA,OAAA0mB,EAAAM,SAAAN,EAAAM,WAAAjM,EAAAmD,MAAA4I,SACAJ,EAAAM,QAAA3oB,EAAA2oB,SAAAjM,EAAAmD,MAAAhhB,QAAA4pB,OAAAG,MAAA,GAAAjnB,KAGA4mB,WAAA,WACA,OAAAn+B,KAAAy1B,MAAA11B,KAAAoV,SAAAnV,KAAAyB,QAEAy8B,QAAA,WACA,OAAAl+B,KAAAy1B,MAAAgJ,eAAAz+B,KAAAyB,QAEAi9B,cAAA,SAAAC,GACA,OAAA3+B,KAAAy1B,MAAA4I,OAAAM,IAMAC,iBAAA,WACA,OAAA5+B,KAAAk+B,UAAAK,SAMAM,iBAAA,WACA,OAAA7+B,KAAAk+B,UAAAE,SAMAU,eAAA,WACA,OAAA9+B,KAAA0+B,cAAA1+B,KAAA4+B,qBAMAG,eAAA,WACA,OAAA/+B,KAAA0+B,cAAA1+B,KAAA6+B,qBAEAG,MAAA,WACAh/B,KAAAgX,QAAA,IAMAI,QAAA,WACApX,KAAAi/B,OACA5B,GAAAr9B,KAAAi/B,MAAAj/B,OAGAk/B,kBAAA,WACA,IACAxzB,EADA1L,KACA49B,mBACA,OAAAlyB,GAAA,IAAAA,EAAA,CACAyzB,OAHAn/B,KAGAy1B,MACA2J,cAJAp/B,KAIAyB,SAGA49B,eAAA,SAAA59B,GACA,IACAiK,EADA1L,KACA69B,gBACA,OAAAnyB,GAAA,IAAAA,EAAA,CACAyzB,OAHAn/B,KAGAy1B,MACA2J,cAJAp/B,KAIAyB,MACA69B,OAAA79B,KAGAs8B,YAAA,WACA,IAIApsB,EAAA2f,EAHA2M,EADAj+B,KACAk+B,UACAn+B,EAFAC,KAEAm+B,aAAAp+B,MAAA,GACAw/B,EAAAtB,EAAAl+B,KAGA,IAAA4R,EAAA,EAAA2f,EAAAvxB,EAAA2B,OAAqCiQ,EAAA2f,IAAU3f,EAC/C4tB,EAAA5tB,GAAA4tB,EAAA5tB,IAPA3R,KAOAq/B,eAAA1tB,GAGAssB,EAAAroB,QAAAqoB,EAAAroB,SAVA5V,KAUAk/B,qBAEAM,mBAAA,SAAA/9B,GACA,IAAAqS,EAAA9T,KAAAq/B,eAAA59B,GACAzB,KAAAk+B,UAAAn+B,KAAAoJ,OAAA1H,EAAA,EAAAqS,GACA9T,KAAAy/B,cAAA3rB,EAAArS,GAAA,IAEAi+B,sBAAA,WACA,IA5LAn+B,EAAA+7B,EA4LAhL,EAAAtyB,KACA4V,EAAA0c,EAAA6L,aACAp+B,EAAA6V,EAAA7V,OAAA6V,EAAA7V,KAAA,IAIAuyB,EAAA2M,QAAAl/B,IACAuyB,EAAA2M,OAEA5B,GAAA/K,EAAA2M,MAAA3M,GAGAvyB,GAAAgC,OAAA49B,aAAA5/B,KAxMAu9B,EAyMAhL,GAzMA/wB,EAyMAxB,GAxMAy9B,SACAj8B,EAAAi8B,SAAAC,UAAA54B,KAAAy4B,IAKAv7B,OAAA+E,eAAAvF,EAAA,YACAwF,cAAA,EACAC,YAAA,EACAtG,MAAA,CACA+8B,UAAA,CAAAH,MAGAF,GAAAlwB,QAAA,SAAApI,GACA,IAAA86B,EAAA,SAAA96B,EAAA6qB,OAAA,GAAArD,cAAAxnB,EAAA+kB,MAAA,GACAgW,EAAAt+B,EAAAuD,GACA/C,OAAA+E,eAAAvF,EAAAuD,EAAA,CACAiC,cAAA,EACAC,YAAA,EACAtG,MAAA,WACA,IAAAmP,EAAAzG,MAAAjJ,UAAA0pB,MAAAxnB,KAAAyN,WACAgwB,EAAAD,EAAA9vB,MAAA/P,KAAA6P,GAMA,OALAoqB,GAAAlJ,KAAAxvB,EAAAi8B,SAAAC,UAAA,SAAAt7B,GACA,oBAAAA,EAAAy9B,IACAz9B,EAAAy9B,GAAA7vB,MAAA5N,EAAA0N,KAGAiwB,SAgLAxN,EAAA2M,MAAAl/B,GAKAuyB,EAAAyN,kBAEA/oB,OAAAijB,GAAA/J,KACA0K,WAAA,SAAAoF,GAMA,IALA,IAAA/B,EAAAj+B,KAAAk+B,UACA+B,EAAAhC,EAAAl+B,MAAA,GACAuxB,EAAA2O,EAAAv+B,OACAiQ,EAAA,EAEYA,EAAA2f,IAAU3f,EACtBsuB,EAAAtuB,GAAAipB,WAAAoF,GAGA/B,EAAAroB,SACAqoB,EAAAroB,QAAAglB,WAAAoF,IAGAE,KAAA,WACA,IAAAjC,EAAAj+B,KAAAk+B,UACA+B,EAAAhC,EAAAl+B,MAAA,GACAuxB,EAAA2O,EAAAv+B,OACAiQ,EAAA,EAMA,IAJAssB,EAAAroB,SACAqoB,EAAAroB,QAAAsqB,OAGYvuB,EAAA2f,IAAU3f,EACtBsuB,EAAAtuB,GAAAuuB,QAGAC,iBAAA,SAAArsB,GACAmmB,GAAApI,MAAA/d,EAAA4mB,OAAA5mB,EAAAssB,gBAAA,WACAtsB,EAAAssB,gBAEAC,cAAA,SAAAvsB,GACA,IAAA8B,EAAA5V,KAAAy1B,MAAA11B,KAAAoV,SAAArB,EAAAsrB,eACA39B,EAAAqS,EAAAwrB,OACAgB,EAAAxsB,EAAAwsB,QAAA,GACAxF,EAAAhnB,EAAA4mB,OACA6F,EAAAtG,GAAAsG,cACAzsB,EAAAssB,eAAA,CACAI,gBAAA1F,EAAA0F,gBACAC,YAAA3F,EAAA2F,YACAC,YAAA5F,EAAA4F,aAEA5F,EAAA0F,gBAAA1G,GAAA,CAAAwG,EAAAK,qBAAA/qB,EAAA+qB,qBAAAJ,EAAAzF,EAAA0F,uBAAAh8B,EAAA/C,GACAq5B,EAAA2F,YAAA3G,GAAA,CAAAwG,EAAAM,iBAAAhrB,EAAAgrB,iBAAAL,EAAAzF,EAAA2F,mBAAAj8B,EAAA/C,GACAq5B,EAAA4F,YAAA5G,GAAA,CAAAwG,EAAAO,iBAAAjrB,EAAAirB,iBAAA/F,EAAA4F,kBAAAl8B,EAAA/C,IAMAs+B,eAAA,WACA,IACA9B,EADAj+B,KACAk+B,UACAn+B,EAFAC,KAEAm+B,aAAAp+B,KACA+gC,EAAA7C,EAAAl+B,KAAA2B,OACAq/B,EAAAhhC,EAAA2B,OAEAq/B,EAAAD,EACA7C,EAAAl+B,KAAAoJ,OAAA43B,EAAAD,EAAAC,GACOA,EAAAD,GARP9gC,KASAghC,eAAAF,EAAAC,EAAAD,IAOAE,eAAA,SAAAjG,EAAAkG,GACA,QAAAtvB,EAAA,EAAqBA,EAAAsvB,IAAWtvB,EAChC3R,KAAAw/B,mBAAAzE,EAAAppB,IAOAuvB,WAAA,WACA,IAAAD,EAAAnxB,UAAApO,OACA1B,KAAAghC,eAAAhhC,KAAAm+B,aAAAp+B,KAAA2B,OAAAu/B,MAMAE,UAAA,WACAnhC,KAAAk+B,UAAAn+B,KAAAsJ,OAMA+3B,YAAA,WACAphC,KAAAk+B,UAAAn+B,KAAAshC,SAMAC,aAAA,SAAAvG,EAAAkG,GACAjhC,KAAAk+B,UAAAn+B,KAAAoJ,OAAA4xB,EAAAkG,GACAjhC,KAAAghC,eAAAjG,EAAAjrB,UAAApO,OAAA,IAMA6/B,cAAA,WACAvhC,KAAAghC,eAAA,EAAAlxB,UAAApO,WAGAg8B,GAAAxL,OAAA+H,GAAA7H,SACA,IAAAoP,GAAA9D,GAEA1E,GAAAT,KAAA,UACA0H,SAAA,CACA9J,IAAA,CACAqK,gBAAAxH,GAAAz1B,OAAAk1B,aACAgI,YAAA,OACAC,YAAA,EACAe,YAAA,aAKA,IAAAC,GAAAjG,GAAAvJ,OAAA,CACAyP,aAAA,SAAAC,GACA,IAAAC,EAAA7hC,KAAAy6B,MAEA,QAAAoH,GACA9jB,KAAAQ,IAAAqjB,EAAAC,EAAArjB,EAAA,GAAAT,KAAAQ,IAAAsjB,EAAAhM,OAAAgM,EAAAC,YAAA,IAKAC,QAAA,SAAAC,EAAAC,GACA,IAAAJ,EAAA7hC,KAAAy6B,MAEA,GAAAoH,EAAA,CAWA,IAVA,IAAAK,EAAAjI,GAAAkI,kBAAAN,EAAA,CACArjB,EAAAwjB,EACAvjB,EAAAwjB,IAEAG,EAAAF,EAAAE,MACAC,EAAAH,EAAAG,SAEAC,EAAAT,EAAAS,WACAC,EAAAV,EAAAU,SAEAA,EAAAD,GACAC,GAAA,EAAAxkB,KAAAkC,GAGA,KAAAmiB,EAAAG,GACAH,GAAA,EAAArkB,KAAAkC,GAGA,KAAAmiB,EAAAE,GACAF,GAAA,EAAArkB,KAAAkC,GAIA,IAAAuiB,EAAAJ,GAAAE,GAAAF,GAAAG,EACAE,EAAAJ,GAAAR,EAAAa,aAAAL,GAAAR,EAAAc,YACA,OAAAH,GAAAC,EAGA,UAEAG,eAAA,WACA,IAAAf,EAAA7hC,KAAAy6B,MACAoI,GAAAhB,EAAAS,WAAAT,EAAAU,UAAA,EACAO,GAAAjB,EAAAa,YAAAb,EAAAc,aAAA,EACA,OACAnkB,EAAAqjB,EAAArjB,EAAAT,KAAAqC,IAAAyiB,GAAAC,EACArkB,EAAAojB,EAAApjB,EAAAV,KAAAsC,IAAAwiB,GAAAC,IAGAC,QAAA,WACA,IAAAlB,EAAA7hC,KAAAy6B,MACA,OAAA1c,KAAAkC,KAAA4hB,EAAAU,SAAAV,EAAAS,aAAA,EAAAvkB,KAAAkC,MAAAlC,KAAAQ,IAAAsjB,EAAAc,YAAA,GAAA5kB,KAAAQ,IAAAsjB,EAAAa,YAAA,KAEApH,gBAAA,WACA,IAAAuG,EAAA7hC,KAAAy6B,MACAuI,EAAAnB,EAAAS,YAAAT,EAAAU,SAAAV,EAAAS,YAAA,EACAW,GAAApB,EAAAc,YAAAd,EAAAa,aAAA,EAAAb,EAAAa,YACA,OACAlkB,EAAAqjB,EAAArjB,EAAAT,KAAAqC,IAAA4iB,GAAAC,EACAxkB,EAAAojB,EAAApjB,EAAAV,KAAAsC,IAAA2iB,GAAAC,IAGA/C,KAAA,WACA,IAKAgD,EALAxN,EAAA11B,KAAAm/B,OAAAzJ,IACAmM,EAAA7hC,KAAAy6B,MACA0I,EAAAtB,EAAAS,WACAc,EAAAvB,EAAAU,SACAc,EAAA,UAAAxB,EAAAJ,YAAA,MAEA/L,EAAA4B,OACA5B,EAAAmB,YACAnB,EAAAS,IAAA0L,EAAArjB,EAAAqjB,EAAApjB,EAAAV,KAAAC,IAAA6jB,EAAAc,YAAAU,EAAA,GAAAF,EAAAC,GACA1N,EAAAS,IAAA0L,EAAArjB,EAAAqjB,EAAApjB,EAAAojB,EAAAa,YAAAU,EAAAD,GAAA,GACAzN,EAAAU,YACAV,EAAA4N,UAAAzB,EAAArB,gBACA9K,EAAAsB,OAEA6K,EAAAnB,cACA,UAAAmB,EAAAJ,aAGA/L,EAAAmB,YACAqM,EAAAG,EAAAxB,EAAAc,YACAjN,EAAAS,IAAA0L,EAAArjB,EAAAqjB,EAAApjB,EAAAojB,EAAAc,YAAAQ,EAAAD,EAAAE,EAAAF,GAEArB,EAAAa,YAAAW,GACAH,EAAAG,EAAAxB,EAAAa,YACAhN,EAAAS,IAAA0L,EAAArjB,EAAAqjB,EAAApjB,EAAAojB,EAAAa,YAAAW,EAAAD,EAAAF,EAAAC,EAAAD,GAAA,IAEAxN,EAAAS,IAAA0L,EAAArjB,EAAAqjB,EAAApjB,EAAA4kB,EAAAD,EAAArlB,KAAAkC,GAAA,EAAAkjB,EAAAplB,KAAAkC,GAAA,GAGAyV,EAAAU,YACAV,EAAA6B,OACA7B,EAAAmB,YACAnB,EAAAS,IAAA0L,EAAArjB,EAAAqjB,EAAApjB,EAAAojB,EAAAc,YAAAQ,EAAAC,GACA1N,EAAAS,IAAA0L,EAAArjB,EAAAqjB,EAAApjB,EAAAojB,EAAAa,YAAAU,EAAAD,GAAA,GACAzN,EAAAU,YACAV,EAAA6N,UAAA,EAAA1B,EAAAnB,YACAhL,EAAA8N,SAAA,UAEA9N,EAAA6N,UAAA1B,EAAAnB,YACAhL,EAAA8N,SAAA,SAGA9N,EAAA+N,YAAA5B,EAAApB,YACA/K,EAAAuB,UAGAvB,EAAA+B,aAGAiM,GAAAzJ,GAAAxJ,eACAgI,GAAAO,GAAAz1B,OAAAk1B,aAEAO,GAAAT,KAAA,UACA0H,SAAA,CACA0D,KAAA,CACA5L,QAAA,GACAyI,gBAAA/H,GACAiI,YAAA,EACAD,YAAAhI,GACAmL,eAAA,OACAC,WAAA,GACAC,iBAAA,EACAC,gBAAA,QACAC,iBAAA,EACAhN,MAAA,MAMA,IAAAiN,GAAAxI,GAAAvJ,OAAA,CACAgO,KAAA,WACA,IAWAz+B,EAAAkV,EAAA+gB,EAAAwM,EAVArC,EADA7hC,KACAy6B,MACA/E,EAFA11B,KAEAm/B,OAAAzJ,IACAyO,EAAAtC,EAAAsC,SAEAC,EALApkC,KAKAqkC,UAAAxa,QAGAyP,EAAAN,GAAAz1B,OACA+gC,EAAAhL,EAAA2G,SAAA0D,KACAY,GAAA,EAuBA,IAjCAvkC,KAaAwkC,OAAAJ,EAAA1iC,QACA0iC,EAAAv/B,KAAAu/B,EAAA,IAGA1O,EAAA4B,OAEA5B,EAAA+O,QAAA5C,EAAA+B,gBAAAU,EAAAV,eAEAlO,EAAAgP,aACAhP,EAAAgP,YAAA7C,EAAAgC,YAAAS,EAAAT,YAGAnO,EAAAiP,eAAAjB,GAAA7B,EAAAiC,iBAAAQ,EAAAR,kBACApO,EAAA8N,SAAA3B,EAAAkC,iBAAAO,EAAAP,gBACArO,EAAA6N,UAAAG,GAAA7B,EAAAnB,YAAA4D,EAAA5D,aACAhL,EAAA+N,YAAA5B,EAAApB,aAAAnH,EAAAb,aAEA/C,EAAAmB,YACA0N,GAAA,EAEA9iC,EAAA,EAAqBA,EAAA2iC,EAAA1iC,SAAuBD,EAC5CkV,EAAAytB,EAAA3iC,GACAi2B,EAAAuC,GAAA2K,aAAAR,EAAA3iC,GACAyiC,EAAAvtB,EAAA8jB,MAEA,IAAAh5B,EACAyiC,EAAAW,OACAnP,EAAAQ,OAAAgO,EAAA1lB,EAAA0lB,EAAAzlB,GACA8lB,EAAA9iC,IAGAi2B,GAAA,IAAA6M,EAAA7M,EAAA0M,EAAAG,GAEAL,EAAAW,OACAN,IAAA9iC,EAAA,IAAA0iC,IAAA,IAAAI,EAEA7O,EAAAQ,OAAAgO,EAAA1lB,EAAA0lB,EAAAzlB,GAGAwb,GAAAE,OAAArD,OAAApB,EAAAgC,EAAA+C,MAAA9jB,EAAA8jB,OAGA8J,EAAA9iC,IAKAi0B,EAAAuB,SACAvB,EAAA+B,aAGAqN,GAAA7K,GAAAxJ,eACAsU,GAAA/L,GAAAz1B,OAAAk1B,aAkBA,SAAAuM,GAAApD,GACA,IAAAC,EAAA7hC,KAAAy6B,MACA,QAAAoH,GAAA9jB,KAAAknB,IAAArD,EAAAC,EAAArjB,GAAAqjB,EAAAhM,OAAAgM,EAAAqD,UAlBAlM,GAAAT,KAAA,UACA0H,SAAA,CACArpB,MAAA,CACAif,OAAA,EACAsP,WAAA,SACA3E,gBAAAuE,GACAtE,YAAAsE,GACArE,YAAA,EAEAwE,UAAA,EACApD,YAAA,EACAjB,iBAAA,MAeA,IAAAuE,GAAA3J,GAAAvJ,OAAA,CACA6P,QAAA,SAAAH,EAAAyD,GACA,IAAAxD,EAAA7hC,KAAAy6B,MACA,QAAAoH,GAAA9jB,KAAAQ,IAAAqjB,EAAAC,EAAArjB,EAAA,GAAAT,KAAAQ,IAAA8mB,EAAAxD,EAAApjB,EAAA,GAAAV,KAAAQ,IAAAsjB,EAAAqD,UAAArD,EAAAhM,OAAA,IAEA8L,aAAAqD,GACAM,SAAAN,GACAO,SAZA,SAAAF,GACA,IAAAxD,EAAA7hC,KAAAy6B,MACA,QAAAoH,GAAA9jB,KAAAknB,IAAAI,EAAAxD,EAAApjB,GAAAojB,EAAAhM,OAAAgM,EAAAqD,WAWAtC,eAAA,WACA,IAAAf,EAAA7hC,KAAAy6B,MACA,OACAjc,EAAAqjB,EAAArjB,EACAC,EAAAojB,EAAApjB,IAGAskB,QAAA,WACA,OAAAhlB,KAAAkC,GAAAlC,KAAAQ,IAAAve,KAAAy6B,MAAA5E,OAAA,IAEAyF,gBAAA,WACA,IAAAuG,EAAA7hC,KAAAy6B,MACA,OACAjc,EAAAqjB,EAAArjB,EACAC,EAAAojB,EAAApjB,EACA+mB,QAAA3D,EAAAhM,OAAAgM,EAAAnB,cAGAR,KAAA,SAAAuF,GACA,IAAA5D,EAAA7hC,KAAAy6B,MACA/E,EAAA11B,KAAAm/B,OAAAzJ,IACAyP,EAAAtD,EAAAsD,WACA3O,EAAAqL,EAAArL,SACAX,EAAAgM,EAAAhM,OACArX,EAAAqjB,EAAArjB,EACAC,EAAAojB,EAAApjB,EACA6a,EAAAN,GAAAz1B,OACAk1B,EAAAa,EAAAb,aAEAoJ,EAAAgD,YAKArgC,IAAAihC,GAAAxL,GAAAE,OAAAhD,eAAA0K,EAAA4D,MACA/P,EAAA+N,YAAA5B,EAAApB,aAAAhI,EACA/C,EAAA6N,UAAAuB,GAAAjD,EAAAnB,YAAApH,EAAA2G,SAAArpB,MAAA8pB,aACAhL,EAAA4N,UAAAzB,EAAArB,iBAAA/H,EACAwB,GAAAE,OAAA7D,UAAAZ,EAAAyP,EAAAtP,EAAArX,EAAAC,EAAA+X,OAIAkP,GAAA1M,GAAAz1B,OAAAk1B,aAaA,SAAAkN,GAAA9D,GACA,OAAAA,QAAAr9B,IAAAq9B,EAAAhtB,MAUA,SAAA+wB,GAAA/D,GACA,IAAAgE,EAAAC,EAAAC,EAAAjmB,EAAAkmB,EAgBA,OAdAL,GAAA9D,IACAmE,EAAAnE,EAAAhtB,MAAA,EACAgxB,EAAAhE,EAAArjB,EAAAwnB,EACAF,EAAAjE,EAAArjB,EAAAwnB,EACAD,EAAAhoB,KAAAD,IAAA+jB,EAAApjB,EAAAojB,EAAAhC,MACA/f,EAAA/B,KAAAC,IAAA6jB,EAAApjB,EAAAojB,EAAAhC,QAEAmG,EAAAnE,EAAAjtB,OAAA,EACAixB,EAAA9nB,KAAAD,IAAA+jB,EAAArjB,EAAAqjB,EAAAhC,MACAiG,EAAA/nB,KAAAC,IAAA6jB,EAAArjB,EAAAqjB,EAAAhC,MACAkG,EAAAlE,EAAApjB,EAAAunB,EACAlmB,EAAA+hB,EAAApjB,EAAAunB,GAGA,CACAlQ,KAAA+P,EACA9P,IAAAgQ,EACA/P,MAAA8P,EACA7P,OAAAnW,GAIA,SAAAmmB,GAAAC,EAAA1U,EAAA2U,GACA,OAAAD,IAAA1U,EAAA2U,EAAAD,IAAAC,EAAA3U,EAAA0U,EAuBA,SAAAE,GAAAvE,EAAAwE,EAAAC,GACA,IAEAjnB,EAAA1B,EAAAE,EAAAxC,EAFA3a,EAAAmhC,EAAAnB,YACAmE,EAtBA,SAAAhD,GACA,IAAA0E,EAAA1E,EAAA2E,cACA1G,EAAA,GAEA,OAAAyG,GAIA1E,EAAA4E,WACA5E,EAAAhC,KAAAgC,EAAArjB,IACA+nB,EAAAN,GAAAM,EAAA,iBAEK1E,EAAAhC,KAAAgC,EAAApjB,IACL8nB,EAAAN,GAAAM,EAAA,iBAGAzG,EAAAyG,IAAA,EACAzG,GAZAA,EAiBA4G,CAAA7E,GAYA,OATA5H,GAAAh3B,SAAAvC,IACA2e,GAAA3e,EAAAq1B,KAAA,EACApY,GAAAjd,EAAAs1B,OAAA,EACAnY,GAAAnd,EAAAu1B,QAAA,EACA5a,GAAA3a,EAAAo1B,MAAA,GAEAzW,EAAA1B,EAAAE,EAAAxC,GAAA3a,GAAA,EAGA,CACA2e,EAAAwlB,EAAA9O,KAAA1W,EAAA,IAAAA,EAAAinB,IAAAjnB,EACA1B,EAAAknB,EAAA7O,OAAArY,EAAA,IAAAA,EAAA0oB,IAAA1oB,EACAE,EAAAgnB,EAAA5O,QAAApY,EAAA,IAAAA,EAAAyoB,IAAAzoB,EACAxC,EAAAwpB,EAAA/O,MAAAza,EAAA,IAAAA,EAAAgrB,IAAAhrB,GAyBA,SAAAsrB,GAAA9E,EAAArjB,EAAAC,GACA,IAAAmoB,EAAA,OAAApoB,EACAqoB,EAAA,OAAApoB,EACAqoB,KAAAjF,GAAA+E,GAAAC,IAAAjB,GAAA/D,GACA,OAAAiF,IAAAF,GAAApoB,GAAAsoB,EAAAhR,MAAAtX,GAAAsoB,EAAA9Q,SAAA6Q,GAAApoB,GAAAqoB,EAAA/Q,KAAAtX,GAAAqoB,EAAA7Q,QAtHA+C,GAAAT,KAAA,UACA0H,SAAA,CACA8G,UAAA,CACAvG,gBAAAkF,GACAjF,YAAAiF,GACAc,cAAA,SACA9F,YAAA,MAmHA,IAAAsG,GAAAvL,GAAAvJ,OAAA,CACAgO,KAAA,WACA,IAAAxK,EAAA11B,KAAAm/B,OAAAzJ,IACAmM,EAAA7hC,KAAAy6B,MACAwM,EAhCA,SAAApF,GACA,IAAAiF,EAAAlB,GAAA/D,GACAhtB,EAAAiyB,EAAA9Q,MAAA8Q,EAAAhR,KACAlhB,EAAAkyB,EAAA7Q,OAAA6Q,EAAA/Q,IACAmR,EAAAd,GAAAvE,EAAAhtB,EAAA,EAAAD,EAAA,GACA,OACAuyB,MAAA,CACA3oB,EAAAsoB,EAAAhR,KACArX,EAAAqoB,EAAA/Q,IACA7X,EAAArJ,EACAsG,EAAAvG,GAEAwyB,MAAA,CACA5oB,EAAAsoB,EAAAhR,KAAAoR,EAAA7rB,EACAoD,EAAAqoB,EAAA/Q,IAAAmR,EAAA7nB,EACAnB,EAAArJ,EAAAqyB,EAAA7rB,EAAA6rB,EAAAvpB,EACAxC,EAAAvG,EAAAsyB,EAAA7nB,EAAA6nB,EAAArpB,IAgBAwpB,CAAAxF,GACAsF,EAAAF,EAAAE,MACAC,EAAAH,EAAAG,MACA1R,EAAA4N,UAAAzB,EAAArB,gBACA9K,EAAA4R,SAAAH,EAAA3oB,EAAA2oB,EAAA1oB,EAAA0oB,EAAAjpB,EAAAipB,EAAAhsB,GAEAgsB,EAAAjpB,IAAAkpB,EAAAlpB,GAAAipB,EAAAhsB,IAAAisB,EAAAjsB,IAIAua,EAAA4B,OACA5B,EAAAmB,YACAnB,EAAAW,KAAA8Q,EAAA3oB,EAAA2oB,EAAA1oB,EAAA0oB,EAAAjpB,EAAAipB,EAAAhsB,GACAua,EAAA6B,OACA7B,EAAA4N,UAAAzB,EAAApB,YACA/K,EAAAW,KAAA+Q,EAAA5oB,EAAA4oB,EAAA3oB,EAAA2oB,EAAAlpB,EAAAkpB,EAAAjsB,GACAua,EAAAsB,KAAA,WACAtB,EAAA+B,YAEA7iB,OAAA,WACA,IAAAitB,EAAA7hC,KAAAy6B,MACA,OAAAoH,EAAAhC,KAAAgC,EAAApjB,GAEAsjB,QAAA,SAAAH,EAAAyD,GACA,OAAAsB,GAAA3mC,KAAAy6B,MAAAmH,EAAAyD,IAEA1D,aAAA,SAAAC,EAAAyD,GACA,IAAAxD,EAAA7hC,KAAAy6B,MACA,OAAAkL,GAAA9D,GAAA8E,GAAA9E,EAAAD,EAAA,MAAA+E,GAAA9E,EAAA,KAAAwD,IAEAC,SAAA,SAAA1D,GACA,OAAA+E,GAAA3mC,KAAAy6B,MAAAmH,EAAA,OAEA2D,SAAA,SAAAF,GACA,OAAAsB,GAAA3mC,KAAAy6B,MAAA,KAAA4K,IAEAzC,eAAA,WACA,IACApkB,EAAAC,EADAojB,EAAA7hC,KAAAy6B,MAWA,OARAkL,GAAA9D,IACArjB,EAAAqjB,EAAArjB,EACAC,GAAAojB,EAAApjB,EAAAojB,EAAAhC,MAAA,IAEArhB,GAAAqjB,EAAArjB,EAAAqjB,EAAAhC,MAAA,EACAphB,EAAAojB,EAAApjB,GAGA,CACAD,IACAC,MAGAskB,QAAA,WACA,IAAAlB,EAAA7hC,KAAAy6B,MACA,OAAAkL,GAAA9D,KAAAhtB,MAAAkJ,KAAAknB,IAAApD,EAAApjB,EAAAojB,EAAAhC,MAAAgC,EAAAjtB,OAAAmJ,KAAAknB,IAAApD,EAAArjB,EAAAqjB,EAAAhC,OAEAvE,gBAAA,WACA,IAAAuG,EAAA7hC,KAAAy6B,MACA,OACAjc,EAAAqjB,EAAArjB,EACAC,EAAAojB,EAAApjB,MAIAwhB,GAAA,GACAsH,GAAA7F,GACAhxB,GAAAuzB,GACAuD,GAAApC,GACAqC,GAAAT,GACA/G,GAAAsH,OACAtH,GAAAvvB,QACAuvB,GAAAuH,SACAvH,GAAAwH,aACA,IAAAC,GAAAzN,GAAAxlB,QAAAqlB,QAEAd,GAAAT,KAAA,OACAoP,MAAA,CACAC,KAAA,SAEAvJ,OAAA,CACAC,MAAA,EACA5yB,KAAA,WACAm8B,mBAAA,GACAC,cAAA,GACAnmC,QAAA,EACAomC,UAAA,CACAC,iBAAA,KAGAxJ,MAAA,EACA9yB,KAAA,cA8FA,IAAAu8B,GAAAzG,GAAAtP,OAAA,CACA2L,gBAAAoC,GAAAwH,UACAnN,WAAA,WACA,IACA2D,EACAuD,GAAArhC,UAAAm6B,WAAAvqB,MAFA/P,KAEA8P,YACAmuB,EAHAj+B,KAGAk+B,WACA58B,MAJAtB,KAIAm+B,aAAA78B,MACA28B,EAAAiK,KAAA,GAEAlxB,OAAA,SAAAgoB,GACA,IAEArtB,EAAA2f,EADA2V,EADAjnC,KACAk+B,UAAAn+B,KAIA,IALAC,KAGAmoC,OAHAnoC,KAGAooC,WAEAz2B,EAAA,EAAA2f,EAAA2V,EAAAvlC,OAAsCiQ,EAAA2f,IAAU3f,EALhD3R,KAMAy/B,cAAAwH,EAAAt1B,KAAAqtB,IAGAS,cAAA,SAAAsH,EAAAtlC,EAAAu9B,GACA,IAAA1M,EAAAtyB,KACAi+B,EAAA3L,EAAA4L,UACAtoB,EAAA0c,EAAA6L,aAEA1pB,EAAA6d,EAAA+V,uBAAAtB,EAAAtlC,GAEAslC,EAAAuB,QAAAhW,EAAAoM,cAAAT,EAAAG,SACA2I,EAAAwB,QAAAjW,EAAAoM,cAAAT,EAAAM,SACAwI,EAAA3H,cAAA9M,EAAA7wB,MACAslC,EAAAzH,OAAA79B,EACAslC,EAAArM,OAAA,CACA8F,gBAAA/rB,EAAA+rB,gBACAC,YAAAhsB,EAAAgsB,YACA+F,cAAA/xB,EAAA+xB,cACA9F,YAAAjsB,EAAAisB,YACA8H,aAAA5yB,EAAAC,MACAA,MAAAyc,EAAAmD,MAAA11B,KAAA0oC,OAAAhnC,IAGA6wB,EAAAoW,uBAAA3B,EAAAtlC,EAAAu9B,GAEA+H,EAAAvM,SAMAkO,uBAAA,SAAA3B,EAAAtlC,EAAAu9B,GACA,IAAA1M,EAAAtyB,KACA86B,EAAAiM,EAAArM,OAEAiO,EAAArW,EAAAwM,iBAEAe,EAAA8I,EAAAC,eACAnC,EAAAkC,EAAAE,eACAC,EAAAxW,EAAA6V,QAAA7V,EAAA8V,WACAW,EAAAzW,EAAA0W,wBAAA1W,EAAA7wB,SACAwnC,EAAA3W,EAAA4W,wBAAA5W,EAAA7wB,QAAAqnC,GACAhO,EAAA2L,aACA3L,EAAA+E,KAAAb,EAAAa,EAAAkJ,EAAAlJ,KACA/E,EAAAtc,EAAAioB,EAAAzH,EAAAa,EAAAkJ,EAAAI,KAAAF,EAAAG,OACAtO,EAAArc,EAAAgoB,EAAAwC,EAAAG,OAAApK,EAAAa,EAAAkJ,EAAAI,KACArO,EAAAlmB,OAAA6xB,EAAAwC,EAAA/oC,UAAAsE,EACAs2B,EAAAjmB,MAAA4xB,OAAAjiC,EAAAykC,EAAA/oC,MASAmpC,WAAA,SAAAC,GACA,IAQA33B,EAAAssB,EAPAxI,EADAz1B,KACAy1B,MAEAvJ,EAHAlsB,KAGA++B,iBAEA16B,EAAA6nB,EAAAzX,QAAApQ,QACAitB,OAAA9sB,IAAA8kC,EAAA7T,EAAA11B,KAAAoV,SAAAzT,OAAA4nC,EAAA,EACAC,EAAA,GAGA,IAAA53B,EAAA,EAAiBA,EAAA2f,IAAU3f,GAC3BssB,EAAAxI,EAAAgJ,eAAA9sB,IAEAu2B,KAAAzS,EAAA+T,iBAAA73B,MAAA,IAAAtN,IAAA,IAAAA,IAAA,IAAAklC,EAAAz3B,QAAAmsB,EAAA38B,aAAAkD,IAAAH,SAAAG,IAAAy5B,EAAA38B,QAAA,IAAAioC,EAAAz3B,QAAAmsB,EAAA38B,UACAioC,EAAA1kC,KAAAo5B,EAAA38B,OAIA,OAAAioC,GAOAE,cAAA,WACA,OAAAzpC,KAAAqpC,aAAA3nC,QAUAgoC,cAAA,SAAA/L,EAAA5wB,GACA,IAAAw8B,EAAAvpC,KAAAqpC,WAAA1L,GAEAl8B,OAAA+C,IAAAuI,EAAAw8B,EAAAz3B,QAAA/E,IAAA,EAEA,WAAAtL,EAAA8nC,EAAA7nC,OAAA,EAAAD,GAMA2mC,SAAA,WACA,IAUAz2B,EAAA2f,EARApF,EAFAlsB,KAEA++B,iBAEA4K,EAJA3pC,KAIAypC,gBACA9L,EALA39B,KAKAyB,MACAonC,EAAA3c,EAAA2c,eACA9N,EAAA8N,EAAA3c,EAAA4J,KAAA5J,EAAA6J,IACA6T,EAAA7O,GAAA8N,EAAA3c,EAAArX,MAAAqX,EAAAtX,QACAi1B,EAAA,GAGA,IAAAl4B,EAAA,EAAA2f,EAZAtxB,KAYAk+B,UAAAn+B,KAAA2B,OAAkDiQ,EAAA2f,IAAU3f,EAC5Dk4B,EAAAhlC,KAAAqnB,EAAA4d,iBAAA,KAAAn4B,EAAAgsB,IAIA,OACA7f,IAFAmc,GAAA9J,cAAAjE,EAAAzX,QAAAs1B,cA9NA,SAAA7d,EAAA2d,GACA,IAEAG,EAAAC,EAAAt4B,EAAA2f,EAFAxT,EAAAoO,EAAA2c,eAAA3c,EAAArX,MAAAqX,EAAAtX,OACAs1B,EAAAhe,EAAAie,WAGA,IAAAx4B,EAAA,EAAA2f,EAAAuY,EAAAnoC,OAAqCiQ,EAAA2f,IAAU3f,EAC/CmM,EAAAC,KAAAD,MAAAC,KAAAknB,IAAA4E,EAAAl4B,GAAAk4B,EAAAl4B,EAAA,KAGA,IAAAA,EAAA,EAAA2f,EAAA4Y,EAAAxoC,OAAoCiQ,EAAA2f,IAAU3f,EAC9Cs4B,EAAA/d,EAAAke,gBAAAz4B,GACAmM,EAAAnM,EAAA,EAAAoM,KAAAD,MAAAmsB,EAAAD,GAAAlsB,EACAksB,EAAAC,EAGA,OAAAnsB,EA+MAusB,CAAAne,EAAA2d,IAAA,EAGAA,SACA9O,QACA6O,MACAD,aACAzd,UAQA8c,wBAAA,SAAArL,EAAAl8B,GACA,IAaAkQ,EAAA24B,EAAAC,EAAA1K,EAAAsJ,EAAAjpC,EAZAu1B,EADAz1B,KACAy1B,MACAwI,EAFAj+B,KAEAk+B,UAEAhS,EAJAlsB,KAIA8+B,iBAEA+J,EAAA3c,EAAA2c,eACA1zB,EAAAsgB,EAAA11B,KAAAoV,SACAzU,GAAAwrB,EAAAse,cAAAr1B,EAAAwoB,GAAA59B,KAAA0B,IACAgpC,EAAAve,EAAAzX,QAAAg2B,aACApmC,EAAA6nB,EAAAzX,QAAApQ,QACA/C,EAAA28B,EAAA38B,MACAy5B,EAAA,EAGA,GAAA12B,QAAAG,IAAAH,QAAAG,IAAAlD,EACA,IAAAqQ,EAAA,EAAmBA,EAAAgsB,IAAkBhsB,GACrC24B,EAAA7U,EAAAgJ,eAAA9sB,IAEAu2B,KAAAoC,EAAAhpC,WAAAgpC,EAAAI,WAAA9L,qBAAA1S,EAAA3U,IAAAke,EAAA+T,iBAAA73B,KACA44B,GAAAre,EAAAse,cAAAr1B,EAAAxD,GAAA5R,KAAA0B,KAEAf,EAAA,GAAA6pC,EAAA,GAAA7pC,GAAA,GAAA6pC,EAAA,KACAxP,GAAAwP,IAoBA,OAdA1K,EAAA3T,EAAA4d,iBAAA/O,GACAoO,EAAAjd,EAAA4d,iBAAA/O,EAAAr6B,GACAR,EAAAipC,EAAAtJ,OAEAr7B,IAAAimC,GAAA1sB,KAAAknB,IAAA/kC,GAAAuqC,IACAvqC,EAAAuqC,EAGAtB,EADAzoC,GAAA,IAAAmoC,GAAAnoC,EAAA,GAAAmoC,EACAhJ,EAAA4K,EAEA5K,EAAA4K,GAIA,CACAvqC,OACA2/B,OACAsJ,OACAC,OAAAD,EAAAjpC,EAAA,IAOAgpC,wBAAA,SAAAvL,EAAAl8B,EAAAqnC,GACA,IACAr0B,EAAAq0B,EAAA5c,MAAAzX,QACAk2B,EAAA,SAAAl2B,EAAAs1B,aA/OA,SAAAtoC,EAAAqnC,EAAAr0B,GACA,IAKAsmB,EALA8O,EAAAf,EAAAe,OACAI,EAAAJ,EAAApoC,GACAuoC,EAAAvoC,EAAA,EAAAooC,EAAApoC,EAAA,QACAiV,EAAAjV,EAAAooC,EAAAnoC,OAAA,EAAAmoC,EAAApoC,EAAA,QACAmpC,EAAAn2B,EAAAozB,mBAgBA,OAbA,OAAAmC,IAGAA,EAAAC,GAAA,OAAAvzB,EAAAoyB,EAAAc,IAAAd,EAAA/N,MAAArkB,EAAAuzB,IAGA,OAAAvzB,IAEAA,EAAAuzB,IAAAD,GAGAjP,EAAAkP,KAAAlsB,KAAAD,IAAAksB,EAAAtzB,IAAA,EAAAk0B,EAEA,CACAC,MAFA9sB,KAAAknB,IAAAvuB,EAAAszB,GAAA,EAAAY,EAEA9B,EAAAa,WACAlqB,MAAAhL,EAAAqzB,cACA/M,SAuNA+P,CAAArpC,EAAAqnC,EAAAr0B,GA9QA,SAAAhT,EAAAqnC,EAAAr0B,GACA,IAGAvU,EAAAuf,EAHAsrB,EAAAt2B,EAAAs1B,aACA9I,EAAA6H,EAAAa,WACAM,EAAAnB,EAAAe,OAAApoC,GAcA,OAXAw4B,GAAA9J,cAAA4a,IACA7qC,EAAA4oC,EAAAhrB,IAAArJ,EAAAozB,mBACApoB,EAAAhL,EAAAqzB,gBAKA5nC,EAAA6qC,EAAA9J,EACAxhB,EAAA,GAGA,CACAorB,MAAA3qC,EAAA+gC,EACAxhB,QACAsb,MAAAkP,EAAA/pC,EAAA,GA0PA8qC,CAAAvpC,EAAAqnC,EAAAr0B,GACAw2B,EAHAjrC,KAGA0pC,cAAA/L,EAHA39B,KAGAk+B,UAAA58B,OACA8nC,EAAAuB,EAAA5P,MAAA4P,EAAAE,MAAAI,EAAAN,EAAAE,MAAA,EACA3qC,EAAA6d,KAAAD,IAAAmc,GAAAxJ,eAAAhc,EAAAy2B,gBAAAC,KAAAR,EAAAE,MAAAF,EAAAlrB,OACA,OACAogB,KAAAuJ,EAAAlpC,EAAA,EACAipC,KAAAC,EAAAlpC,EAAA,EACAkpC,SACAlpC,SAGAggC,KAAA,WACA,IACAzK,EADAz1B,KACAy1B,MAEAvJ,EAHAlsB,KAGA8+B,iBAEAmI,EALAjnC,KAKAk+B,UAAAn+B,KACA6V,EANA5V,KAMAm+B,aACA7M,EAAA2V,EAAAvlC,OACAiQ,EAAA,EAGA,IAFAsoB,GAAAE,OAAA9C,SAAA5B,EAAAC,IAAAD,EAAAgQ,WAEY9zB,EAAA2f,IAAU3f,EACtBwa,MAAAD,EAAAse,cAAA50B,EAAA7V,KAAA4R,MACAs1B,EAAAt1B,GAAAuuB,OAIAjG,GAAAE,OAAA3C,WAAA/B,EAAAC,MAMA2S,uBAAA,SAAAtB,EAAAtlC,GACA,IAOAkQ,EAAA2f,EAAAxsB,EANA2wB,EADAz1B,KACAy1B,MACAtgB,EAAAsgB,EAAA11B,KAAAoV,SACAS,EAAAT,EAHAnV,KAGAyB,OACA6+B,EAAAyG,EAAAzG,QAAA,GACA7rB,EAAAghB,EAAAhhB,QAAAwrB,SAAA8G,UACAvlC,EAAA,GAGAw4B,EAAA,CACAvE,QACA2V,UAAA3pC,EACAmU,UACA+nB,aAbA39B,KAaAyB,OAEA8D,EAAA,gEAEA,IAAAoM,EAAA,EAAA2f,EAAA/rB,EAAA7D,OAAqCiQ,EAAA2f,IAAU3f,EAE/CnQ,EADAsD,EAAAS,EAAAoM,IACA+1B,GAAA,CAAApH,EAAAx7B,GAAA8Q,EAAA9Q,GAAA2P,EAAA3P,IAAAk1B,EAAAv4B,GAGA,OAAAD,KAGA6pC,GAAApR,GAAAxJ,eACA6a,GAAArR,GAAAxlB,QAAAqlB,QAEAd,GAAAT,KAAA,UACAoP,MAAA,CACAC,KAAA,UAEAvJ,OAAA,CACAC,MAAA,EACA5yB,KAAA,SAEA2M,SAAA,SACAd,GAAA,aAGAinB,MAAA,EACA9yB,KAAA,SACA2M,SAAA,OACAd,GAAA,cAGAg0B,SAAA,CACAC,UAAA,CACAC,MAAA,WAEA,UAEA51B,MAAA,SAAA+c,EAAA7yB,GACA,IAAAyoC,EAAAzoC,EAAAoV,SAAAyd,EAAA+K,cAAA9nB,OAAA,GACA61B,EAAA3rC,EAAAoV,SAAAyd,EAAA+K,cAAA59B,KAAA6yB,EAAAnxB,OACA,OAAA+mC,EAAA,MAAA5V,EAAA+Y,OAAA,KAAA/Y,EAAAgZ,OAAA,KAAAF,EAAA/tB,EAAA,SAMA,IAAAkuB,GAAArK,GAAAtP,OAAA,CAIA2L,gBAAAoC,GAAAuH,MAKAxwB,OAAA,SAAAgoB,GACA,IAAA1M,EAAAtyB,KACAi+B,EAAA3L,EAAA4L,UACAkG,EAAAnG,EAAAl+B,KAEAk6B,GAAAlJ,KAAAqT,EAAA,SAAAxtB,EAAAnV,GACA6wB,EAAAmN,cAAA7oB,EAAAnV,EAAAu9B,MAOAS,cAAA,SAAA7oB,EAAAnV,EAAAu9B,GACA,IAAA1M,EAAAtyB,KACAi+B,EAAA3L,EAAA4L,UACAoC,EAAA1pB,EAAA0pB,QAAA,GACAwL,EAAAxZ,EAAAoM,cAAAT,EAAAG,SACA2N,EAAAzZ,EAAAoM,cAAAT,EAAAM,SAEA9pB,EAAA6d,EAAA+V,uBAAAzxB,EAAAnV,GAEA1B,EAAAuyB,EAAA6L,aAAAp+B,KAAA0B,GACAuqC,EAAA1Z,EAAA7wB,MACA+c,EAAAwgB,EAAA8M,EAAAG,mBAAA,IAAAH,EAAAhC,iBAAA,kBAAA/pC,IAAAmsC,IAAAzqC,EAAAuqC,GACAvtB,EAAAugB,EAAA+M,EAAAnD,eAAAmD,EAAAjC,iBAAA/pC,EAAA0B,EAAAuqC,GACAp1B,EAAA0xB,QAAAwD,EACAl1B,EAAA2xB,QAAAwD,EACAn1B,EAAAu1B,SAAA13B,EACAmC,EAAAwoB,cAAA4M,EACAp1B,EAAA0oB,OAAA79B,EACAmV,EAAA8jB,OAAA,CACA8F,gBAAA/rB,EAAA+rB,gBACAC,YAAAhsB,EAAAgsB,YACAC,YAAAjsB,EAAAisB,YACAwE,UAAAzwB,EAAAywB,UACAC,WAAA1wB,EAAA0wB,WACA3O,SAAA/hB,EAAA+hB,SACAX,OAAAmJ,EAAA,EAAAvqB,EAAAohB,OACAgP,KAAAvE,EAAAuE,MAAA1Y,MAAA3N,IAAA2N,MAAA1N,GACAD,IACAC,KAEA7H,EAAA4jB,SAMA6F,cAAA,SAAAzpB,GACA,IAAAkkB,EAAAlkB,EAAA8jB,OACAjmB,EAAAmC,EAAAu1B,SACA5L,EAAAtG,GAAAsG,cACA3pB,EAAAwpB,eAAA,CACAI,gBAAA1F,EAAA0F,gBACAC,YAAA3F,EAAA2F,YACAC,YAAA5F,EAAA4F,YACA7K,OAAAiF,EAAAjF,QAEAiF,EAAA0F,gBAAA6K,GAAA52B,EAAAksB,qBAAAJ,EAAA9rB,EAAA+rB,kBACA1F,EAAA2F,YAAA4K,GAAA52B,EAAAmsB,iBAAAL,EAAA9rB,EAAAgsB,cACA3F,EAAA4F,YAAA2K,GAAA52B,EAAAosB,iBAAApsB,EAAAisB,aACA5F,EAAAjF,OAAAphB,EAAAohB,OAAAphB,EAAAqtB,aAMAuG,uBAAA,SAAAzxB,EAAAnV,GACA,IAQAkQ,EAAA2f,EAAAxsB,EAPA2wB,EADAz1B,KACAy1B,MACAtgB,EAAAsgB,EAAA11B,KAAAoV,SACAS,EAAAT,EAHAnV,KAGAyB,OACA6+B,EAAA1pB,EAAA0pB,QAAA,GACA7rB,EAAAghB,EAAAhhB,QAAAwrB,SAAArpB,MACA7W,EAAA6V,EAAA7V,KAAA0B,GACAD,EAAA,GAGAw4B,EAAA,CACAvE,QACA2V,UAAA3pC,EACAmU,UACA+nB,aAdA39B,KAcAyB,OAEA8D,EAAA,+JAEA,IAAAoM,EAAA,EAAA2f,EAAA/rB,EAAA7D,OAAqCiQ,EAAA2f,IAAU3f,EAE/CnQ,EADAsD,EAAAS,EAAAoM,IACA25B,GAAA,CAAAhL,EAAAx7B,GAAA8Q,EAAA9Q,GAAA2P,EAAA3P,IAAAk1B,EAAAv4B,GAKA,OADAD,EAAAq0B,OAAAyV,GAAA,CAAAhL,EAAAzK,OAAA91B,IAAA4d,OAAAnZ,EAAAoR,EAAAigB,OAAAphB,EAAAohB,QAAAmE,EAAAv4B,GACAD,KAGA4qC,GAAAnS,GAAAxlB,QAAAqlB,QACAuS,GAAApS,GAAAxJ,eAEAuI,GAAAT,KAAA,YACAyD,UAAA,CAEAsQ,eAAA,EAEAC,cAAA,GAEA5E,MAAA,CACAC,KAAA,UAEA4E,eAAA,SAAA/W,GACA,IAAAgX,EAAA,GACAA,EAAA5nC,KAAA,cAAA4wB,EAAAle,GAAA,aACA,IAAAxX,EAAA01B,EAAA11B,KACAoV,EAAApV,EAAAoV,SACAszB,EAAA1oC,EAAA0oC,OAEA,GAAAtzB,EAAAzT,OACA,QAAAiQ,EAAA,EAAuBA,EAAAwD,EAAA,GAAApV,KAAA2B,SAA6BiQ,EACpD86B,EAAA5nC,KAAA,qCAAAsQ,EAAA,GAAAqrB,gBAAA7uB,GAAA,aAEA82B,EAAA92B,IACA86B,EAAA5nC,KAAA4jC,EAAA92B,IAGA86B,EAAA5nC,KAAA,SAKA,OADA4nC,EAAA5nC,KAAA,SACA4nC,EAAAC,KAAA,KAEA/3B,OAAA,CACA8zB,OAAA,CACAkE,eAAA,SAAAlX,GACA,IAAA11B,EAAA01B,EAAA11B,KAEA,OAAAA,EAAA0oC,OAAA/mC,QAAA3B,EAAAoV,SAAAzT,OACA3B,EAAA0oC,OAAA19B,IAAA,SAAA8K,EAAAlE,GACA,IAAAssB,EAAAxI,EAAAgJ,eAAA,GACAmO,EAAA7sC,EAAAoV,SAAA,GACAghB,EAAA8H,EAAAl+B,KAAA4R,GACA2uB,EAAAnK,KAAAmK,QAAA,GACAuM,EAAApX,EAAAhhB,QAAAwrB,SAAA9J,IACAa,EAAAoV,GAAA,CAAA9L,EAAAE,gBAAAoM,EAAApM,gBAAAqM,EAAArM,sBAAAh8B,EAAAmN,GACAslB,EAAAmV,GAAA,CAAA9L,EAAAG,YAAAmM,EAAAnM,YAAAoM,EAAApM,kBAAAj8B,EAAAmN,GACAm7B,EAAAV,GAAA,CAAA9L,EAAAI,YAAAkM,EAAAlM,YAAAmM,EAAAnM,kBAAAl8B,EAAAmN,GACA,OACA86B,KAAA52B,EACAytB,UAAAtM,EACAyM,YAAAxM,EACAsM,UAAAuJ,EACAvS,OAAApO,MAAAygB,EAAA7sC,KAAA4R,KAAAssB,EAAAl+B,KAAA4R,GAAA4oB,OAEA94B,MAAAkQ,KAKA,KAGA8F,QAAA,SAAA1U,EAAAgqC,GACA,IAEAp7B,EAAA2f,EAAA2M,EAFAx8B,EAAAsrC,EAAAtrC,MACAg0B,EAAAz1B,KAAAy1B,MAGA,IAAA9jB,EAAA,EAAA2f,GAAAmE,EAAA11B,KAAAoV,UAAA,IAAAzT,OAA8DiQ,EAAA2f,IAAU3f,GACxEssB,EAAAxI,EAAAgJ,eAAA9sB,IAEA5R,KAAA0B,KACAw8B,EAAAl+B,KAAA0B,GAAA84B,QAAA0D,EAAAl+B,KAAA0B,GAAA84B,QAIA9E,EAAAze,WAIAg2B,iBAAA,GAEAxW,UAAA,GAAAzY,KAAAkC,GAEAgtB,cAAA,EAAAlvB,KAAAkC,GAEAsrB,SAAA,CACAC,UAAA,CACAC,MAAA,WACA,UAEA51B,MAAA,SAAAq3B,EAAAntC,GACA,IAAAotC,EAAAptC,EAAA0oC,OAAAyE,EAAAzrC,OACAf,EAAA,KAAAX,EAAAoV,SAAA+3B,EAAAvP,cAAA59B,KAAAmtC,EAAAzrC,OAWA,OATAw4B,GAAAx0B,QAAA0nC,IAGAA,IAAAtjB,SACA,IAAAnpB,EAEAysC,GAAAzsC,EAGAysC,OAMA,IAAAC,GAAA5L,GAAAtP,OAAA,CACA2L,gBAAAoC,GAAAsH,IACAzJ,WAAA7D,GAAA/J,KAEAmd,aAAA,SAAA1P,GAGA,IAFA,IAAA2P,EAAA,EAEAC,EAAA,EAAqBA,EAAA5P,IAAkB4P,EACvCvtC,KAAAy1B,MAAA+T,iBAAA+D,MACAD,EAIA,OAAAA,GAEAt2B,OAAA,SAAAgoB,GACA,IAkBArtB,EAAA2f,EAlBAgB,EAAAtyB,KACAy1B,EAAAnD,EAAAmD,MACAgQ,EAAAhQ,EAAAgQ,UACA+H,EAAA/X,EAAAhhB,QACAg5B,EAAAhI,EAAAzP,MAAAyP,EAAA3P,KACA4X,EAAAjI,EAAAxP,OAAAwP,EAAA1P,IACA4X,EAAA5vB,KAAAD,IAAA2vB,EAAAC,GACA/rC,EAAA,CACA6c,EAAA,EACAC,EAAA,GAEAwf,EAAA3L,EAAA4L,UACA0P,EAAA3P,EAAAl+B,KACAitC,EAAAQ,EAAAR,iBACAC,EAAAO,EAAAP,cAEAY,EAAAvb,EAAAwb,eAAAxb,EAAA7wB,OAIA,GAAAwrC,EAAA,EAAAlvB,KAAAkC,GAAA,CACA,IAAAqiB,EAAAkL,EAAAhX,UAAA,EAAAzY,KAAAkC,IAEAsiB,GADAD,GAAA,EAAAvkB,KAAAkC,IAAAqiB,GAAAvkB,KAAAkC,IAAA,EAAAqiB,GAAAvkB,KAAAkC,GAAA,MACAgtB,EACAlS,EAAA,CACAvc,EAAAT,KAAAqC,IAAAkiB,GACA7jB,EAAAV,KAAAsC,IAAAiiB,IAEAsH,EAAA,CACAprB,EAAAT,KAAAqC,IAAAmiB,GACA9jB,EAAAV,KAAAsC,IAAAkiB,IAEAwL,EAAAzL,GAAA,GAAAC,GAAA,GAAAD,GAAA,EAAAvkB,KAAAkC,IAAA,EAAAlC,KAAAkC,IAAAsiB,EACAyL,EAAA1L,GAAA,GAAAvkB,KAAAkC,IAAA,GAAAlC,KAAAkC,IAAAsiB,GAAAD,GAAA,IAAAvkB,KAAAkC,IAAA,IAAAlC,KAAAkC,IAAAsiB,EACA0L,EAAA3L,IAAAvkB,KAAAkC,KAAAlC,KAAAkC,IAAAsiB,GAAAD,GAAAvkB,KAAAkC,IAAAlC,KAAAkC,IAAAsiB,EACA2L,EAAA5L,GAAA,IAAAvkB,KAAAkC,IAAA,IAAAlC,KAAAkC,IAAAsiB,GAAAD,GAAA,IAAAvkB,KAAAkC,IAAA,IAAAlC,KAAAkC,IAAAsiB,EACA4L,EAAAnB,EAAA,IACAlvB,EAAA,CACAU,EAAAyvB,GAAA,EAAAlwB,KAAAD,IAAAid,EAAAvc,GAAAuc,EAAAvc,EAAA,IAAA2vB,GAAAvE,EAAAprB,GAAAorB,EAAAprB,EAAA,IAAA2vB,IACA1vB,EAAAyvB,GAAA,EAAAnwB,KAAAD,IAAAid,EAAAtc,GAAAsc,EAAAtc,EAAA,IAAA0vB,GAAAvE,EAAAnrB,GAAAmrB,EAAAnrB,EAAA,IAAA0vB,KAEAnwB,EAAA,CACAQ,EAAAuvB,EAAA,EAAAhwB,KAAAC,IAAA+c,EAAAvc,GAAAuc,EAAAvc,EAAA,IAAA2vB,GAAAvE,EAAAprB,GAAAorB,EAAAprB,EAAA,IAAA2vB,IACA1vB,EAAAuvB,EAAA,EAAAjwB,KAAAC,IAAA+c,EAAAtc,GAAAsc,EAAAtc,EAAA,IAAA0vB,GAAAvE,EAAAnrB,GAAAmrB,EAAAnrB,EAAA,IAAA0vB,KAEAjuC,EAAA,CACA2U,MAAA,IAAAmJ,EAAAQ,EAAAV,EAAAU,GACA5J,OAAA,IAAAoJ,EAAAS,EAAAX,EAAAW,IAEAkvB,EAAA5vB,KAAAD,IAAA2vB,EAAAvtC,EAAA2U,MAAA64B,EAAAxtC,EAAA0U,QACAjT,EAAA,CACA6c,GAAA,IAAAR,EAAAQ,EAAAV,EAAAU,GACAC,GAAA,IAAAT,EAAAS,EAAAX,EAAAW,IAIA,IAAA9M,EAAA,EAAA2f,EAAAsc,EAAAlsC,OAAqCiQ,EAAA2f,IAAU3f,EAC/Ci8B,EAAAj8B,GAAAw6B,SAAA7Z,EAAA+V,uBAAAuF,EAAAj8B,MAaA,IAVA8jB,EAAAiL,YAAApO,EAAA8b,oBACA3Y,EAAAkN,YAAA5kB,KAAAC,KAAA2vB,EAAAlY,EAAAiL,aAAA,KACAjL,EAAAiN,YAAA3kB,KAAAC,IAAAgvB,EAAAvX,EAAAkN,YAAA,IAAAqK,EAAA,KACAvX,EAAA4Y,cAAA5Y,EAAAkN,YAAAlN,EAAAiN,cAAApQ,EAAAgc,iCAAA,GACA7Y,EAAA8Y,QAAA5sC,EAAA6c,EAAAiX,EAAAkN,YACAlN,EAAA+Y,QAAA7sC,EAAA8c,EAAAgX,EAAAkN,YACA1E,EAAAwQ,MAAAnc,EAAAoc,iBACApc,EAAAqQ,YAAAlN,EAAAkN,YAAAlN,EAAA4Y,aAAA/b,EAAAqc,qBAAArc,EAAA7wB,OACA6wB,EAAAoQ,YAAA3kB,KAAAC,IAAAsU,EAAAqQ,YAAAlN,EAAA4Y,aAAAR,EAAA,GAEAl8B,EAAA,EAAA2f,EAAAsc,EAAAlsC,OAAqCiQ,EAAA2f,IAAU3f,EAC/C2gB,EAAAmN,cAAAmO,EAAAj8B,KAAAqtB,IAGAS,cAAA,SAAAtJ,EAAA10B,EAAAu9B,GACA,IAAA1M,EAAAtyB,KACAy1B,EAAAnD,EAAAmD,MACAgQ,EAAAhQ,EAAAgQ,UACA+H,EAAA/X,EAAAhhB,QACAm6B,EAAApB,EAAAxR,UACA6S,GAAApJ,EAAA3P,KAAA2P,EAAAzP,OAAA,EACA8Y,GAAArJ,EAAA1P,IAAA0P,EAAAxP,QAAA,EACAqM,EAAAkL,EAAAhX,SAEA+L,EAAAiL,EAAAhX,SAEA5gB,EAAA0c,EAAA6L,aACA8O,EAAAjO,GAAA4P,EAAAtC,cAAA,EAAAnW,EAAAoE,OAAA,EAAAjI,EAAAyc,uBAAAn5B,EAAA7V,KAAA0B,KAAA+rC,EAAAP,eAAA,EAAAlvB,KAAAkC,KACAyiB,EAAA1D,GAAA4P,EAAArC,aAAA,EAAAja,EAAAoQ,YACAC,EAAA3D,GAAA4P,EAAArC,aAAA,EAAAja,EAAAqQ,YACAluB,EAAA0hB,EAAAgW,UAAA,GACAlS,GAAA/H,OAAAiE,EAAA,CAEAiJ,cAAA9M,EAAA7wB,MACA69B,OAAA79B,EAEAi5B,OAAA,CACA8F,gBAAA/rB,EAAA+rB,gBACAC,YAAAhsB,EAAAgsB,YACAC,YAAAjsB,EAAAisB,YACAe,YAAAhtB,EAAAgtB,YACAjjB,EAAAqwB,EAAApZ,EAAA8Y,QACA9vB,EAAAqwB,EAAArZ,EAAA+Y,QACAlM,aACAC,WACA0K,gBACAtK,cACAD,cACA7sB,MAAAokB,GAAAtJ,sBAAA/a,EAAAC,MAAApU,EAAAg0B,EAAA11B,KAAA0oC,OAAAhnC,OAGA,IAAAq5B,EAAA3E,EAAAuE,OAEAsE,GAAA4P,EAAAtC,gBAEAxR,EAAAwH,WADA,IAAA7gC,EACA+rC,EAAAhX,SAEAlE,EAAA4L,UAAAn+B,KAAA0B,EAAA,GAAAi5B,OAAA6H,SAGAzH,EAAAyH,SAAAzH,EAAAwH,WAAAxH,EAAAmS,eAGA9W,EAAAqE,SAEAkU,eAAA,WACA,IAGAhuC,EAHAkV,EAAA5V,KAAAm+B,aACAF,EAAAj+B,KAAAk+B,UACAuQ,EAAA,EAaA,OAXAxU,GAAAlJ,KAAAkN,EAAAl+B,KAAA,SAAA+T,EAAArS,GACAf,EAAAkV,EAAA7V,KAAA0B,GAEA0qB,MAAAzrB,IAAAoT,EAAAymB,SACAkU,GAAA1wB,KAAAknB,IAAAvkC,MAOA+tC,GAEAM,uBAAA,SAAAruC,GACA,IAAA+tC,EAAAzuC,KAAAk+B,UAAAuQ,MAEA,OAAAA,EAAA,IAAAtiB,MAAAzrB,GACA,EAAAqd,KAAAkC,IAAAlC,KAAAknB,IAAAvkC,GAAA+tC,GAGA,GAGAL,kBAAA,SAAAR,GACA,IAGAj8B,EAAA2f,EAAA2M,EAAA9H,EAAAuU,EAAAj2B,EAAAisB,EAAAsO,EAFAhxB,EAAA,EACAyX,EAFAz1B,KAEAy1B,MAGA,IAAAmY,EAEA,IAAAj8B,EAAA,EAAA2f,EAAAmE,EAAA11B,KAAAoV,SAAAzT,OAAsDiQ,EAAA2f,IAAU3f,EAChE,GAAA8jB,EAAA+T,iBAAA73B,GAAA,CACAssB,EAAAxI,EAAAgJ,eAAA9sB,GACAi8B,EAAA3P,EAAAl+B,KAEA4R,IAZA3R,KAYAyB,QACAipC,EAAAzM,EAAAyM,YAGA,MAKA,IAAAkD,EACA,SAGA,IAAAj8B,EAAA,EAAA2f,EAAAsc,EAAAlsC,OAAqCiQ,EAAA2f,IAAU3f,EAC/CwkB,EAAAyX,EAAAj8B,GAGA,WAFA8C,EAAAi2B,IAAArC,uBAAAlS,EAAAxkB,GAAAwkB,EAAAgW,UAEA1K,cACAf,EAAAjsB,EAAAisB,YACAsO,EAAAv6B,EAAAosB,iBAEA7iB,EAAAgxB,GADAhxB,EAAA0iB,EAAA1iB,EAAA0iB,EAAA1iB,GACAgxB,EAAAhxB,GAIA,OAAAA,GAMAqiB,cAAA,SAAAlK,GACA,IAAA2E,EAAA3E,EAAAuE,OACAjmB,EAAA0hB,EAAAgW,SACA5L,EAAAtG,GAAAsG,cACApK,EAAAiK,eAAA,CACAI,gBAAA1F,EAAA0F,gBACAC,YAAA3F,EAAA2F,YACAC,YAAA5F,EAAA4F,aAEA5F,EAAA0F,gBAAA6L,GAAA53B,EAAAksB,qBAAAJ,EAAA9rB,EAAA+rB,kBACA1F,EAAA2F,YAAA4L,GAAA53B,EAAAmsB,iBAAAL,EAAA9rB,EAAAgsB,cACA3F,EAAA4F,YAAA2L,GAAA53B,EAAAosB,iBAAApsB,EAAAisB,cAMA2H,uBAAA,SAAAlS,EAAA10B,GACA,IAMAkQ,EAAA2f,EAAAxsB,EALA2wB,EADAz1B,KACAy1B,MACA7f,EAFA5V,KAEAm+B,aACAmC,EAAAnK,EAAAmK,QAAA,GACA7rB,EAAAghB,EAAAhhB,QAAAwrB,SAAA9J,IACA30B,EAAA,GAGAw4B,EAAA,CACAvE,QACA2V,UAAA3pC,EACAmU,UACA+nB,aAZA39B,KAYAyB,OAEA8D,EAAA,2HAEA,IAAAoM,EAAA,EAAA2f,EAAA/rB,EAAA7D,OAAqCiQ,EAAA2f,IAAU3f,EAE/CnQ,EADAsD,EAAAS,EAAAoM,IACAy6B,GAAA,CAAA9L,EAAAx7B,GAAA8Q,EAAA9Q,GAAA2P,EAAA3P,IAAAk1B,EAAAv4B,GAGA,OAAAD,GAOAmtC,qBAAA,SAAAhR,GAGA,IAFA,IAAAsR,EAAA,EAEAt9B,EAAA,EAAqBA,EAAAgsB,IAAkBhsB,EACvC3R,KAAAy1B,MAAA+T,iBAAA73B,KACAs9B,GAAAjvC,KAAA8tC,eAAAn8B,IAIA,OAAAs9B,GAMAnB,eAAA,SAAAoB,GACA,OAAAnxB,KAAAC,IAAAquB,GAAArsC,KAAAy1B,MAAA11B,KAAAoV,SAAA+5B,GAAA/f,OAAA,OAOAmf,8BAAA,WACA,OAAAtuC,KAAA2uC,qBAAA3uC,KAAAy1B,MAAA11B,KAAAoV,SAAAzT,WAIAs3B,GAAAT,KAAA,iBACAoP,MAAA,CACAC,KAAA,QACAuH,KAAA,KAEA9Q,OAAA,CACAC,MAAA,EACA5yB,KAAA,SACA2M,SAAA,WAEAmmB,MAAA,EACA9yB,KAAA,WACA2M,SAAA,OACAwvB,mBAAA,GACAC,cAAA,GACAnmC,QAAA,EACAomC,UAAA,CACAC,iBAAA,MAIA/H,SAAA,CACA8G,UAAA,CACAP,cAAA,SAGA+E,SAAA,CACA3D,KAAA,QACAuH,KAAA,OAIA,IAAAC,GAAAnH,GAAA/V,OAAA,CAIA0M,iBAAA,WACA,OAAA5+B,KAAAk+B,UAAAE,SAMAS,iBAAA,WACA,OAAA7+B,KAAAk+B,UAAAK,WAGA8Q,GAAApV,GAAAxJ,eACA6e,GAAArV,GAAAxlB,QAAAqlB,QACAyV,GAAAtV,GAAAE,OAAAhD,eAoBA,SAAAqY,GAAA55B,EAAAnB,GACA,OAAA46B,GAAAz5B,EAAA65B,SAAAh7B,EAAAskB,WAnBAC,GAAAT,KAAA,QACAQ,WAAA,EACAoL,UAAA,EACAwD,MAAA,CACAC,KAAA,SAEAvJ,OAAA,CACAC,MAAA,EACA5yB,KAAA,WACA6L,GAAA,aAEAinB,MAAA,EACA9yB,KAAA,SACA6L,GAAA,gBASA,IAAAm4B,GAAAlO,GAAAtP,OAAA,CACA0L,mBAAAqC,GAAAvvB,KACAmtB,gBAAAoC,GAAAuH,MACAxwB,OAAA,SAAAgoB,GACA,IAOArtB,EAAA2f,EAPAgB,EAAAtyB,KACAi+B,EAAA3L,EAAA4L,UACAyF,EAAA1F,EAAAroB,QACAwuB,EAAAnG,EAAAl+B,MAAA,GACAmsB,EAAAoG,EAAAoM,cAAAT,EAAAM,SACA3oB,EAAA0c,EAAA6L,aACAsR,EAAAD,GAAA55B,EAAA0c,EAAAmD,MAAAhhB,SAoBA,IAjBAg7B,SAEAjrC,IAAAoR,EAAAmiB,cAAAvzB,IAAAoR,EAAA+5B,cACA/5B,EAAA+5B,YAAA/5B,EAAAmiB,SAIA4L,EAAAiM,OAAA1jB,EACAyX,EAAAvE,cAAA9M,EAAA7wB,MAEAkiC,EAAAU,UAAAD,EAEAT,EAAAjJ,OAAApI,EAAAud,oBAAAlM,GACAA,EAAAnJ,SAIA7oB,EAAA,EAAA2f,EAAA8S,EAAA1iC,OAAuCiQ,EAAA2f,IAAU3f,EACjD2gB,EAAAmN,cAAA2E,EAAAzyB,KAAAqtB,GAQA,IALAyQ,GAAA,IAAA9L,EAAAjJ,OAAA3C,SACAzF,EAAAwd,4BAIAn+B,EAAA,EAAA2f,EAAA8S,EAAA1iC,OAAuCiQ,EAAA2f,IAAU3f,EACjDyyB,EAAAzyB,GAAA6oB,SAGAiF,cAAA,SAAA7oB,EAAAnV,EAAAu9B,GACA,IASAxgB,EAAAC,EATA6T,EAAAtyB,KACAi+B,EAAA3L,EAAA4L,UACAoC,EAAA1pB,EAAA0pB,QAAA,GACA1qB,EAAA0c,EAAA6L,aACAR,EAAArL,EAAA7wB,MACAf,EAAAkV,EAAA7V,KAAA0B,GACAsqC,EAAAzZ,EAAAoM,cAAAT,EAAAM,SACAuN,EAAAxZ,EAAAoM,cAAAT,EAAAG,SACA2R,EAAA9R,EAAAroB,QAAA8kB,OAGAjmB,EAAA6d,EAAA0d,qBAAAp5B,EAAAnV,GAEA+c,EAAAstB,EAAAhC,iBAAA,kBAAAppC,IAAAwrC,IAAAzqC,EAAAk8B,GACAlf,EAAAugB,EAAA+M,EAAAnD,eAAAtW,EAAA2d,gBAAAvvC,EAAAe,EAAAk8B,GAEA/mB,EAAA0xB,QAAAwD,EACAl1B,EAAA2xB,QAAAwD,EACAn1B,EAAAu1B,SAAA13B,EACAmC,EAAAwoB,cAAAzB,EACA/mB,EAAA0oB,OAAA79B,EAEAmV,EAAA8jB,OAAA,CACAlc,IACAC,IACAomB,KAAAvE,EAAAuE,MAAA1Y,MAAA3N,IAAA2N,MAAA1N,GAEAoX,OAAAphB,EAAAohB,OACAsP,WAAA1wB,EAAA0wB,WACA3O,SAAA/hB,EAAA+hB,SACAgK,gBAAA/rB,EAAA+rB,gBACAC,YAAAhsB,EAAAgsB,YACAC,YAAAjsB,EAAAisB,YACA3I,QAAAsX,GAAA/O,EAAAvI,QAAAgY,IAAAhY,QAAA,GACAF,cAAAkY,KAAAlY,YAEAqN,UAAAzwB,EAAAywB,YAOA8K,qBAAA,SAAAl8B,EAAArS,GACA,IAMAkQ,EAAA2f,EAAAxsB,EALA2wB,EADAz1B,KACAy1B,MACA7f,EAAA6f,EAAA11B,KAAAoV,SAFAnV,KAEAyB,OACA6+B,EAAAxsB,EAAAwsB,QAAA,GACA7rB,EAAAghB,EAAAhhB,QAAAwrB,SAAArpB,MACApV,EAAA,GAGAw4B,EAAA,CACAvE,QACA2V,UAAA3pC,EACAmU,UACA+nB,aAZA39B,KAYAyB,OAEAyuC,EAAA,CACA1P,gBAAA,uBACAC,YAAA,mBACAC,YAAA,mBACAwE,UAAA,iBACAvE,qBAAA,4BACAC,iBAAA,wBACAC,iBAAA,wBACAiB,YAAA,mBACAqD,WAAA,aACAtP,OAAA,cACAW,SAAA,iBAEAjxB,EAAAxD,OAAAwD,KAAA2qC,GAEA,IAAAv+B,EAAA,EAAA2f,EAAA/rB,EAAA7D,OAAqCiQ,EAAA2f,IAAU3f,EAC/C7M,EAAAS,EAAAoM,GACAnQ,EAAAsD,GAAAwqC,GAAA,CAAAhP,EAAAx7B,GAAA8Q,EAAAs6B,EAAAprC,IAAA8Q,EAAA9Q,GAAA2P,EAAA3P,IAAAk1B,EAAAv4B,GAGA,OAAAD,GAMAquC,oBAAA,SAAA/7B,GACA,IAOAnC,EAAA2f,EAAAxsB,EANA2wB,EADAz1B,KACAy1B,MACA7f,EAAA6f,EAAA11B,KAAAoV,SAFAnV,KAEAyB,OACA6+B,EAAAxsB,EAAAwsB,QAAA,GACA7rB,EAAAghB,EAAAhhB,QACA07B,EAAA17B,EAAAwrB,SAAA0D,KACAniC,EAAA,GAEA+D,EAAA,mJAEA,IAAAoM,EAAA,EAAA2f,EAAA/rB,EAAA7D,OAAqCiQ,EAAA2f,IAAU3f,EAE/CnQ,EADAsD,EAAAS,EAAAoM,IACA29B,GAAA,CAAAhP,EAAAx7B,GAAA8Q,EAAA9Q,GAAAqrC,EAAArrC,KASA,OAHAtD,EAAA2iC,SAAAkL,GAAAz5B,EAAAuuB,SAAA1vB,EAAA0vB,UACA3iC,EAAAu2B,QAAAsX,GAAAz5B,EAAA+5B,YAAAQ,EAAApY,SACAv2B,EAAAq2B,YAAAyX,GAAA,CAAAhP,EAAAzI,YAAAjiB,EAAAiiB,YAAAsY,EAAAvY,UACAp2B,GAEAyuC,gBAAA,SAAAvvC,EAAAe,EAAAk8B,GACA,IAMAhsB,EAAAi7B,EAAAwD,EALA3a,EADAz1B,KACAy1B,MACAwI,EAFAj+B,KAEAk+B,UACA6N,EAHA/rC,KAGA0+B,cAAAT,EAAAM,SACA8R,EAAA,EACAC,EAAA,EAGA,GAAAvE,EAAAt3B,QAAApQ,QAAA,CACA,IAAAsN,EAAA,EAAmBA,EAAAgsB,EAAkBhsB,IAIrC,GAHAi7B,EAAAnX,EAAA11B,KAAAoV,SAAAxD,GAGA,UAFAy+B,EAAA3a,EAAAgJ,eAAA9sB,IAEAjG,MAAA0kC,EAAA7R,UAAAwN,EAAAx0B,IAAAke,EAAA+T,iBAAA73B,GAAA,CACA,IAAA4+B,EAAA/f,OAAAub,EAAAvB,cAAAoC,EAAA7sC,KAAA0B,KAEA8uC,EAAA,EACAD,GAAAC,GAAA,EAEAF,GAAAE,GAAA,EAKA,IAAAC,EAAAhgB,OAAAub,EAAAvB,cAAA9pC,IAEA,OAAA8vC,EAAA,EACAzE,EAAAjC,iBAAAwG,EAAAE,GAGAzE,EAAAjC,iBAAAuG,EAAAG,GAGA,OAAAzE,EAAAjC,iBAAAppC,IAEAovC,0BAAA,WACA,IAMAn+B,EAAA2f,EAAAwJ,EAAA2V,EALAhb,EADAz1B,KACAy1B,MACAwI,EAFAj+B,KAEAk+B,UACA6R,EAAA9R,EAAAroB,QAAA8kB,OACAtD,EAAA3B,EAAAgQ,UACArB,EAAAnG,EAAAl+B,MAAA,GASA,SAAA2wC,EAAAC,EAAA7yB,EAAAE,GACA,OAAAD,KAAAC,IAAAD,KAAAD,IAAA6yB,EAAA3yB,GAAAF,GAGA,GAVAiyB,EAAA5L,WACAC,IAAAwM,OAAA,SAAAD,GACA,OAAAA,EAAAjW,OAAAmK,QAQA,aAAAkL,EAAAc,uBACA5W,GAAA6W,oBAAA1M,QAEA,IAAAzyB,EAAA,EAAA2f,EAAA8S,EAAA1iC,OAAyCiQ,EAAA2f,IAAU3f,EACnDmpB,EAAAsJ,EAAAzyB,GAAA+oB,OACA+V,EAAAxW,GAAA8W,YAAA9W,GAAA2K,aAAAR,EAAAzyB,GAAA+oB,OAAAI,EAAAb,GAAA+W,SAAA5M,EAAAzyB,GAAA+oB,OAAAqV,EAAAhY,SACA+C,EAAA7C,sBAAAwY,EAAA/Y,SAAAlZ,EACAsc,EAAA3C,sBAAAsY,EAAA/Y,SAAAjZ,EACAqc,EAAA5C,kBAAAuY,EAAA/5B,KAAA8H,EACAsc,EAAA1C,kBAAAqY,EAAA/5B,KAAA+H,EAIA,GAAAgX,EAAAhhB,QAAAwrB,SAAA0D,KAAAK,gBACA,IAAAryB,EAAA,EAAA2f,EAAA8S,EAAA1iC,OAAyCiQ,EAAA2f,IAAU3f,EACnDmpB,EAAAsJ,EAAAzyB,GAAA+oB,OAEA6U,GAAAzU,EAAA1D,KACAzlB,EAAA,GAAA49B,GAAAnL,EAAAzyB,EAAA,GAAA+oB,OAAAtD,KACA0D,EAAA7C,sBAAAyY,EAAA5V,EAAA7C,sBAAAb,EAAAtB,KAAAsB,EAAApB,OACA8E,EAAA3C,sBAAAuY,EAAA5V,EAAA3C,sBAAAf,EAAArB,IAAAqB,EAAAnB,SAGAtkB,EAAAyyB,EAAA1iC,OAAA,GAAA6tC,GAAAnL,EAAAzyB,EAAA,GAAA+oB,OAAAtD,KACA0D,EAAA5C,kBAAAwY,EAAA5V,EAAA5C,kBAAAd,EAAAtB,KAAAsB,EAAApB,OACA8E,EAAA1C,kBAAAsY,EAAA5V,EAAA1C,kBAAAhB,EAAArB,IAAAqB,EAAAnB,WAMAiK,KAAA,WACA,IAMA+Q,EALAxb,EADAz1B,KACAy1B,MACAwI,EAFAj+B,KAEAk+B,UACAkG,EAAAnG,EAAAl+B,MAAA,GACAq3B,EAAA3B,EAAAgQ,UACAnU,EAAA8S,EAAA1iC,OAEAiQ,EAAA,EAeA,IAbA69B,GATAxvC,KASAm+B,aAAA1I,EAAAhhB,WACAw8B,GAAAhT,EAAAroB,QAAA8kB,OAAAgG,aAAA,KACAzG,GAAAE,OAAA9C,SAAA5B,EAAAC,IAAA,CACAI,KAAAsB,EAAAtB,KACAE,MAAAoB,EAAApB,MACAD,IAAAqB,EAAArB,IAAAkb,EACAhb,OAAAmB,EAAAnB,OAAAgb,IAEAhT,EAAAroB,QAAAsqB,OACAjG,GAAAE,OAAA3C,WAAA/B,EAAAC,MAIY/jB,EAAA2f,IAAU3f,EACtByyB,EAAAzyB,GAAAuuB,KAAA9I,IAOAiJ,cAAA,SAAAzpB,GACA,IAAAkkB,EAAAlkB,EAAA8jB,OACAjmB,EAAAmC,EAAAu1B,SACA5L,EAAAtG,GAAAsG,cACA3pB,EAAAwpB,eAAA,CACAI,gBAAA1F,EAAA0F,gBACAC,YAAA3F,EAAA2F,YACAC,YAAA5F,EAAA4F,YACA7K,OAAAiF,EAAAjF,QAEAiF,EAAA0F,gBAAA6O,GAAA56B,EAAAksB,qBAAAJ,EAAA9rB,EAAA+rB,kBACA1F,EAAA2F,YAAA4O,GAAA56B,EAAAmsB,iBAAAL,EAAA9rB,EAAAgsB,cACA3F,EAAA4F,YAAA2O,GAAA56B,EAAAosB,iBAAApsB,EAAAisB,aACA5F,EAAAjF,OAAAwZ,GAAA56B,EAAAqtB,YAAArtB,EAAAohB,WAGAqb,GAAAjX,GAAAxlB,QAAAqlB,QAEAd,GAAAT,KAAA,aACArM,MAAA,CACAxgB,KAAA,eACAylC,WAAA,CACA/4B,SAAA,GAEA2vB,UAAA,CACAqJ,UAAA,GAEAC,YAAA,CACAj5B,SAAA,GAEA8xB,MAAA,CACAoH,aAAA,IAIAtV,UAAA,CACAsQ,eAAA,EACAC,cAAA,GAEAjK,YAAA,GAAAvkB,KAAAkC,GACAusB,eAAA,SAAA/W,GACA,IAAAgX,EAAA,GACAA,EAAA5nC,KAAA,cAAA4wB,EAAAle,GAAA,aACA,IAAAxX,EAAA01B,EAAA11B,KACAoV,EAAApV,EAAAoV,SACAszB,EAAA1oC,EAAA0oC,OAEA,GAAAtzB,EAAAzT,OACA,QAAAiQ,EAAA,EAAuBA,EAAAwD,EAAA,GAAApV,KAAA2B,SAA6BiQ,EACpD86B,EAAA5nC,KAAA,qCAAAsQ,EAAA,GAAAqrB,gBAAA7uB,GAAA,aAEA82B,EAAA92B,IACA86B,EAAA5nC,KAAA4jC,EAAA92B,IAGA86B,EAAA5nC,KAAA,SAKA,OADA4nC,EAAA5nC,KAAA,SACA4nC,EAAAC,KAAA,KAEA/3B,OAAA,CACA8zB,OAAA,CACAkE,eAAA,SAAAlX,GACA,IAAA11B,EAAA01B,EAAA11B,KAEA,OAAAA,EAAA0oC,OAAA/mC,QAAA3B,EAAAoV,SAAAzT,OACA3B,EAAA0oC,OAAA19B,IAAA,SAAA8K,EAAAlE,GACA,IAAAssB,EAAAxI,EAAAgJ,eAAA,GACAmO,EAAA7sC,EAAAoV,SAAA,GACAghB,EAAA8H,EAAAl+B,KAAA4R,GACA2uB,EAAAnK,EAAAmK,QAAA,GACAuM,EAAApX,EAAAhhB,QAAAwrB,SAAA9J,IACAa,EAAAka,GAAA,CAAA5Q,EAAAE,gBAAAoM,EAAApM,gBAAAqM,EAAArM,sBAAAh8B,EAAAmN,GACAslB,EAAAia,GAAA,CAAA5Q,EAAAG,YAAAmM,EAAAnM,YAAAoM,EAAApM,kBAAAj8B,EAAAmN,GACAm7B,EAAAoE,GAAA,CAAA5Q,EAAAI,YAAAkM,EAAAlM,YAAAmM,EAAAnM,kBAAAl8B,EAAAmN,GACA,OACA86B,KAAA52B,EACAytB,UAAAtM,EACAyM,YAAAxM,EACAsM,UAAAuJ,EACAvS,OAAApO,MAAAygB,EAAA7sC,KAAA4R,KAAAssB,EAAAl+B,KAAA4R,GAAA4oB,OAEA94B,MAAAkQ,KAKA,KAGA8F,QAAA,SAAA1U,EAAAgqC,GACA,IAEAp7B,EAAA2f,EAAA2M,EAFAx8B,EAAAsrC,EAAAtrC,MACAg0B,EAAAz1B,KAAAy1B,MAGA,IAAA9jB,EAAA,EAAA2f,GAAAmE,EAAA11B,KAAAoV,UAAA,IAAAzT,OAA8DiQ,EAAA2f,IAAU3f,GACxEssB,EAAAxI,EAAAgJ,eAAA9sB,IACA5R,KAAA0B,GAAA84B,QAAA0D,EAAAl+B,KAAA0B,GAAA84B,OAGA9E,EAAAze,WAIAu0B,SAAA,CACAC,UAAA,CACAC,MAAA,WACA,UAEA51B,MAAA,SAAA+c,EAAA7yB,GACA,OAAAA,EAAA0oC,OAAA7V,EAAAnxB,OAAA,KAAAmxB,EAAAgZ,YAMA,IAAA2F,GAAA/P,GAAAtP,OAAA,CACA2L,gBAAAoC,GAAAsH,IACAzJ,WAAA7D,GAAA/J,KACAlZ,OAAA,SAAAgoB,GACA,IAOArtB,EAAA2f,EAAA8Q,EAPA9P,EAAAtyB,KACA4V,EAAA0c,EAAA6L,aACAF,EAAA3L,EAAA4L,UACAnD,EAAAzI,EAAAmD,MAAAhhB,QAAA6tB,YAAA,EACAkP,EAAAlf,EAAAmf,QAAA,GACAC,EAAApf,EAAAqf,QAAA,GACA/D,EAAA3P,EAAAl+B,KAOA,IAJAuyB,EAAAsf,gBAEA3T,EAAAgD,MAAA3O,EAAAuf,uBAEAlgC,EAAA,EAAA2f,EAAA1b,EAAA7V,KAAA2B,OAA6CiQ,EAAA2f,EAAU3f,IACvD6/B,EAAA7/B,GAAAopB,EACAqH,EAAA9P,EAAAwf,cAAAngC,GACA+/B,EAAA//B,GAAAywB,EACArH,GAAAqH,EAGA,IAAAzwB,EAAA,EAAA2f,EAAAsc,EAAAlsC,OAAqCiQ,EAAA2f,IAAU3f,EAC/Ci8B,EAAAj8B,GAAAw6B,SAAA7Z,EAAA+V,uBAAAuF,EAAAj8B,MACA2gB,EAAAmN,cAAAmO,EAAAj8B,KAAAqtB,IAOA4S,cAAA,WACA,IAAAtf,EAAAtyB,KACAy1B,EAAAnD,EAAAmD,MACAgQ,EAAAhQ,EAAAgQ,UACA+H,EAAA/X,EAAAhhB,QACAk5B,EAAA5vB,KAAAD,IAAA2nB,EAAAzP,MAAAyP,EAAA3P,KAAA2P,EAAAxP,OAAAwP,EAAA1P,KACAN,EAAAkN,YAAA5kB,KAAAC,IAAA2vB,EAAA,KACAlY,EAAAiN,YAAA3kB,KAAAC,IAAAwvB,EAAAR,iBAAAvX,EAAAkN,YAAA,IAAA6K,EAAAR,iBAAA,KACAvX,EAAA4Y,cAAA5Y,EAAAkN,YAAAlN,EAAAiN,aAAAjN,EAAAsc,yBACAzf,EAAAqQ,YAAAlN,EAAAkN,YAAAlN,EAAA4Y,aAAA/b,EAAA7wB,MACA6wB,EAAAoQ,YAAApQ,EAAAqQ,YAAAlN,EAAA4Y,cAEA5O,cAAA,SAAAtJ,EAAA10B,EAAAu9B,GACA,IAAA1M,EAAAtyB,KACAy1B,EAAAnD,EAAAmD,MACA7f,EAAA0c,EAAA6L,aACAqP,EAAA/X,EAAAhhB,QACAm6B,EAAApB,EAAAxR,UACA9P,EAAAuJ,EAAAvJ,MACAuc,EAAAhT,EAAA11B,KAAA0oC,OACAoG,EAAA3iB,EAAA8lB,QACAlD,EAAA5iB,EAAA+lB,QAEAC,EAAA1E,EAAAlL,WACAD,EAAAlM,EAAAoE,OAAA,EAAArO,EAAAimB,8BAAAv8B,EAAA7V,KAAA0B,IACA6gC,EAAAhQ,EAAAmf,QAAAhwC,GACA8gC,EAAAD,GAAAnM,EAAAoE,OAAA,EAAAjI,EAAAqf,QAAAlwC,IACA2wC,EAAAxD,EAAArC,aAAA,EAAArgB,EAAAimB,8BAAAv8B,EAAA7V,KAAA0B,IACAgT,EAAA0hB,EAAAgW,UAAA,GACAlS,GAAA/H,OAAAiE,EAAA,CAEAiJ,cAAA9M,EAAA7wB,MACA69B,OAAA79B,EACAmuC,OAAA1jB,EAEAwO,OAAA,CACA8F,gBAAA/rB,EAAA+rB,gBACAC,YAAAhsB,EAAAgsB,YACAC,YAAAjsB,EAAAisB,YACAe,YAAAhtB,EAAAgtB,YACAjjB,EAAAqwB,EACApwB,EAAAqwB,EACApM,YAAA,EACAC,YAAA3D,EAAAoT,EAAA/P,EACAC,WAAAtD,GAAA4P,EAAAtC,cAAA4F,EAAA5P,EACAC,SAAAvD,GAAA4P,EAAAtC,cAAA4F,EAAA3P,EACA1sB,MAAAokB,GAAAtJ,sBAAA8X,EAAAhnC,EAAAgnC,EAAAhnC,OAGA00B,EAAAqE,SAEAqX,qBAAA,WACA,IAAAj8B,EAAA5V,KAAAm+B,aACAF,EAAAj+B,KAAAk+B,UACA+C,EAAA,EAMA,OALAhH,GAAAlJ,KAAAkN,EAAAl+B,KAAA,SAAA+T,EAAArS,GACA0qB,MAAAvW,EAAA7V,KAAA0B,KAAAqS,EAAAymB,QACA0G,MAGAA,GAMAZ,cAAA,SAAAlK,GACA,IAAA2E,EAAA3E,EAAAuE,OACAjmB,EAAA0hB,EAAAgW,SACA5L,EAAAtG,GAAAsG,cACA9P,EAAAwJ,GAAAxJ,eACA0F,EAAAiK,eAAA,CACAI,gBAAA1F,EAAA0F,gBACAC,YAAA3F,EAAA2F,YACAC,YAAA5F,EAAA4F,aAEA5F,EAAA0F,gBAAA/P,EAAAhc,EAAAksB,qBAAAJ,EAAA9rB,EAAA+rB,kBACA1F,EAAA2F,YAAAhQ,EAAAhc,EAAAmsB,iBAAAL,EAAA9rB,EAAAgsB,cACA3F,EAAA4F,YAAAjQ,EAAAhc,EAAAosB,iBAAApsB,EAAAisB,cAMA2H,uBAAA,SAAAlS,EAAA10B,GACA,IAMAkQ,EAAA2f,EAAAxsB,EALA2wB,EADAz1B,KACAy1B,MACA7f,EAFA5V,KAEAm+B,aACAmC,EAAAnK,EAAAmK,QAAA,GACA7rB,EAAAghB,EAAAhhB,QAAAwrB,SAAA9J,IACA30B,EAAA,GAGAw4B,EAAA,CACAvE,QACA2V,UAAA3pC,EACAmU,UACA+nB,aAZA39B,KAYAyB,OAEA8D,EAAA,2HAEA,IAAAoM,EAAA,EAAA2f,EAAA/rB,EAAA7D,OAAqCiQ,EAAA2f,IAAU3f,EAE/CnQ,EADAsD,EAAAS,EAAAoM,IACAu/B,GAAA,CAAA5Q,EAAAx7B,GAAA8Q,EAAA9Q,GAAA2P,EAAA3P,IAAAk1B,EAAAv4B,GAGA,OAAAD,GAMAswC,cAAA,SAAArwC,GACA,IAAA6wB,EAAAtyB,KACAihC,EAAAjhC,KAAAk+B,UAAA+C,MACArrB,EAAA0c,EAAA6L,aACAF,EAAA3L,EAAA4L,UAEA,GAAA/R,MAAAvW,EAAA7V,KAAA0B,KAAAw8B,EAAAl+B,KAAA0B,GAAA84B,OACA,SAIA,IAAAP,EAAA,CACAvE,MAAAnD,EAAAmD,MACA2V,UAAA3pC,EACAmU,UACA+nB,aAAArL,EAAA7wB,OAEA,OAAAyvC,GAAA,CAAA5e,EAAAmD,MAAAhhB,QAAAwrB,SAAA9J,IAAAiM,MAAA,EAAArkB,KAAAkC,GAAAghB,GAAAjH,EAAAv4B,MAIAu3B,GAAAT,KAAA,MAAA0B,GAAA1K,MAAAyJ,GAAAqZ,WAEArZ,GAAAT,KAAA,OACAyU,iBAAA,IAIA,IAAAsF,GAAAlF,GACAmF,GAAAtY,GAAAxJ,eACA+hB,GAAAvY,GAAAxlB,QAAAqlB,QAEAd,GAAAT,KAAA,SACArM,MAAA,CACAxgB,KAAA,gBAEAu0B,SAAA,CACA0D,KAAA,CACA5L,QAAA,MAMA,IAAA0a,GAAAjR,GAAAtP,OAAA,CACA0L,mBAAAqC,GAAAvvB,KACAmtB,gBAAAoC,GAAAuH,MACA1J,WAAA7D,GAAA/J,KACAlZ,OAAA,SAAAgoB,GACA,IAMArtB,EAAA2f,EANAgB,EAAAtyB,KACAi+B,EAAA3L,EAAA4L,UACAyF,EAAA1F,EAAAroB,QACAwuB,EAAAnG,EAAAl+B,MAAA,GACAmsB,EAAAoG,EAAAmD,MAAAvJ,MACAtW,EAAA0c,EAAA6L,aAiBA,SAdA35B,IAAAoR,EAAAmiB,cAAAvzB,IAAAoR,EAAA+5B,cACA/5B,EAAA+5B,YAAA/5B,EAAAmiB,SAIA4L,EAAAiM,OAAA1jB,EACAyX,EAAAvE,cAAA9M,EAAA7wB,MAEAkiC,EAAAU,UAAAD,EACAT,EAAAa,OAAA,EAEAb,EAAAjJ,OAAApI,EAAAud,oBAAAlM,GACAA,EAAAnJ,QAEA7oB,EAAA,EAAA2f,EAAA8S,EAAA1iC,OAAuCiQ,EAAA2f,IAAU3f,EACjD2gB,EAAAmN,cAAA2E,EAAAzyB,KAAAqtB,GAMA,IAFA1M,EAAAwd,4BAEAn+B,EAAA,EAAA2f,EAAA8S,EAAA1iC,OAAuCiQ,EAAA2f,IAAU3f,EACjDyyB,EAAAzyB,GAAA6oB,SAGAiF,cAAA,SAAA7oB,EAAAnV,EAAAu9B,GACA,IAAA1M,EAAAtyB,KACAsgC,EAAA1pB,EAAA0pB,QAAA,GACA1qB,EAAA0c,EAAA6L,aACAjS,EAAAoG,EAAAmD,MAAAvJ,MACAwmB,EAAAxmB,EAAAymB,yBAAAlxC,EAAAmU,EAAA7V,KAAA0B,IAEAgT,EAAA6d,EAAA0d,qBAAAp5B,EAAAnV,GAEAsuC,EAAAzd,EAAA4L,UAAAtoB,QAAA8kB,OAEAlc,EAAAwgB,EAAA9S,EAAA8lB,QAAAU,EAAAl0B,EACAC,EAAAugB,EAAA9S,EAAA+lB,QAAAS,EAAAj0B,EAEA7H,EAAAg5B,OAAA1jB,EACAtV,EAAAu1B,SAAA13B,EACAmC,EAAAwoB,cAAA9M,EAAA7wB,MACAmV,EAAA0oB,OAAA79B,EAEAmV,EAAA8jB,OAAA,CACAlc,IAEAC,IACAomB,KAAAvE,EAAAuE,MAAA1Y,MAAA3N,IAAA2N,MAAA1N,GAEAoX,OAAAphB,EAAAohB,OACAsP,WAAA1wB,EAAA0wB,WACA3O,SAAA/hB,EAAA+hB,SACAgK,gBAAA/rB,EAAA+rB,gBACAC,YAAAhsB,EAAAgsB,YACAC,YAAAjsB,EAAAisB,YACA3I,QAAAwa,GAAAjS,EAAAvI,QAAAgY,IAAAhY,QAAA,GAEAmN,UAAAzwB,EAAAywB,YAOA8K,qBAAA,SAAAl8B,EAAArS,GACA,IAMAkQ,EAAA2f,EAAAxsB,EALA2wB,EADAz1B,KACAy1B,MACA7f,EAAA6f,EAAA11B,KAAAoV,SAFAnV,KAEAyB,OACA6+B,EAAAxsB,EAAAwsB,QAAA,GACA7rB,EAAAghB,EAAAhhB,QAAAwrB,SAAArpB,MACApV,EAAA,GAGAw4B,EAAA,CACAvE,QACA2V,UAAA3pC,EACAmU,UACA+nB,aAZA39B,KAYAyB,OAEAyuC,EAAA,CACA1P,gBAAA,uBACAC,YAAA,mBACAC,YAAA,mBACAwE,UAAA,iBACAvE,qBAAA,4BACAC,iBAAA,wBACAC,iBAAA,wBACAiB,YAAA,mBACAqD,WAAA,aACAtP,OAAA,cACAW,SAAA,iBAEAjxB,EAAAxD,OAAAwD,KAAA2qC,GAEA,IAAAv+B,EAAA,EAAA2f,EAAA/rB,EAAA7D,OAAqCiQ,EAAA2f,IAAU3f,EAC/C7M,EAAAS,EAAAoM,GACAnQ,EAAAsD,GAAA0tC,GAAA,CAAAlS,EAAAx7B,GAAA8Q,EAAAs6B,EAAAprC,IAAA8Q,EAAA9Q,GAAA2P,EAAA3P,IAAAk1B,EAAAv4B,GAGA,OAAAD,GAMAquC,oBAAA,SAAA/7B,GACA,IAMAnC,EAAA2f,EAAAxsB,EALA2wB,EADAz1B,KACAy1B,MACA7f,EAAA6f,EAAA11B,KAAAoV,SAFAnV,KAEAyB,OACA6+B,EAAAxsB,EAAAwsB,QAAA,GACA7rB,EAAAghB,EAAAhhB,QAAAwrB,SAAA0D,KACAniC,EAAA,GAEA+D,EAAA,0HAEA,IAAAoM,EAAA,EAAA2f,EAAA/rB,EAAA7D,OAAqCiQ,EAAA2f,IAAU3f,EAE/CnQ,EADAsD,EAAAS,EAAAoM,IACA6gC,GAAA,CAAAlS,EAAAx7B,GAAA8Q,EAAA9Q,GAAA2P,EAAA3P,KAIA,OADAtD,EAAAu2B,QAAAwa,GAAA38B,EAAA+5B,YAAAl7B,EAAAsjB,SACAv2B,GAEAsuC,0BAAA,WACA,IAIAn+B,EAAA2f,EAAAwJ,EAAA2V,EAHAxS,EADAj+B,KACAk+B,UACA9G,EAFAp3B,KAEAy1B,MAAAgQ,UACArB,EAAAnG,EAAAl+B,MAAA,GAGA,SAAA2wC,EAAAC,EAAA7yB,EAAAE,GACA,OAAAD,KAAAC,IAAAD,KAAAD,IAAA6yB,EAAA3yB,GAAAF,GAGA,IAAAnM,EAAA,EAAA2f,EAAA8S,EAAA1iC,OAAuCiQ,EAAA2f,IAAU3f,EACjDmpB,EAAAsJ,EAAAzyB,GAAA+oB,OACA+V,EAAAxW,GAAA8W,YAAA9W,GAAA2K,aAAAR,EAAAzyB,GAAA,GAAA+oB,OAAAI,EAAAb,GAAA+W,SAAA5M,EAAAzyB,GAAA,GAAA+oB,OAAAI,EAAA/C,SAEA+C,EAAA7C,sBAAAyY,EAAAD,EAAA/Y,SAAAlZ,EAAA4Y,EAAAtB,KAAAsB,EAAApB,OACA8E,EAAA3C,sBAAAuY,EAAAD,EAAA/Y,SAAAjZ,EAAA2Y,EAAArB,IAAAqB,EAAAnB,QACA6E,EAAA5C,kBAAAwY,EAAAD,EAAA/5B,KAAA8H,EAAA4Y,EAAAtB,KAAAsB,EAAApB,OACA8E,EAAA1C,kBAAAsY,EAAAD,EAAA/5B,KAAA+H,EAAA2Y,EAAArB,IAAAqB,EAAAnB,SAGAoK,cAAA,SAAAzpB,GACA,IAAAkkB,EAAAlkB,EAAA8jB,OACAjmB,EAAAmC,EAAAu1B,SACA5L,EAAAtG,GAAAsG,cACA3pB,EAAAwpB,eAAA,CACAI,gBAAA1F,EAAA0F,gBACAC,YAAA3F,EAAA2F,YACAC,YAAA5F,EAAA4F,YACA7K,OAAAiF,EAAAjF,QAEAiF,EAAA0F,gBAAA+R,GAAA99B,EAAAksB,qBAAAJ,EAAA9rB,EAAA+rB,kBACA1F,EAAA2F,YAAA8R,GAAA99B,EAAAmsB,iBAAAL,EAAA9rB,EAAAgsB,cACA3F,EAAA4F,YAAA6R,GAAA99B,EAAAosB,iBAAApsB,EAAAisB,aACA5F,EAAAjF,OAAA0c,GAAA99B,EAAAqtB,YAAArtB,EAAAohB,WAIAmD,GAAAT,KAAA,WACAoP,MAAA,CACAC,KAAA,UAEAvJ,OAAA,CACAC,MAAA,EACA/mB,GAAA,WAEA7L,KAAA,SAEA2M,SAAA,WAEAmmB,MAAA,EACAjnB,GAAA,WACA7L,KAAA,SACA2M,SAAA,UAGA0gB,WAAA,EACAwS,SAAA,CACAC,UAAA,CACAC,MAAA,WACA,UAEA51B,MAAA,SAAA+c,GACA,UAAAA,EAAA+Y,OAAA,KAAA/Y,EAAAgZ,OAAA,SAOA,IAIA1zB,GAAA,CACAgwB,IAAAD,GACA2K,OAAA/G,GACAwG,SAAAjF,GACAyF,cAAAzD,GACAzL,KAAA+L,GACAoD,UAAAvB,GACAwB,IAAAT,GACAU,MAAAP,GACAQ,QAbAvD,IAsBA,SAAAwD,GAAAnwC,EAAA0yB,GACA,OAAA1yB,EAAAowC,OACA,CACA30B,EAAAzb,EAAAyb,EACAC,EAAA1b,EAAA0b,GAIAwb,GAAAiZ,oBAAAnwC,EAAA0yB,GASA,SAAA2d,GAAA3d,EAAA4d,GACA,IACApV,EAAAtsB,EAAA47B,EAAAjc,EAAAgiB,EADAn+B,EAAAsgB,EAAA11B,KAAAoV,SAGA,IAAAxD,EAAA,EAAA2f,EAAAnc,EAAAzT,OAAuCiQ,EAAA2f,IAAU3f,EACjD,GAAA8jB,EAAA+T,iBAAA73B,GAMA,IAFAssB,EAAAxI,EAAAgJ,eAAA9sB,GAEA47B,EAAA,EAAA+F,EAAArV,EAAAl+B,KAAA2B,OAA0C6rC,EAAA+F,IAAU/F,EAAA,CACpD,IAAAz5B,EAAAmqB,EAAAl+B,KAAAwtC,GAEAz5B,EAAA2mB,MAAAoK,MACAwO,EAAAv/B,IAaA,SAAAy/B,GAAA9d,EAAApd,GACA,IAAA4nB,EAAA,GAMA,OALAmT,GAAA3d,EAAA,SAAA3hB,GACAA,EAAAiuB,QAAA1pB,EAAAmG,EAAAnG,EAAAoG,IACAwhB,EAAAp7B,KAAAiP,KAGAmsB,EAYA,SAAAuT,GAAA/d,EAAApd,EAAAo7B,EAAAC,GACA,IAAAC,EAAAnjB,OAAAojB,kBACAC,EAAA,GAiBA,OAhBAT,GAAA3d,EAAA,SAAA3hB,GACA,IAAA2/B,GAAA3/B,EAAAiuB,QAAA1pB,EAAAmG,EAAAnG,EAAAoG,GAAA,CAIA,IAAA2qB,EAAAt1B,EAAA8uB,iBACAP,EAAAqR,EAAAr7B,EAAA+wB,GAEA/G,EAAAsR,GACAE,EAAA,CAAA//B,GACA6/B,EAAAtR,GACOA,IAAAsR,GAEPE,EAAAhvC,KAAAiP,MAGA+/B,EASA,SAAAC,GAAA3E,GACA,IAAA4E,GAAA,IAAA5E,EAAAr9B,QAAA,KACAkiC,GAAA,IAAA7E,EAAAr9B,QAAA,KACA,gBAAAmiC,EAAAC,GACA,IAAAC,EAAAJ,EAAAh2B,KAAAknB,IAAAgP,EAAAz1B,EAAA01B,EAAA11B,GAAA,EACA41B,EAAAJ,EAAAj2B,KAAAknB,IAAAgP,EAAAx1B,EAAAy1B,EAAAz1B,GAAA,EACA,OAAAV,KAAAmC,KAAAnC,KAAAQ,IAAA41B,EAAA,GAAAp2B,KAAAQ,IAAA61B,EAAA,KAIA,SAAAC,GAAA5e,EAAA1yB,EAAA0R,GACA,IAAA4D,EAAA66B,GAAAnwC,EAAA0yB,GAEAhhB,EAAA06B,KAAA16B,EAAA06B,MAAA,IACA,IAAAuE,EAAAI,GAAAr/B,EAAA06B,MACAmF,EAAA7/B,EAAAg/B,UAAAF,GAAA9d,EAAApd,GAAAm7B,GAAA/d,EAAApd,GAAA,EAAAq7B,GACAzT,EAAA,GAEA,OAAAqU,EAAA5yC,QAIA+zB,EAAA11B,KAAAoV,SAAAjI,QAAA,SAAA0I,EAAA+nB,GACA,GAAAlI,EAAA+T,iBAAA7L,GAAA,CACA,IAAAM,EAAAxI,EAAAgJ,eAAAd,GACA7pB,EAAAmqB,EAAAl+B,KAAAu0C,EAAA,GAAAhV,QAEAxrB,MAAA2mB,MAAAoK,MACA5E,EAAAp7B,KAAAiP,MAIAmsB,GAbA,GA+BA,IAAAsU,GAAA,CAEAC,MAAA,CACAC,OAAA,SAAAhf,EAAA1yB,GACA,IAAAsV,EAAA66B,GAAAnwC,EAAA0yB,GACAwK,EAAA,GAOA,OANAmT,GAAA3d,EAAA,SAAA3hB,GACA,GAAAA,EAAAiuB,QAAA1pB,EAAAmG,EAAAnG,EAAAoG,GAEA,OADAwhB,EAAAp7B,KAAAiP,GACAmsB,IAGAA,EAAApW,MAAA,MASAhU,MAAAw+B,GAYA5yC,MAAA4yC,GAWAz+B,QAAA,SAAA6f,EAAA1yB,EAAA0R,GACA,IAAA4D,EAAA66B,GAAAnwC,EAAA0yB,GACAhhB,EAAA06B,KAAA16B,EAAA06B,MAAA,KACA,IAAAuE,EAAAI,GAAAr/B,EAAA06B,MACAmF,EAAA7/B,EAAAg/B,UAAAF,GAAA9d,EAAApd,GAAAm7B,GAAA/d,EAAApd,GAAA,EAAAq7B,GAMA,OAJAY,EAAA5yC,OAAA,IACA4yC,EAAA7e,EAAAgJ,eAAA6V,EAAA,GAAAlV,eAAAr/B,MAGAu0C,GASAI,SAAA,SAAAjf,EAAA1yB,GACA,OAAAsxC,GAAA5e,EAAA1yB,EAAA,CACA0wC,WAAA,KAYA78B,MAAA,SAAA6e,EAAA1yB,GACA,IAAAsV,EAAA66B,GAAAnwC,EAAA0yB,GACA,OAAA8d,GAAA9d,EAAApd,IAWAs8B,QAAA,SAAAlf,EAAA1yB,EAAA0R,GACA,IAAA4D,EAAA66B,GAAAnwC,EAAA0yB,GACAhhB,EAAA06B,KAAA16B,EAAA06B,MAAA,KACA,IAAAuE,EAAAI,GAAAr/B,EAAA06B,MACA,OAAAqE,GAAA/d,EAAApd,EAAA5D,EAAAg/B,UAAAC,IAWAl1B,EAAA,SAAAiX,EAAA1yB,EAAA0R,GACA,IAAA4D,EAAA66B,GAAAnwC,EAAA0yB,GACA6e,EAAA,GACAM,GAAA,EAgBA,OAfAxB,GAAA3d,EAAA,SAAA3hB,GACAA,EAAAwxB,SAAAjtB,EAAAmG,IACA81B,EAAAzvC,KAAAiP,GAGAA,EAAAiuB,QAAA1pB,EAAAmG,EAAAnG,EAAAoG,KACAm2B,GAAA,KAKAngC,EAAAg/B,YAAAmB,IACAN,EAAA,IAGAA,GAWA71B,EAAA,SAAAgX,EAAA1yB,EAAA0R,GACA,IAAA4D,EAAA66B,GAAAnwC,EAAA0yB,GACA6e,EAAA,GACAM,GAAA,EAgBA,OAfAxB,GAAA3d,EAAA,SAAA3hB,GACAA,EAAAyxB,SAAAltB,EAAAoG,IACA61B,EAAAzvC,KAAAiP,GAGAA,EAAAiuB,QAAA1pB,EAAAmG,EAAAnG,EAAAoG,KACAm2B,GAAA,KAKAngC,EAAAg/B,YAAAmB,IACAN,EAAA,IAGAA,KAKA,SAAAO,GAAAtzC,EAAA8W,GACA,OAAA4hB,GAAA6a,MAAAvzC,EAAA,SAAAsa,GACA,OAAAA,EAAAxD,eAIA,SAAA08B,GAAAxzC,EAAA0vB,GACA1vB,EAAA2L,QAAA,SAAA2O,EAAAlK,GAEA,OADAkK,EAAAm5B,WAAArjC,EACAkK,IAEAta,EAAA0zC,KAAA,SAAA7+B,EAAAyH,GACA,IAAA0T,EAAAN,EAAApT,EAAAzH,EACAob,EAAAP,EAAA7a,EAAAyH,EACA,OAAA0T,EAAApC,SAAAqC,EAAArC,OAAAoC,EAAAyjB,WAAAxjB,EAAAwjB,WAAAzjB,EAAApC,OAAAqC,EAAArC,SAEA5tB,EAAA2L,QAAA,SAAA2O,UACAA,EAAAm5B,aA0BA,SAAAE,GAAAC,EAAAj1C,GACA+5B,GAAAlJ,KAAAokB,EAAA,SAAAC,GACAl1C,EAAAk1C,EAAA/8B,WAAA+8B,EAAAvM,eAAAuM,EAAAxgC,OAAAwgC,EAAAvgC,QAIAmkB,GAAAT,KAAA,UACA8c,OAAA,CACA7P,QAAA,CACAzP,IAAA,EACAC,MAAA,EACAC,OAAA,EACAH,KAAA,MAyBA,IA8TAloB,GA9TA0nC,GAAA,CACAl7B,SAAA,GAQAm7B,OAAA,SAAA9f,EAAA7C,GACA6C,EAAA0f,QACA1f,EAAA0f,MAAA,IAIAviB,EAAA4iB,UAAA5iB,EAAA4iB,YAAA,EACA5iB,EAAAva,SAAAua,EAAAva,UAAA,MACAua,EAAAzD,OAAAyD,EAAAzD,QAAA,EACAsG,EAAA0f,MAAAtwC,KAAA+tB,IAQA6iB,UAAA,SAAAhgB,EAAAigB,GACA,IAAAj0C,EAAAg0B,EAAA0f,MAAA1f,EAAA0f,MAAArjC,QAAA4jC,IAAA,GAEA,IAAAj0C,GACAg0B,EAAA0f,MAAAhsC,OAAA1H,EAAA,IAUAk0C,UAAA,SAAAlgB,EAAA7C,EAAAne,GAMA,IALA,IAGA+a,EAHAhc,EAAA,kCACA8d,EAAA9d,EAAA9R,OACAiQ,EAAA,EAGYA,EAAA2f,IAAU3f,EACtB6d,EAAAhc,EAAA7B,GAEA8C,EAAAzO,eAAAwpB,KACAoD,EAAApD,GAAA/a,EAAA+a,KAYAxY,OAAA,SAAAye,EAAA5gB,EAAAD,GACA,GAAA6gB,EAAA,CAIA,IAAAmgB,EAAAngB,EAAAhhB,QAAA4gC,QAAA,GACA7P,EAAAvL,GAAAxlB,QAAA2kB,UAAAwc,EAAApQ,SACAqQ,EAAArQ,EAAA1P,KACAggB,EAAAtQ,EAAAxP,MACA+f,EAAAvQ,EAAAzP,IACAigB,EAAAxQ,EAAAvP,OACAggB,EAAApB,GAAApf,EAAA0f,MAAA,QACAe,EAAArB,GAAApf,EAAA0f,MAAA,SACAgB,EAAAtB,GAAApf,EAAA0f,MAAA,OACAiB,EAAAvB,GAAApf,EAAA0f,MAAA,UACAkB,EAAAxB,GAAApf,EAAA0f,MAAA,aAEAJ,GAAAkB,GAAA,GACAlB,GAAAmB,GAAA,GACAnB,GAAAoB,GAAA,GACApB,GAAAqB,GAAA,GACA,IA2DAE,EA3DAC,EAAAN,EAAA9iC,OAAA+iC,GACAM,EAAAL,EAAAhjC,OAAAijC,GACAK,EAAAF,EAAApjC,OAAAqjC,GAsCAE,EAAA7hC,EAAAghC,EAAAC,EACAa,EAAA/hC,EAAAmhC,EAAAC,EACAY,EAAAF,EAAA,EAGAG,GAAAhiC,EAAA+hC,GAAAL,EAAA70C,OAKAo1C,EAAAJ,EACAK,EAAAJ,EACAK,EAAA,CACAjhB,IAAAggB,EACAjgB,KAAA+f,EACA5f,OAAA+f,EACAhgB,MAAA8f,GAEAmB,EAAA,GAsBAhd,GAAAlJ,KAAA0lB,EAnBA,SAAArB,GACA,IAAAzH,EACA9E,EAAAuM,EAAAvM,eAEAA,GACA8E,EAAAyH,EAAAp+B,OAAAo+B,EAAAI,UAAAkB,EAAAI,EAAAH,EAAA,GACAI,GAAApJ,EAAA/4B,SAEA+4B,EAAAyH,EAAAp+B,OAAA6/B,EAAAE,GACAD,GAAAnJ,EAAA94B,OAGAoiC,EAAApyC,KAAA,CACA4hC,WAAAoC,EACAh0B,MAAA84B,EAAA94B,MACAugC,UAMAkB,EAhOA,SAAAnB,GACA,IAAApf,EAAA,EACAD,EAAA,EACAG,EAAA,EACAD,EAAA,EAUA,OATAiE,GAAAlJ,KAAAokB,EAAA,SAAAC,GACA,GAAAA,EAAA8B,WAAA,CACA,IAAAC,EAAA/B,EAAA8B,aACAnhB,EAAAhY,KAAAC,IAAA+X,EAAAohB,EAAAphB,KACAD,EAAA/X,KAAAC,IAAA8X,EAAAqhB,EAAArhB,MACAG,EAAAlY,KAAAC,IAAAiY,EAAAkhB,EAAAlhB,QACAD,EAAAjY,KAAAC,IAAAgY,EAAAmhB,EAAAnhB,UAGA,CACAD,MACAD,OACAG,SACAD,SA8MAohB,CAAAX,GA4BAxc,GAAAlJ,KAAAwlB,EAAAc,GACAnC,GAAAqB,EAAAS,GAEA/c,GAAAlJ,KAAAylB,EAAAa,GACAnC,GAAAsB,EAAAQ,GAmBA/c,GAAAlJ,KAAAwlB,EAjBA,SAAAnB,GACA,IAAAkC,EAAArd,GAAAsd,cAAAN,EAAA,SAAAtJ,GACA,OAAAA,EAAAyH,UAEAoC,EAAA,CACA1hB,KAAA,EACAE,MAAA,EACAD,IAAAihB,EAAAjhB,IACAE,OAAA+gB,EAAA/gB,QAGAqhB,GACAlC,EAAAp+B,OAAAsgC,EAAAziC,MAAAkiC,EAAAS,KAaAtC,GAAAuB,EANAO,EAAA,CACAjhB,IAAAggB,EACAjgB,KAAA+f,EACA5f,OAAA+f,EACAhgB,MAAA8f,IAIA,IAAA2B,EAAA15B,KAAAC,IAAAs4B,EAAAxgB,KAAAkhB,EAAAlhB,KAAA,GACAkhB,EAAAlhB,MAAA2hB,EACAT,EAAAhhB,OAAAjY,KAAAC,IAAAs4B,EAAAtgB,MAAAghB,EAAAhhB,MAAA,GACA,IAAA0hB,EAAA35B,KAAAC,IAAAs4B,EAAAvgB,IAAAihB,EAAAjhB,IAAA,GACAihB,EAAAjhB,KAAA2hB,EACAV,EAAA/gB,QAAAlY,KAAAC,IAAAs4B,EAAArgB,OAAA+gB,EAAA/gB,OAAA,GAIA,IAAA0hB,EAAA/iC,EAAAoiC,EAAAjhB,IAAAihB,EAAA/gB,OACA2hB,EAAA/iC,EAAAmiC,EAAAlhB,KAAAkhB,EAAAhhB,MAEA4hB,IAAAd,GAAAa,IAAAZ,IACA9c,GAAAlJ,KAAAwlB,EAAA,SAAAnB,GACAA,EAAAxgC,OAAA+iC,IAEA1d,GAAAlJ,KAAAylB,EAAA,SAAApB,GACAA,EAAAI,YACAJ,EAAAvgC,MAAA+iC,KAGAb,EAAAY,EACAb,EAAAc,GAIA,IAAA9hB,EAAA+f,EAAA4B,EACA1hB,EAAAggB,EAAA2B,EAoBAzd,GAAAlJ,KAAAklB,EAAA9iC,OAAAgjC,GAAA0B,GAEA/hB,GAAAghB,EACA/gB,GAAAghB,EACA9c,GAAAlJ,KAAAmlB,EAAA2B,GACA5d,GAAAlJ,KAAAqlB,EAAAyB,GAEApiB,EAAAgQ,UAAA,CACA3P,KAAAkhB,EAAAlhB,KACAC,IAAAihB,EAAAjhB,IACAC,MAAAghB,EAAAlhB,KAAAghB,EACA7gB,OAAA+gB,EAAAjhB,IAAAghB,GAGA9c,GAAAlJ,KAAAslB,EAAA,SAAAjB,GACAA,EAAAtf,KAAAL,EAAAgQ,UAAA3P,KACAsf,EAAArf,IAAAN,EAAAgQ,UAAA1P,IACAqf,EAAApf,MAAAP,EAAAgQ,UAAAzP,MACAof,EAAAnf,OAAAR,EAAAgQ,UAAAxP,OACAmf,EAAAp+B,OAAA8/B,EAAAC,KA1HA,SAAAM,EAAAjC,GACA,IAAAkC,EAAArd,GAAAsd,cAAAN,EAAA,SAAAa,GACA,OAAAA,EAAA1C,UAGA,GAAAkC,EACA,GAAAA,EAAA7Q,WAAA,CACA,IAAA+Q,EAAA,CACA1hB,KAAA/X,KAAAC,IAAAg5B,EAAAlhB,KAAAwgB,EAAAxgB,MACAE,MAAAjY,KAAAC,IAAAg5B,EAAAhhB,MAAAsgB,EAAAtgB,OACAD,IAAA,EACAE,OAAA,GAIAmf,EAAAp+B,OAAAo+B,EAAAI,UAAAkB,EAAAI,EAAAH,EAAA,EAAAa,QAEApC,EAAAp+B,OAAAsgC,EAAAziC,MAAAkiC,GAoEA,SAAAc,EAAAzC,GACAA,EAAAvM,gBACAuM,EAAAtf,KAAAsf,EAAAI,UAAAK,EAAAmB,EAAAlhB,KACAsf,EAAApf,MAAAof,EAAAI,UAAA3gC,EAAAihC,EAAAkB,EAAAlhB,KAAAghB,EACA1B,EAAArf,MACAqf,EAAAnf,OAAAF,EAAAqf,EAAAxgC,OAEAmhB,EAAAqf,EAAAnf,SAEAmf,EAAAtf,OACAsf,EAAApf,MAAAF,EAAAsf,EAAAvgC,MACAugC,EAAArf,IAAAihB,EAAAjhB,IACAqf,EAAAnf,OAAA+gB,EAAAjhB,IAAAghB,EAEAjhB,EAAAsf,EAAApf,UAqDA+hB,IAJAnqC,GAJA7L,OAAAi2C,OAAA,CACAC,QAJA,w3BAQArqC,GAAAqqC,SAAArqC,GAIAsqC,GAAA,WAEAC,GAAAC,uBACAC,GAAAD,yBACAE,GAAAF,2BACAG,GAAA,0CAOAC,GAAA,CACAC,WAAA,YACAC,UAAA,YACAC,SAAA,UACAC,aAAA,aACAC,YAAA,YACAC,YAAA,YACAC,UAAA,UACAC,aAAA,WACAC,WAAA,YAYA,SAAAC,GAAAplC,EAAAzM,GACA,IAAA3G,EAAAu5B,GAAAkf,SAAArlC,EAAAzM,GACA8xB,EAAAz4B,KAAAyO,MAAA,qBACA,OAAAgqB,EAAA3I,OAAA2I,EAAA,SAAA30B,EAgEA,IAmBA40C,KAnBA,WACA,IAAAC,GAAA,EAEA,IACA,IAAA5kC,EAAA1S,OAAA+E,eAAA,GAA4C,WAE5CzG,IAAA,WACAg5C,GAAA,KAGArpB,OAAAspB,iBAAA,SAAA7kC,GACK,MAAA1R,IAGL,OAAAs2C,EAdA,IAmBA,CACAE,SAAA,GAGA,SAAAC,GAAAtiC,EAAAxL,EAAA4xB,GACApmB,EAAAoiC,iBAAA5tC,EAAA4xB,EAAA8b,IAGA,SAAAK,GAAAviC,EAAAxL,EAAA4xB,GACApmB,EAAAwiC,oBAAAhuC,EAAA4xB,EAAA8b,IAGA,SAAAO,GAAAjuC,EAAA+pB,EAAAjX,EAAAC,EAAAm7B,GACA,OACAluC,OACA+pB,QACA0d,OAAAyG,GAAA,KACAp7B,OAAAha,IAAAga,IAAA,KACAC,OAAAja,IAAAia,IAAA,MA2BA,SAAAo7B,GAAAC,GACA,IAAAC,EAAAC,SAAAxiC,cAAA,OAEA,OADAuiC,EAAAE,UAAAH,GAAA,GACAC,EAsEA,SAAAG,GAAAhjC,EAAAomB,EAAA7H,GACA,IAAA0kB,EAAAjjC,EAAAghC,MAAAhhC,EAAAghC,IAAA,IAEAkC,EAAAD,EAAAC,QArEA,SAAA/G,GACA,IAGA+G,EAAAP,GAAA1B,IACAkC,EAAAR,GAAA1B,GAAA,WACAmC,EAAAT,GAAA1B,GAAA,WACAkC,EAAAE,YAAAV,MACAS,EAAAC,YAAAV,MACAO,EAAAG,YAAAF,GACAD,EAAAG,YAAAD,GAEAF,EAAAI,OAAA,WACAH,EAAAI,WAZA,IAaAJ,EAAAK,UAbA,IAcAJ,EAAAG,WAdA,IAeAH,EAAAI,UAfA,KAkBA,IAAAC,EAAA,WACAP,EAAAI,SAEAnH,KAKA,OAFAmG,GAAAa,EAAA,SAAAM,EAAAC,KAAAP,EAAA,WACAb,GAAAc,EAAA,SAAAK,EAAAC,KAAAN,EAAA,WACAF,EA0CAS,CA7FA,SAAAhqB,EAAAC,GACA,IAAAgqB,GAAA,EACAjrC,EAAA,GACA,kBACAA,EAAAzG,MAAAjJ,UAAA0pB,MAAAxnB,KAAAyN,WACAghB,KAAA9wB,KAEA86C,IACAA,GAAA,EACA7gB,GAAA+C,iBAAA36B,KAAA2tB,OAAA,WACA8qB,GAAA,EACAjqB,EAAA9gB,MAAA+gB,EAAAjhB,OAkFAkrC,CAAA,WACA,GAAAZ,EAAAC,QAAA,CACA,IAAAY,EAAAvlB,EAAAhhB,QAAAwmC,qBAAA/jC,EAAAgkC,WACAh9B,EAAA88B,IAAAG,YAAA,EACA7d,EAAAqc,GAAA,SAAAlkB,IAEAulB,KAAAG,YAAAj9B,GAAAuX,EAAA0E,QAQAmD,EAAAqc,GAAA,SAAAlkB,SApDA,SAAAve,EAAAm8B,GACA,IAAA8G,EAAAjjC,EAAAghC,MAAAhhC,EAAAghC,IAAA,IAEAkD,EAAAjB,EAAAkB,YAAA,SAAAt4C,GACAA,EAAAu4C,gBAAAhD,IACAjF,KAIApZ,GAAAlJ,KAAAwnB,GAAA,SAAA7sC,GACA8tC,GAAAtiC,EAAAxL,EAAA0vC,KAOAjB,EAAAoB,SAAArkC,EAAAskC,aACAtkC,EAAAukC,UAAAt2C,IAAAkzC,IAwCAqD,CAAAxkC,EAAA,WACA,GAAAijC,EAAAC,QAAA,CACA,IAAAY,EAAA9jC,EAAAgkC,WAEAF,OAAAZ,EAAAc,YACAF,EAAAW,aAAAvB,EAAAY,EAAAY,YAIAxB,EAAAI,YAKA,SAAAqB,GAAA3kC,GACA,IAAAijC,EAAAjjC,EAAAghC,KAAA,GACAkC,EAAAD,EAAAC,eACAD,EAAAC,QAtDA,SAAAljC,GACA,IAAAijC,EAAAjjC,EAAAghC,KAAA,GACAkD,EAAAjB,EAAAkB,YAEAD,IACAnhB,GAAAlJ,KAAAwnB,GAAA,SAAA7sC,GACA+tC,GAAAviC,EAAAxL,EAAA0vC,YAEAjB,EAAAkB,aAGAnkC,EAAAukC,UAAAK,OAAAzD,IA4CA0D,CAAA7kC,GAEAkjC,KAAAc,YACAd,EAAAc,WAAAc,YAAA5B,GAkBA,IAAA6B,GAAA,CAQAC,qBAAA,EAOAC,SAAA,qBAAAnsB,QAAA,qBAAAgqB,SAKAoC,cAAA,WACAp8C,KAAAq8C,UAIAr8C,KAAAq8C,SAAA,EAEAr8C,KAAAk8C,qBAzCA,SAAAI,EAAAC,GAEA,IAAAhmB,EAAA+lB,EAAAE,QAAAxC,SAAAxiC,cAAA,SAEA8kC,EAAAE,SACAF,EAAAE,OAAAjmB,EACAgmB,EAAA,mBAAAA,EACAhmB,EAAAkmB,aAAA,mBACAzC,SAAA0C,qBAAA,WAAAnC,YAAAhkB,IAGAA,EAAAgkB,YAAAP,SAAA2C,eAAAJ,IA+BAK,CAAA58C,KAAA+3C,MAGA8E,eAAA,SAAAjqB,EAAA3c,GACA,kBAAA2c,EACAA,EAAAonB,SAAA8C,eAAAlqB,GACOA,EAAAlxB,SAEPkxB,IAAA,IAGAA,KAAAuH,SAEAvH,IAAAuH,QAMA,IAAAH,EAAApH,KAAAmqB,YAAAnqB,EAAAmqB,WAAA,MAYA,OATA/8C,KAAAo8C,gBASApiB,KAAAG,SAAAvH,GAzTA,SAAAuH,EAAAlkB,GACA,IAAAsgB,EAAA4D,EAAA5D,MAGAymB,EAAA7iB,EAAA8iB,aAAA,UACAC,EAAA/iB,EAAA8iB,aAAA,SAkBA,GAhBA9iB,EAAA+d,IAAA,CACAiF,QAAA,CACAvoC,OAAAooC,EACAnoC,MAAAqoC,EACA3mB,MAAA,CACAne,QAAAme,EAAAne,QACAxD,OAAA2hB,EAAA3hB,OACAC,MAAA0hB,EAAA1hB,SAOA0hB,EAAAne,QAAAme,EAAAne,SAAA,QAEA,OAAA8kC,GAAA,KAAAA,EAAA,CACA,IAAAE,EAAAlE,GAAA/e,EAAA,cAEA31B,IAAA44C,IACAjjB,EAAAtlB,MAAAuoC,GAIA,UAAAJ,GAAA,KAAAA,EACA,QAAA7iB,EAAA5D,MAAA3hB,OAIAulB,EAAAvlB,OAAAulB,EAAAtlB,OAAAoB,EAAAxB,QAAA4oC,aAAA,OACO,CACP,IAAAC,EAAApE,GAAA/e,EAAA,eAEA31B,IAAA44C,IACAjjB,EAAAvlB,OAAA0oC,IAiRAC,CAAA3qB,EAAA3c,GACA+jB,GAGA,MAEAwjB,eAAA,SAAAxjB,GACA,IAAAG,EAAAH,EAAAG,OAEA,GAAAA,EAAA+d,IAAA,CAIA,IAAAiF,EAAAhjB,EAAA+d,IAAAiF,QACA,mBAAAjwC,QAAA,SAAAsiB,GACA,IAAA9uB,EAAAy8C,EAAA3tB,GAEAyK,GAAA9J,cAAAzvB,GACAy5B,EAAAsjB,gBAAAjuB,GAEA2K,EAAAsiB,aAAAjtB,EAAA9uB,KAGAu5B,GAAAlJ,KAAAosB,EAAA5mB,OAAA,GAAwC,SAAA71B,EAAAoE,GACxCq1B,EAAA5D,MAAAzxB,GAAApE,IAOAy5B,EAAAtlB,MAAAslB,EAAAtlB,aACAslB,EAAA+d,MAEAoB,iBAAA,SAAA7jB,EAAA/pB,EAAA4xB,GACA,IAAAnD,EAAA1E,EAAA0E,OAEA,cAAAzuB,EAAA,CAMA,IAAAyuC,EAAA7c,EAAA4a,MAAA5a,EAAA4a,IAAA,IACAwF,EAAAvD,EAAAuD,UAAAvD,EAAAuD,QAAA,IAEAtC,EAAAsC,EAAAjoB,EAAAle,GAAA,IAAA7L,GAAA,SAAA2H,GACAiqB,EAzQA,SAAAjqB,EAAAoiB,GACA,IAAA/pB,EAAA8sC,GAAAnlC,EAAA3H,OAAA2H,EAAA3H,KACAiyC,EAAA1jB,GAAAiZ,oBAAA7/B,EAAAoiB,GACA,OAAAkkB,GAAAjuC,EAAA+pB,EAAAkoB,EAAAn/B,EAAAm/B,EAAAl/B,EAAApL,GAsQAuqC,CAAAvqC,EAAAoiB,KAGA+jB,GAAArf,EAAAzuB,EAAA0vC,QAXAlB,GAAA/f,EAAAmD,EAAA7H,IAaAikB,oBAAA,SAAAjkB,EAAA/pB,EAAA4xB,GACA,IAAAnD,EAAA1E,EAAA0E,OAEA,cAAAzuB,EAAA,CAMA,IAAAyuC,EAAA7c,EAAA4a,KAAA,GACAwF,EAAAvD,EAAAuD,SAAA,GACAtC,EAAAsC,EAAAjoB,EAAAle,GAAA,IAAA7L,GAEA0vC,GAIA3B,GAAAtf,EAAAzuB,EAAA0vC,QAZAS,GAAA1hB,KA0BAF,GAAA4jB,SAAArE,GAWAvf,GAAA6jB,YAAArE,GAEA,IAAAsE,GAAA9B,GAAAE,SAAAF,GA7dA,CACAY,eAAA,SAAAjqB,GAMA,OALAA,KAAAuH,SAEAvH,IAAAuH,QAGAvH,KAAAmqB,WAAA,cA6dAT,GAAAriB,GAAA/H,OAAA,CAIAoI,WAAA,aASAuiB,eAAA,aAQAW,eAAA,aASAlE,iBAAA,aAQAI,oBAAA,cACGqE,IAEH/kB,GAAAT,KAAA,UACA7jB,QAAA,KASA,IAAAspC,GAAA,CAKAC,SAAA,GAQAC,SAAA,EAMAC,SAAA,SAAAzpC,GACA,IAAAyK,EAAAnf,KAAAi+C,SACA,GAAA9qC,OAAAuB,GAAAxH,QAAA,SAAAkxC,IACA,IAAAj/B,EAAArN,QAAAssC,IACAj/B,EAAAta,KAAAu5C,KAGAp+C,KAAAk+C,YAOAG,WAAA,SAAA3pC,GACA,IAAAyK,EAAAnf,KAAAi+C,SACA,GAAA9qC,OAAAuB,GAAAxH,QAAA,SAAAkxC,GACA,IAAAE,EAAAn/B,EAAArN,QAAAssC,IAEA,IAAAE,GACAn/B,EAAAhW,OAAAm1C,EAAA,KAGAt+C,KAAAk+C,YAOA99C,MAAA,WACAJ,KAAAi+C,SAAA,GACAj+C,KAAAk+C,YAQAjd,MAAA,WACA,OAAAjhC,KAAAi+C,SAAAv8C,QAQA68C,OAAA,WACA,OAAAv+C,KAAAi+C,UAYAO,OAAA,SAAA/oB,EAAAgpB,EAAA5uC,GACA,IAEA8B,EAAA+sC,EAAAN,EAAAO,EAAA/e,EAFAgf,EAAA5+C,KAAA4+C,YAAAnpB,GACAnE,EAAAstB,EAAAl9C,OAGA,IAAAiQ,EAAA,EAAiBA,EAAA2f,IAAU3f,EAK3B,GAJA+sC,EAAAE,EAAAjtC,GACAysC,EAAAM,EAAAN,OAGA,oBAFAxe,EAAAwe,EAAAK,OAGAE,EAAA,CAAAlpB,GAAAtiB,OAAAtD,GAAA,KACAhL,KAAA65C,EAAAjqC,UAEA,IAAAmrB,EAAA7vB,MAAAquC,EAAAO,IACA,SAKA,UAQAC,YAAA,SAAAnpB,GACA,IAAArwB,EAAAqwB,EAAAopB,WAAAppB,EAAAopB,SAAA,IAEA,GAAAz5C,EAAAmS,KAAAvX,KAAAk+C,SACA,OAAA94C,EAAAw5C,YAGA,IAAAlqC,EAAA,GACAkqC,EAAA,GACA3oC,EAAAwf,KAAAxf,QAAA,GACAxB,EAAAwB,EAAAxB,SAAAwB,EAAAxB,QAAAC,SAAA,GA6BA,OA3BA1U,KAAAi+C,SAAA9qC,OAAA8C,EAAAvB,SAAA,IAAAxH,QAAA,SAAAkxC,GACA,IAAAE,EAAA5pC,EAAA5C,QAAAssC,GAEA,QAAAE,EAAA,CAIA,IAAA/mC,EAAA6mC,EAAA7mC,GACAi2B,EAAA/4B,EAAA8C,IAEA,IAAAi2B,KAIA,IAAAA,IACAA,EAAAvT,GAAA1K,MAAAyJ,GAAAz1B,OAAAmR,QAAA6C,KAGA7C,EAAA7P,KAAAu5C,GACAQ,EAAA/5C,KAAA,CACAu5C,SACA3pC,QAAA+4B,GAAA,SAIApoC,EAAAw5C,cACAx5C,EAAAmS,GAAAvX,KAAAk+C,SACAU,GASAE,YAAA,SAAArpB,UACAA,EAAAopB,WAGAE,GAAA,CAGAC,aAAA,GAIA5kC,SAAA,GACA6kC,kBAAA,SAAAvzC,EAAAwzC,EAAAC,GACAn/C,KAAAg/C,aAAAtzC,GAAAwzC,EACAl/C,KAAAoa,SAAA1O,GAAAuuB,GAAA1K,MAAA4vB,IAEAC,oBAAA,SAAA1zC,GACA,OAAA1L,KAAAg/C,aAAAh5C,eAAA0F,GAAA1L,KAAAg/C,aAAAtzC,QAAAlH,GAEA66C,iBAAA,SAAA3zC,GAEA,OAAA1L,KAAAoa,SAAApU,eAAA0F,GAAAuuB,GAAApI,MAAA,GAAoE,CAAAmH,GAAA9M,MAAAlsB,KAAAoa,SAAA1O,KAAA,IAEpE4zC,oBAAA,SAAA5zC,EAAA6zC,GACAv/C,KAEAoa,SAAApU,eAAA0F,KAFA1L,KAGAoa,SAAA1O,GAAAuuB,GAAA/H,OAHAlyB,KAGAoa,SAAA1O,GAAA6zC,KAGAC,kBAAA,SAAA/pB,GAEAwE,GAAAlJ,KAAA0E,EAAA4I,OAAA,SAAAnS,GAEAA,EAAAspB,UAAAtpB,EAAAzX,QAAA+gC,UACAtpB,EAAA7T,SAAA6T,EAAAzX,QAAA4D,SACA6T,EAAAiD,OAAAjD,EAAAzX,QAAA0a,OACAmmB,GAAAC,OAAA9f,EAAAvJ,OAIAuzB,GAAAxlB,GAAAxJ,eAEAuI,GAAAT,KAAA,UACAgT,SAAA,CACAmU,SAAA,EACApf,OAAA,KACAsH,KAAA,UACAvvB,SAAA,UACAo7B,WAAA,EACAjT,gBAAA,kBACAmf,eAAA,OACAC,aAAA,EACAC,kBAAA,EACAC,eAAA,OACAC,WAAA,OACAC,YAAA,EACAC,cAAA,OACAC,UAAA,OACAC,gBAAA,OACAC,cAAA,EACAC,gBAAA,EACAC,gBAAA,OACAC,YAAA,OACAC,SAAA,EACAC,SAAA,EACAC,aAAA,EACAC,UAAA,EACAhqB,aAAA,EACAiqB,mBAAA,OACAC,eAAA,EACApgB,YAAA,gBACAC,YAAA,EACA8K,UAAA,CAEAsV,YAAA7mB,GAAA/J,KACAub,MAAA,SAAAsV,EAAAhhD,GACA,IAAA0rC,EAAA,GACAhD,EAAA1oC,EAAA0oC,OACAuY,EAAAvY,IAAA/mC,OAAA,EAEA,GAAAq/C,EAAAr/C,OAAA,GACA,IAAAkxB,EAAAmuB,EAAA,GAEAnuB,EAAA/c,MACA41B,EAAA7Y,EAAA/c,MACa+c,EAAA+Y,OACbF,EAAA7Y,EAAA+Y,OACaqV,EAAA,GAAApuB,EAAAnxB,MAAAu/C,IACbvV,EAAAhD,EAAA7V,EAAAnxB,QAIA,OAAAgqC,GAEAwV,WAAAhnB,GAAA/J,KAEAgxB,WAAAjnB,GAAA/J,KAEAixB,YAAAlnB,GAAA/J,KACAra,MAAA,SAAAq3B,EAAAntC,GACA,IAAA8V,EAAA9V,EAAAoV,SAAA+3B,EAAAvP,cAAA9nB,OAAA,GAYA,OAVAA,IACAA,GAAA,MAGAokB,GAAA9J,cAAA+c,EAAAxsC,OAGAmV,GAAAq3B,EAAAtB,OAFA/1B,GAAAq3B,EAAAxsC,MAKAmV,GAEAurC,WAAA,SAAAlU,EAAAzX,GACA,IAAAwI,EAAAxI,EAAAgJ,eAAAyO,EAAAvP,cACA0jB,EAAApjB,EAAAl+B,KAAAmtC,EAAAzrC,OACAu5B,EAAAqmB,EAAA5mB,MACA,OACAgG,YAAAzF,EAAAyF,YACAD,gBAAAxF,EAAAwF,kBAGA8gB,eAAA,WACA,OAAAthD,KAAAmsC,SAAA8T,eAEAsB,WAAAtnB,GAAA/J,KAEAsxB,UAAAvnB,GAAA/J,KAEAuxB,aAAAxnB,GAAA/J,KACAwxB,OAAAznB,GAAA/J,KACAyxB,YAAA1nB,GAAA/J,SAKA,IAAA0xB,GAAA,CAOAC,QAAA,SAAA5hB,GACA,IAAAA,EAAAv+B,OACA,SAGA,IAAAiQ,EAAAuf,EACA1S,EAAA,EACAC,EAAA,EACAwiB,EAAA,EAEA,IAAAtvB,EAAA,EAAAuf,EAAA+O,EAAAv+B,OAAwCiQ,EAAAuf,IAASvf,EAAA,CACjD,IAAAooC,EAAA9Z,EAAAtuB,GAEA,GAAAooC,KAAAxe,WAAA,CACA,IAAAoiB,EAAA5D,EAAAze,kBACA9c,GAAAm/B,EAAAn/B,EACAC,GAAAk/B,EAAAl/B,IACAwiB,GAIA,OACAziB,IAAAyiB,EACAxiB,IAAAwiB,IAWA0T,QAAA,SAAA1U,EAAA6hB,GACA,IAGAnwC,EAAAuf,EAAA6wB,EAHAvjC,EAAAsjC,EAAAtjC,EACAC,EAAAqjC,EAAArjC,EACAk1B,EAAAnjB,OAAAojB,kBAGA,IAAAjiC,EAAA,EAAAuf,EAAA+O,EAAAv+B,OAAwCiQ,EAAAuf,IAASvf,EAAA,CACjD,IAAAooC,EAAA9Z,EAAAtuB,GAEA,GAAAooC,KAAAxe,WAAA,CACA,IAAA6N,EAAA2Q,EAAAnX,iBACAtyB,EAAA2pB,GAAA+nB,sBAAAF,EAAA1Y,GAEA94B,EAAAqjC,IACAA,EAAArjC,EACAyxC,EAAAhI,IAKA,GAAAgI,EAAA,CACA,IAAAE,EAAAF,EAAAzmB,kBACA9c,EAAAyjC,EAAAzjC,EACAC,EAAAwjC,EAAAxjC,EAGA,OACAD,IACAC,OAKA,SAAAyjC,GAAAriB,EAAAsiB,GAUA,OATAA,IACAloB,GAAAx0B,QAAA08C,GAEA/4C,MAAAjJ,UAAA0E,KAAAkL,MAAA8vB,EAAAsiB,GAEAtiB,EAAAh7B,KAAAs9C,IAIAtiB,EAUA,SAAAuiB,GAAA/1B,GACA,yBAAAA,gBAAA9lB,SAAA8lB,EAAAva,QAAA,SACAua,EAAAg2B,MAAA,MAGAh2B,EASA,SAAAi2B,GAAAxuC,GACA,IAAAg4B,EAAAh4B,EAAAw0B,QACAyD,EAAAj4B,EAAAy0B,SAAAz0B,EAAA87B,OAEAnuC,EAAAqS,EAAAwrB,OACA3B,EAAA7pB,EAAAsrB,cAEAsL,EAAA52B,EAAAqrB,OAAAV,eAAAd,GAAA+M,WAEA6X,EAAA7X,EAAA3L,iBAEAyjB,EAAA9X,EAAA5L,iBAEA,OACA6M,OAAAG,IAAA2W,iBAAAhhD,EAAAk8B,GAAA,GACAiO,OAAAG,IAAA0W,iBAAAhhD,EAAAk8B,GAAA,GACA9nB,MAAA0sC,EAAA,GAAAA,EAAAE,iBAAAhhD,EAAAk8B,GAAA,GACAj9B,MAAA8hD,EAAA,GAAAA,EAAAC,iBAAAhhD,EAAAk8B,GAAA,GACAl8B,QACAk8B,eACAnf,EAAA1K,EAAA4mB,OAAAlc,EACAC,EAAA3K,EAAA4mB,OAAAjc,GASA,SAAAikC,GAAAC,GACA,IAAArpB,EAAAN,GAAAz1B,OACA,OAEAk9C,SAAAkC,EAAAlC,SACAD,SAAAmC,EAAAnC,SACAoC,OAAAD,EAAAC,OACAC,OAAAF,EAAAE,OAEA5C,cAAA0C,EAAA1C,cACA6C,gBAAArD,GAAAkD,EAAAI,eAAAzpB,EAAAX,mBACAqqB,eAAAvD,GAAAkD,EAAAM,cAAA3pB,EAAAT,kBACAqqB,WAAAP,EAAAzC,UACAiD,aAAA1D,GAAAkD,EAAAQ,aAAA7pB,EAAAV,iBACAonB,YAAA2C,EAAA3C,YAEAF,eAAA6C,EAAA7C,eACAsD,iBAAA3D,GAAAkD,EAAAU,gBAAA/pB,EAAAX,mBACA2qB,gBAAA7D,GAAAkD,EAAAhD,eAAArmB,EAAAT,kBACA0qB,cAAA9D,GAAAkD,EAAAY,cAAAjqB,EAAAV,iBACA4qB,YAAAb,EAAA5C,WACAH,aAAA+C,EAAA/C,aACAC,kBAAA8C,EAAA9C,kBAEAS,gBAAAqC,EAAArC,gBACAmD,kBAAAhE,GAAAkD,EAAAe,iBAAApqB,EAAAX,mBACAgrB,iBAAAlE,GAAAkD,EAAAxC,gBAAA7mB,EAAAT,kBACA+qB,eAAAnE,GAAAkD,EAAAiB,eAAAtqB,EAAAV,iBACAirB,aAAAlB,EAAApC,YACAH,cAAAuC,EAAAvC,cACAC,gBAAAsC,EAAAtC,gBAEAM,UAAAgC,EAAAhC,UACAhqB,aAAAgsB,EAAAhsB,aACA6J,gBAAAmiB,EAAAniB,gBACAsjB,QAAA,EACAC,sBAAApB,EAAA/B,mBACAC,cAAA8B,EAAA9B,cACApgB,YAAAkiB,EAAAliB,YACAC,YAAAiiB,EAAAjiB,aA+MA,SAAAsjB,GAAAniB,EAAAoiB,GACA,iBAAAA,EAAApiB,EAAArjB,EAAAqjB,EAAAhtB,MAAA,YAAAovC,EAAApiB,EAAArjB,EAAAqjB,EAAAhtB,MAAAgtB,EAAA4e,SAAA5e,EAAArjB,EAAAqjB,EAAA4e,SAOA,SAAAyD,GAAAtzB,GACA,OAAAsxB,GAAA,GAAAE,GAAAxxB,IAGA,IAAAuzB,GAAA1oB,GAAAvJ,OAAA,CACAoI,WAAA,WACAt6B,KAAA06B,OAAAgoB,GAAA1iD,KAAAmsC,UACAnsC,KAAAokD,YAAA,IAIAC,SAAA,WACA,IACA7W,EADAxtC,KACAmsC,SACAX,EAAAgC,EAAAhC,UACAsV,EAAAtV,EAAAsV,YAAA/wC,MAHA/P,KAGA8P,WACA27B,EAAAD,EAAAC,MAAA17B,MAJA/P,KAIA8P,WACAmxC,EAAAzV,EAAAyV,WAAAlxC,MALA/P,KAKA8P,WACAw0C,EAAA,GAIA,OAHAA,EAAApC,GAAAoC,EAAAlC,GAAAtB,IACAwD,EAAApC,GAAAoC,EAAAlC,GAAA3W,IACA6Y,EAAApC,GAAAoC,EAAAlC,GAAAnB,KAIAsD,cAAA,WACA,OAAAL,GAAAlkD,KAAAmsC,SAAAX,UAAA0V,WAAAnxC,MAAA/P,KAAA8P,aAGA00C,QAAA,SAAAzD,EAAAhhD,GACA,IAAAuyB,EAAAtyB,KACAwrC,EAAAlZ,EAAA6Z,SAAAX,UACAiZ,EAAA,GAYA,OAXAxqB,GAAAlJ,KAAAgwB,EAAA,SAAA7T,GACA,IAAAwX,EAAA,CACAC,OAAA,GACAL,MAAA,GACAM,MAAA,IAEA1C,GAAAwC,EAAAC,OAAAvC,GAAA5W,EAAA2V,YAAA9+C,KAAAiwB,EAAA4a,EAAAntC,KACAmiD,GAAAwC,EAAAJ,MAAA9Y,EAAA31B,MAAAxT,KAAAiwB,EAAA4a,EAAAntC,IACAmiD,GAAAwC,EAAAE,MAAAxC,GAAA5W,EAAA+V,WAAAl/C,KAAAiwB,EAAA4a,EAAAntC,KACA0kD,EAAA5/C,KAAA6/C,KAEAD,GAGAI,aAAA,WACA,OAAAX,GAAAlkD,KAAAmsC,SAAAX,UAAAgW,UAAAzxC,MAAA/P,KAAA8P,aAIAg1C,UAAA,WACA,IACAtZ,EADAxrC,KACAmsC,SAAAX,UACAiW,EAAAjW,EAAAiW,aAAA1xC,MAFA/P,KAEA8P,WACA4xC,EAAAlW,EAAAkW,OAAA3xC,MAHA/P,KAGA8P,WACA6xC,EAAAnW,EAAAmW,YAAA5xC,MAJA/P,KAIA8P,WACAw0C,EAAA,GAIA,OAHAA,EAAApC,GAAAoC,EAAAlC,GAAAX,IACA6C,EAAApC,GAAAoC,EAAAlC,GAAAV,IACA4C,EAAApC,GAAAoC,EAAAlC,GAAAT,KAGA3qC,OAAA,SAAA+tC,GACA,IA0BApzC,EAAAuf,EA1BAoB,EAAAtyB,KACAwtC,EAAAlb,EAAA6Z,SAIA6Y,EAAA1yB,EAAAoI,OACAI,EAAAxI,EAAAoI,OAAAgoB,GAAAlV,GACAyX,EAAA3yB,EAAA4yB,QACAnlD,EAAAuyB,EAAA2M,MAEAkmB,EAAA,CACAvC,OAAAoC,EAAApC,OACAC,OAAAmC,EAAAnC,QAEAuC,EAAA,CACA5mC,EAAAwmC,EAAAxmC,EACAC,EAAAumC,EAAAvmC,GAEA4mC,EAAA,CACAxwC,MAAAmwC,EAAAnwC,MACAD,OAAAowC,EAAApwC,QAEA0mB,EAAA,CACA9c,EAAAwmC,EAAAM,OACA7mC,EAAAumC,EAAAO,QAIA,GAAAN,EAAAvjD,OAAA,CACAo5B,EAAAgpB,QAAA,EACA,IAAA0B,EAAA,GACAC,EAAA,GACAnqB,EAAAsmB,GAAApU,EAAAn1B,UAAAhW,KAAAiwB,EAAA2yB,EAAA3yB,EAAAozB,gBACA,IAAA3E,EAAA,GAEA,IAAApvC,EAAA,EAAAuf,EAAA+zB,EAAAvjD,OAAwCiQ,EAAAuf,IAASvf,EACjDovC,EAAAl8C,KAAAy9C,GAAA2C,EAAAtzC,KAIA67B,EAAAoD,SACAmQ,IAAAnQ,OAAA,SAAAx6B,GACA,OAAAo3B,EAAAoD,OAAAx6B,EAAArW,MAKAytC,EAAAmY,WACA5E,IAAA9L,KAAA,SAAA7+B,EAAAyH,GACA,OAAA2vB,EAAAmY,SAAAvvC,EAAAyH,EAAA9d,MAKAk6B,GAAAlJ,KAAAgwB,EAAA,SAAA7T,GACAsY,EAAA3gD,KAAA2oC,EAAAhC,UAAA4V,WAAA/+C,KAAAiwB,EAAA4a,EAAA5a,EAAA6M,SACAsmB,EAAA5gD,KAAA2oC,EAAAhC,UAAA8V,eAAAj/C,KAAAiwB,EAAA4a,EAAA5a,EAAA6M,WAGArE,EAAA2Q,MAAAnZ,EAAA+xB,SAAAtD,EAAAhhD,GACA+6B,EAAAomB,WAAA5uB,EAAAiyB,cAAAxD,EAAAhhD,GACA+6B,EAAA8qB,KAAAtzB,EAAAkyB,QAAAzD,EAAAhhD,GACA+6B,EAAA0mB,UAAAlvB,EAAAuyB,aAAA9D,EAAAhhD,GACA+6B,EAAA4mB,OAAApvB,EAAAwyB,UAAA/D,EAAAhhD,GAEA+6B,EAAAtc,EAAA8c,EAAA9c,EACAsc,EAAArc,EAAA6c,EAAA7c,EACAqc,EAAA4lB,aAAAlT,EAAAkT,aACA5lB,EAAA0qB,cACA1qB,EAAA2qB,kBAEA3qB,EAAA+qB,WAAA9E,EAEAsE,EAzVA,SAAAS,EAAAhrB,GACA,IAAApF,EAAAowB,EAAA3mB,OAAAzJ,IACA9gB,EAAA,EAAAkmB,EAAA0lB,SAEA3rC,EAAA,EAEA+wC,EAAA9qB,EAAA8qB,KACAG,EAAAH,EAAAI,OAAA,SAAA/kB,EAAAyjB,GACA,OAAAzjB,EAAAyjB,EAAAC,OAAAjjD,OAAAgjD,EAAAJ,MAAA5iD,OAAAgjD,EAAAE,MAAAljD,QACK,GACLqkD,GAAAjrB,EAAAomB,WAAAx/C,OAAAo5B,EAAA0mB,UAAA9/C,OACA,IAAAukD,EAAAnrB,EAAA2Q,MAAA/pC,OACAwkD,EAAAprB,EAAA4mB,OAAAhgD,OACA6hD,EAAAzoB,EAAAyoB,cACAJ,EAAAroB,EAAAqoB,aACAS,EAAA9oB,EAAA8oB,eACAhvC,GAAAqxC,EAAA1C,EAEA3uC,GAAAqxC,KAAA,GAAAnrB,EAAA8kB,aAAA,EAEAhrC,GAAAqxC,EAAAnrB,EAAA+kB,kBAAA,EAEAjrC,GAAAmxC,EAAA5C,EAEAvuC,GAAAmxC,KAAA,GAAAjrB,EAAAklB,YAAA,EAEAprC,GAAAsxC,EAAAprB,EAAAulB,gBAAA,EAEAzrC,GAAAsxC,EAAAtC,EAEAhvC,GAAAsxC,KAAA,GAAAprB,EAAAslB,cAAA,EAGA,IAAA+F,EAAA,EAEAC,EAAA,SAAAziB,GACA9uB,EAAAkJ,KAAAC,IAAAnJ,EAAA6gB,EAAA2wB,YAAA1iB,GAAA9uB,MAAAsxC,IAsBA,OAnBAzwB,EAAA8D,KAAAS,GAAAqsB,WAAA/C,EAAAzoB,EAAAwoB,gBAAAxoB,EAAAsoB,kBACAnpB,GAAAlJ,KAAA+J,EAAA2Q,MAAA2a,GAEA1wB,EAAA8D,KAAAS,GAAAqsB,WAAAnD,EAAAroB,EAAAkoB,eAAAloB,EAAAgoB,iBACA7oB,GAAAlJ,KAAA+J,EAAAomB,WAAA/tC,OAAA2nB,EAAA0mB,WAAA4E,GAEAD,EAAArrB,EAAA+lB,cAAAsC,EAAA,IACAlpB,GAAAlJ,KAAA60B,EAAA,SAAAlB,GACAzqB,GAAAlJ,KAAA2zB,EAAAC,OAAAyB,GACAnsB,GAAAlJ,KAAA2zB,EAAAJ,MAAA8B,GACAnsB,GAAAlJ,KAAA2zB,EAAAE,MAAAwB,KAGAD,EAAA,EAEAzwB,EAAA8D,KAAAS,GAAAqsB,WAAA1C,EAAA9oB,EAAA6oB,iBAAA7oB,EAAA2oB,mBACAxpB,GAAAlJ,KAAA+J,EAAA4mB,OAAA0E,GAGA,CACAvxC,MAFAA,GAAA,EAAAimB,EAAA2lB,SAGA7rC,UA6RA2xC,CAAAvmD,KAAA86B,GACAqqB,EAtRA,SAAAW,EAAA5lD,GACA,IAYAsmD,EAAAC,EAEAC,EAAAC,EAEAC,EAhBA9rB,EAAAgrB,EAAAprB,OACAjF,EAAAqwB,EAAA3mB,OACAsG,EAAAqgB,EAAA3mB,OAAAsG,UACAmd,EAAA,SACAC,EAAA,SAEA/nB,EAAArc,EAAAve,EAAA0U,OACAiuC,EAAA,MACK/nB,EAAArc,EAAAgX,EAAA7gB,OAAA1U,EAAA0U,SACLiuC,EAAA,UASA,IAAAgE,GAAAphB,EAAA3P,KAAA2P,EAAAzP,OAAA,EACA8wB,GAAArhB,EAAA1P,IAAA0P,EAAAxP,QAAA,EAEA,WAAA4sB,GACA2D,EAAA,SAAAhoC,GACA,OAAAA,GAAAqoC,GAGAJ,EAAA,SAAAjoC,GACA,OAAAA,EAAAqoC,KAGAL,EAAA,SAAAhoC,GACA,OAAAA,GAAAte,EAAA2U,MAAA,GAGA4xC,EAAA,SAAAjoC,GACA,OAAAA,GAAAiX,EAAA5gB,MAAA3U,EAAA2U,MAAA,IAIA6xC,EAAA,SAAAloC,GACA,OAAAA,EAAAte,EAAA2U,MAAAimB,EAAA6lB,UAAA7lB,EAAA4lB,aAAAjrB,EAAA5gB,OAGA8xC,EAAA,SAAAnoC,GACA,OAAAA,EAAAte,EAAA2U,MAAAimB,EAAA6lB,UAAA7lB,EAAA4lB,aAAA,GAGAkG,EAAA,SAAAnoC,GACA,OAAAA,GAAAqoC,EAAA,gBAGAN,EAAA1rB,EAAAtc,IACAokC,EAAA,OAEA8D,EAAA5rB,EAAAtc,KACAokC,EAAA,SACAC,EAAA+D,EAAA9rB,EAAArc,KAEKgoC,EAAA3rB,EAAAtc,KACLokC,EAAA,QAEA+D,EAAA7rB,EAAAtc,KACAokC,EAAA,SACAC,EAAA+D,EAAA9rB,EAAArc,KAIA,IAAA+uB,EAAAsY,EAAA3Z,SACA,OACAyW,OAAApV,EAAAoV,OAAApV,EAAAoV,SACAC,OAAArV,EAAAqV,OAAArV,EAAAqV,UA+MAkE,CAAA/mD,KAAAqlD,GAEAD,EAzMA,SAAAvjB,EAAA3hC,EAAAilD,EAAA1vB,GAEA,IAAAjX,EAAAqjB,EAAArjB,EACAC,EAAAojB,EAAApjB,EACAkiC,EAAA9e,EAAA8e,UACAD,EAAA7e,EAAA6e,aACA/pB,EAAAkL,EAAAlL,aACAisB,EAAAuC,EAAAvC,OACAC,EAAAsC,EAAAtC,OACAmE,EAAArG,EAAAD,EACAuG,EAAAtwB,EAAA+pB,EAoCA,MAlCA,UAAAkC,EACApkC,GAAAte,EAAA2U,MACK,WAAA+tC,KACLpkC,GAAAte,EAAA2U,MAAA,GAEA3U,EAAA2U,MAAA4gB,EAAA5gB,QACA2J,EAAAiX,EAAA5gB,MAAA3U,EAAA2U,OAGA2J,EAAA,IACAA,EAAA,IAIA,QAAAqkC,EACApkC,GAAAuoC,EAEAvoC,GADK,WAAAokC,EACL3iD,EAAA0U,OAAAoyC,EAEA9mD,EAAA0U,OAAA,EAGA,WAAAiuC,EACA,SAAAD,EACApkC,GAAAwoC,EACO,UAAApE,IACPpkC,GAAAwoC,GAEK,SAAApE,EACLpkC,GAAAyoC,EACK,UAAArE,IACLpkC,GAAAyoC,GAGA,CACAzoC,IACAC,KAyJAyoC,CAAApsB,EAAAuqB,EAAAF,EAAA7yB,EAAA6M,aAEArE,EAAAgpB,QAAA,EAkBA,OAfAhpB,EAAA8nB,OAAAuC,EAAAvC,OACA9nB,EAAA+nB,OAAAsC,EAAAtC,OACA/nB,EAAAtc,EAAA4mC,EAAA5mC,EACAsc,EAAArc,EAAA2mC,EAAA3mC,EACAqc,EAAAjmB,MAAAwwC,EAAAxwC,MACAimB,EAAAlmB,OAAAywC,EAAAzwC,OAEAkmB,EAAAwqB,OAAAhqB,EAAA9c,EACAsc,EAAAyqB,OAAAjqB,EAAA7c,EACA6T,EAAAoI,OAAAI,EAEAiqB,GAAAvX,EAAAlN,QACAkN,EAAAlN,OAAAj+B,KAAAiwB,EAAAwI,GAGAxI,GAEA60B,UAAA,SAAAC,EAAAlnD,GACA,IAAAw1B,EAAA11B,KAAAm/B,OAAAzJ,IACAmM,EAAA7hC,KAAAy6B,MACA4sB,EAAArnD,KAAAsnD,iBAAAF,EAAAlnD,EAAA2hC,GACAnM,EAAAoB,OAAAuwB,EAAAxhB,GAAAwhB,EAAAthB,IACArQ,EAAAoB,OAAAuwB,EAAAvhB,GAAAuhB,EAAAvnC,IACA4V,EAAAoB,OAAAuwB,EAAAE,GAAAF,EAAAG,KAEAF,iBAAA,SAAAF,EAAAlnD,EAAA2hC,GACA,IAAAgE,EAAAC,EAAAyhB,EAAAxhB,EAAAjmB,EAAA0nC,EACA7G,EAAA9e,EAAA8e,UACAhqB,EAAAkL,EAAAlL,aACAisB,EAAA/gB,EAAA+gB,OACAC,EAAAhhB,EAAAghB,OACA4E,EAAAL,EAAA5oC,EACAkpC,EAAAN,EAAA3oC,EACA5J,EAAA3U,EAAA2U,MACAD,EAAA1U,EAAA0U,OAEA,cAAAiuC,EACA/iC,EAAA4nC,EAAA9yC,EAAA,EAEA,SAAAguC,GAEA9c,GADAD,EAAA4hB,GACA9G,EACA4G,EAAA1hB,EACAE,EAAAjmB,EAAA6gC,EACA6G,EAAA1nC,EAAA6gC,IAGA7a,GADAD,EAAA4hB,EAAA5yC,GACA8rC,EACA4G,EAAA1hB,EACAE,EAAAjmB,EAAA6gC,EACA6G,EAAA1nC,EAAA6gC,QAiBA,GAdA,SAAAiC,GAEA/c,GADAC,EAAA2hB,EAAA9wB,EAAAgqB,GACAA,EACA4G,EAAAzhB,EAAA6a,GACS,UAAAiC,GAET/c,GADAC,EAAA2hB,EAAA5yC,EAAA8hB,EAAAgqB,GACAA,EACA4G,EAAAzhB,EAAA6a,IAEA7a,EAAAjE,EAAAyjB,OACAzf,EAAAC,EAAA6a,EACA4G,EAAAzhB,EAAA6a,GAGA,QAAAkC,EAEA/iC,GADAimB,EAAA2hB,GACA/G,EACA6G,EAAAzhB,MACS,CAETjmB,GADAimB,EAAA2hB,EAAA9yC,GACA+rC,EACA6G,EAAAzhB,EAEA,IAAA4hB,EAAAJ,EACAA,EAAA1hB,EACAA,EAAA8hB,EAIA,OACA9hB,KACAC,KACAyhB,KACAxhB,KACAjmB,KACA0nC,OAGAI,UAAA,SAAAjX,EAAA9O,EAAAnM,GACA,IAAA+V,EAAA5J,EAAA4J,MAEA,GAAAA,EAAA/pC,OAAA,CACAivC,EAAAnyB,EAAAwlC,GAAAniB,IAAA2hB,aACA9tB,EAAAmyB,UAAAhmB,EAAA2hB,YACA9tB,EAAAoyB,aAAA,MACA,IAIAn2C,EAAAuf,EAJAqyB,EAAA1hB,EAAA0hB,cACA3D,EAAA/d,EAAA+d,aAKA,IAJAlqB,EAAA4N,UAAAzB,EAAAie,eACApqB,EAAA8D,KAAAS,GAAAqsB,WAAA/C,EAAA1hB,EAAAyhB,gBAAAzhB,EAAAuhB,kBAGAzxC,EAAA,EAAAuf,EAAAua,EAAA/pC,OAAuCiQ,EAAAuf,IAASvf,EAChD+jB,EAAAqyB,SAAAtc,EAAA95B,GAAAg/B,EAAAnyB,EAAAmyB,EAAAlyB,GACAkyB,EAAAlyB,GAAA8kC,EAAA3D,EAEAjuC,EAAA,IAAA85B,EAAA/pC,SACAivC,EAAAlyB,GAAAojB,EAAAge,kBAAAD,KAKAoI,SAAA,SAAArX,EAAA9O,EAAAnM,GACA,IAQAuyB,EARA9E,EAAAthB,EAAAshB,aACAnD,EAAAne,EAAAme,YACAE,EAAAre,EAAAqhB,WACA0C,EAAA/jB,EAAA+jB,KACAsC,EAAArmB,EAAAgf,cACA2E,EAAA3jB,EAAA2jB,YACA2C,EAAA,EACAC,EAAAF,EAAAlE,GAAAniB,EAAA,UAEAnM,EAAAmyB,UAAA3H,EACAxqB,EAAAoyB,aAAA,MACApyB,EAAA8D,KAAAS,GAAAqsB,WAAAnD,EAAAthB,EAAAmhB,eAAAnhB,EAAAihB,iBACAnS,EAAAnyB,EAAAwlC,GAAAniB,EAAAqe,GAEA,IAAAmI,EAAA,SAAA1kB,GACAjO,EAAAqyB,SAAApkB,EAAAgN,EAAAnyB,EAAA2pC,EAAAxX,EAAAlyB,GACAkyB,EAAAlyB,GAAA0kC,EAAAnD,GAIAtqB,EAAA4N,UAAAzB,EAAAoe,cACAhmB,GAAAlJ,KAAA8Q,EAAAqf,WAAAmH,GACAF,EAAAD,GAAA,UAAAhI,EAAA,WAAAA,EAAAiD,EAAA,IAAAA,EAAA,IAEAlpB,GAAAlJ,KAAA60B,EAAA,SAAAlB,EAAA/yC,GACAs2C,EAAApmB,EAAA4jB,gBAAA9zC,GACA+jB,EAAA4N,UAAA2kB,EACAhuB,GAAAlJ,KAAA2zB,EAAAC,OAAA0D,GACApuB,GAAAlJ,KAAA2zB,EAAAJ,MAAA,SAAA3gB,GAEAukB,IAEAxyB,EAAA4N,UAAAzB,EAAAkiB,sBACAruB,EAAA4R,SAAA8gB,EAAAzX,EAAAlyB,EAAA0kC,KAEAztB,EAAA6N,UAAA,EACA7N,EAAA+N,YAAA+hB,EAAA7zC,GAAA8uB,YACA/K,EAAA4yB,WAAAF,EAAAzX,EAAAlyB,EAAA0kC,KAEAztB,EAAA4N,UAAAkiB,EAAA7zC,GAAA6uB,gBACA9K,EAAA4R,SAAA8gB,EAAA,EAAAzX,EAAAlyB,EAAA,EAAA0kC,EAAA,EAAAA,EAAA,GACAztB,EAAA4N,UAAA2kB,GAGAI,EAAA1kB,KAEA1J,GAAAlJ,KAAA2zB,EAAAE,MAAAyD,KAGAF,EAAA,EAEAluB,GAAAlJ,KAAA8Q,EAAA2f,UAAA6G,GACA1X,EAAAlyB,GAAAuhC,GAEAuI,WAAA,SAAA5X,EAAA9O,EAAAnM,GACA,IAAAgsB,EAAA7f,EAAA6f,OAEAA,EAAAhgD,SACAivC,EAAAnyB,EAAAwlC,GAAAniB,IAAAgiB,cACAlT,EAAAlyB,GAAAojB,EAAAwe,gBACA3qB,EAAAmyB,UAAAhmB,EAAAgiB,aACAnuB,EAAAoyB,aAAA,MACApyB,EAAA4N,UAAAzB,EAAAye,gBACA5qB,EAAA8D,KAAAS,GAAAqsB,WAAAzkB,EAAA+hB,eAAA/hB,EAAA8hB,iBAAA9hB,EAAA4hB,mBACAxpB,GAAAlJ,KAAA2wB,EAAA,SAAA/d,GACAjO,EAAAqyB,SAAApkB,EAAAgN,EAAAnyB,EAAAmyB,EAAAlyB,GACAkyB,EAAAlyB,GAAAojB,EAAA+hB,eAAA/hB,EAAAue,kBAIAoI,eAAA,SAAA7X,EAAA9O,EAAAnM,EAAA2vB,GACA3vB,EAAA4N,UAAAzB,EAAArB,gBACA9K,EAAA+N,YAAA5B,EAAApB,YACA/K,EAAA6N,UAAA1B,EAAAnB,YACA,IAAAkiB,EAAA/gB,EAAA+gB,OACAC,EAAAhhB,EAAAghB,OACArkC,EAAAmyB,EAAAnyB,EACAC,EAAAkyB,EAAAlyB,EACA5J,EAAAwwC,EAAAxwC,MACAD,EAAAywC,EAAAzwC,OACAihB,EAAAgM,EAAAlL,aACAjB,EAAAmB,YACAnB,EAAAQ,OAAA1X,EAAAqX,EAAApX,GAEA,QAAAokC,GACA7iD,KAAAmnD,UAAAxW,EAAA0U,GAGA3vB,EAAAoB,OAAAtY,EAAA3J,EAAAghB,EAAApX,GACAiX,EAAA+yB,iBAAAjqC,EAAA3J,EAAA4J,EAAAD,EAAA3J,EAAA4J,EAAAoX,GAEA,WAAAgtB,GAAA,UAAAD,GACA5iD,KAAAmnD,UAAAxW,EAAA0U,GAGA3vB,EAAAoB,OAAAtY,EAAA3J,EAAA4J,EAAA7J,EAAAihB,GACAH,EAAA+yB,iBAAAjqC,EAAA3J,EAAA4J,EAAA7J,EAAA4J,EAAA3J,EAAAghB,EAAApX,EAAA7J,GAEA,WAAAiuC,GACA7iD,KAAAmnD,UAAAxW,EAAA0U,GAGA3vB,EAAAoB,OAAAtY,EAAAqX,EAAApX,EAAA7J,GACA8gB,EAAA+yB,iBAAAjqC,EAAAC,EAAA7J,EAAA4J,EAAAC,EAAA7J,EAAAihB,GAEA,WAAAgtB,GAAA,SAAAD,GACA5iD,KAAAmnD,UAAAxW,EAAA0U,GAGA3vB,EAAAoB,OAAAtY,EAAAC,EAAAoX,GACAH,EAAA+yB,iBAAAjqC,EAAAC,EAAAD,EAAAqX,EAAApX,GACAiX,EAAAU,YACAV,EAAAsB,OAEA6K,EAAAnB,YAAA,GACAhL,EAAAuB,UAGAiJ,KAAA,WACA,IAAAxK,EAAA11B,KAAAm/B,OAAAzJ,IACAmM,EAAA7hC,KAAAy6B,MAEA,OAAAoH,EAAAiiB,QAAA,CAIA,IAAAuB,EAAA,CACAxwC,MAAAgtB,EAAAhtB,MACAD,OAAAitB,EAAAjtB,QAEA+7B,EAAA,CACAnyB,EAAAqjB,EAAArjB,EACAC,EAAAojB,EAAApjB,GAGAqlC,EAAA/lC,KAAAknB,IAAApD,EAAAiiB,QAAA,QAAAjiB,EAAAiiB,QAEA4E,EAAA7mB,EAAA4J,MAAA/pC,QAAAmgC,EAAAqf,WAAAx/C,QAAAmgC,EAAA+jB,KAAAlkD,QAAAmgC,EAAA2f,UAAA9/C,QAAAmgC,EAAA6f,OAAAhgD,OAEA1B,KAAAmsC,SAAAuT,SAAAgJ,IACAhzB,EAAA4B,OACA5B,EAAAizB,YAAA7E,EAEA9jD,KAAAwoD,eAAA7X,EAAA9O,EAAAnM,EAAA2vB,GAEA1U,EAAAlyB,GAAAojB,EAAA2e,SAEAxgD,KAAA4nD,UAAAjX,EAAA9O,EAAAnM,GAEA11B,KAAAgoD,SAAArX,EAAA9O,EAAAnM,GAEA11B,KAAAuoD,WAAA5X,EAAA9O,EAAAnM,GACAA,EAAA+B,aAUAmxB,YAAA,SAAA7lD,GACA,IAAAuvB,EAAAtyB,KACAyU,EAAA6d,EAAA6Z,SACA4Y,GAAA,EAyBA,OAxBAzyB,EAAA8xB,YAAA9xB,EAAA8xB,aAAA,GAEA,aAAArhD,EAAA2I,KACA4mB,EAAA4yB,QAAA,GAEA5yB,EAAA4yB,QAAA5yB,EAAA6M,OAAA0pB,0BAAA9lD,EAAA0R,EAAAmzB,KAAAnzB,IAIAswC,GAAA9qB,GAAA9I,YAAAmB,EAAA4yB,QAAA5yB,EAAA8xB,gBAGA9xB,EAAA8xB,YAAA9xB,EAAA4yB,SAEAzwC,EAAAirC,SAAAjrC,EAAA6rB,UACAhO,EAAAozB,eAAA,CACAlnC,EAAAzb,EAAAyb,EACAC,EAAA1b,EAAA0b,GAEA6T,EAAAtb,QAAA,GACAsb,EAAAkI,UAIAuqB,KAOA+D,GAAAlH,GACAmH,GAAA5E,GACA4E,GAAAnH,YAAAkH,GACA,IAAAE,GAAA/uB,GAAAxJ,eAuBA,SAAAw4B,KAGA,OAAAhvB,GAAApI,MAAA,GAA6B,GAAAhI,MAAAxnB,KAAAyN,WAAA,CAC7BmiB,OAAA,SAAAntB,EAAA4M,EAAAnD,EAAAkG,GACA,aAAA3P,GAAA,UAAAA,EAAA,CACA,IACA6M,EAAAjG,EAAAwgB,EADAg9B,EAAA36C,EAAAzJ,GAAApD,OAOA,IAJAgQ,EAAA5M,KACA4M,EAAA5M,GAAA,IAGA6M,EAAA,EAAqBA,EAAAu3C,IAAUv3C,EAC/Bua,EAAA3d,EAAAzJ,GAAA6M,GACAjG,EAAAs9C,GAAA98B,EAAAxgB,KAAA,UAAA5G,EAAA,qBAEA6M,GAAAD,EAAA5M,GAAApD,QACAgQ,EAAA5M,GAAAD,KAAA,KAGA6M,EAAA5M,GAAA6M,GAAAjG,MAAAwgB,EAAAxgB,MAAAwgB,EAAAxgB,OAAAgG,EAAA5M,GAAA6M,GAAAjG,KAGAuuB,GAAApI,MAAAngB,EAAA5M,GAAA6M,GAAA,CAAAotC,GAAAM,iBAAA3zC,GAAAwgB,IAGA+N,GAAApI,MAAAngB,EAAA5M,GAAA6M,GAAAua,QAIA+N,GAAAvI,QAAA5sB,EAAA4M,EAAAnD,EAAAkG,MAYA,SAAA00C,KAGA,OAAAlvB,GAAApI,MAAA,GAA6B,GAAAhI,MAAAxnB,KAAAyN,WAAA,CAC7BmiB,OAAA,SAAAntB,EAAA4M,EAAAnD,EAAAkG,GACA,IAAAkd,EAAAjgB,EAAA5M,IAAA,GACA8sB,EAAArjB,EAAAzJ,GAEA,WAAAA,EAEA4M,EAAA5M,GAAAmkD,GAAAt3B,EAAAC,GACS,UAAA9sB,EAET4M,EAAA5M,GAAAm1B,GAAApI,MAAAF,EAAA,CAAAotB,GAAAM,iBAAAztB,EAAAlmB,MAAAkmB,IAEAqI,GAAAvI,QAAA5sB,EAAA4M,EAAAnD,EAAAkG,MA+BA,SAAA20C,GAAA/wC,GACA,cAAAA,GAAA,WAAAA,EA/GA2gB,GAAAT,KAAA,UACA0H,SAAA,GACAopB,OAAA,0DACA1hB,MAAA,CACA2hB,QAAA,KACA1hB,KAAA,UACA6L,WAAA,EACA8V,kBAAA,KAEA9xC,QAAA,KACAwjC,qBAAA,EACAuO,YAAA,EACAC,4BAAA,IAsGA,IAAAC,GAAA,SAAA92B,EAAA3c,GAEA,OADAjW,KAAA2pD,UAAA/2B,EAAA3c,GACAjW,MAGAi6B,GAAA/H,OAAAw3B,GAAAvpD,UAEA,CAIAwpD,UAAA,SAAA/2B,EAAA3c,GACA,IAAAqc,EAAAtyB,KACAiW,EA1CA,SAAAA,GAIA,IAAAlW,GAHAkW,KAAA,IAGAlW,KAAAkW,EAAAlW,MAAA,GAIA,OAHAA,EAAAoV,SAAApV,EAAAoV,UAAA,GACApV,EAAA0oC,OAAA1oC,EAAA0oC,QAAA,GACAxyB,EAAAxB,QAAA00C,GAAAnwB,GAAAz1B,OAAAy1B,GAAA/iB,EAAAvK,MAAAuK,EAAAxB,SAAA,IACAwB,EAkCA2zC,CAAA3zC,GACA,IAAA+jB,EAAAsiB,GAAAO,eAAAjqB,EAAA3c,GACAkkB,EAAAH,KAAAG,OACAvlB,EAAAulB,KAAAvlB,OACAC,EAAAslB,KAAAtlB,MACAyd,EAAA/a,GAAA0iB,GAAAvvB,MACA4nB,EAAAoD,IAAAsE,EACA1H,EAAA6H,SACA7H,EAAArc,SACAqc,EAAAzd,QACAyd,EAAA1d,SACA0d,EAAA+qB,YAAAzoC,EAAAC,EAAAD,EAAA,KACA0d,EAAA7d,QAAAwB,EAAAxB,QACA6d,EAAAu3B,iBAAA,EAUAv3B,EAAAmD,MAAAnD,EACAA,EAAAoY,WAAApY,EAGAo3B,GAAAI,UAAAx3B,EAAA/a,IAAA+a,EAEAvwB,OAAA+E,eAAAwrB,EAAA,QACAjyB,IAAA,WACA,OAAAiyB,EAAArc,OAAAlW,MAEAQ,IAAA,SAAAG,GACA4xB,EAAArc,OAAAlW,KAAAW,KAIAs5B,GAAAG,GASA7H,EAAAgI,aACAhI,EAAAtb,UALAlB,QAAAC,MAAA,sEAWAukB,WAAA,WACA,IAAAhI,EAAAtyB,KAiBA,OAfAg+C,GAAAQ,OAAAlsB,EAAA,cACA2H,GAAA8vB,YAAAz3B,IAAA7d,QAAAu1C,kBACA13B,EAAA23B,aAEA33B,EAAA7d,QAAA+0C,YAEAl3B,EAAA43B,QAAA,GAIA53B,EAAA63B,sBACA73B,EAAA83B,sBACA93B,EAAA+3B,cAEArM,GAAAQ,OAAAlsB,EAAA,aACAA,GAEAlyB,MAAA,WAEA,OADA65B,GAAAE,OAAA/5B,MAAAJ,MACAA,MAEAsqD,KAAA,WAGA,OADAluB,GAAAU,gBAAA98B,MACAA,MAEAkqD,OAAA,SAAAK,GACA,IAAAj4B,EAAAtyB,KACAyU,EAAA6d,EAAA7d,QACA0lB,EAAA7H,EAAA6H,OACAkjB,EAAA5oC,EAAAwmC,qBAAA3oB,EAAA+qB,aAAA,KAIAmN,EAAAzsC,KAAAC,IAAA,EAAAD,KAAAkB,MAAAgb,GAAAwwB,gBAAAtwB,KACAuwB,EAAA3sC,KAAAC,IAAA,EAAAD,KAAAkB,MAAAo+B,EAAAmN,EAAAnN,EAAApjB,GAAA0wB,iBAAAxwB,KAEA,IAAA7H,EAAAzd,QAAA21C,GAAAl4B,EAAA1d,SAAA81C,KAIAvwB,EAAAtlB,MAAAyd,EAAAzd,MAAA21C,EACArwB,EAAAvlB,OAAA0d,EAAA1d,OAAA81C,EACAvwB,EAAA5D,MAAA1hB,MAAA21C,EAAA,KACArwB,EAAA5D,MAAA3hB,OAAA81C,EAAA,KACAzwB,GAAA8vB,YAAAz3B,EAAA7d,EAAAu1C,mBAEAO,GAAA,CAEA,IAAAK,EAAA,CACA/1C,MAAA21C,EACA51C,OAAA81C,GAEA1M,GAAAQ,OAAAlsB,EAAA,UAAAs4B,IAEAn2C,EAAAo2C,UACAp2C,EAAAo2C,SAAAv4B,EAAAs4B,GAGAt4B,EAAAg4B,OACAh4B,EAAAtb,OAAA,CACAilB,SAAAxnB,EAAAg1C,gCAIAU,oBAAA,WACA,IAAA11C,EAAAzU,KAAAyU,QACAq2C,EAAAr2C,EAAA4pB,QAAA,GACA0sB,EAAAt2C,EAAAyX,MACA+N,GAAAlJ,KAAA+5B,EAAAxsB,MAAA,SAAA0sB,EAAAvpD,GACAupD,EAAAzzC,GAAAyzC,EAAAzzC,IAAA,UAAA9V,IAEAw4B,GAAAlJ,KAAA+5B,EAAAtsB,MAAA,SAAAysB,EAAAxpD,GACAwpD,EAAA1zC,GAAA0zC,EAAA1zC,IAAA,UAAA9V,IAGAspD,IACAA,EAAAxzC,GAAAwzC,EAAAxzC,IAAA,UAOA6yC,oBAAA,WACA,IAAA93B,EAAAtyB,KACAyU,EAAA6d,EAAA7d,QACA4pB,EAAA/L,EAAA+L,QAAA,GACAiW,EAAA,GACA4W,EAAAnpD,OAAAwD,KAAA84B,GAAA2nB,OAAA,SAAAn0C,EAAA0F,GAEA,OADA1F,EAAA0F,IAAA,EACA1F,GACO,IAEP4C,EAAA4pB,SACAiW,IAAAnhC,QAAAsB,EAAA4pB,OAAAC,OAAA,IAAAvzB,IAAA,SAAAigD,GACA,OACAv2C,QAAAu2C,EACAG,MAAA,WACAC,UAAA,aAES32C,EAAA4pB,OAAAG,OAAA,IAAAzzB,IAAA,SAAAkgD,GACT,OACAx2C,QAAAw2C,EACAE,MAAA,SACAC,UAAA,YAKA32C,EAAAyX,OACAooB,EAAAzvC,KAAA,CACA4P,UAAAyX,MACAi/B,MAAA,eACAE,WAAA,EACAD,UAAA,cAIAnxB,GAAAlJ,KAAAujB,EAAA,SAAA1hB,GACA,IAAAm4B,EAAAn4B,EAAAne,QACA8C,EAAAwzC,EAAAxzC,GACA+zC,EAAAtC,GAAA+B,EAAAr/C,KAAAknB,EAAAu4B,OAEA/B,GAAA2B,EAAA1yC,YAAA+wC,GAAAx2B,EAAAw4B,aACAL,EAAA1yC,SAAAua,EAAAw4B,WAGAF,EAAA3zC,IAAA,EACA,IAAA2U,EAAA,KAEA,GAAA3U,KAAA8mB,KAAA9mB,GAAA7L,OAAA4/C,GACAp/B,EAAAmS,EAAA9mB,IACA9C,QAAAs2C,EACA7+B,EAAAwJ,IAAApD,EAAAoD,IACAxJ,EAAAuJ,MAAAnD,MACS,CACT,IAAAi5B,EAAAxM,GAAAK,oBAAAkM,GAEA,IAAAC,EACA,OAGAr/B,EAAA,IAAAq/B,EAAA,CACAh0C,KACA7L,KAAA4/C,EACA72C,QAAAs2C,EACAr1B,IAAApD,EAAAoD,IACAD,MAAAnD,IAEA+L,EAAAnS,EAAA3U,IAAA2U,EAGAA,EAAAs/B,oBAIA54B,EAAAy4B,YACA/4B,EAAApG,WAIA+N,GAAAlJ,KAAAm6B,EAAA,SAAAO,EAAAl0C,GACAk0C,UACAptB,EAAA9mB,KAGA+a,EAAA+L,SACA0gB,GAAAS,kBAAAx/C,OAEA0rD,yBAAA,WACA,IAAAp5B,EAAAtyB,KACA2rD,EAAA,GA0BA,OAzBA1xB,GAAAlJ,KAAAuB,EAAAvyB,KAAAoV,SAAA,SAAAS,EAAA+nB,GACA,IAAAM,EAAA3L,EAAAmM,eAAAd,GACAjyB,EAAAkK,EAAAlK,MAAA4mB,EAAArc,OAAAvK,KASA,GAPAuyB,EAAAvyB,MAAAuyB,EAAAvyB,WACA4mB,EAAAs5B,mBAAAjuB,GACAM,EAAA3L,EAAAmM,eAAAd,IAGAM,EAAAvyB,OAEAuyB,EAAAyM,WACAzM,EAAAyM,WAAA1M,YAAAL,GACAM,EAAAyM,WAAA5M,iBACS,CACT,IAAA+tB,EAAA3zC,GAAA+lB,EAAAvyB,MAEA,QAAAlH,IAAAqnD,EACA,UAAA1zC,MAAA,IAAA8lB,EAAAvyB,KAAA,0BAGAuyB,EAAAyM,WAAA,IAAAmhB,EAAAv5B,EAAAqL,GACAguB,EAAA9mD,KAAAo5B,EAAAyM,cAEOpY,GACPq5B,GAOAG,cAAA,WACA,IAAAx5B,EAAAtyB,KACAi6B,GAAAlJ,KAAAuB,EAAAvyB,KAAAoV,SAAA,SAAAS,EAAA+nB,GACArL,EAAAmM,eAAAd,GAAA+M,WAAA1L,SACO1M,IAMP0M,MAAA,WACAh/B,KAAA8rD,gBACA9rD,KAAA8lD,QAAAxrB,cAEAtjB,OAAA,SAAAf,GACA,IAAAqc,EAAAtyB,KAeA,GAbAiW,GAAA,kBAAAA,IAEAA,EAAA,CACAgmB,SAAAhmB,EACAumB,KAAA1sB,UAAA,KA1TA,SAAA2lB,GACA,IAAAs2B,EAAAt2B,EAAAhhB,QACAwlB,GAAAlJ,KAAA0E,EAAA4I,OAAA,SAAAnS,GACAopB,GAAAG,UAAAhgB,EAAAvJ,KAEA6/B,EAAA5C,GAAAnwB,GAAAz1B,OAAAy1B,GAAAvD,EAAAxf,OAAAvK,MAAAqgD,GACAt2B,EAAAhhB,QAAAghB,EAAAxf,OAAAxB,QAAAs3C,EACAt2B,EAAA00B,sBACA10B,EAAA20B,sBAEA30B,EAAAqwB,QAAA3Z,SAAA4f,EAAAxgB,SACA9V,EAAAqwB,QAAAxrB,aAmTA0xB,CAAA15B,GAGA0rB,GAAAc,YAAAxsB,IAEA,IAAA0rB,GAAAQ,OAAAlsB,EAAA,iBAKAA,EAAAwzB,QAAA7mB,MAAA3M,EAAAvyB,KAEA,IAAA4rD,EAAAr5B,EAAAo5B,2BAEAzxB,GAAAlJ,KAAAuB,EAAAvyB,KAAAoV,SAAA,SAAAS,EAAA+nB,GACArL,EAAAmM,eAAAd,GAAA+M,WAAAhL,yBACOpN,GACPA,EAAA25B,eAEA35B,EAAA7d,QAAAunB,WAAA1J,EAAA7d,QAAAunB,UAAAC,UACAhC,GAAAlJ,KAAA46B,EAAA,SAAAjhB,GACAA,EAAA1L,UAIA1M,EAAA45B,iBAGA55B,EAAAwzB,QAAAxrB,aAGAhI,EAAA65B,WAAA,GAEAnO,GAAAQ,OAAAlsB,EAAA,eAEAA,EAAAu3B,gBACAv3B,EAAA85B,iBAAA,CACAnwB,SAAAhmB,EAAAgmB,SACA/B,OAAAjkB,EAAAikB,OACAsC,KAAAvmB,EAAAumB,MAGAlK,EAAAjb,OAAApB,KASAg2C,aAAA,YAGA,IAAAjO,GAAAQ,OAFAx+C,KAEA,kBAIAs1C,GAAAt+B,OAAAhX,UAAA6U,MAAA7U,KAAA4U,QASAopC,GAAAQ,OAfAx+C,KAeA,oBACAg+C,GAAAQ,OAhBAx+C,KAgBA,iBAQAksD,eAAA,WAGA,QAAAlO,GAAAQ,OAFAx+C,KAEA,yBAIA,QAAA2R,EAAA,EAAA2f,EANAtxB,KAMAD,KAAAoV,SAAAzT,OAAqDiQ,EAAA2f,IAAU3f,EAN/D3R,KAOAqsD,cAAA16C,GAGAqsC,GAAAQ,OAVAx+C,KAUA,yBAQAqsD,cAAA,SAAA5qD,GACA,IACAw8B,EADAj+B,KACAy+B,eAAAh9B,GACAoO,EAAA,CACAouB,OACAx8B,UAGA,IAAAu8C,GAAAQ,OAPAx+C,KAOA,uBAAA6P,MAIAouB,EAAAyM,WAAA1zB,SACAgnC,GAAAQ,OAZAx+C,KAYA,sBAAA6P,MAEAwH,OAAA,SAAApB,GACA,IAAAqc,EAAAtyB,KAEAiW,GAAA,kBAAAA,IAEAA,EAAA,CACAgmB,SAAAhmB,EACAumB,KAAA1sB,UAAA,KAIA,IAAAw8C,EAAAh6B,EAAA7d,QAAAunB,UACAC,EAAA+sB,GAAA/yC,EAAAgmB,SAAAqwB,KAAArwB,UACAO,EAAAvmB,EAAAumB,KAEA,QAAAwhB,GAAAQ,OAAAlsB,EAAA,iBAIA,IAAA6J,EAAA,SAAAH,GACAgiB,GAAAQ,OAAAlsB,EAAA,eACA2H,GAAArJ,SAAA07B,KAAAnwB,WAAA,CAAAH,GAAA1J,IAGA,GAAAg6B,GAAArwB,EAAA,CACA,IAAAD,EAAA,IAAAD,GAAA,CACAH,SAAAK,EAAA,MAEA/B,OAAAjkB,EAAAikB,QAAAoyB,EAAApyB,OACA7iB,OAAA,SAAAoe,EAAA82B,GACA,IAAAC,EAAAvyB,GAAAC,OAAAlH,QAAAu5B,EAAAryB,QACAyB,EAAA4wB,EAAA5wB,YACA8wB,EAAA9wB,EAAA4wB,EAAA3wB,SACAnG,EAAAyK,KAAAssB,EAAAC,KAAA9wB,IAEAE,oBAAAywB,EAAApwB,WACAJ,oBAAAK,IAEAC,GAAAG,aAAAjK,EAAA0J,EAAAC,EAAAO,QAEAlK,EAAA4N,OAEA/D,EAAA,IAAAJ,GAAA,CACAH,SAAA,EACAnG,MAAAnD,KAIA,OAAAA,IAEA4N,KAAA,SAAAF,GACA,IAAA1N,EAAAtyB,KACAsyB,EAAAlyB,QAEA65B,GAAA9J,cAAA6P,KACAA,EAAA,GAGA1N,EAAAsI,WAAAoF,GAEA1N,EAAAzd,OAAA,GAAAyd,EAAA1d,QAAA,IAIA,IAAAopC,GAAAQ,OAAAlsB,EAAA,cAAA0N,MAKA/F,GAAAlJ,KAAAuB,EAAA6iB,MAAA,SAAAC,GACAA,EAAAlV,KAAA5N,EAAAmT,YACOnT,GACPA,EAAAo6B,aAAA1sB,GAEA1N,EAAAq6B,aAAA3sB,GAEAge,GAAAQ,OAAAlsB,EAAA,aAAA0N,MAMApF,WAAA,SAAAoF,GAGA,IAFA,IAEAruB,EAAA,EAAA2f,GAFAtxB,KAEAD,KAAAoV,UAAA,IAAAzT,OAA6DiQ,EAAA2f,IAAU3f,EAFvE3R,KAGAwpC,iBAAA73B,IAHA3R,KAIAy+B,eAAA9sB,GAAA+4B,WAAA9P,WAAAoF,GAJAhgC,KAQA8lD,QAAAlrB,WAAAoF,IAQA0sB,aAAA,SAAA1sB,GACA,IAAA1N,EAAAtyB,KAEA,QAAAg+C,GAAAQ,OAAAlsB,EAAA,sBAAA0N,IAAA,CAKA,QAAAruB,GAAA2gB,EAAAvyB,KAAAoV,UAAA,IAAAzT,OAAA,EAAuDiQ,GAAA,IAAQA,EAC/D2gB,EAAAkX,iBAAA73B,IACA2gB,EAAAs6B,YAAAj7C,EAAAquB,GAIAge,GAAAQ,OAAAlsB,EAAA,qBAAA0N,MAQA4sB,YAAA,SAAAnrD,EAAAu+B,GACA,IACA/B,EADAj+B,KACAy+B,eAAAh9B,GACAoO,EAAA,CACAouB,OACAx8B,QACAu+B,gBAGA,IAAAge,GAAAQ,OARAx+C,KAQA,qBAAA6P,MAIAouB,EAAAyM,WAAAxK,KAAAF,GACAge,GAAAQ,OAbAx+C,KAaA,oBAAA6P,MAQA88C,aAAA,SAAA3sB,GACA,IACA8lB,EADA9lD,KACA8lD,QACAj2C,EAAA,CACAi2C,UACA9lB,gBAGA,IAAAge,GAAAQ,OAPAx+C,KAOA,qBAAA6P,MAIAi2C,EAAA5lB,OACA8d,GAAAQ,OAZAx+C,KAYA,oBAAA6P,MAOA6D,kBAAA,SAAA3Q,GACA,OAAAwxC,GAAAC,MAAAC,OAAAz0C,KAAA+C,IAEA4Q,mBAAA,SAAA5Q,GACA,OAAAwxC,GAAAC,MAAA3+B,MAAA7V,KAAA+C,EAAA,CACA0wC,WAAA,KAGAoZ,mBAAA,SAAA9pD,GACA,OAAAwxC,GAAAC,MAAA,UAAAx0C,KAAA+C,EAAA,CACA0wC,WAAA,KAGAoV,0BAAA,SAAA9lD,EAAA6kC,EAAAnzB,GACA,IAAAmrB,EAAA2U,GAAAC,MAAA5M,GAEA,0BAAAhI,EACAA,EAAA5/B,KAAA+C,EAAA0R,GAGA,IAEAhB,kBAAA,SAAA1Q,GACA,OAAAwxC,GAAAC,MAAA5+B,QAAA5V,KAAA+C,EAAA,CACA0wC,WAAA,KAGAhV,eAAA,SAAAd,GACA,IACA/nB,EADA5V,KACAD,KAAAoV,SAAAwoB,GAEA/nB,EAAAk3C,QACAl3C,EAAAk3C,MAAA,IAGA,IAAA7uB,EAAAroB,EAAAk3C,MAPA9sD,KAOAuX,IAeA,OAbA0mB,IACAA,EAAAroB,EAAAk3C,MAVA9sD,KAUAuX,IAAA,CACA7L,KAAA,KACA3L,KAAA,GACA6V,QAAA,KACA80B,WAAA,KACAnQ,OAAA,KAEA6D,QAAA,KACAG,QAAA,OAIAN,GAEA8T,uBAAA,WAGA,IAFA,IAAA9Q,EAAA,EAEAtvB,EAAA,EAAA2f,EAAAtxB,KAAAD,KAAAoV,SAAAzT,OAAuDiQ,EAAA2f,IAAU3f,EACjE3R,KAAAwpC,iBAAA73B,IACAsvB,IAIA,OAAAA,GAEAuI,iBAAA,SAAA7L,GACA,IAAAM,EAAAj+B,KAAAy+B,eAAAd,GAGA,yBAAAM,EAAA1D,QAAA0D,EAAA1D,QAAAv6B,KAAAD,KAAAoV,SAAAwoB,GAAApD,QAEAwyB,eAAA,WACA,OAAA/sD,KAAAyU,QAAA+3B,eAAAxsC,OAMA4rD,mBAAA,SAAAjuB,GACA,IAAApmB,EAAAvX,KAAAuX,GACA3B,EAAA5V,KAAAD,KAAAoV,SAAAwoB,GACAM,EAAAroB,EAAAk3C,OAAAl3C,EAAAk3C,MAAAv1C,GAEA0mB,IACAA,EAAAyM,WAAAtzB,iBACAxB,EAAAk3C,MAAAv1C,KAGAH,QAAA,WACA,IAEAzF,EAAA2f,EAFAgB,EAAAtyB,KACAm6B,EAAA7H,EAAA6H,OAIA,IAFA7H,EAAAg4B,OAEA34C,EAAA,EAAA2f,EAAAgB,EAAAvyB,KAAAoV,SAAAzT,OAAiDiQ,EAAA2f,IAAU3f,EAC3D2gB,EAAAs5B,mBAAAj6C,GAGAwoB,IACA7H,EAAA06B,eACA/yB,GAAAE,OAAA/5B,MAAAkyB,GACAgqB,GAAAkB,eAAAlrB,EAAAoD,KACApD,EAAA6H,OAAA,KACA7H,EAAAoD,IAAA,MAGAsoB,GAAAQ,OAAAlsB,EAAA,kBACAo3B,GAAAI,UAAAx3B,EAAA/a,KAEA01C,cAAA,WACA,OAAAjtD,KAAAm6B,OAAA+yB,UAAAn9C,MAAA/P,KAAAm6B,OAAArqB,YAEAu6C,YAAA,WACA,IAAA/3B,EAAAtyB,KACAsyB,EAAAwzB,QAAA,IAAAiD,GAAA,CACA5pB,OAAA7M,EACA66B,eAAA76B,EAEA2M,MAAA3M,EAAAvyB,KACAosC,SAAA7Z,EAAA7d,QAAA82B,UACOjZ,IAMP23B,WAAA,WACA,IAAA33B,EAAAtyB,KACAy9B,EAAAnL,EAAA86B,WAAA,GAEA9vB,EAAA,WACAhL,EAAA+6B,aAAAt9C,MAAAuiB,EAAAxiB,YAGAmqB,GAAAlJ,KAAAuB,EAAA7d,QAAA40C,OAAA,SAAA39C,GACA4wC,GAAAhD,iBAAAhnB,EAAA5mB,EAAA4xB,GACAG,EAAA/xB,GAAA4xB,IAIAhL,EAAA7d,QAAA+0C,aACAlsB,EAAA,WACAhL,EAAA43B,UAGA5N,GAAAhD,iBAAAhnB,EAAA,SAAAgL,GACAG,EAAAysB,OAAA5sB,IAOA0vB,aAAA,WACA,IAAA16B,EAAAtyB,KACAy9B,EAAAnL,EAAA86B,WAEA3vB,WAIAnL,EAAA86B,WACAnzB,GAAAlJ,KAAA0M,EAAA,SAAAH,EAAA5xB,GACA4wC,GAAA5C,oBAAApnB,EAAA5mB,EAAA4xB,OAGAgwB,iBAAA,SAAArtB,EAAA2H,EAAA8X,GACA,IACA5rC,EAAAnC,EAAA2f,EADAsO,EAAA8f,EAAA,mCAGA,IAAA/tC,EAAA,EAAA2f,EAAA2O,EAAAv+B,OAAyCiQ,EAAA2f,IAAU3f,GACnDmC,EAAAmsB,EAAAtuB,KAGA3R,KAAAy+B,eAAA3qB,EAAAsrB,eAAAsL,WAAA9K,GAAA9rB,IAQAu5C,aAAA,SAAAtqD,GACA,IAAAuvB,EAAAtyB,KACA8lD,EAAAxzB,EAAAwzB,QAEA,QAAA9H,GAAAQ,OAAAlsB,EAAA,eAAAvvB,IAAA,CAKAuvB,EAAAu3B,iBAAA,EACAv3B,EAAA85B,iBAAA,KACA,IAAArH,EAAAzyB,EAAAs2B,YAAA7lD,GAKA+iD,IACAf,EAAAe,EAAAnrB,OAAAmrB,EAAA8C,YAAA7lD,GAAAgiD,EAAAe,EAAA8C,YAAA7lD,IAGAi7C,GAAAQ,OAAAlsB,EAAA,cAAAvvB,IACA,IAAAwqD,EAAAj7B,EAAA85B,iBAkBA,OAhBAmB,EAEAj7B,EAAAjb,OAAAk2C,GACOxI,IAAAzyB,EAAAsK,YAEPtK,EAAAg4B,OAGAh4B,EAAAjb,OAAA,CACA4kB,SAAA3J,EAAA7d,QAAAkzB,MAAA4hB,kBACA/sB,MAAA,KAIAlK,EAAAu3B,iBAAA,EACAv3B,EAAA85B,iBAAA,KACA95B,IASAs2B,YAAA,SAAA7lD,GACA,IAAAuvB,EAAAtyB,KACAyU,EAAA6d,EAAA7d,SAAA,GACA+4C,EAAA/4C,EAAAkzB,MACAod,GAAA,EAiCA,OAhCAzyB,EAAA65B,WAAA75B,EAAA65B,YAAA,GAEA,aAAAppD,EAAA2I,KACA4mB,EAAA2yB,OAAA,GAEA3yB,EAAA2yB,OAAA3yB,EAAAu2B,0BAAA9lD,EAAAyqD,EAAA5lB,KAAA4lB,GAKAvzB,GAAArJ,SAAAnc,EAAA60C,SAAA70C,EAAAkzB,MAAA2hB,QAAA,CAAAvmD,EAAAowC,OAAA7gB,EAAA2yB,QAAA3yB,GAEA,YAAAvvB,EAAA2I,MAAA,UAAA3I,EAAA2I,MACA+I,EAAAgD,SAEAhD,EAAAgD,QAAApV,KAAAiwB,EAAAvvB,EAAAowC,OAAA7gB,EAAA2yB,QAKA3yB,EAAA65B,WAAAzqD,QACA4wB,EAAAg7B,iBAAAh7B,EAAA65B,WAAAqB,EAAA5lB,MAAA,GAIAtV,EAAA2yB,OAAAvjD,QAAA8rD,EAAA5lB,MACAtV,EAAAg7B,iBAAAh7B,EAAA2yB,OAAAuI,EAAA5lB,MAAA,GAGAmd,GAAA9qB,GAAA9I,YAAAmB,EAAA2yB,OAAA3yB,EAAA65B,YAEA75B,EAAA65B,WAAA75B,EAAA2yB,OACAF,KASA2E,GAAAI,UAAA,GACA,IAAA2D,GAAA/D,GAyrBA,SAAAgE,KACA,UAAAv1C,MAAA,6GAqBA,SAAAw1C,GAAAl5C,GACAzU,KAAAyU,WAAA,GAtsBAi1C,GAAAkE,WAAAlE,GASAA,GAAA9mD,MAAA,GASAq3B,GAAA3jB,YAAA6yC,GASAlvB,GAAA4zB,WAAA5E,GA8qBAhvB,GAAA/H,OAAAy7B,GAAAxtD,UAEA,CAMA2tD,QAAAJ,GASAK,MAAAL,GASAM,OAAAN,GAUAvoD,IAAAuoD,GAUAO,KAAAP,GAUAQ,QAAAR,GAQAS,MAAAT,GAUAU,QAAA,SAAA1tD,GACA,OAAAA,KAIAitD,GAAAU,SAAA,SAAAC,GACAr0B,GAAA/H,OAAAy7B,GAAAxtD,UAAAmuD,IAGA,IACAC,GAAA,CACAC,MAFAb,IASAc,GAAA,CAKAC,WAAA,CAOAltD,OAAA,SAAAd,GACA,OAAAu5B,GAAAx0B,QAAA/E,KAAA,GAAAA,GAWAuyB,OAAA,SAAA07B,EAAAltD,EAAAyoC,GAEA,IAAAjsB,EAAAisB,EAAAxoC,OAAA,EAAAwoC,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAEAnsB,KAAAknB,IAAAhnB,GAAA,GACA0wC,IAAA5wC,KAAAkB,MAAA0vC,KAEA1wC,EAAA0wC,EAAA5wC,KAAAkB,MAAA0vC,IAIA,IAAAC,EAAA30B,GAAA40B,MAAA9wC,KAAAknB,IAAAhnB,IACA6wC,EAAA,GAEA,OAAAH,EAAA,CACA,IAAAI,EAAAhxC,KAAAC,IAAAD,KAAAknB,IAAAiF,EAAA,IAAAnsB,KAAAknB,IAAAiF,IAAAxoC,OAAA,KAEA,GAAAqtD,EAAA,MAEA,IAAAC,EAAA/0B,GAAA40B,MAAA9wC,KAAAknB,IAAA0pB,IACAG,EAAAH,EAAAM,cAAAlxC,KAAAkB,MAAA+vC,GAAAjxC,KAAAkB,MAAA2vC,QACW,CACX,IAAAM,GAAA,EAAAnxC,KAAAkB,MAAA2vC,GACAM,EAAAnxC,KAAAC,IAAAD,KAAAD,IAAAoxC,EAAA,OAEAJ,EAAAH,EAAAQ,QAAAD,SAGAJ,EAAA,IAGA,OAAAA,GAEAM,YAAA,SAAAT,EAAAltD,EAAAyoC,GACA,IAAAmlB,EAAAV,EAAA5wC,KAAAQ,IAAA,GAAAR,KAAAkB,MAAAgb,GAAA40B,MAAAF,KAEA,WAAAA,EACA,IACS,IAAAU,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAA5tD,OAAAyoC,EAAAxoC,OAAA,EACTitD,EAAAM,gBAGA,MAIAK,GAAAr1B,GAAAxJ,eACAE,GAAAsJ,GAAAtJ,sBAsDA,SAAA4+B,GAAArlB,GACA,IACAv4B,EAAA2f,EADAmX,EAAA,GAGA,IAAA92B,EAAA,EAAA2f,EAAA4Y,EAAAxoC,OAAoCiQ,EAAA2f,IAAU3f,EAC9C82B,EAAA5jC,KAAAqlC,EAAAv4B,GAAAkE,OAGA,OAAA4yB,EAmBA,SAAA+mB,GAAAx1B,EAAAy1B,EAAAj2B,GACA,OAAAS,GAAAx0B,QAAAgqD,GAAAx1B,GAAAy1B,YAAA11B,EAAAR,EAAAi2B,GAAAz1B,EAAAqsB,YAAAoJ,GAAA56C,MAhFAmkB,GAAAT,KAAA,SACAngB,SAAA,EACAC,SAAA,OACA1W,QAAA,EAEAomC,UAAA,CACA3vB,SAAA,EACAu3C,MAAA,qBACApsB,UAAA,EACAqsB,YAAA,EACAC,iBAAA,EACAC,WAAA,EACAC,eAAA,GACAC,cAAA,EACAC,cAAA,mBACAC,mBAAA,GACAC,yBAAA,EACAnoB,iBAAA,EACAnE,WAAA,GACAC,iBAAA,GAGAssB,WAAA,CAEAh4C,SAAA,EAEAi4C,YAAA,GAEA7qB,QAAA,CACAzP,IAAA,EACAE,OAAA,IAIAiU,MAAA,CACAoH,aAAA,EACAgf,YAAA,EACAC,YAAA,GACAC,QAAA,EACAhrB,QAAA,EACAvU,SAAA,EACA7Y,SAAA,EACAq4C,UAAA,EACAC,gBAAA,EACAC,YAAA,EAEA//B,SAAA69B,GAAAC,WAAAltD,OACAovD,MAAA,GACAC,MAAA,MAmCA,IAAAC,GAAAr1B,GAAAvJ,OAAA,CAOAglB,WAAA,WAEA,OACAphB,KAFA91B,KAEA+wD,aAAA,EACAh7B,IAHA/1B,KAGAgxD,YAAA,EACAh7B,MAJAh2B,KAIAixD,cAAA,EACAh7B,OALAj2B,KAKAkxD,eAAA,IAQA/mB,SAAA,WACA,OAAAnqC,KAAAmxD,QAKA3F,kBAAA,WACA,IAAAthB,EAAAlqC,KAAAyU,QAAAy1B,MAcA,QAAAplC,KAZA,IAAAolC,EAAA0mB,QACA1mB,EAAA0mB,MAAA,CACAx4C,SAAA,KAIA,IAAA8xB,EAAA2mB,QACA3mB,EAAA2mB,MAAA,CACAz4C,SAAA,IAIA8xB,EACA,UAAAplC,GAAA,UAAAA,IACA,qBAAAolC,EAAA0mB,MAAA9rD,KACAolC,EAAA0mB,MAAA9rD,GAAAolC,EAAAplC,IAGA,qBAAAolC,EAAA2mB,MAAA/rD,KACAolC,EAAA2mB,MAAA/rD,GAAAolC,EAAAplC,MAKAssD,aAAA,WACAn3B,GAAArJ,SAAA5wB,KAAAyU,QAAA28C,aAAA,CAAApxD,QAEAgX,OAAA,SAAAq6C,EAAAC,EAAAC,GACA,IACA5/C,EAAA2f,EAAAmX,EAAA5yB,EAAAq0B,EAAAulB,EADAn9B,EAAAtyB,KA8CA,IA3CAsyB,EAAA8+B,eAEA9+B,EAAA++B,WACA/+B,EAAAg/B,YACAh/B,EAAAi/B,QAAAt3B,GAAA/H,OAAA,CACA4D,KAAA,EACAE,MAAA,EACAD,IAAA,EACAE,OAAA,GACOs7B,GACPj/B,EAAAk/B,eAAA,EACAl/B,EAAAm/B,kBAAA,EACAn/B,EAAAo/B,iBAAAp/B,EAAAo/B,kBAAA,GAEAp/B,EAAAq/B,sBACAr/B,EAAAs/B,gBACAt/B,EAAAu/B,qBAEAv/B,EAAAw/B,mBACAx/B,EAAAy/B,sBACAz/B,EAAA0/B,kBAOA1/B,EAAA2/B,mBAGA/nB,EAAA5X,EAAA4/B,cAAA,GAEAhoB,EAAA5X,EAAA6/B,gBAAAjoB,MACA5X,EAAA8/B,8BAIA3pB,EAAAnW,EAAA+/B,qBAAAnoB,IAAA5X,EAAA4X,MACA5X,EAAAggC,6BACAhgC,EAAA4X,MAAAzB,EAIA92B,EAAA,EAAA2f,EAAAmX,EAAA/mC,OAAuCiQ,EAAA2f,IAAU3f,EACjDkE,EAAA4yB,EAAA92B,IACA89C,EAAAvlB,EAAAv4B,IAQA89C,EAAA55C,QALAq0B,EAAArlC,KAAA4qD,EAAA,CACA55C,QACAg7C,OAAA,IAkBA,OAXAv+B,EAAA6+B,OAAAjnB,EAEA5X,EAAAigC,8BACAjgC,EAAAkgC,wBACAlgC,EAAAmgC,6BAEAngC,EAAAogC,YACApgC,EAAAqgC,MACArgC,EAAAsgC,WAEAtgC,EAAAugC,cACAvgC,EAAAqb,SAEAklB,YAAA,WACA54B,GAAArJ,SAAA5wB,KAAAyU,QAAAo+C,YAAA,CAAA7yD,QAGA2xD,oBAAA,WACA13B,GAAArJ,SAAA5wB,KAAAyU,QAAAk9C,oBAAA,CAAA3xD,QAEA4xD,cAAA,WACA,IAAAt/B,EAAAtyB,KAEAsyB,EAAAuW,gBAEAvW,EAAAzd,MAAAyd,EAAA++B,SACA/+B,EAAAwD,KAAA,EACAxD,EAAA0D,MAAA1D,EAAAzd,QAEAyd,EAAA1d,OAAA0d,EAAAg/B,UAEAh/B,EAAAyD,IAAA,EACAzD,EAAA2D,OAAA3D,EAAA1d,QAIA0d,EAAAy+B,YAAA,EACAz+B,EAAA0+B,WAAA,EACA1+B,EAAA2+B,aAAA,EACA3+B,EAAA4+B,cAAA,GAEAW,mBAAA,WACA53B,GAAArJ,SAAA5wB,KAAAyU,QAAAo9C,mBAAA,CAAA7xD,QAGA8xD,iBAAA,WACA73B,GAAArJ,SAAA5wB,KAAAyU,QAAAq9C,iBAAA,CAAA9xD,QAEA+xD,oBAAA93B,GAAA/J,KACA8hC,gBAAA,WACA/3B,GAAArJ,SAAA5wB,KAAAyU,QAAAu9C,gBAAA,CAAAhyD,QAGAiyD,iBAAA,WACAh4B,GAAArJ,SAAA5wB,KAAAyU,QAAAw9C,iBAAA,CAAAjyD,QAEAkyD,WAAAj4B,GAAA/J,KACAiiC,gBAAA,SAAAjoB,GACA,IAAA5X,EAAAtyB,KAEA,OAAAi6B,GAAAx0B,QAAAykC,MAAAxoC,OACAu4B,GAAArJ,SAAA0B,EAAA7d,QAAA09C,gBAAA,CAAA7/B,EAAA4X,KAIA5X,EAAA4X,MAAAjQ,GAAArJ,SAAA0B,EAAA7d,QAAA09C,gBAAA,CAAA7/B,IAAA4X,SAAA5X,EAAA4X,MACAA,IAEAkoB,4BAAA,WACAn4B,GAAArJ,SAAA5wB,KAAAyU,QAAA29C,4BAAA,CAAApyD,QAEAqyD,qBAAA,WACA,IAEAS,EAFA9yD,KAEAyU,QAAAy1B,MAFAlqC,KAGAkqC,MAHAlqC,KAGAkqC,MAAAn/B,IAAA+nD,EAAAC,cAAAD,EAAAliC,SAAA5wB,OAEAsyD,2BAAA,WACAr4B,GAAArJ,SAAA5wB,KAAAyU,QAAA69C,2BAAA,CAAAtyD,QAGAuyD,4BAAA,WACAt4B,GAAArJ,SAAA5wB,KAAAyU,QAAA89C,4BAAA,CAAAvyD,QAEAwyD,sBAAA,WACA,IAAAlgC,EAAAtyB,KACAg6B,EAAA1H,EAAAoD,IACAo9B,EAAAxgC,EAAA7d,QAAAy1B,MACAzB,EAAA8mB,GAAAj9B,EAAA6+B,QAGA6B,EAAA/4B,GAAAxlB,QAAA4kB,WAAAy5B,GAEA94B,EAAAR,KAAAw5B,EAAAhoD,OACA,IAAAioD,EAAAH,EAAAxC,aAAA,EAEA,GAAA7nB,EAAA/mC,QAAA4wB,EAAA7d,QAAA2D,SAAAka,EAAAuW,eAOA,IANA,IAEAqqB,EAFAC,EAAAl5B,GAAAy1B,YAAA11B,EAAAg5B,EAAAhoD,OAAAy9B,EAAAnW,EAAAo/B,kBACA0B,EAAAD,EAGAE,EAAA/gC,EAAA8X,gBAAA,GAAA9X,EAAA8X,gBAAA,KAEAgpB,EAAAC,GAAAJ,EAAAH,EAAAvC,aAAA,CACA,IAAA+C,EAAAr5B,GAAAs5B,UAAAN,GAIA,GAHAC,EAAAn1C,KAAAqC,IAAAkzC,GACAv1C,KAAAsC,IAAAizC,GAEAH,EAAA7gC,EAAAg/B,UAAA,CAEA2B,IACA,MAGAA,IACAG,EAAAF,EAAAC,EAIA7gC,EAAA2gC,iBAEAR,2BAAA,WACAx4B,GAAArJ,SAAA5wB,KAAAyU,QAAAg+C,2BAAA,CAAAzyD,QAGA0yD,UAAA,WACAz4B,GAAArJ,SAAA5wB,KAAAyU,QAAAi+C,UAAA,CAAA1yD,QAEA2yD,IAAA,WACA,IAAArgC,EAAAtyB,KAEA2tC,EAAArb,EAAAqb,QAAA,CACA94B,MAAA,EACAD,OAAA,GAEA6zB,EAAA8mB,GAAAj9B,EAAA6+B,QACA3jB,EAAAlb,EAAA7d,QACAq+C,EAAAtlB,EAAAtD,MACAspB,EAAAhmB,EAAA4iB,WACAqD,EAAAjmB,EAAAzF,UAEA3vB,EAAAka,EAAAohC,aAEAr7C,EAAAm1B,EAAAn1B,SACAwwB,EAAAvW,EAAAuW,eACA8qB,EAAA15B,GAAAxlB,QAAA4kB,WACA25B,EAAAW,EAAAb,GACA/C,EAAAviB,EAAAzF,UAAAgoB,eAiBA,GAbApiB,EAAA94B,MAFAg0B,EAEAvW,EAAAshC,cAAAthC,EAAA++B,SAAA/+B,EAAAi/B,QAAAz7B,KAAAxD,EAAAi/B,QAAAv7B,MAAA1D,EAAA++B,SAEAj5C,GAAAq7C,EAAA3D,UAAAC,EAAA,EAKApiB,EAAA/4B,OADAi0B,EACAzwB,GAAAq7C,EAAA3D,UAAAC,EAAA,EAEAz9B,EAAAg/B,UAIAkC,EAAAp7C,WAAA,CACA,IAAAy7C,EAAAF,EAAAH,GACAM,EAAA75B,GAAAxlB,QAAA2kB,UAAAo6B,EAAAhuB,SACAuuB,EAAAF,EAAAl6B,WAAAm6B,EAAAl/C,OAEAi0B,EACA8E,EAAA/4B,QAAAm/C,EAEApmB,EAAA94B,OAAAk/C,EAKA,GAAAjB,EAAA16C,WAAA,CACA,IAAA47C,EAAA/5B,GAAAy1B,YAAAp9B,EAAAoD,IAAAs9B,EAAAhoD,OAAAy9B,EAAAnW,EAAAo/B,kBACAuC,EAAAh6B,GAAAi6B,mBAAAzrB,GACA0rB,EAAA,GAAAnB,EAAA9yD,KACAk0D,EAAA9hC,EAAA7d,QAAAy1B,MAAA1E,QAKA,GAHAlT,EAAAk/B,eAAAyC,EACA3hC,EAAAm/B,kBAAAuC,EAEAnrB,EAAA,CACA,IAAAyqB,EAAAr5B,GAAAs5B,UAAAjhC,EAAA2gC,eACAC,EAAAn1C,KAAAqC,IAAAkzC,GACAe,EAAAt2C,KAAAsC,IAAAizC,GAEAgB,EAAAD,EAAAL,EAAAhB,EAAAr5B,WAAAs6B,EAAAE,EAEAxmB,EAAA/4B,OAAAmJ,KAAAD,IAAAwU,EAAAg/B,UAAA3jB,EAAA/4B,OAAA0/C,EAAAF,GACA9hC,EAAAoD,IAAA8D,KAAAw5B,EAAAhoD,OACA,IAIA+lD,EAAAE,EAJAsD,EAAA/E,GAAAl9B,EAAAoD,IAAA+S,EAAA,GAAAuqB,EAAAhoD,QACAwpD,EAAAhF,GAAAl9B,EAAAoD,IAAA+S,IAAA/mC,OAAA,GAAAsxD,EAAAhoD,QACAypD,EAAAniC,EAAA8X,gBAAA,GAAA9X,EAAAwD,KACA4+B,EAAApiC,EAAA0D,MAAA1D,EAAA8X,gBAAA3B,EAAA/mC,OAAA,GAIA,IAAA4wB,EAAA2gC,eACAlC,EAAA,WAAA14C,EAAA66C,EAAAqB,EAAArB,EAAAiB,EACAlD,EAAA,WAAA54C,EAAA66C,EAAAiB,EAAAjB,EAAAsB,IAEAzD,EAAAwD,EAAA,EACAtD,EAAAuD,EAAA,GAGAliC,EAAAy+B,YAAAhzC,KAAAC,IAAA+yC,EAAA0D,EAAA,KAEAniC,EAAA2+B,aAAAlzC,KAAAC,IAAAizC,EAAAyD,EAAA,UAIA5B,EAAAtC,OACAwD,EAAA,EAIAA,GAAAI,EAAAD,EAGAxmB,EAAA94B,MAAAkJ,KAAAD,IAAAwU,EAAA++B,SAAA1jB,EAAA94B,MAAAm/C,GACA1hC,EAAA0+B,WAAAgC,EAAA9yD,KAAA,EACAoyB,EAAA4+B,cAAA8B,EAAA9yD,KAAA,EAIAoyB,EAAAqiC,gBACAriC,EAAAzd,MAAA84B,EAAA94B,MACAyd,EAAA1d,OAAA+4B,EAAA/4B,QAOA+/C,cAAA,WACA,IAAAriC,EAAAtyB,KAEAsyB,EAAAi/B,UACAj/B,EAAAy+B,YAAAhzC,KAAAC,IAAAsU,EAAAy+B,YAAAz+B,EAAAi/B,QAAAz7B,KAAA,GACAxD,EAAA0+B,WAAAjzC,KAAAC,IAAAsU,EAAA0+B,WAAA1+B,EAAAi/B,QAAAx7B,IAAA,GACAzD,EAAA2+B,aAAAlzC,KAAAC,IAAAsU,EAAA2+B,aAAA3+B,EAAAi/B,QAAAv7B,MAAA,GACA1D,EAAA4+B,cAAAnzC,KAAAC,IAAAsU,EAAA4+B,cAAA5+B,EAAAi/B,QAAAt7B,OAAA,KAGA28B,SAAA,WACA34B,GAAArJ,SAAA5wB,KAAAyU,QAAAm+C,SAAA,CAAA5yD,QAGA6oC,aAAA,WACA,cAAA7oC,KAAAyU,QAAA4D,UAAA,WAAArY,KAAAyU,QAAA4D,UAEAu7C,YAAA,WACA,OAAA5zD,KAAAyU,QAAA+gC,WAGAhL,cAAA,SAAAoqB,GAEA,GAAA36B,GAAA9J,cAAAykC,GACA,OAAA1oB,IAIA,sBAAA0oB,gBAAApkC,UAAAH,SAAAukC,GACA,OAAA1oB,IAIA,GAAA0oB,EACA,GAAA50D,KAAA6oC,gBACA,QAAArkC,IAAAowD,EAAAp2C,EACA,OAAAxe,KAAAwqC,cAAAoqB,EAAAp2C,QAES,QAAAha,IAAAowD,EAAAn2C,EACT,OAAAze,KAAAwqC,cAAAoqB,EAAAn2C,GAKA,OAAAm2C,GAQAnS,iBAAAxoB,GAAA/J,KASA4Z,iBAAA7P,GAAA/J,KAOA2kC,iBAAA56B,GAAA/J,KAMAka,gBAAA,SAAA3oC,GACA,IAAA6wB,EAAAtyB,KACA2B,EAAA2wB,EAAA7d,QAAA9S,OAEA,GAAA2wB,EAAAuW,eAAA,CACA,IAAAisB,EAAAxiC,EAAAzd,OAAAyd,EAAAy+B,YAAAz+B,EAAA2+B,cACAoC,EAAAyB,EAAA/2C,KAAAC,IAAAsU,EAAA6+B,OAAAzvD,QAAAC,EAAA,QACAozD,EAAA1B,EAAA5xD,EAAA6wB,EAAAy+B,YAEApvD,IACAozD,GAAA1B,EAAA,GAGA,IAAA2B,EAAA1iC,EAAAwD,KAAAi/B,EAEA,OADAC,GAAA1iC,EAAAshC,cAAAthC,EAAAi/B,QAAAz7B,KAAA,EAIA,IAAAm/B,EAAA3iC,EAAA1d,QAAA0d,EAAA0+B,WAAA1+B,EAAA4+B,eACA,OAAA5+B,EAAAyD,IAAAt0B,GAAAwzD,GAAA3iC,EAAA6+B,OAAAzvD,OAAA,KAOAuqC,mBAAA,SAAAipB,GACA,IAAA5iC,EAAAtyB,KAEA,GAAAsyB,EAAAuW,eAAA,CACA,IAAAisB,EAAAxiC,EAAAzd,OAAAyd,EAAAy+B,YAAAz+B,EAAA2+B,cACAkE,EAAAL,EAAAI,EAAA5iC,EAAAy+B,YACAiE,EAAA1iC,EAAAwD,KAAAq/B,EAEA,OADAH,GAAA1iC,EAAAshC,cAAAthC,EAAAi/B,QAAAz7B,KAAA,EAIA,OAAAxD,EAAAyD,IAAAm/B,EAAA5iC,EAAA1d,QAOAg0B,aAAA,WACA,OAAA5oC,KAAA8pC,iBAAA9pC,KAAAo1D,iBAEAA,aAAA,WACA,IACAt3C,EADA9d,KACA8d,IACAE,EAFAhe,KAEAge,IACA,OAHAhe,KAGAsxC,YAAA,EAAAxzB,EAAA,GAAAE,EAAA,EAAAA,EAAAF,EAAA,GAAAE,EAAA,EAAAF,EAAA,GAOAu3C,UAAA,SAAAnrB,GACA,IAYAv4B,EAAA89C,EAZAn9B,EAAAtyB,KACA6oC,EAAAvW,EAAAuW,eACAysB,EAAAhjC,EAAA7d,QAAAy1B,MAAA0mB,MACA2E,EAAArrB,EAAAxoC,OACA8zD,GAAA,EACAC,EAAAH,EAAAI,cAGAC,EAAArjC,EAAAsjC,aAAAL,EAAA,GAEAM,EAAAhtB,EAAAvW,EAAAzd,OAAAyd,EAAAy+B,YAAAz+B,EAAA2+B,cAAA3+B,EAAA1d,QAAA0d,EAAA0+B,WAAA1+B,EAAAwjC,eACAxxD,EAAA,GAaA,IAVAqxD,EAAAE,IACAL,EAAA,EAAAz3C,KAAAkB,MAAA02C,EAAAE,IAKAN,EAAAE,IACAD,EAAAz3C,KAAAC,IAAAw3C,EAAA,EAAAz3C,KAAAkB,MAAAs2C,EAAAE,KAGA9jD,EAAA,EAAiBA,EAAA4jD,EAAe5jD,IAChC89C,EAAAvlB,EAAAv4B,GAEA6jD,EAAA,GAAA7jD,EAAA6jD,EAAA,UAEA/F,EAAA55C,MAGAvR,EAAAO,KAAA4qD,GAGA,OAAAnrD,GAMAsxD,UAAA,WACA,IAAAtjC,EAAAtyB,KACA6oC,EAAAvW,EAAAuW,eACAysB,EAAAhjC,EAAA7d,QAAAy1B,MAAA0mB,MAEAmF,EAAA97B,GAAAs5B,UAAAjhC,EAAA2gC,eACA7yC,EAAArC,KAAAknB,IAAAlnB,KAAAqC,IAAA21C,IACA11C,EAAAtC,KAAAknB,IAAAlnB,KAAAsC,IAAA01C,IACAvwB,EAAA8vB,EAAA5E,iBAAA,EACAxyC,EAAAoU,EAAAm/B,kBAAAjsB,GAAA,EAEAwtB,EAAA/4B,GAAAxlB,QAAA4kB,WAAAi8B,GAEAn6C,EAAAmX,EAAAk/B,eAAAwB,EAAAr5B,WAAA6L,GAAA,EAEA,OAAAqD,EAAA1tB,EAAAiF,EAAAlC,EAAAmC,EAAAnC,EAAAkC,EAAAjF,EAAAkF,EAAAlF,EAAAkF,EAAAnC,EAAAkC,EAAAjF,EAAAiF,EAAAlC,EAAAmC,GAMAqzC,WAAA,WACA,IAGA/hD,EAAA2f,EAAA2M,EAFAxI,EADAz1B,KACAy1B,MACArd,EAFApY,KAEAyU,QAAA2D,QAGA,YAAAA,EACA,QAAAA,EAIA,IAAAzG,EAAA,EAAA2f,EAAAmE,EAAA11B,KAAAoV,SAAAzT,OAAoDiQ,EAAA2f,IAAU3f,EAC9D,GAAA8jB,EAAA+T,iBAAA73B,MACAssB,EAAAxI,EAAAgJ,eAAA9sB,IAEAysB,UAdAp+B,KAcAuX,IAAA0mB,EAAAM,UAdAv+B,KAcAuX,IACA,SAKA,UAOA2oB,KAAA,SAAAuF,GACA,IAAAnT,EAAAtyB,KACAyU,EAAA6d,EAAA7d,QAEA,GAAA6d,EAAAohC,aAAA,CAIA,IA6BAsC,EAAAC,EAAAC,EA7BAzgC,EAAAnD,EAAAmD,MACAuE,EAAA1H,EAAAoD,IACA4D,EAAAN,GAAAz1B,OACAm1B,EAAAY,EAAAZ,iBACA48B,EAAA7gD,EAAAy1B,MAAA0mB,MACAuF,EAAA1hD,EAAAy1B,MAAA2mB,OAAAyE,EACAvtB,EAAAtzB,EAAAszB,UACAqoB,EAAA37C,EAAA27C,WACA/3C,EAAA5D,EAAA4D,SACA+9C,EAAA,IAAA9jC,EAAA2gC,cACAoD,EAAAf,EAAA9E,OACA3nB,EAAAvW,EAAAuW,eACA8qB,EAAA15B,GAAAxlB,QAAA4kB,WACA6Q,EAAAorB,EAAAl9C,SAAAk9C,EAAA7E,SAAAn+B,EAAA+iC,UAAA/iC,EAAA6X,YAAA7X,EAAA6X,WACAmsB,EAAAhH,GAAAgG,EAAAiB,UAAA79B,GACAs6B,EAAAW,EAAA2B,GACA37B,EAAAq5B,EAAAr5B,WACA68B,EAAAlH,GAAA6G,EAAAI,UAAA79B,GACA+9B,EAAA9C,EAAAwC,GACA/B,EAAAkB,EAAA9vB,QACAmrB,EAAA2E,EAAA3E,YACA+F,EAAA3uB,EAAA+nB,UAAA/nB,EAAAgoB,eAAA,EACA4G,EAAArH,GAAAc,EAAAmG,UAAA79B,GACAm7B,EAAAF,EAAAvD,GACA0D,EAAA75B,GAAAxlB,QAAA2kB,UAAAg3B,EAAA5qB,SACAoxB,EAAA38B,GAAAs5B,UAAAjhC,EAAA2gC,eACA4D,EAAA,GACAC,EAAA/uB,EAAA6nB,WAAAj/B,GAAAoX,EAAAxE,UAAA,OACAwzB,EAAA98B,GAAA+8B,YAoLA,GAjLA,QAAA3+C,GACA29C,EAAAe,EAAAthC,EAAAnD,EAAA2D,OAAA6gC,GACAb,EAAA3jC,EAAA2D,OAAAygC,EACAR,EAAAF,EAAAc,EAAA,GACO,WAAAz+C,GACP29C,EAAAe,EAAAthC,EAAAnD,EAAAyD,IAAA+gC,GACAb,EAAAD,EAAAc,EAAA,EACAZ,EAAA5jC,EAAAyD,IAAA2gC,GACO,SAAAr+C,GACP29C,EAAAe,EAAAthC,EAAAnD,EAAA0D,MAAA8gC,GACAb,EAAA3jC,EAAA0D,MAAA0gC,EACAR,EAAAF,EAAAc,EAAA,IAEAd,EAAAe,EAAAthC,EAAAnD,EAAAwD,KAAAghC,GACAb,EAAAD,EAAAc,EAAA,EACAZ,EAAA5jC,EAAAwD,KAAA4gC,GAKAz8B,GAAAlJ,KAAAmZ,EAAA,SAAAulB,EAAAhuD,GAEA,IAAAw4B,GAAA9J,cAAAs/B,EAAA55C,OAAA,CAIA,IACA0tB,EAAA0zB,EAAApzB,EAAAC,EAgBAozB,EAAAC,EAAAC,EAAAC,EAAAxxB,EAAAE,EAAAD,EAAAhmB,EAAAw3C,EAAAC,EAAAC,EAAA3P,EAjBAhyC,EAAA45C,EAAA55C,MAGApU,IAAA6wB,EAAAmlC,eAAAhjD,EAAA9S,SAAAomC,EAAAC,iBAEAzE,EAAAwE,EAAAioB,cACAiH,EAAAlvB,EAAAkoB,cACApsB,EAAAkE,EAAAmoB,oBAAA,GACApsB,EAAAiE,EAAAooB,0BAAA,IAEA5sB,EAAA5S,GAAAoX,EAAAxE,UAAA9hC,GACAw1D,EAAAtmC,GAAAoX,EAAA4nB,MAAAluD,GACAoiC,EAAAkE,EAAAlE,YAAA,GACAC,EAAAiE,EAAAjE,kBAAA,GAKA,IAAAkd,EAAA/mB,GAAAx0B,QAAAoQ,KAAAnU,OAAA,EACAg2D,EA5qBA,SAAAxrC,EAAAzqB,EAAAumC,GACA,IAAA0vB,EAAAxrC,EAAAke,gBAAA3oC,GAYA,OAVAumC,IACA,IAAA9b,EAAAie,WAAAzoC,OACAg2D,GAAAxrC,EAAA2c,eAAA9qB,KAAAC,IAAA05C,EAAAxrC,EAAA4J,KAAA5J,EAAA8J,MAAA0hC,GAAA35C,KAAAC,IAAA05C,EAAAxrC,EAAA6J,IAAA7J,EAAA+J,OAAAyhC,GAEAA,GADO,IAAAj2D,GACPyqB,EAAAke,gBAAA,GAAAstB,GAAA,GAEAA,EAAAxrC,EAAAke,gBAAA3oC,EAAA,OAIAi2D,EA+pBAC,CAAArlC,EAAA7wB,EAAAsmC,EAAAC,iBAEA,GAAAa,EAAA,CACA,IAAA+uB,EAAAlB,EAAAtC,EAEAsD,EAAAplC,EAAAwD,KAhCA,OAiCAmhC,EAAA,iBAGAC,EAAAE,EAAAvxB,EAAAC,EAAAixB,EAAAthC,EAAAiiC,EAAAn0B,GACA4zB,EAAAlB,EACAoB,EAAAnB,EACAoB,EAAAhlC,EAAA8X,gBAAA3oC,GAAAkvD,EAEA,QAAAt4C,GACA0tB,EAAAgxB,EAAAthC,EAAAgQ,EAAA1P,IAAA+gC,KAAA,EACAh3C,EAAA2lB,EAAAxP,OACAuhC,IAAApB,EAAA,MAAApV,GAAArnB,EACAkuB,EAAAuO,EAAA,gBACAmB,EAAAjlC,EAAA2D,OAAA2hC,IAEA7xB,EAAAN,EAAA1P,IACAjW,EAAAi3C,EAAAthC,EAAAgQ,EAAAxP,OAAA6gC,KAAA,EACAU,GAAApB,EAAA,MAAAz8B,EACAkuB,EAAAuO,EAAA,iBACAmB,EAAAjlC,EAAAyD,IAAA6hC,OAES,CACT,IAAAC,GAAAxB,EAAA,EAAAK,GAAAtC,EAEAsD,EAAAplC,EAAAyD,IAzDA,OA0DAkhC,EAAA,iBAGAC,EAAAjB,EACAmB,EAAAlB,EACAiB,EAAAE,EAAAtxB,EAAAjmB,EAAAi3C,EAAAthC,EAAAiiC,EAAAn0B,GACAg0B,EAAAjlC,EAAA8X,gBAAA3oC,GAAAkvD,EACA6G,GAAA,EAAAxW,GAAArnB,EAAA,EAEA,SAAAthB,GACAwtB,EAAAkxB,EAAAthC,EAAAgQ,EAAA3P,KAAAghC,KAAA,EACAhxB,EAAAL,EAAAzP,MACA6xB,EAAAwO,EAAA,eACAiB,EAAAhlC,EAAA0D,MAAA6hC,IAEAhyB,EAAAJ,EAAA3P,KACAgQ,EAAAixB,EAAAthC,EAAAgQ,EAAAzP,MAAA8gC,KAAA,EACAjP,EAAAwO,EAAA,eACAiB,EAAAhlC,EAAAwD,KAAA+hC,GAIAhB,EAAAhyD,KAAA,CACAqyD,MACAC,MACAC,MACAC,MACAxxB,KACAE,KACAD,KACAhmB,KACAw3C,SACAC,SACAO,QAAAv0B,EACAw0B,QAAAd,EACAe,aAAAn0B,EACAo0B,mBAAAn0B,EACAtN,UAAA,EAAAogC,EACA/gD,QACAg7C,MAAApB,EAAAoB,MACA2G,aACA3P,iBAIA5tB,GAAAlJ,KAAA8lC,EAAA,SAAAqB,GACA,IAAAJ,EAAAI,EAAAJ,QACAC,EAAAG,EAAAH,QA4BA,GA1BAhwB,EAAA3vB,SAAA0/C,GAAAC,IACA/9B,EAAA1C,OACA0C,EAAAuJ,UAAAu0B,EACA99B,EAAAyJ,YAAAs0B,EAEA/9B,EAAA0K,cACA1K,EAAA0K,YAAAwzB,EAAAF,cACAh+B,EAAA2K,eAAAuzB,EAAAD,oBAGAj+B,EAAAnD,YAEAkR,EAAA+nB,YACA91B,EAAA9D,OAAAgiC,EAAAhB,IAAAgB,EAAAf,KACAn9B,EAAAlD,OAAAohC,EAAAd,IAAAc,EAAAb,MAGAtvB,EAAA8nB,kBACA71B,EAAA9D,OAAAgiC,EAAAryB,GAAAqyB,EAAAnyB,IACA/L,EAAAlD,OAAAohC,EAAApyB,GAAAoyB,EAAAp4C,KAGAka,EAAA/C,SACA+C,EAAAvC,WAGA69B,EAAAl9C,QAAA,CAEA4hB,EAAA1C,OACA0C,EAAAm+B,UAAAD,EAAAZ,OAAAY,EAAAX,QACAv9B,EAAAjL,OAAAmpC,EAAA1hC,UACAwD,EAAAR,KAAA0+B,EAAArH,MAAA4F,EAAAzrD,OAAAgoD,EAAAhoD,OACAgvB,EAAAsJ,UAAA40B,EAAArH,MAAA2F,EAAAF,EACAt8B,EAAA8tB,aAAA,SACA9tB,EAAA6tB,UAAAqQ,EAAArQ,UACA,IAAAhyC,EAAAqiD,EAAAriD,MACA4I,EAAAy5C,EAAAV,WAEA,GAAAv9B,GAAAx0B,QAAAoQ,GACA,QAAAlE,EAAA,EAA2BA,EAAAkE,EAAAnU,SAAkBiQ,EAE7CqoB,EAAA+tB,SAAA,GAAAlyC,EAAAlE,GAAA,EAAA8M,GACAA,GAAAkb,OAGAK,EAAA+tB,SAAAlyC,EAAA,EAAA4I,GAGAub,EAAAvC,aAIA24B,EAAAh4C,QAAA,CAEA,IAAAggD,EACAC,EACA7hC,EAAA,EACA8hC,EAAAzE,EAAAl6B,WAAA,EAEA,GAAAkP,EACAuvB,EAAA9lC,EAAAwD,MAAAxD,EAAA0D,MAAA1D,EAAAwD,MAAA,EAEAuiC,EAAA,WAAAhgD,EAAAia,EAAA2D,OAAAqiC,EAAAxE,EAAA79B,OAAA3D,EAAAyD,IAAAuiC,EAAAxE,EAAA/9B,QACS,CACT,IAAAwiC,EAAA,SAAAlgD,EACA+/C,EAAAG,EAAAjmC,EAAAwD,KAAAwiC,EAAAxE,EAAA/9B,IAAAzD,EAAA0D,MAAAsiC,EAAAxE,EAAA/9B,IACAsiC,EAAA/lC,EAAAyD,KAAAzD,EAAA2D,OAAA3D,EAAAyD,KAAA,EACAS,EAAA+hC,GAAA,GAAAx6C,KAAAkC,GAAA,GAAAlC,KAAAkC,GAGA+Z,EAAA1C,OACA0C,EAAAm+B,UAAAC,EAAAC,GACAr+B,EAAAjL,OAAAyH,GACAwD,EAAA6tB,UAAA,SACA7tB,EAAA8tB,aAAA,SACA9tB,EAAAsJ,UAAAqzB,EAEA38B,EAAAR,KAAAq6B,EAAA7oD,OACAgvB,EAAA+tB,SAAAqI,EAAAC,YAAA,KACAr2B,EAAAvC,UAGA,GAAAq/B,EAAA,CAEA,IAEAjxB,EAAAC,EAAAC,EAAAjmB,EAFA04C,EAAA1B,EACA2B,EAAA9nC,GAAAoX,EAAAxE,UAAA2G,EAAAxoC,OAAA,KAGAmnC,GACAhD,EAAAkxB,EAAAthC,EAAAnD,EAAAwD,KAAA0iC,KAAA,EACA1yB,EAAAixB,EAAAthC,EAAAnD,EAAA0D,MAAAyiC,KAAA,EACA1yB,EAAAjmB,EAAAk2C,IAEAjwB,EAAAgxB,EAAAthC,EAAAnD,EAAAyD,IAAAyiC,KAAA,EACA14C,EAAAi3C,EAAAthC,EAAAnD,EAAA2D,OAAAwiC,KAAA,EACA5yB,EAAAC,EAAAkwB,GAGAh8B,EAAAuJ,UAAAuzB,EACA98B,EAAAyJ,YAAA9S,GAAAoX,EAAA4nB,MAAA,GACA31B,EAAAnD,YACAmD,EAAA9D,OAAA2P,EAAAE,GACA/L,EAAAlD,OAAAgP,EAAAhmB,GACAka,EAAA/C,cAOAyhC,GAAA5H,GAAA5+B,OAAA,CAMAymC,UAAA,WACA,IAAA54D,EAAAC,KAAAy1B,MAAA11B,KACA,OAAAC,KAAAyU,QAAAg0B,SAAAzoC,KAAA6oC,eAAA9oC,EAAA64D,QAAA74D,EAAA84D,UAAA94D,EAAA0oC,QAEAspB,oBAAA,WACA,IAIAh1B,EAJAzK,EAAAtyB,KACAyoC,EAAAnW,EAAAqmC,YACArmC,EAAAwmC,SAAA,EACAxmC,EAAAymC,SAAAtwB,EAAA/mC,OAAA,OAGA8C,IAAA8tB,EAAA7d,QAAAy1B,MAAApsB,MAEAif,EAAA0L,EAAA32B,QAAAwgB,EAAA7d,QAAAy1B,MAAApsB,KACAwU,EAAAwmC,UAAA,IAAA/7B,IAAAzK,EAAAwmC,eAGAt0D,IAAA8tB,EAAA7d,QAAAy1B,MAAAlsB,MAEA+e,EAAA0L,EAAA32B,QAAAwgB,EAAA7d,QAAAy1B,MAAAlsB,KACAsU,EAAAymC,UAAA,IAAAh8B,IAAAzK,EAAAymC,UAGAzmC,EAAAxU,IAAA2qB,EAAAnW,EAAAwmC,UACAxmC,EAAAtU,IAAAyqB,EAAAnW,EAAAymC,WAEA7G,WAAA,WACA,IAAA5/B,EAAAtyB,KACAyoC,EAAAnW,EAAAqmC,YAEArmC,EAAA4X,MAAA,IAAA5X,EAAAwmC,UAAAxmC,EAAAymC,WAAAtwB,EAAA/mC,OAAA,EAAA+mC,IAAA5e,MAAAyI,EAAAwmC,SAAAxmC,EAAAymC,SAAA,IAEAtW,iBAAA,SAAAhhD,EAAAk8B,GACA,IAAArL,EAAAtyB,KACAy1B,EAAAnD,EAAAmD,MAEA,OAAAA,EAAAgJ,eAAAd,GAAA+M,WAAA9L,qBAAAtM,EAAA/a,GACA+a,EAAAkY,cAAA/U,EAAA11B,KAAAoV,SAAAwoB,GAAA59B,KAAA0B,IAGA6wB,EAAA4X,MAAAzoC,EAAA6wB,EAAAwmC,WAGAhvB,iBAAA,SAAAppC,EAAAe,GACA,IAMAu3D,EANA1mC,EAAAtyB,KACA2B,EAAA2wB,EAAA7d,QAAA9S,OAEAs3D,EAAAl7C,KAAAC,IAAAsU,EAAAymC,SAAA,EAAAzmC,EAAAwmC,UAAAn3D,EAAA,QASA,QAJA6C,IAAA9D,GAAA,OAAAA,IACAs4D,EAAA1mC,EAAAuW,eAAAnoC,EAAA8d,EAAA9d,EAAA+d,QAGAja,IAAAw0D,QAAAx0D,IAAA9D,GAAAyrB,MAAA1qB,GAAA,CACA,IAAAgnC,EAAAnW,EAAAqmC,YACAj4D,EAAAs4D,GAAAt4D,EACA,IAAA49C,EAAA7V,EAAA32B,QAAApR,GACAe,GAAA,IAAA68C,IAAA78C,EAGA,GAAA6wB,EAAAuW,eAAA,CACA,IAAAqwB,EAAA5mC,EAAAzd,MAAAokD,EACAE,EAAAD,GAAAz3D,EAAA6wB,EAAAwmC,UAMA,OAJAn3D,IACAw3D,GAAAD,EAAA,GAGA5mC,EAAAwD,KAAAqjC,EAGA,IAAAC,EAAA9mC,EAAA1d,OAAAqkD,EACAI,EAAAD,GAAA33D,EAAA6wB,EAAAwmC,UAMA,OAJAn3D,IACA03D,GAAAD,EAAA,GAGA9mC,EAAAyD,IAAAsjC,GAEAjvB,gBAAA,SAAA3oC,GACA,OAAAzB,KAAA8pC,iBAAA9pC,KAAAkqC,MAAAzoC,KAAAzB,KAAA84D,SAAA,OAEAjE,iBAAA,SAAAE,GACA,IAAAziC,EAAAtyB,KACA2B,EAAA2wB,EAAA7d,QAAA9S,OAEAs3D,EAAAl7C,KAAAC,IAAAsU,EAAA6+B,OAAAzvD,QAAAC,EAAA,QACA23D,EAAAhnC,EAAAuW,eACA0wB,GAAAD,EAAAhnC,EAAAzd,MAAAyd,EAAA1d,QAAAqkD,EAaA,OAZAlE,GAAAuE,EAAAhnC,EAAAwD,KAAAxD,EAAAyD,IAEAp0B,IACAozD,GAAAwE,EAAA,IAGAxE,GAAA,EACA,EAEAh3C,KAAAkM,MAAA8qC,EAAAwE,IAGAjnC,EAAAwmC,UAEAlwB,aAAA,WACA,OAAA5oC,KAAAi2B,UAIAujC,GAzHA,CACAnhD,SAAA,UAyHAqgD,GAAAc,aACA,IAAAtpC,GAAA+J,GAAA/J,KACAC,GAAA8J,GAAA9J,cAgFAspC,GAAA3I,GAAA5+B,OAAA,CACAsY,cAAA,SAAA9pC,GACA,wBAAAA,GACAA,EAGAowD,GAAA3wD,UAAAqqC,cAAAnoC,KAAArC,KAAAU,IAEAg5D,uBAAA,WACA,IAAApnC,EAAAtyB,KACAwtC,EAAAlb,EAAA7d,QACAq+C,EAAAtlB,EAAAtD,MAIA,GAAA4oB,EAAAxhB,YAAA,CACA,IAAAqoB,EAAA1/B,GAAA2/B,KAAAtnC,EAAAxU,KACA+7C,EAAA5/B,GAAA2/B,KAAAtnC,EAAAtU,KAEA27C,EAAA,GAAAE,EAAA,EAEAvnC,EAAAtU,IAAA,EACS27C,EAAA,GAAAE,EAAA,IAETvnC,EAAAxU,IAAA,GAIA,IAAAg8C,OAAAt1D,IAAAsuD,EAAAh1C,UAAAtZ,IAAAsuD,EAAAiH,aACAC,OAAAx1D,IAAAsuD,EAAA90C,UAAAxZ,IAAAsuD,EAAAmH,kBAEAz1D,IAAAsuD,EAAAh1C,IACAwU,EAAAxU,IAAAg1C,EAAAh1C,SACOtZ,IAAAsuD,EAAAiH,eACP,OAAAznC,EAAAxU,IACAwU,EAAAxU,IAAAg1C,EAAAiH,aAEAznC,EAAAxU,IAAAC,KAAAD,IAAAwU,EAAAxU,IAAAg1C,EAAAiH,oBAIAv1D,IAAAsuD,EAAA90C,IACAsU,EAAAtU,IAAA80C,EAAA90C,SACOxZ,IAAAsuD,EAAAmH,eACP,OAAA3nC,EAAAtU,IACAsU,EAAAtU,IAAA80C,EAAAmH,aAEA3nC,EAAAtU,IAAAD,KAAAC,IAAAsU,EAAAtU,IAAA80C,EAAAmH,eAIAH,IAAAE,GAKA1nC,EAAAxU,KAAAwU,EAAAtU,MACA87C,EACAxnC,EAAAtU,IAAAsU,EAAAxU,IAAA,EAEAwU,EAAAxU,IAAAwU,EAAAtU,IAAA,GAKAsU,EAAAxU,MAAAwU,EAAAtU,MACAsU,EAAAtU,MAEA80C,EAAAxhB,aACAhf,EAAAxU,QAIAo8C,aAAA,WACA,IAIAzE,EAHA3C,EADA9yD,KACAyU,QAAAy1B,MACAiwB,EAAArH,EAAAqH,SACAzE,EAAA5C,EAAA4C,cAcA,OAXAyE,EACA1E,EAAA13C,KAAAq8C,KAPAp6D,KAOAge,IAAAm8C,GAAAp8C,KAAAkB,MAPAjf,KAOA8d,IAAAq8C,GAAA,GAEA1E,EATAz1D,KASAq6D,oBACA3E,KAAA,IAGAA,IACAD,EAAA13C,KAAAD,IAAA43C,EAAAD,IAGAA,GAEA4E,kBAAA,WACA,OAAA7pC,OAAAojB,mBAEA0mB,yBAAApqC,GACAgiC,WAAA,WACA,IAAA5/B,EAAAtyB,KACAwtC,EAAAlb,EAAA7d,QACAq+C,EAAAtlB,EAAAtD,MAKAurB,EAAAnjC,EAAA4nC,eAEAK,EAAA,CACA9E,SAFAA,EAAA13C,KAAAC,IAAA,EAAAy3C,GAGA33C,IAAAg1C,EAAAh1C,IACAE,IAAA80C,EAAA90C,IACAw8C,UAAA1H,EAAA0H,UACAL,SAAAlgC,GAAAxJ,eAAAqiC,EAAA2H,cAAA3H,EAAAqH,WAEAjwB,EAAA5X,EAAA4X,MA1LA,SAAAwwB,EAAAC,GACA,IAcAC,EAAAC,EAAAC,EAAAC,EAdA7wB,EAAA,GAKAiwB,EAAAO,EAAAP,SACAa,EAAAb,GAAA,EACAc,EAAAP,EAAAjF,SAAA,EACA33C,EAAA48C,EAAA58C,IACAE,EAAA08C,EAAA18C,IACAw8C,EAAAE,EAAAF,UACAU,EAAAP,EAAA78C,IACAq9C,EAAAR,EAAA38C,IACAo9C,EAAAnhC,GAAAohC,SAAAF,EAAAD,GAAAD,EAAAD,KAIA,GAAAI,EAbA,OAaAjrC,GAAArS,IAAAqS,GAAAnS,GACA,OAAAk9C,EAAAC,IAGAJ,EAAAh9C,KAAAq8C,KAAAe,EAAAC,GAAAr9C,KAAAkB,MAAAi8C,EAAAE,IAEAH,IAEAG,EAAAnhC,GAAAohC,QAAAN,EAAAK,EAAAH,EAAAD,MAGAb,GAAAhqC,GAAAqqC,GAEAI,EAAA78C,KAAAQ,IAAA,GAAA0b,GAAAqhC,eAAAF,KAGAR,EAAA78C,KAAAQ,IAAA,GAAAi8C,GACAY,EAAAr9C,KAAAq8C,KAAAgB,EAAAR,MAGAC,EAAA98C,KAAAkB,MAAAi8C,EAAAE,KACAN,EAAA/8C,KAAAq8C,KAAAe,EAAAC,KAEAjB,KAEAhqC,GAAArS,IAAAmc,GAAAshC,YAAAz9C,EAAAs9C,IAAA,OACAP,EAAA/8C,IAGAqS,GAAAnS,IAAAic,GAAAshC,YAAAv9C,EAAAo9C,IAAA,OACAN,EAAA98C,IAIA+8C,GAAAD,EAAAD,GAAAO,EAGAL,EADA9gC,GAAAuhC,aAAAT,EAAAh9C,KAAAkM,MAAA8wC,GAAAK,EAAA,KACAr9C,KAAAkM,MAAA8wC,GAEAh9C,KAAAq8C,KAAAW,GAGAF,EAAA98C,KAAAkM,MAAA4wC,EAAAD,KACAE,EAAA/8C,KAAAkM,MAAA6wC,EAAAF,KACA1wB,EAAArlC,KAAAsrB,GAAArS,GAAA+8C,EAAA/8C,GAEA,QAAAyvB,EAAA,EAAmBA,EAAAwtB,IAAextB,EAClCrD,EAAArlC,KAAAkZ,KAAAkM,OAAA4wC,EAAAttB,EAAA6tB,GAAAR,MAIA,OADA1wB,EAAArlC,KAAAsrB,GAAAnS,GAAA88C,EAAA98C,GACAksB,EAqHAuxB,CAAAlB,EAAAjoC,GACAA,EAAAgoC,2BAGAhoC,EAAAtU,IAAAic,GAAAjc,IAAAksB,GACA5X,EAAAxU,IAAAmc,GAAAnc,IAAAosB,GAEA4oB,EAAA7hC,SACAiZ,EAAAjZ,UACAqB,EAAAyI,MAAAzI,EAAAtU,IACAsU,EAAAsX,IAAAtX,EAAAxU,MAEAwU,EAAAyI,MAAAzI,EAAAxU,IACAwU,EAAAsX,IAAAtX,EAAAtU,MAGAq0C,qBAAA,WACA,IAAA//B,EAAAtyB,KACAsyB,EAAAopC,eAAAppC,EAAA4X,MAAArgB,QACAyI,EAAAmlC,cAAAnlC,EAAA4X,MAAAp4B,QAAA,GACAg/C,GAAA3wD,UAAAkyD,qBAAAhwD,KAAAiwB,MAGAqpC,GAAA,CACAtjD,SAAA,OACA6xB,MAAA,CACAtZ,SAAA69B,GAAAC,WAAAz7B,SAGA2oC,GAAAnC,GAAAvnC,OAAA,CACA6/B,oBAAA,WACA,IAAAz/B,EAAAtyB,KACAwtC,EAAAlb,EAAA7d,QACAghB,EAAAnD,EAAAmD,MACA11B,EAAA01B,EAAA11B,KACAoV,EAAApV,EAAAoV,SACA0zB,EAAAvW,EAAAuW,eAIA,SAAAgzB,EAAA59B,GACA,OAAA4K,EAAA5K,EAAAG,UAAA9L,EAAA/a,GAAA0mB,EAAAM,UAAAjM,EAAA/a,GAIA+a,EAAAxU,IAAA,KACAwU,EAAAtU,IAAA,KACA,IAAA89C,EAAAtuB,EAAAnpC,QAgBA,QAdAG,IAAAs3D,GACA7hC,GAAAlJ,KAAA5b,EAAA,SAAAS,EAAA+nB,GACA,IAAAm+B,EAAA,CAIA,IAAA79B,EAAAxI,EAAAgJ,eAAAd,GAEAlI,EAAA+T,iBAAA7L,IAAAk+B,EAAA59B,SAAAz5B,IAAAy5B,EAAA38B,QACAw6D,GAAA,MAKAtuB,EAAAnpC,SAAAy3D,EAAA,CACA,IAAAC,EAAA,GACA9hC,GAAAlJ,KAAA5b,EAAA,SAAAS,EAAA+nB,GACA,IAAAM,EAAAxI,EAAAgJ,eAAAd,GACA74B,EAAA,CAAAm5B,EAAAvyB,UACAlH,IAAAgpC,EAAAnpC,cAAAG,IAAAy5B,EAAA38B,MAAAq8B,EAAA,GAAAM,EAAA38B,OAAAorC,KAAA,UAEAloC,IAAAu3D,EAAAj3D,KACAi3D,EAAAj3D,GAAA,CACAk3D,eAAA,GACAC,eAAA,KAKA,IAAAD,EAAAD,EAAAj3D,GAAAk3D,eACAC,EAAAF,EAAAj3D,GAAAm3D,eAEAxmC,EAAA+T,iBAAA7L,IAAAk+B,EAAA59B,IACAhE,GAAAlJ,KAAAnb,EAAA7V,KAAA,SAAA60D,EAAAnzD,GACA,IAAAf,GAAA4xB,EAAAkY,cAAAoqB,GAEAzoC,MAAAzrB,IAAAu9B,EAAAl+B,KAAA0B,GAAA84B,SAIAyhC,EAAAv6D,GAAAu6D,EAAAv6D,IAAA,EACAw6D,EAAAx6D,GAAAw6D,EAAAx6D,IAAA,EAEA+rC,EAAA0uB,eACAF,EAAAv6D,GAAA,IACef,EAAA,EACfu7D,EAAAx6D,IAAAf,EAEAs7D,EAAAv6D,IAAAf,OAKAu5B,GAAAlJ,KAAAgrC,EAAA,SAAAI,GACA,IAAA36D,EAAA26D,EAAAH,eAAA7oD,OAAAgpD,EAAAF,gBACAG,EAAAniC,GAAAnc,IAAAtc,GACA66D,EAAApiC,GAAAjc,IAAAxc,GACA8wB,EAAAxU,IAAA,OAAAwU,EAAAxU,IAAAs+C,EAAAr+C,KAAAD,IAAAwU,EAAAxU,IAAAs+C,GACA9pC,EAAAtU,IAAA,OAAAsU,EAAAtU,IAAAq+C,EAAAt+C,KAAAC,IAAAsU,EAAAtU,IAAAq+C,UAGApiC,GAAAlJ,KAAA5b,EAAA,SAAAS,EAAA+nB,GACA,IAAAM,EAAAxI,EAAAgJ,eAAAd,GAEAlI,EAAA+T,iBAAA7L,IAAAk+B,EAAA59B,IACAhE,GAAAlJ,KAAAnb,EAAA7V,KAAA,SAAA60D,EAAAnzD,GACA,IAAAf,GAAA4xB,EAAAkY,cAAAoqB,GAEAzoC,MAAAzrB,IAAAu9B,EAAAl+B,KAAA0B,GAAA84B,SAIA,OAAAjI,EAAAxU,IACAwU,EAAAxU,IAAApd,EACeA,EAAA4xB,EAAAxU,MACfwU,EAAAxU,IAAApd,GAGA,OAAA4xB,EAAAtU,IACAsU,EAAAtU,IAAAtd,EACeA,EAAA4xB,EAAAtU,MACfsU,EAAAtU,IAAAtd,QAOA4xB,EAAAxU,IAAAuS,SAAAiC,EAAAxU,OAAAqO,MAAAmG,EAAAxU,KAAAwU,EAAAxU,IApGA,EAqGAwU,EAAAtU,IAAAqS,SAAAiC,EAAAtU,OAAAmO,MAAAmG,EAAAtU,KAAAsU,EAAAtU,IApGA,EAsGAhe,KAAA05D,0BAGAW,kBAAA,WACA,IACArH,EAEA,OAHAhzD,KAGA6oC,eACA9qB,KAAAq8C,KAJAp6D,KAIA6U,MAAA,KAGAm+C,EAAA/4B,GAAAxlB,QAAA4kB,WAPAr5B,KAOAyU,QAAAy1B,OACAnsB,KAAAq8C,KARAp6D,KAQA4U,OAAAo+C,EAAAr5B,cAGA2gC,yBAAA,WACAt6D,KAAA6oC,gBAEA7oC,KAAAkqC,MAAAjZ,WAGAwxB,iBAAA,SAAAhhD,EAAAk8B,GACA,OAAA39B,KAAAwqC,cAAAxqC,KAAAy1B,MAAA11B,KAAAoV,SAAAwoB,GAAA59B,KAAA0B,KAGAqoC,iBAAA,SAAAppC,GAGA,IAAA4xB,EAAAtyB,KACA+6B,EAAAzI,EAAAyI,MACAyV,GAAAle,EAAAkY,cAAA9pC,GAEAiqC,EAAArY,EAAAsX,IAAA7O,EAQA,OANAzI,EAAAuW,eACAvW,EAAAwD,KAAAxD,EAAAzd,MAAA81B,GAAA6F,EAAAzV,GAEAzI,EAAA2D,OAAA3D,EAAA1d,OAAA+1B,GAAA6F,EAAAzV,IAKA85B,iBAAA,SAAAE,GACA,IAAAziC,EAAAtyB,KACA6oC,EAAAvW,EAAAuW,eACAyzB,EAAAzzB,EAAAvW,EAAAzd,MAAAyd,EAAA1d,OACAjT,GAAAknC,EAAAksB,EAAAziC,EAAAwD,KAAAxD,EAAA2D,OAAA8+B,GAAAuH,EACA,OAAAhqC,EAAAyI,OAAAzI,EAAAsX,IAAAtX,EAAAyI,OAAAp5B,GAEAyoC,gBAAA,SAAA3oC,GACA,OAAAzB,KAAA8pC,iBAAA9pC,KAAA07D,eAAAj6D,OAIA86D,GAAAZ,GACAC,GAAApC,UAAA+C,GACA,IAAAC,GAAAviC,GAAAxJ,eA6CAgsC,GAAA,CACApkD,SAAA,OAEA6xB,MAAA,CACAtZ,SAAA69B,GAAAC,WAAAU,cAIA,SAAAsN,GAAAh8D,EAAAgwB,GACA,OAAAuJ,GAAA5J,SAAA3vB,OAAA,EAAAA,EAAAgwB,EAGA,IAAAisC,GAAA7L,GAAA5+B,OAAA,CACA6/B,oBAAA,WACA,IAAAz/B,EAAAtyB,KACAwtC,EAAAlb,EAAA7d,QACAghB,EAAAnD,EAAAmD,MACA11B,EAAA01B,EAAA11B,KACAoV,EAAApV,EAAAoV,SACA0zB,EAAAvW,EAAAuW,eAEA,SAAAgzB,EAAA59B,GACA,OAAA4K,EAAA5K,EAAAG,UAAA9L,EAAA/a,GAAA0mB,EAAAM,UAAAjM,EAAA/a,GAIA+a,EAAAxU,IAAA,KACAwU,EAAAtU,IAAA,KACAsU,EAAAsqC,WAAA,KACA,IAAAd,EAAAtuB,EAAAnpC,QAgBA,QAdAG,IAAAs3D,GACA7hC,GAAAlJ,KAAA5b,EAAA,SAAAS,EAAA+nB,GACA,IAAAm+B,EAAA,CAIA,IAAA79B,EAAAxI,EAAAgJ,eAAAd,GAEAlI,EAAA+T,iBAAA7L,IAAAk+B,EAAA59B,SAAAz5B,IAAAy5B,EAAA38B,QACAw6D,GAAA,MAKAtuB,EAAAnpC,SAAAy3D,EAAA,CACA,IAAAC,EAAA,GACA9hC,GAAAlJ,KAAA5b,EAAA,SAAAS,EAAA+nB,GACA,IAAAM,EAAAxI,EAAAgJ,eAAAd,GACA74B,EAAA,CAAAm5B,EAAAvyB,UACAlH,IAAAgpC,EAAAnpC,cAAAG,IAAAy5B,EAAA38B,MAAAq8B,EAAA,GAAAM,EAAA38B,OAAAorC,KAAA,KAEAjX,EAAA+T,iBAAA7L,IAAAk+B,EAAA59B,UACAz5B,IAAAu3D,EAAAj3D,KACAi3D,EAAAj3D,GAAA,IAGAm1B,GAAAlJ,KAAAnb,EAAA7V,KAAA,SAAA60D,EAAAnzD,GACA,IAAAD,EAAAu6D,EAAAj3D,GACApE,GAAA4xB,EAAAkY,cAAAoqB,GAEAzoC,MAAAzrB,IAAAu9B,EAAAl+B,KAAA0B,GAAA84B,QAAA75B,EAAA,IAIAc,EAAAC,GAAAD,EAAAC,IAAA,EACAD,EAAAC,IAAAf,QAIAu5B,GAAAlJ,KAAAgrC,EAAA,SAAAI,GACA,GAAAA,EAAAz6D,OAAA,GACA,IAAA06D,EAAAniC,GAAAnc,IAAAq+C,GACAE,EAAApiC,GAAAjc,IAAAm+C,GACA7pC,EAAAxU,IAAA,OAAAwU,EAAAxU,IAAAs+C,EAAAr+C,KAAAD,IAAAwU,EAAAxU,IAAAs+C,GACA9pC,EAAAtU,IAAA,OAAAsU,EAAAtU,IAAAq+C,EAAAt+C,KAAAC,IAAAsU,EAAAtU,IAAAq+C,WAIApiC,GAAAlJ,KAAA5b,EAAA,SAAAS,EAAA+nB,GACA,IAAAM,EAAAxI,EAAAgJ,eAAAd,GAEAlI,EAAA+T,iBAAA7L,IAAAk+B,EAAA59B,IACAhE,GAAAlJ,KAAAnb,EAAA7V,KAAA,SAAA60D,EAAAnzD,GACA,IAAAf,GAAA4xB,EAAAkY,cAAAoqB,GAEAzoC,MAAAzrB,IAAAu9B,EAAAl+B,KAAA0B,GAAA84B,QAAA75B,EAAA,IAIA,OAAA4xB,EAAAxU,IACAwU,EAAAxU,IAAApd,EACeA,EAAA4xB,EAAAxU,MACfwU,EAAAxU,IAAApd,GAGA,OAAA4xB,EAAAtU,IACAsU,EAAAtU,IAAAtd,EACeA,EAAA4xB,EAAAtU,MACfsU,EAAAtU,IAAAtd,GAGA,IAAAA,IAAA,OAAA4xB,EAAAsqC,YAAAl8D,EAAA4xB,EAAAsqC,cACAtqC,EAAAsqC,WAAAl8D,QAQAV,KAAA05D,0BAEAA,uBAAA,WACA,IAAApnC,EAAAtyB,KACA8yD,EAAAxgC,EAAA7d,QAAAy1B,MAGA5X,EAAAxU,IAAA4+C,GAAA5J,EAAAh1C,IAAAwU,EAAAxU,KACAwU,EAAAtU,IAAA0+C,GAAA5J,EAAA90C,IAAAsU,EAAAtU,KAEAsU,EAAAxU,MAAAwU,EAAAtU,MACA,IAAAsU,EAAAxU,KAAA,OAAAwU,EAAAxU,KACAwU,EAAAxU,IAAAC,KAAAQ,IAAA,GAAAR,KAAAkB,MAAAgb,GAAA40B,MAAAv8B,EAAAxU,MAAA,GACAwU,EAAAtU,IAAAD,KAAAQ,IAAA,GAAAR,KAAAkB,MAAAgb,GAAA40B,MAAAv8B,EAAAtU,MAAA,KAEAsU,EAAAxU,IAVA,EAWAwU,EAAAtU,IAVA,KAcA,OAAAsU,EAAAxU,MACAwU,EAAAxU,IAAAC,KAAAQ,IAAA,GAAAR,KAAAkB,MAAAgb,GAAA40B,MAAAv8B,EAAAtU,MAAA,IAGA,OAAAsU,EAAAtU,MACAsU,EAAAtU,IAAA,IAAAsU,EAAAxU,IAAAC,KAAAQ,IAAA,GAAAR,KAAAkB,MAAAgb,GAAA40B,MAAAv8B,EAAAxU,MAAA,GAnBA,IAsBA,OAAAwU,EAAAsqC,aACAtqC,EAAAxU,IAAA,EACAwU,EAAAsqC,WAAAtqC,EAAAxU,IACSwU,EAAAtU,IAAA,EACTsU,EAAAsqC,WAAA7+C,KAAAQ,IAAA,GAAAR,KAAAkB,MAAAgb,GAAA40B,MAAAv8B,EAAAtU,OAEAsU,EAAAsqC,WA7BA,IAiCA1K,WAAA,WACA,IAAA5/B,EAAAtyB,KACA8yD,EAAAxgC,EAAA7d,QAAAy1B,MACAjZ,GAAAqB,EAAAuW,eACA6xB,EAAA,CACA58C,IAAA4+C,GAAA5J,EAAAh1C,KACAE,IAAA0+C,GAAA5J,EAAA90C,MAEAksB,EAAA5X,EAAA4X,MAlMA,SAAAwwB,EAAAC,GACA,IAIAkC,EAAAC,EAJA5yB,EAAA,GACA6yB,EAAAP,GAAA9B,EAAA58C,IAAAC,KAAAQ,IAAA,GAAAR,KAAAkB,MAAAgb,GAAA40B,MAAA8L,EAAA78C,QACAk/C,EAAAj/C,KAAAkB,MAAAgb,GAAA40B,MAAA8L,EAAA38C,MACAi/C,EAAAl/C,KAAAq8C,KAAAO,EAAA38C,IAAAD,KAAAQ,IAAA,GAAAy+C,IAGA,IAAAD,GACAF,EAAA9+C,KAAAkB,MAAAgb,GAAA40B,MAAA8L,EAAAiC,aACAE,EAAA/+C,KAAAkB,MAAA07C,EAAAiC,WAAA7+C,KAAAQ,IAAA,GAAAs+C,IACA3yB,EAAArlC,KAAAk4D,GACAA,EAAAD,EAAA/+C,KAAAQ,IAAA,GAAAs+C,KAEAA,EAAA9+C,KAAAkB,MAAAgb,GAAA40B,MAAAkO,IACAD,EAAA/+C,KAAAkB,MAAA89C,EAAAh/C,KAAAQ,IAAA,GAAAs+C,KAGA,IAAArC,EAAAqC,EAAA,EAAA9+C,KAAAQ,IAAA,GAAAR,KAAAknB,IAAA43B,IAAA,EAEA,GACA3yB,EAAArlC,KAAAk4D,GAGA,OAFAD,IAGAA,EAAA,EAEAtC,IADAqC,GACA,IAAArC,GAGAuC,EAAAh/C,KAAAkM,MAAA6yC,EAAA/+C,KAAAQ,IAAA,GAAAs+C,GAAArC,WACKqC,EAAAG,GAAAH,IAAAG,GAAAF,EAAAG,GAEL,IAAAC,EAAAV,GAAA9B,EAAA18C,IAAA++C,GAEA,OADA7yB,EAAArlC,KAAAq4D,GACAhzB,EAgKAizB,CAAAzC,EAAApoC,GAGAA,EAAAtU,IAAAic,GAAAjc,IAAAksB,GACA5X,EAAAxU,IAAAmc,GAAAnc,IAAAosB,GAEA4oB,EAAA7hC,SACAA,KACAqB,EAAAyI,MAAAzI,EAAAtU,IACAsU,EAAAsX,IAAAtX,EAAAxU,MAEAwU,EAAAyI,MAAAzI,EAAAxU,IACAwU,EAAAsX,IAAAtX,EAAAtU,KAGAiT,GACAiZ,EAAAjZ,WAGAohC,qBAAA,WACAryD,KAAAo9D,WAAAp9D,KAAAkqC,MAAArgB,QACAinC,GAAA3wD,UAAAkyD,qBAAAhwD,KAAArC,OAGAyiD,iBAAA,SAAAhhD,EAAAk8B,GACA,OAAA39B,KAAAwqC,cAAAxqC,KAAAy1B,MAAA11B,KAAAoV,SAAAwoB,GAAA59B,KAAA0B,KAEA2oC,gBAAA,SAAA3oC,GACA,OAAAzB,KAAA8pC,iBAAA9pC,KAAAo9D,WAAA37D,KASA47D,mBAAA,SAAA38D,GACA,IAAAm8D,EAAA9+C,KAAAkB,MAAAgb,GAAA40B,MAAAnuD,IACAo8D,EAAA/+C,KAAAkB,MAAAve,EAAAqd,KAAAQ,IAAA,GAAAs+C,IACA,OAAAC,EAAA/+C,KAAAQ,IAAA,GAAAs+C,IAEA/yB,iBAAA,SAAAppC,GACA,IAQA47D,EAAAvH,EAAAh6B,EAAA6O,EAAAgwB,EARAtnC,EAAAtyB,KACA8yD,EAAAxgC,EAAA7d,QAAAy1B,MACAjZ,EAAA6hC,EAAA7hC,QACA49B,EAAA50B,GAAA40B,MAEAyO,EAAAhrC,EAAA+qC,mBAAA/qC,EAAAsqC,YAEAj7D,EAAA,EAuCA,OArCAjB,GAAA4xB,EAAAkY,cAAA9pC,GAEAuwB,GACA8J,EAAAzI,EAAAsX,IACAA,EAAAtX,EAAAyI,MACA6+B,GAAA,IAEA7+B,EAAAzI,EAAAyI,MACA6O,EAAAtX,EAAAsX,IACAgwB,EAAA,GAGAtnC,EAAAuW,gBACAyzB,EAAAhqC,EAAAzd,MACAkgD,EAAA9jC,EAAAqB,EAAA0D,MAAA1D,EAAAwD,OAEAwmC,EAAAhqC,EAAA1d,OACAglD,IAAA,EAEA7E,EAAA9jC,EAAAqB,EAAAyD,IAAAzD,EAAA2D,QAGAv1B,IAAAq6B,IACA,IAAAA,IAEAp5B,EAAA66D,GAAA1J,EAAAv5B,SAAAP,GAAAz1B,OAAAq1B,iBACA0jC,GAAA36D,EACAo5B,EAAAuiC,GAGA,IAAA58D,IACAiB,GAAA26D,GAAAzN,EAAAjlB,GAAAilB,EAAA9zB,KAAA8zB,EAAAnuD,GAAAmuD,EAAA9zB,KAGAg6B,GAAA6E,EAAAj4D,GAGAozD,GAEAF,iBAAA,SAAAE,GACA,IAOAuH,EAAAvhC,EAAA6O,EAAAlpC,EAPA4xB,EAAAtyB,KACA8yD,EAAAxgC,EAAA7d,QAAAy1B,MACAjZ,EAAA6hC,EAAA7hC,QACA49B,EAAA50B,GAAA40B,MAEAyO,EAAAhrC,EAAA+qC,mBAAA/qC,EAAAsqC,YAoBA,GAhBA3rC,GACA8J,EAAAzI,EAAAsX,IACAA,EAAAtX,EAAAyI,QAEAA,EAAAzI,EAAAyI,MACA6O,EAAAtX,EAAAsX,KAGAtX,EAAAuW,gBACAyzB,EAAAhqC,EAAAzd,MACAnU,EAAAuwB,EAAAqB,EAAA0D,MAAA++B,IAAAziC,EAAAwD,OAEAwmC,EAAAhqC,EAAA1d,OACAlU,EAAAuwB,EAAA8jC,EAAAziC,EAAAyD,IAAAzD,EAAA2D,OAAA8+B,GAGAr0D,IAAAq6B,EAAA,CACA,OAAAA,EAAA,CAEA,IAAAp5B,EAAA66D,GAAA1J,EAAAv5B,SAAAP,GAAAz1B,OAAAq1B,iBACAl4B,GAAAiB,EACA26D,GAAA36D,EACAo5B,EAAAuiC,EAGA58D,GAAAmuD,EAAAjlB,GAAAilB,EAAA9zB,GACAr6B,GAAA47D,EACA57D,EAAAqd,KAAAQ,IAAA,GAAAswC,EAAA9zB,GAAAr6B,GAGA,OAAAA,KAIA68D,GAAAd,GACAE,GAAAnD,UAAA+D,GACA,IAAAC,GAAAvjC,GAAAxJ,eACAgtC,GAAAxjC,GAAAtJ,sBACA+sC,GAAAzjC,GAAAxlB,QAAAqlB,QACA6jC,GAAA,CACAvlD,SAAA,EAEAwlD,SAAA,EACAvlD,SAAA,YACA84B,WAAA,CACA/4B,SAAA,EACAu3C,MAAA,qBACApsB,UAAA,EACAM,WAAA,GACAC,iBAAA,GAEAiE,UAAA,CACAqJ,UAAA,GAGAlH,MAAA,CAEA2zB,mBAAA,EAEAC,cAAA,yBAEAC,iBAAA,EAEAC,iBAAA,EACAptC,SAAA69B,GAAAC,WAAAz7B,QAEAoe,YAAA,CAEAj5B,SAAA,EAEAmhB,SAAA,GAEA3I,SAAA,SAAA/a,GACA,OAAAA,KAKA,SAAAooD,GAAA/xC,GACA,IAAAshB,EAAAthB,EAAAzX,QACA,OAAA+4B,EAAA2D,WAAA/4B,SAAAo1B,EAAA6D,YAAAj5B,QAAA8T,EAAAuJ,MAAA11B,KAAA0oC,OAAA/mC,OAAA,EAGA,SAAAw8D,GAAA1wB,GACA,IAAAslB,EAAAtlB,EAAAtD,MAEA,OAAA4oB,EAAA16C,SAAAo1B,EAAAp1B,QACAolD,GAAA1K,EAAAv5B,SAAAP,GAAAz1B,OAAAq1B,iBAAA,EAAAk6B,EAAAiL,iBAGA,EAiBA,SAAAI,GAAA/7B,EAAAub,EAAAz9C,EAAA4d,EAAAE,GACA,OAAAokB,IAAAtkB,GAAAskB,IAAApkB,EACA,CACA+c,MAAA4iB,EAAAz9C,EAAA,EACA0pC,IAAA+T,EAAAz9C,EAAA,GAEKkiC,EAAAtkB,GAAAskB,EAAApkB,EACL,CACA+c,MAAA4iB,EAAAz9C,EACA0pC,IAAA+T,GAIA,CACA5iB,MAAA4iB,EACA/T,IAAA+T,EAAAz9C,GAoFA,SAAAk+D,GAAAh8B,GACA,WAAAA,GAAA,MAAAA,EACA,SACKA,EAAA,IACL,OAGA,QAGA,SAAA2lB,GAAAryB,EAAA+W,EAAAp0B,EAAAshB,GACA,IACAhoB,EAAA2f,EADA7S,EAAApG,EAAAoG,EAAAkb,EAAA,EAGA,GAAAM,GAAAx0B,QAAAgnC,GACA,IAAA96B,EAAA,EAAA2f,EAAAmb,EAAA/qC,OAAqCiQ,EAAA2f,IAAU3f,EAC/C+jB,EAAAqyB,SAAAtb,EAAA96B,GAAA0G,EAAAmG,EAAAC,GACAA,GAAAkb,OAGAjE,EAAAqyB,SAAAtb,EAAAp0B,EAAAmG,EAAAC,GAIA,SAAA4/C,GAAAj8B,EAAAk8B,EAAAjmD,GACA,KAAA+pB,GAAA,MAAAA,EACA/pB,EAAAoG,GAAA6/C,EAAAnjD,EAAA,GACKinB,EAAA,KAAAA,EAAA,MACL/pB,EAAAoG,GAAA6/C,EAAAnjD,GAkGA,SAAAojD,GAAAC,GACA,OAAAvkC,GAAAuB,SAAAgjC,KAAA,EAGA,IAAAC,GAAAhF,GAAAvnC,OAAA,CACA0/B,cAAA,WACA,IAAAt/B,EAAAtyB,KAEAsyB,EAAAzd,MAAAyd,EAAA++B,SACA/+B,EAAA1d,OAAA0d,EAAAg/B,UACAh/B,EAAA0+B,WAAAkN,GAAA5rC,EAAA7d,SAAA,EACA6d,EAAA0f,QAAAj0B,KAAAkB,MAAAqT,EAAAzd,MAAA,GACAyd,EAAA2f,QAAAl0B,KAAAkB,OAAAqT,EAAA1d,OAAA0d,EAAA0+B,YAAA,GACA1+B,EAAAosC,YAAA3gD,KAAAD,IAAAwU,EAAA1d,OAAA0d,EAAA0+B,WAAA1+B,EAAAzd,OAAA,GAEAk9C,oBAAA,WACA,IAAAz/B,EAAAtyB,KACAy1B,EAAAnD,EAAAmD,MACA3X,EAAA0S,OAAAojB,kBACA51B,EAAAwS,OAAAmuC,kBACA1kC,GAAAlJ,KAAA0E,EAAA11B,KAAAoV,SAAA,SAAAS,EAAA+nB,GACA,GAAAlI,EAAA+T,iBAAA7L,GAAA,CACA,IAAAM,EAAAxI,EAAAgJ,eAAAd,GACA1D,GAAAlJ,KAAAnb,EAAA7V,KAAA,SAAA60D,EAAAnzD,GACA,IAAAf,GAAA4xB,EAAAkY,cAAAoqB,GAEAzoC,MAAAzrB,IAAAu9B,EAAAl+B,KAAA0B,GAAA84B,SAIAzc,EAAAC,KAAAD,IAAApd,EAAAod,GACAE,EAAAD,KAAAC,IAAAtd,EAAAsd,SAIAsU,EAAAxU,QAAA0S,OAAAojB,kBAAA,EAAA91B,EACAwU,EAAAtU,QAAAwS,OAAAmuC,kBAAA,EAAA3gD,EAEAsU,EAAAonC,0BAGAW,kBAAA,WACA,OAAAt8C,KAAAq8C,KAAAp6D,KAAA0+D,YAAAR,GAAAl+D,KAAAyU,WAEA49C,qBAAA,WACA,IAAA//B,EAAAtyB,KACAy5D,GAAAt5D,UAAAkyD,qBAAAhwD,KAAAiwB,GAEAA,EAAA+e,YAAA/e,EAAAmD,MAAA11B,KAAA0oC,OAAA19B,IAAAunB,EAAA7d,QAAA48B,YAAAzgB,SAAA0B,IAEAmwB,iBAAA,SAAAhhD,EAAAk8B,GACA,OAAA39B,KAAAwqC,cAAAxqC,KAAAy1B,MAAA11B,KAAAoV,SAAAwoB,GAAA59B,KAAA0B,KAEAkxD,IAAA,WACA,IACAnlB,EADAxtC,KACAyU,QAEA+4B,EAAAp1B,SAAAo1B,EAAA6D,YAAAj5B,QAnQA,SAAA8T,GA0BA,IAWAva,EAAA2sD,EAAA5rB,EAXAksB,EAAA3kC,GAAAxlB,QAAA4kB,WAAAnN,EAAAzX,QAAA48B,aAIAwtB,EAAA,CACAxjD,EAAA,EACAsC,EAAAuO,EAAArX,MACAwK,EAAA,EACAxB,EAAAqO,EAAAtX,OAAAsX,EAAA8kC,YAEA8N,EAAA,GAEA5yC,EAAAwJ,IAAA8D,KAAAolC,EAAA5zD,OACAkhB,EAAA6yC,iBAAA,GACA,IA7EArpC,EAAAiE,EAAA9jB,EA6EAmpD,EAAAf,GAAA/xC,GAEA,IAAAva,EAAA,EAAeA,EAAAqtD,EAAgBrtD,IAAA,CAC/B+gC,EAAAxmB,EAAA+yC,iBAAAttD,EAAAua,EAAAwyC,YAAA,GAhFAhpC,EAiFAxJ,EAAAwJ,IAjFAiE,EAiFAilC,EAAAjlC,WAjFA9jB,EAiFAqW,EAAAmlB,YAAA1/B,IAAA,GAAA2sD,EAhFArkC,GAAAx0B,QAAAoQ,GACA,CACAqI,EAAA+b,GAAAy1B,YAAAh6B,IAAA8D,KAAA3jB,GACAsF,EAAAtF,EAAAnU,OAAAi4B,GAIA,CACAzb,EAAAwX,EAAA2wB,YAAAxwC,GAAAhB,MACAsG,EAAAwe,GAwEAzN,EAAA6yC,iBAAAptD,GAAA2sD,EAEA,IAAAhL,EAAApnC,EAAAgzC,cAAAvtD,GACAywB,EAAAnI,GAAAklC,UAAA7L,GAAA,IACA8L,EAAAjB,GAAA/7B,EAAAsQ,EAAAl0B,EAAA8/C,EAAApgD,EAAA,OACAmhD,EAAAlB,GAAA/7B,EAAAsQ,EAAAj0B,EAAA6/C,EAAAnjD,EAAA,QAEAikD,EAAArkC,MAAA8jC,EAAAxjD,IACAwjD,EAAAxjD,EAAA+jD,EAAArkC,MACA+jC,EAAAzjD,EAAAi4C,GAGA8L,EAAAx1B,IAAAi1B,EAAAlhD,IACAkhD,EAAAlhD,EAAAyhD,EAAAx1B,IACAk1B,EAAAnhD,EAAA21C,GAGA+L,EAAAtkC,MAAA8jC,EAAAx/C,IACAw/C,EAAAx/C,EAAAggD,EAAAtkC,MACA+jC,EAAAz/C,EAAAi0C,GAGA+L,EAAAz1B,IAAAi1B,EAAAhhD,IACAghD,EAAAhhD,EAAAwhD,EAAAz1B,IACAk1B,EAAAjhD,EAAAy1C,GAIApnC,EAAAozC,cAAApzC,EAAAwyC,YAAAG,EAAAC,GA2LAS,CAJAv/D,WAMAw/D,eAAA,UAQAF,cAAA,SAAAG,EAAAZ,EAAAC,GACA,IAAAxsC,EAAAtyB,KACA0/D,EAAAb,EAAAxjD,EAAA0C,KAAAsC,IAAAy+C,EAAAzjD,GACAskD,EAAA5hD,KAAAC,IAAA6gD,EAAAlhD,EAAA2U,EAAAzd,MAAA,GAAAkJ,KAAAsC,IAAAy+C,EAAAnhD,GACAiiD,GAAAf,EAAAx/C,EAAAtB,KAAAqC,IAAA0+C,EAAAz/C,GACAwgD,GAAA9hD,KAAAC,IAAA6gD,EAAAhhD,GAAAyU,EAAA1d,OAAA0d,EAAA0+B,YAAA,GAAAjzC,KAAAqC,IAAA0+C,EAAAjhD,GACA6hD,EAAAnB,GAAAmB,GACAC,EAAApB,GAAAoB,GACAC,EAAArB,GAAAqB,GACAC,EAAAtB,GAAAsB,GACAvtC,EAAAosC,YAAA3gD,KAAAD,IAAAC,KAAAkB,MAAAwgD,GAAAC,EAAAC,GAAA,GAAA5hD,KAAAkB,MAAAwgD,GAAAG,EAAAC,GAAA,IACAvtC,EAAAktC,eAAAE,EAAAC,EAAAC,EAAAC,IAEAL,eAAA,SAAAM,EAAAC,EAAAC,EAAAC,GACA,IAAA3tC,EAAAtyB,KACAkgE,EAAA5tC,EAAAzd,MAAAkrD,EAAAztC,EAAAosC,YACAyB,EAAAL,EAAAxtC,EAAAosC,YACA0B,EAAAJ,EAAA1tC,EAAAosC,YACA2B,EAAA/tC,EAAA1d,OAAA0d,EAAA0+B,WAAAiP,EAAA3tC,EAAAosC,YACApsC,EAAA0f,QAAAj0B,KAAAkB,OAAAkhD,EAAAD,GAAA,EAAA5tC,EAAAwD,MACAxD,EAAA2f,QAAAl0B,KAAAkB,OAAAmhD,EAAAC,GAAA,EAAA/tC,EAAAyD,IAAAzD,EAAA0+B,aAEAkO,cAAA,SAAAz9D,GACA,IAAA6+D,EAAA,EAAAviD,KAAAkC,GAAAg+C,GAAAj+D,MACAsiC,EAAAtiC,KAAAy1B,MAAAhhB,SAAAzU,KAAAy1B,MAAAhhB,QAAA6tB,WAAAtiC,KAAAy1B,MAAAhhB,QAAA6tB,WAAA,EACAi+B,EAAAj+B,EAAAvkB,KAAAkC,GAAA,MAEA,OAAAxe,EAAA6+D,EAAAC,GAEApuB,8BAAA,SAAAzxC,GACA,IAAA4xB,EAAAtyB,KAEA,UAAAU,EACA,SAIA,IAAA8/D,EAAAluC,EAAAosC,aAAApsC,EAAAtU,IAAAsU,EAAAxU,KAEA,OAAAwU,EAAA7d,QAAAy1B,MAAAjZ,SACAqB,EAAAtU,IAAAtd,GAAA8/D,GAGA9/D,EAAA4xB,EAAAxU,KAAA0iD,GAEAvB,iBAAA,SAAAx9D,EAAAg/D,GACA,IACAC,EADA1gE,KACAk/D,cAAAz9D,GAAAsc,KAAAkC,GAAA,EACA,OACAzB,EAAAT,KAAAqC,IAAAsgD,GAAAD,EAHAzgE,KAGAgyC,QACAvzB,EAAAV,KAAAsC,IAAAqgD,GAAAD,EAJAzgE,KAIAiyC,UAGAU,yBAAA,SAAAlxC,EAAAf,GACA,OAAAV,KAAAi/D,iBAAAx9D,EAAAzB,KAAAmyC,8BAAAzxC,KAEAigE,gBAAA,WACA,IACA7iD,EADA9d,KACA8d,IACAE,EAFAhe,KAEAge,IACA,OAHAhe,KAGA2yC,yBAAA,EAHA3yC,KAGAsxC,YAAA,EAAAxzB,EAAA,GAAAE,EAAA,EAAAA,EAAAF,EAAA,GAAAE,EAAA,EAAAF,EAAA,IAEAoiB,KAAA,WACA,IAAA5N,EAAAtyB,KACAwtC,EAAAlb,EAAA7d,QACAg/C,EAAAjmB,EAAAzF,UACA+qB,EAAAtlB,EAAAtD,MAEA,GAAAsD,EAAAp1B,QAAA,CACA,IAAAsd,EAAApD,EAAAoD,IACA4M,EAAAtiC,KAAAk/D,cAAA,GAEAlM,EAAA/4B,GAAAxlB,QAAA4kB,WAAAy5B,IAEAtlB,EAAA2D,WAAA/4B,SAAAo1B,EAAA6D,YAAAj5B,UA5OA,SAAA8T,GACA,IAAAwJ,EAAAxJ,EAAAwJ,IACA8X,EAAAthB,EAAAzX,QACAmsD,EAAApzB,EAAA2D,WACAsiB,EAAAjmB,EAAAzF,UACA84B,EAAArzB,EAAA6D,YACA9N,EAAAi6B,GAAAoD,EAAAr9B,UAAAkwB,EAAAlwB,WACA0zB,EAAAuG,GAAAoD,EAAAjR,MAAA8D,EAAA9D,OACAmR,EAAA5C,GAAA1wB,GACA9X,EAAA4B,OACA5B,EAAA6N,YACA7N,EAAA+N,YAAAwzB,EAEAvhC,EAAAgP,cACAhP,EAAAgP,YAAAg5B,GAAA,CAAAkD,EAAA/8B,WAAA4vB,EAAA5vB,WAAA,MACAnO,EAAAiP,eAAA+4B,GAAA,CAAAkD,EAAA98B,iBAAA2vB,EAAA3vB,iBAAA,KAGA,IAAAi9B,EAAA70C,EAAAimB,8BAAA3E,EAAAtD,MAAAjZ,QAAA/E,EAAApO,IAAAoO,EAAAlO,KAEA4gD,EAAA3kC,GAAAxlB,QAAA4kB,WAAAwnC,GAEAnrC,EAAA8D,KAAAolC,EAAA5zD,OACA0qB,EAAAoyB,aAAA,SAEA,QAAAn2C,EAAAssD,GAAA/xC,GAAA,EAA0Cva,GAAA,EAAQA,IAAA,CAClD,GAAAivD,EAAAxoD,SAAAmrB,GAAA0zB,EAAA,CACA,IAAA+J,EAAA90C,EAAA+yC,iBAAAttD,EAAAovD,GACArrC,EAAAmB,YACAnB,EAAAQ,OAAAhK,EAAA8lB,QAAA9lB,EAAA+lB,SACAvc,EAAAoB,OAAAkqC,EAAAxiD,EAAAwiD,EAAAviD,GACAiX,EAAAuB,SAGA,GAAA4pC,EAAAzoD,QAAA,CAEA,IAAA6oD,EAAA,IAAAtvD,EAAAmvD,EAAA,IACAI,EAAAh1C,EAAA+yC,iBAAAttD,EAAAovD,EAAAE,EAAA,GAEAE,EAAA1D,GAAAoD,EAAAtK,UAAA5kD,EAAAqnB,GAAAz1B,OAAAm1B,kBACAhD,EAAA4N,UAAA69B,EACA,IAAA7N,EAAApnC,EAAAgzC,cAAAvtD,GACAywB,EAAAnI,GAAAklC,UAAA7L,GACA59B,EAAAmyB,UAAAuW,GAAAh8B,GACAi8B,GAAAj8B,EAAAlW,EAAA6yC,iBAAAptD,GAAAuvD,GACAnZ,GAAAryB,EAAAxJ,EAAAmlB,YAAA1/B,IAAA,GAAAuvD,EAAAtC,EAAAjlC,aAIAjE,EAAA+B,UA4LA2pC,CAAA9uC,GAGA2H,GAAAlJ,KAAAuB,EAAA4X,MAAA,SAAAr0B,EAAApU,GAEA,GAAAA,EAAA,GAAAqxD,EAAA7hC,QAAA,CACA,IAAAowC,EAAA/uC,EAAA6f,8BAAA7f,EAAAopC,eAAAj6D,IAMA,GAJAgyD,EAAAr7C,SAAA,IAAA3W,GAjMA,SAAAyqB,EAAAunC,EAAA59B,EAAAp0B,GACA,IAKAixC,EALAhd,EAAAxJ,EAAAwJ,IACA0b,EAAAqiB,EAAAriB,SACA4tB,EAAAf,GAAA/xC,GACA+qC,EAAAwG,GAAAhK,EAAA9D,MAAAluD,EAAA,GACA8hC,EAAAk6B,GAAAhK,EAAAlwB,UAAA9hC,EAAA,GAGA,IAAA2vC,GAAA4tB,IAAA/H,GAAA1zB,EAAA,CAeA,GAXA7N,EAAA4B,OACA5B,EAAA+N,YAAAwzB,EACAvhC,EAAA6N,YAEA7N,EAAAgP,cACAhP,EAAAgP,YAAA+uB,EAAA5vB,YAAA,IACAnO,EAAAiP,eAAA8uB,EAAA3vB,kBAAA,GAGApO,EAAAmB,YAEAua,EAEA1b,EAAAS,IAAAjK,EAAA8lB,QAAA9lB,EAAA+lB,QAAApc,EAAA,IAAA9X,KAAAkC,QACK,CAELyyB,EAAAxmB,EAAA+yC,iBAAA,EAAAppC,GACAH,EAAAQ,OAAAwc,EAAAl0B,EAAAk0B,EAAAj0B,GAEA,QAAA9M,EAAA,EAAqBA,EAAAqtD,EAAgBrtD,IACrC+gC,EAAAxmB,EAAA+yC,iBAAAttD,EAAAkkB,GACAH,EAAAoB,OAAA4b,EAAAl0B,EAAAk0B,EAAAj0B,GAIAiX,EAAAU,YACAV,EAAAuB,SACAvB,EAAA+B,WA2JA6pC,CAAAhvC,EAAAmhC,EAAA4N,EAAA5/D,GAGAqxD,EAAA16C,QAAA,CACA,IAAAk+C,EAAAkH,GAAA1K,EAAAyD,UAAAv9B,GAAAz1B,OAAAm1B,kBAMA,GALAhD,EAAA8D,KAAAw5B,EAAAhoD,OACA0qB,EAAA4B,OACA5B,EAAAyiC,UAAA7lC,EAAA0f,QAAA1f,EAAA2f,SACAvc,EAAA3G,OAAAuT,GAEAwwB,EAAA+K,kBAAA,CACA,IAAAzK,EAAA19B,EAAA2wB,YAAAxwC,GAAAhB,MACA6gB,EAAA4N,UAAAwvB,EAAAgL,cACApoC,EAAA4R,UAAA8rB,EAAA,EAAAN,EAAAkL,kBAAAqD,EAAArO,EAAA9yD,KAAA,EAAA4yD,EAAAiL,iBAAA3K,EAAA,EAAAN,EAAAkL,iBAAAhL,EAAA9yD,KAAA,EAAA4yD,EAAAiL,kBAGAroC,EAAAmyB,UAAA,SACAnyB,EAAAoyB,aAAA,SACApyB,EAAA4N,UAAAgzB,EACA5gC,EAAAqyB,SAAAlyC,EAAA,GAAAwrD,GACA3rC,EAAA+B,kBAQA8pC,GAAA5D,GACAc,GAAAjF,UAAA+H,GACA,IAAAC,GAAAvnC,GAAAxJ,eAEAgxC,GAAAjxC,OAAAkxC,mBAAA,iBACAC,GAAAnxC,OAAAoxC,kBAAA,iBACAC,GAAA,CACAC,YAAA,CACAC,QAAA,EACA7hE,KAAA,EACA8hE,MAAA,8BAEAC,OAAA,CACAF,QAAA,EACA7hE,KAAA,IACA8hE,MAAA,kBAEAE,OAAA,CACAH,QAAA,EACA7hE,KAAA,IACA8hE,MAAA,kBAEAG,KAAA,CACAJ,QAAA,EACA7hE,KAAA,KACA8hE,MAAA,cAEAI,IAAA,CACAL,QAAA,EACA7hE,KAAA,MACA8hE,MAAA,SAEAK,KAAA,CACAN,QAAA,EACA7hE,KAAA,OACA8hE,MAAA,WAEAM,MAAA,CACAP,QAAA,EACA7hE,KAAA,OACA8hE,MAAA,SAEAO,QAAA,CACAR,QAAA,EACA7hE,KAAA,OACA8hE,MAAA,WAEAQ,KAAA,CACAT,QAAA,EACA7hE,KAAA,SAGAuiE,GAAA1gE,OAAAwD,KAAAs8D,IAEA,SAAAa,GAAAtsD,EAAAyH,GACA,OAAAzH,EAAAyH,EAGA,SAAA8kD,GAAAruB,GACA,IAEA3iC,EAAA2f,EAAAsB,EAFA9nB,EAAA,GACA83D,EAAA,GAGA,IAAAjxD,EAAA,EAAA2f,EAAAgjB,EAAA5yC,OAAoCiQ,EAAA2f,IAAU3f,EAC9CihB,EAAA0hB,EAAA3iC,GAEA7G,EAAA8nB,KACA9nB,EAAA8nB,IAAA,EACAgwC,EAAA/9D,KAAA+tB,IAIA,OAAAgwC,EAuGA,SAAAC,GAAAC,EAAAC,EAAAnxC,EAAAoxC,GACA,IAAAr4B,EA3CA,SAAAm4B,EAAAh+D,EAAApE,GAKA,IAJA,IAEAuiE,EAAAC,EAAAC,EAFAC,EAAA,EACApkD,EAAA8jD,EAAAphE,OAAA,EAGA0hE,GAAA,GAAAA,GAAApkD,GAAA,CAKA,GAHAkkD,EAAAJ,GADAG,EAAAG,EAAApkD,GAAA,GACA,SACAmkD,EAAAL,EAAAG,IAEAC,EAEA,OACAE,GAAA,KACApkD,GAAAmkD,GAEO,GAAAA,EAAAr+D,GAAApE,EACP0iE,EAAAH,EAAA,MACO,MAAAC,EAAAp+D,GAAApE,GAGP,OACA0iE,GAAAF,EACAlkD,GAAAmkD,GAJAnkD,EAAAikD,EAAA,GAUA,OACAG,GAAAD,EACAnkD,GAAA,MAYAqkD,CAAAP,EAAAC,EAAAnxC,GAEAoY,EAAAW,EAAAy4B,GAAAz4B,EAAA3rB,GAAA2rB,EAAAy4B,GAAAN,IAAAphE,OAAA,GAAAohE,EAAA,GACApsD,EAAAi0B,EAAAy4B,GAAAz4B,EAAA3rB,GAAA2rB,EAAA3rB,GAAA8jD,IAAAphE,OAAA,GAAAohE,EAAA,GACAQ,EAAA5sD,EAAAqsD,GAAA/4B,EAAA+4B,GACAtjD,EAAA6jD,GAAA1xC,EAAAoY,EAAA+4B,IAAAO,EAAA,EACA3hE,GAAA+U,EAAAssD,GAAAh5B,EAAAg5B,IAAAvjD,EACA,OAAAuqB,EAAAg5B,GAAArhE,EAGA,SAAA4hE,GAAAr3C,EAAAs3C,GACA,IAAAC,EAAAv3C,EAAAw3C,SACAjvD,EAAAyX,EAAAzX,QAAAkvD,KACAC,EAAAnvD,EAAAmvD,OACA5V,EAAA4V,GAAAnvD,EAAAu5C,OACAttD,EAAA8iE,EAWA,MATA,oBAAAI,IACAljE,EAAAkjE,EAAAljE,IAIAu5B,GAAA5J,SAAA3vB,KACAA,EAAA,kBAAAstD,EAAAyV,EAAA1V,MAAArtD,EAAAstD,GAAAyV,EAAA1V,MAAArtD,IAGA,OAAAA,GACAA,GAKAkjE,GAAA,oBAAA5V,IACAttD,EAAAstD,EAAAwV,GAEAvpC,GAAA5J,SAAA3vB,KACAA,EAAA+iE,EAAA1V,MAAArtD,KAIAA,GAGA,SAAAqtD,GAAA7hC,EAAAs3C,GACA,GAAAvpC,GAAA9J,cAAAqzC,GACA,YAGA,IAAA/uD,EAAAyX,EAAAzX,QAAAkvD,KACAjjE,EAAA6iE,GAAAr3C,IAAAse,cAAAg5B,IAEA,cAAA9iE,EACAA,GAGA+T,EAAAwV,QACAvpB,GAAAwrB,EAAAw3C,SAAAxV,QAAAxtD,EAAA+T,EAAAwV,QAGAvpB,GAqEA,SAAAmjE,GAAA7I,GACA,QAAArpD,EAAA8wD,GAAA3wD,QAAAkpD,GAAA,EAAA1pC,EAAAmxC,GAAA/gE,OAA8DiQ,EAAA2f,IAAU3f,EACxE,GAAAkwD,GAAAY,GAAA9wD,IAAAowD,OACA,OAAAU,GAAA9wD,GAYA,SAAAmyD,GAAA53C,EAAApO,EAAAE,EAAA+lD,GACA,IAYAJ,EAZAF,EAAAv3C,EAAAw3C,SACAjvD,EAAAyX,EAAAzX,QACAuvD,EAAAvvD,EAAAkvD,KACA/S,EAAAoT,EAAAhJ,MAtDA,SAAAiJ,EAAAnmD,EAAAE,EAAA+lD,GACA,IACApyD,EAAAuyD,EAAAtJ,EADAtpC,EAAAmxC,GAAA/gE,OAGA,IAAAiQ,EAAA8wD,GAAA3wD,QAAAmyD,GAAoCtyD,EAAA2f,EAAA,IAAc3f,EAIlD,GAHAuyD,EAAArC,GAAAY,GAAA9wD,IACAipD,EAAAsJ,EAAAlC,MAAAkC,EAAAlC,MAAAkC,EAAAlC,MAAAtgE,OAAA,GAAAigE,GAEAuC,EAAAnC,QAAAhkD,KAAAq8C,MAAAp8C,EAAAF,IAAA88C,EAAAsJ,EAAAhkE,QAAA6jE,EACA,OAAAtB,GAAA9wD,GAIA,OAAA8wD,GAAAnxC,EAAA,GAyCA6yC,CAAAH,EAAAC,QAAAnmD,EAAAE,EAAA+lD,GACAlT,EAAAgT,GAAAjT,GACAuJ,EAAAqH,GAAAwC,EAAA7J,SAAA6J,EAAAI,cACAC,EAAA,SAAAzT,GAAAoT,EAAAM,WACAC,EAAA9vD,EAAAy1B,MAAA2mB,MAAAnR,QACAwkB,EAAArC,GAAAjR,GACA4T,EAAA1mD,EACAwrB,EAAAtrB,EACAksB,EAAA,GA+BA,IA5BAiwB,IACAA,EA5FA,SAAAr8C,EAAAE,EAAAg9C,EAAA+I,GACA,IAIApyD,EAAA2f,EAAAspC,EAJAjwB,EAAA3sB,EAAAF,EACAomD,EAAArC,GAAA7G,GACAyJ,EAAAP,EAAAhkE,KACA8hE,EAAAkC,EAAAlC,MAGA,IAAAA,EACA,OAAAjkD,KAAAq8C,KAAAzvB,GAAAo5B,EAAAU,IAGA,IAAA9yD,EAAA,EAAA2f,EAAA0wC,EAAAtgE,OAAoCiQ,EAAA2f,IACpCspC,EAAAoH,EAAArwD,KAEAoM,KAAAq8C,KAAAzvB,GAAA85B,EAAA7J,KAAAmJ,MAH8CpyD,GAQ9C,OAAAipD,EAyEA8J,CAAA5mD,EAAAE,EAAA4yC,EAAAmT,IAIAM,IACAG,GAAAf,EAAAvV,QAAAsW,EAAA,UAAAH,GACA/6B,GAAAm6B,EAAAvV,QAAA5kB,EAAA,UAAA+6B,IAIAG,GAAAf,EAAAvV,QAAAsW,EAAAH,EAAA,MAAAzT,IACAtnB,GAAAm6B,EAAAvV,QAAA5kB,EAAA+6B,EAAA,MAAAzT,IAEA5yC,IACAsrB,GAAAm6B,EAAAt+D,IAAAmkC,EAAA,EAAAsnB,IAGA+S,EAAAa,EAEAD,GAAA1T,IAAAwT,IAAAL,EAAA/5C,QAIA05C,GAAAF,EAAAvV,QAAAyV,EAAA9S,GACA8S,GAAAF,EAAAt+D,IAAAw+D,MAAAa,EAAAb,IAAAO,EAAAhkE,KAAAi6D,MAAAvJ,IAGU+S,EAAAr6B,EAAaq6B,GAAAF,EAAAt+D,IAAAw+D,EAAAxJ,EAAAvJ,GACvB1mB,EAAArlC,MAAA8+D,GAIA,OADAz5B,EAAArlC,MAAA8+D,GACAz5B,EA2DA,IAsDAy6B,GAAA7T,GAAA5+B,OAAA,CACAoI,WAAA,WACAt6B,KAAAwrD,oBACAsF,GAAA3wD,UAAAm6B,WAAAj4B,KAAArC,OAEAgX,OAAA,WACA,IACAvC,EADAzU,KACAyU,QACAkvD,EAAAlvD,EAAAkvD,OAAAlvD,EAAAkvD,KAAA,IACAF,EAHAzjE,KAGA0jE,SAAA,IAAAnV,GAAAC,MAAA/5C,EAAAmwD,SAAAC,MAWA,OATAlB,EAAA3V,QACAl4C,QAAAgvD,KAAA,0EAOA7qC,GAAAlI,QAAA4xC,EAAAoB,eAAAtB,EAAA3V,WACAgD,GAAA3wD,UAAA6W,OAAAjH,MAdA/P,KAcA8P,YAMA06B,cAAA,SAAAoqB,GAKA,OAJAA,QAAApwD,IAAAowD,EAAAv1C,IACAu1C,IAAAv1C,GAGAyxC,GAAA3wD,UAAAqqC,cAAAnoC,KAAArC,KAAA40D,IAEA7C,oBAAA,WACA,IAUApgD,EAAA47B,EAAAjc,EAAAgiB,EAAAvzC,EAAAilE,EAVA1yC,EAAAtyB,KACAy1B,EAAAnD,EAAAmD,MACAguC,EAAAnxC,EAAAoxC,SACAM,EAAA1xC,EAAA7d,QAAAkvD,KACA3I,EAAAgJ,EAAAhJ,MAAA,MACAl9C,EAAA6jD,GACA3jD,EAAAyjD,GACAwD,EAAA,GACA9vD,EAAA,GACAszB,EAAA,GAEAy8B,EAAAzvC,EAAA11B,KAAA0oC,QAAA,GAEA,IAAA92B,EAAA,EAAA2f,EAAA4zC,EAAAxjE,OAA2CiQ,EAAA2f,IAAU3f,EACrD82B,EAAA5jC,KAAAkpD,GAAAz7B,EAAA4yC,EAAAvzD,KAIA,IAAAA,EAAA,EAAA2f,GAAAmE,EAAA11B,KAAAoV,UAAA,IAAAzT,OAA4DiQ,EAAA2f,IAAU3f,EACtE,GAAA8jB,EAAA+T,iBAAA73B,GAGA,GAFA5R,EAAA01B,EAAA11B,KAAAoV,SAAAxD,GAAA5R,KAEAk6B,GAAAh3B,SAAAlD,EAAA,IAGA,IAFAoV,EAAAxD,GAAA,GAEA47B,EAAA,EAAA+F,EAAAvzC,EAAA2B,OAA2C6rC,EAAA+F,IAAU/F,EACrDy3B,EAAAjX,GAAAz7B,EAAAvyB,EAAAwtC,IACA03B,EAAApgE,KAAAmgE,GACA7vD,EAAAxD,GAAA47B,GAAAy3B,MAEW,CACX,IAAAz3B,EAAA,EAAA+F,EAAA7K,EAAA/mC,OAA6C6rC,EAAA+F,IAAU/F,EACvD03B,EAAApgE,KAAA4jC,EAAA8E,IAGAp4B,EAAAxD,GAAA82B,EAAA5e,MAAA,QAGA1U,EAAAxD,GAAA,GAIA82B,EAAA/mC,SAEA+mC,EAAAk6B,GAAAl6B,GAAAwM,KAAAytB,IACA5kD,EAAAC,KAAAD,MAAA2qB,EAAA,IACAzqB,EAAAD,KAAAC,MAAAyqB,IAAA/mC,OAAA,KAGAujE,EAAAvjE,SACAujE,EAAAtC,GAAAsC,GAAAhwB,KAAAytB,IACA5kD,EAAAC,KAAAD,MAAAmnD,EAAA,IACAjnD,EAAAD,KAAAC,MAAAinD,IAAAvjE,OAAA,KAGAoc,EAAAiwC,GAAAz7B,EAAA0xC,EAAAlmD,QACAE,EAAA+vC,GAAAz7B,EAAA0xC,EAAAhmD,QAEAF,MAAA6jD,IAAA8B,EAAAvV,QAAAxxB,KAAAC,MAAAq+B,GAAAl9C,EACAE,MAAAyjD,IAAAgC,EAAAtV,MAAAzxB,KAAAC,MAAAq+B,GAAA,EAAAh9C,EAEAsU,EAAAxU,IAAAC,KAAAD,MAAAE,GACAsU,EAAAtU,IAAAD,KAAAC,IAAAF,EAAA,EAAAE,GAEAsU,EAAA6yC,YAAA7yC,EAAAuW,eACAvW,EAAA8yC,OAAA,GACA9yC,EAAA+yC,YAAA,CACAtlE,KAAAklE,EACA9vD,WACAszB,WAGAypB,WAAA,WACA,IAOAvgD,EAAA2f,EAAA0zC,EAPA1yC,EAAAtyB,KACA8d,EAAAwU,EAAAxU,IACAE,EAAAsU,EAAAtU,IACAvJ,EAAA6d,EAAA7d,QACAuvD,EAAAvvD,EAAAkvD,KACAsB,EAAA,GACA/6B,EAAA,GAGA,OAAAz1B,EAAAy1B,MAAA37B,QACA,WACA02D,EAAA3yC,EAAA+yC,YAAAtlE,KACA,MAEA,aACAklE,EAAA3yC,EAAA+yC,YAAA58B,OACA,MAEA,WACA,QACAw8B,EAAAnB,GAAAxxC,EAAAxU,EAAAE,EAAAsU,EAAAgzC,iBAAAxnD,IAYA,IATA,UAAArJ,EAAAqyB,QAAAm+B,EAAAvjE,SACAoc,EAAAmnD,EAAA,GACAjnD,EAAAinD,IAAAvjE,OAAA,IAIAoc,EAAAiwC,GAAAz7B,EAAA0xC,EAAAlmD,QACAE,EAAA+vC,GAAAz7B,EAAA0xC,EAAAhmD,QAEArM,EAAA,EAAA2f,EAAA2zC,EAAAvjE,OAA2CiQ,EAAA2f,IAAU3f,GACrDqzD,EAAAC,EAAAtzD,KAEAmM,GAAAknD,GAAAhnD,GACAksB,EAAArlC,KAAAmgE,GAgBA,OAZA1yC,EAAAxU,MACAwU,EAAAtU,MAEAsU,EAAAizC,MAAAvB,EAAAhJ,MArVA,SAAA9uC,EAAAge,EAAA+5B,EAAAnmD,EAAAE,GACA,IACArM,EAAAqpD,EADA1pC,EAAAmxC,GAAA/gE,OAGA,IAAAiQ,EAAA2f,EAAA,EAAsB3f,GAAA8wD,GAAA3wD,QAAAmyD,GAA6BtyD,IAGnD,GAFAqpD,EAAAyH,GAAA9wD,GAEAkwD,GAAA7G,GAAA+G,QAAA71C,EAAAw3C,SAAAzV,KAAAjwC,EAAAF,EAAAk9C,IAAA9wB,EAAAxoC,OACA,OAAAs5D,EAIA,OAAAyH,GAAAwB,EAAAxB,GAAA3wD,QAAAmyD,GAAA,GAyUAuB,CAAAlzC,EAAA4X,EAAA85B,EAAAC,QAAA3xC,EAAAxU,IAAAwU,EAAAtU,KACAsU,EAAAmzC,WAAA5B,GAAAvxC,EAAAizC,OACAjzC,EAAA8yC,OA7hBA,SAAAH,EAAAnnD,EAAAE,EAAA0nD,GACA,cAAAA,IAAAT,EAAAvjE,OACA,QACAiiE,KAAA7lD,EACA6/B,IAAA,GACO,CACPgmB,KAAA3lD,EACA2/B,IAAA,IAIA,IAEAhsC,EAAA2f,EAAA0Y,EAAAC,EAAAvzB,EAFAosD,EAAA,GACAxuB,EAAA,CAAAx2B,GAGA,IAAAnM,EAAA,EAAA2f,EAAA2zC,EAAAvjE,OAAyCiQ,EAAA2f,IAAU3f,GACnDs4B,EAAAg7B,EAAAtzD,IAEAmM,GAAAmsB,EAAAjsB,GACAs2B,EAAAzvC,KAAAolC,GAMA,IAFAqK,EAAAzvC,KAAAmZ,GAEArM,EAAA,EAAA2f,EAAAgjB,EAAA5yC,OAAoCiQ,EAAA2f,IAAU3f,EAC9C+E,EAAA49B,EAAA3iC,EAAA,GACAq4B,EAAAsK,EAAA3iC,EAAA,GACAs4B,EAAAqK,EAAA3iC,QAEAnN,IAAAwlC,QAAAxlC,IAAAkS,GAAAqH,KAAAkM,OAAAvT,EAAAszB,GAAA,KAAAC,GACA64B,EAAAj+D,KAAA,CACA8+D,KAAA15B,EACA0T,IAAAhsC,GAAA2f,EAAA,KAKA,OAAAwxC,EAufA6C,CAAArzC,EAAA+yC,YAAAtlE,KAAA+d,EAAAE,EAAAvJ,EAAAixD,cACApzC,EAAAszC,SAhQA,SAAA9C,EAAA54B,EAAApsB,EAAAE,EAAAvJ,GACA,IAEA+vD,EAAAl7B,EAFAvO,EAAA,EACA6O,EAAA,EAyBA,OAtBAn1B,EAAA9S,QAAAuoC,EAAAxoC,SACA+S,EAAAkvD,KAAA7lD,MACA0mD,EAAA3B,GAAAC,EAAA,OAAA54B,EAAA,UAGAnP,EADA,IAAAmP,EAAAxoC,OACA,EAAA8iE,GAEA3B,GAAAC,EAAA,OAAA54B,EAAA,UAAAs6B,GAAA,GAIA/vD,EAAAkvD,KAAA3lD,MACAsrB,EAAAu5B,GAAAC,EAAA,OAAA54B,IAAAxoC,OAAA,UAGAkoC,EADA,IAAAM,EAAAxoC,OACA4nC,GAEAA,EAAAu5B,GAAAC,EAAA,OAAA54B,IAAAxoC,OAAA,eAKA,CACAq5B,QACA6O,OAmOAi8B,CAAAvzC,EAAA8yC,OAAAl7B,EAAApsB,EAAAE,EAAAvJ,GAEAA,EAAAy1B,MAAAjZ,SACAiZ,EAAAjZ,UAlOA,SAAA/E,EAAA1qB,EAAAskE,GACA,IACAn0D,EAAA2f,EAAA5wB,EAAAmwD,EADA3mB,EAAA,GAGA,IAAAv4B,EAAA,EAAA2f,EAAA9vB,EAAAE,OAAqCiQ,EAAA2f,IAAU3f,EAC/CjR,EAAAc,EAAAmQ,GACAk/C,IAAAiV,GAAAplE,KAAAwrB,EAAAw3C,SAAAxV,QAAAxtD,EAAAolE,GACA57B,EAAArlC,KAAA,CACAnE,QACAmwD,UAIA,OAAA3mB,EAwNA67B,CAAAzzC,EAAA4X,EAAA5X,EAAAmzC,aAEAhjB,iBAAA,SAAAhhD,EAAAk8B,GACA,IAAArL,EAAAtyB,KACAyjE,EAAAnxC,EAAAoxC,SACA3jE,EAAAuyB,EAAAmD,MAAA11B,KACAikE,EAAA1xC,EAAA7d,QAAAkvD,KACA9tD,EAAA9V,EAAA0oC,QAAAhnC,EAAA1B,EAAA0oC,OAAA/mC,OAAA3B,EAAA0oC,OAAAhnC,GAAA,GACAf,EAAAX,EAAAoV,SAAAwoB,GAAA59B,KAAA0B,GAMA,OAJAw4B,GAAAh3B,SAAAvC,KACAmV,EAAAyc,EAAAkY,cAAA9pC,IAGAsjE,EAAAgC,cACAvC,EAAAzV,OAAAuV,GAAAjxC,EAAAzc,GAAAmuD,EAAAgC,eAGA,kBAAAnwD,EACAA,EAGA4tD,EAAAzV,OAAAuV,GAAAjxC,EAAAzc,GAAAmuD,EAAAe,eAAAkB,WAOAC,mBAAA,SAAAvC,EAAAliE,EAAAyoC,EAAA8jB,GACA,IACAyV,EADAzjE,KACA0jE,SACAjvD,EAFAzU,KAEAyU,QACAq5C,EAAAr5C,EAAAkvD,KAAAoB,eACAoB,EAAArY,EAJA9tD,KAIAulE,OACAO,EALA9lE,KAKAylE,WACAW,EAAAtY,EAAAgY,GACAO,GAAA5C,EAAAvV,QAAAyV,EAAAmC,GACAQ,EAAA7xD,EAAAy1B,MAAA2mB,MACAA,EAAAyV,EAAA5mB,SAAAomB,GAAAM,GAAAzC,IAAA0C,EACAxwD,EAAA4tD,EAAAzV,OAAA2V,EAAA3V,IAAA6C,EAAAuV,EAAAD,IACArT,EAAAjC,EAAAyV,EAAA7xD,EAAAy1B,MAAA0mB,MACA2V,EAAA/E,GAAA1O,EAAAliC,SAAAkiC,EAAAC,cACA,OAAAwT,IAAA1wD,EAAApU,EAAAyoC,GAAAr0B,GAEAw8C,qBAAA,SAAAnoB,GACA,IACAv4B,EAAA2f,EADAmX,EAAA,GAGA,IAAA92B,EAAA,EAAA2f,EAAA4Y,EAAAxoC,OAAsCiQ,EAAA2f,IAAU3f,EAChD82B,EAAA5jC,KAAA7E,KAAAkmE,mBAAAh8B,EAAAv4B,GAAAjR,MAAAiR,EAAAu4B,IAGA,OAAAzB,GAMA+9B,kBAAA,SAAA7C,GACA,IAAArxC,EAAAtyB,KACAymE,EAAAn0C,EAAA7d,QAAAy1B,MAAAjZ,QACA/wB,EAAAoyB,EAAA6yC,YAAA7yC,EAAAzd,MAAAyd,EAAA1d,OACAmmB,EAAAzI,EAAA6yC,YAAAsB,EAAAn0C,EAAA0D,MAAA1D,EAAAwD,KAAA2wC,EAAAn0C,EAAA2D,OAAA3D,EAAAyD,IACA4nB,EAAAklB,GAAAvwC,EAAA8yC,OAAA,OAAAzB,EAAA,OACAhiE,EAAAzB,GAAAoyB,EAAAszC,SAAA7qC,MAAA4iB,IAAArrB,EAAAszC,SAAA7qC,MAAA,EAAAzI,EAAAszC,SAAAh8B,KACA,OAAA68B,EAAA1rC,EAAAp5B,EAAAo5B,EAAAp5B,GAEAmoC,iBAAA,SAAAppC,EAAAe,EAAAk8B,GACA,IACAgmC,EAAA,KAUA,QARAn/D,IAAA/C,QAAA+C,IAAAm5B,IACAgmC,EAJA3jE,KAIAqlE,YAAAlwD,SAAAwoB,GAAAl8B,IAGA,OAAAkiE,IACAA,EAAA5V,GARA/tD,KAQAU,IAGA,OAAAijE,EACA,OAZA3jE,KAYAwmE,kBAAA7C,IAGAv5B,gBAAA,SAAA3oC,GACA,IAAAyoC,EAAAlqC,KAAAmqC,WACA,OAAA1oC,GAAA,GAAAA,EAAAyoC,EAAAxoC,OAAA1B,KAAAwmE,kBAAAt8B,EAAAzoC,GAAAf,OAAA,MAEAm0D,iBAAA,SAAAE,GACA,IAAAziC,EAAAtyB,KACAE,EAAAoyB,EAAA6yC,YAAA7yC,EAAAzd,MAAAyd,EAAA1d,OACAmmB,EAAAzI,EAAA6yC,YAAA7yC,EAAAwD,KAAAxD,EAAAyD,IACA4nB,GAAAz9C,GAAA60D,EAAAh6B,GAAA76B,EAAA,IAAAoyB,EAAAszC,SAAA7qC,MAAA,EAAAzI,EAAAszC,SAAA7qC,OAAAzI,EAAAszC,SAAAh8B,IACA+5B,EAAAd,GAAAvwC,EAAA8yC,OAAA,MAAAznB,EAAA,QAEA,OAAArrB,EAAAoxC,SAAAtV,QAAAuV,IAOA+C,cAAA,SAAA7wD,GACA,IACA8wD,EADA3mE,KACAyU,QAAAy1B,MACA08B,EAFA5mE,KAEA01B,IAAA2wB,YAAAxwC,GAAAhB,MACAutB,EAAAnI,GAAAs5B,UAAAoT,EAAApW,aACA2C,EAAAn1C,KAAAqC,IAAAgiB,GACAiyB,EAAAt2C,KAAAsC,IAAA+hB,GACAykC,EAAArF,GAAAmF,EAAAptC,SAAAP,GAAAz1B,OAAAq1B,iBACA,OAAAguC,EAAA1T,EAAA2T,EAAAxS,GAMAiR,iBAAA,SAAAwB,GACA,IAAAx0C,EAAAtyB,KAEAguD,EAAA17B,EAAA7d,QAAAkvD,KAAAoB,eAAAjD,YACAiF,EAAAz0C,EAAA4zC,mBAAAY,EAAA,KAAA9Y,GACA4Y,EAAAt0C,EAAAo0C,cAAAK,GACAjS,EAAAxiC,EAAAuW,eAAAvW,EAAAzd,MAAAyd,EAAA1d,OACAmvD,EAAAhmD,KAAAkB,MAAA61C,EAAA8R,GACA,OAAA7C,EAAA,EAAAA,EAAA,KAIAiD,GArVA,CACA3uD,SAAA,SASAqtD,aAAA,SASA5+B,OAAA,OACA89B,SAAA,GACAjB,KAAA,CACAC,QAAA,EAEA5V,QAAA,EAEAgN,MAAA,EAEA/wC,OAAA,EAEAg9C,eAAA,EAEA3C,YAAA,EAEAL,QAAA,cACAc,eAAA,IAEA76B,MAAA,CACAumB,UAAA,EAUAliD,OAAA,OACAsiD,MAAA,CACAnR,SAAA,KAoSAilB,GAAAnL,UAAAwN,GACA,IAAA3oC,GAAA,CACA6oC,SAAAxO,GACAzlC,OAAA2oC,GACAxM,YAAAuN,GACAwK,aAAA1I,GACAkF,KAAAgB,IAEAyC,GAAA,CACAnB,SAAA,yBACAnE,YAAA,gBACAG,OAAA,YACAC,OAAA,SACAC,KAAA,KACAC,IAAA,QACAC,KAAA,KACAC,MAAA,WACAC,QAAA,cACAC,KAAA,QAGAjU,GAAAC,MAAAH,SAAA,oBAAAh0C,EAAA,CACAgtD,IAAA,SAEAvZ,QAAA,WACA,OAAAsZ,IAEArZ,MAAA,SAAArtD,EAAAstD,GAOA,MANA,kBAAAttD,GAAA,kBAAAstD,EACAttD,EAAA2Z,EAAA3Z,EAAAstD,GACOttD,aAAA2Z,IACP3Z,EAAA2Z,EAAA3Z,IAGAA,EAAAisB,UAAAjsB,EAAAiM,UAAA,MAEAqhD,OAAA,SAAA2V,EAAA2D,GACA,OAAAjtD,EAAAspD,GAAA3V,OAAAsZ,IAEAniE,IAAA,SAAAw+D,EAAA4D,EAAAvM,GACA,OAAA3gD,EAAAspD,GAAAx+D,IAAAoiE,EAAAvM,GAAAruD,WAEAshD,KAAA,SAAAjwC,EAAAF,EAAAk9C,GACA,OAAA3gD,EAAA4hB,SAAA5hB,EAAA2D,GAAAiwC,KAAA5zC,EAAAyD,KAAA0pD,GAAAxM,IAEA9M,QAAA,SAAAyV,EAAA3I,EAAAqJ,GAGA,OAFAV,EAAAtpD,EAAAspD,GAEA,YAAA3I,EACA2I,EAAAW,WAAAD,GAAA13D,UAGAg3D,EAAAzV,QAAA8M,GAAAruD,WAEAwhD,MAAA,SAAAwV,EAAA3I,GACA,OAAA3gD,EAAAspD,GAAAxV,MAAA6M,GAAAruD,WAUAyhD,QAAA,SAAAuV,GACA,OAAAtpD,EAAAspD,KAEG,IAEH3qC,GAAAT,KAAA,UACA7jB,QAAA,CACA+yD,OAAA,CACAC,WAAA,MAKA,IAAAC,GAAA,CACA/xD,QAAA,SAAArH,GACA,IAAA9M,EAAA8M,EAAAyoB,KACAvB,EAAAlnB,EAAAknB,MACAwI,EAAAxI,EAAAgJ,eAAAh9B,GACAmmE,EAAA3pC,GAAAxI,EAAA+T,iBAAA/nC,GACA2iC,EAAAwjC,GAAA3pC,EAAAroB,QAAAyuB,WAAA,GACA3iC,EAAA0iC,EAAA1iC,QAAA,EACA,OAAAA,EAAA,SAAAkV,EAAAjF,GACA,OAAAA,EAAAjQ,GAAA0iC,EAAAzyB,GAAA8oB,OAAA,MADA,MAIAotC,SAAA,SAAAt5D,GACA,IAAAs5D,EAAAt5D,EAAAs5D,SACArpD,EAAAqpD,IAAArpD,EAAA,KACAC,EAAAopD,IAAAppD,EAAA,KACA,gBAAA7H,GACA,OACA4H,EAAA,OAAAA,EAAA5H,EAAA4H,IACAC,EAAA,OAAAA,EAAA7H,EAAA6H,QAMA,SAAAqpD,GAAA/tB,EAAAt4C,EAAAw/B,GACA,IAEAvvB,EAFAopB,EAAAif,EAAArf,QAAA,GACA1D,EAAA8D,EAAA9D,KAOA,QAJAxyB,IAAAwyB,IACAA,IAAA8D,EAAA0F,kBAGA,IAAAxJ,GAAA,OAAAA,EACA,SAGA,QAAAA,EACA,eAKA,GAFAtlB,EAAAua,WAAA+K,EAAA,IAEA3G,SAAA3e,IAAAqM,KAAAkB,MAAAvN,OAKA,MAJA,MAAAslB,EAAA,UAAAA,EAAA,KACAtlB,EAAAjQ,EAAAiQ,KAGAA,IAAAjQ,GAAAiQ,EAAA,GAAAA,GAAAuvB,IAIAvvB,EAGA,OAAAslB,GAEA,aACA,cAEA,UACA,YAEA,WACA,eAGA,aACA,YACA,UACA,OAAAA,EAGA,QACA,UAIA,SAAA+wC,GAAAx5D,GACA,IAIAk4B,EAJA3L,EAAAvsB,EAAAwrC,GAAArf,QAAA,GACAxO,EAAA3d,EAAAwrC,GAAAnK,QAAA,GACA5Y,EAAAzoB,EAAAyoB,KACAtlB,EAAA,KAGA,GAAA2e,SAAA2G,GACA,YAkBA,GAZA,UAAAA,EACAtlB,OAAAlN,IAAAs2B,EAAAktC,YAAA97C,EAAA+J,OAAA6E,EAAAktC,YACK,QAAAhxC,EACLtlB,OAAAlN,IAAAs2B,EAAAmtC,SAAA/7C,EAAA6J,IAAA+E,EAAAmtC,cACKzjE,IAAAs2B,EAAAotC,UACLx2D,EAAAopB,EAAAotC,UACKh8C,EAAAy0C,gBACLjvD,EAAAwa,EAAAy0C,kBACKz0C,EAAA0c,eACLl3B,EAAAwa,EAAA0c,qBAGApkC,IAAAkN,GAAA,OAAAA,EAAA,CACA,QAAAlN,IAAAkN,EAAA8M,QAAAha,IAAAkN,EAAA+M,EACA,OAAA/M,EAGA,GAAAuoB,GAAA5J,SAAA3e,GAEA,OACA8M,GAFAioB,EAAAva,EAAA2c,gBAEAn3B,EAAA,KACA+M,EAAAgoB,EAAA,KAAA/0B,GAKA,YAGA,SAAAy2D,GAAAn2C,EAAAvwB,EAAAimE,GACA,IAGAh2D,EAHAnD,EAAAyjB,EAAAvwB,GACAu1B,EAAAzoB,EAAAyoB,KACAoxC,EAAA,CAAA3mE,GAGA,IAAAimE,EACA,OAAA1wC,EAGA,UAAAA,IAAA,IAAAoxC,EAAAt2D,QAAAklB,IAAA,CACA,IAAA3G,SAAA2G,GACA,OAAAA,EAKA,KAFAtlB,EAAAsgB,EAAAgF,IAGA,SAGA,GAAAtlB,EAAAk2D,QACA,OAAA5wC,EAGAoxC,EAAAvjE,KAAAmyB,GACAA,EAAAtlB,EAAAslB,KAGA,SAGA,SAAAqxC,GAAA95D,GACA,IAAAyoB,EAAAzoB,EAAAyoB,KACAtrB,EAAA,UAEA,WAAAsrB,EACA,MAGA3G,SAAA2G,KACAtrB,EAAA,YAGAi8D,GAAAj8D,GAAA6C,IAGA,SAAA+5D,GAAA1xD,GACA,OAAAA,MAAAiuB,KAGA,SAAA0jC,GAAA7yC,EAAA8yC,EAAAC,EAAAC,EAAAC,GACA,IAAAh3D,EAEA,GAAA+2D,GAAAC,EAAA,CAOA,IAFAjzC,EAAAQ,OAAAsyC,EAAA,GAAAhqD,EAAAgqD,EAAA,GAAA/pD,GAEA9M,EAAA,EAAeA,EAAA+2D,IAAU/2D,EACzBsoB,GAAAE,OAAArD,OAAApB,EAAA8yC,EAAA72D,EAAA,GAAA62D,EAAA72D,IAMA,IAFA+jB,EAAAoB,OAAA2xC,EAAAE,EAAA,GAAAnqD,EAAAiqD,EAAAE,EAAA,GAAAlqD,GAEA9M,EAAAg3D,EAAA,EAAsBh3D,EAAA,IAAOA,EAC7BsoB,GAAAE,OAAArD,OAAApB,EAAA+yC,EAAA92D,GAAA82D,EAAA92D,EAAA,QAgDA,IAAAi3D,GAAA,CACArxD,GAAA,SACAsxD,oBAAA,SAAApzC,EAAAhhB,GACA,IAGAwpB,EAAAtsB,EAAAooC,EAAAxrC,EAHA0yB,GAAAxL,EAAA11B,KAAAoV,UAAA,IAAAzT,OACAgmE,EAAAjzD,EAAAizD,UACA11C,EAAA,GAGA,IAAArgB,EAAA,EAAiBA,EAAAsvB,IAAWtvB,EAC5BssB,EAAAxI,EAAAgJ,eAAA9sB,GACAooC,EAAA9b,EAAAroB,QACArH,EAAA,KAEAwrC,KAAArf,QAAAqf,aAAA9Z,GAAAvvB,OACAnC,EAAA,CACAq5D,QAAAnyC,EAAA+T,iBAAA73B,GACAqlB,KAAA8wC,GAAA/tB,EAAApoC,EAAAsvB,GACAxL,QACAskB,OAIA9b,EAAA6qC,QAAAv6D,EACAyjB,EAAAntB,KAAA0J,GAGA,IAAAoD,EAAA,EAAiBA,EAAAsvB,IAAWtvB,GAC5BpD,EAAAyjB,EAAArgB,MAMApD,EAAAyoB,KAAAmxC,GAAAn2C,EAAArgB,EAAA+1D,GACAn5D,EAAAs5D,SAAAE,GAAAx5D,GACAA,EAAAw6D,OAAAV,GAAA95D,KAGAy6D,kBAAA,SAAAvzC,EAAA5lB,GACA,IAAAouB,EAAApuB,EAAAouB,KAAA6qC,QAEA,GAAA7qC,EAAA,CAIA,IAAAvI,EAAAD,EAAAC,IACAqkB,EAAA9b,EAAA8b,GACA/e,EAAA+e,EAAAtf,MACA2J,EAAA2V,EAAA1V,WAAA,GACA0kC,EAAA9qC,EAAA8qC,OACApZ,EAAA30B,EAAAwF,iBAAAxH,GAAAz1B,OAAAk1B,aAEAswC,GAAApZ,GAAAvrB,EAAA1iC,SACAu4B,GAAAE,OAAA9C,SAAA3B,EAAAD,EAAAgQ,WAjGA,SAAA/P,EAAA0O,EAAA2kC,EAAA/tC,EAAA20B,EAAAsZ,GACA,IAMAt3D,EAAA2f,EAAA7vB,EAAAynE,EAAAC,EAAAC,EAAAC,EANApoC,EAAAmD,EAAA1iC,OACA4hE,EAAAtoC,EAAAmJ,SACAqkC,EAAA,GACAC,EAAA,GACAC,EAAA,EACAC,EAAA,EAIA,IAFAjzC,EAAAmB,YAEAllB,EAAA,EAAA2f,EAAA2P,IAAAgoC,EAAsCt3D,EAAA2f,IAAU3f,EAEhDu3D,EAAA9kC,EADA3iC,EAAAkQ,EAAAsvB,GACAxG,MACA0uC,EAAAJ,EAAAG,EAAAznE,EAAAu5B,GACAouC,EAAAd,GAAAY,GACAG,EAAAf,GAAAa,GAEAC,GAAAC,GACAX,EAAAF,EAAA3jE,KAAAqkE,GACAP,EAAAF,EAAA5jE,KAAAskE,IACOT,GAAAC,IACPrF,GAMA8F,GACAZ,EAAA3jE,KAAAqkE,GAGAG,GACAZ,EAAA5jE,KAAAskE,KAVAZ,GAAA7yC,EAAA8yC,EAAAC,EAAAC,EAAAC,GACAD,EAAAC,EAAA,EACAH,EAAA,GACAC,EAAA,KAaAF,GAAA7yC,EAAA8yC,EAAAC,EAAAC,EAAAC,GACAjzC,EAAAU,YACAV,EAAA4N,UAAAqsB,EACAj6B,EAAAsB,OAyDAsyC,CAAA5zC,EAAA0O,EAAA2kC,EAAA/tC,EAAA20B,EAAA5V,EAAAvV,OACAvK,GAAAE,OAAA3C,WAAA9B,OAIA6zC,GAAAtvC,GAAA/J,KACAs5C,GAAAvvC,GAAAxJ,eAkFA,SAAAg5C,GAAAC,EAAAnwC,GACA,OAAAmwC,EAAAC,eAAAD,EAAAE,SAAArwC,IAAAmwC,EAAAE,SAjFA5wC,GAAAT,KAAA,UACA5jB,OAAA,CACAyD,SAAA,EACAC,SAAA,MACAm9B,WAAA,EACAvkB,SAAA,EACA9B,OAAA,IAEA1X,QAAA,SAAA1U,EAAAgqC,GACA,IAAAtrC,EAAAsrC,EAAApP,aACAksC,EAAA7pE,KAAAy1B,MACAwI,EAAA4rC,EAAAprC,eAAAh9B,GAEAw8B,EAAA1D,OAAA,OAAA0D,EAAA1D,QAAAsvC,EAAA9pE,KAAAoV,SAAA1T,GAAA84B,OAAA,KAEAsvC,EAAA7yD,UAEAsyC,QAAA,KACAwgB,QAAA,KACArhC,OAAA,CACAmhC,SAAA,GACApkC,QAAA,GAYAmH,eAAA,SAAAlX,GACA,IAAA11B,EAAA01B,EAAA11B,KACA,OAAAk6B,GAAAx0B,QAAA1F,EAAAoV,UAAApV,EAAAoV,SAAApK,IAAA,SAAA6K,EAAAjE,GACA,OACA86B,KAAA72B,EAAAC,MACAytB,UAAArJ,GAAAx0B,QAAAmQ,EAAA4qB,iBAAA5qB,EAAA4qB,gBAAA,GAAA5qB,EAAA4qB,gBACAjG,QAAA9E,EAAA+T,iBAAA73B,GACA8yB,QAAA7uB,EAAAguB,eACAmmC,SAAAn0D,EAAAiuB,WACAc,eAAA/uB,EAAAkuB,iBACAN,SAAA5tB,EAAAmuB,gBACAR,UAAA3tB,EAAA8qB,YACA+C,YAAA7tB,EAAA6qB,YACA0E,WAAAvvB,EAAAuvB,WAEAxH,aAAAhsB,IAEW3R,MAAA,MAIXwsC,eAAA,SAAA/W,GACA,IAAAgX,EAAA,GACAA,EAAA5nC,KAAA,cAAA4wB,EAAAle,GAAA,aAEA,QAAA5F,EAAA,EAAqBA,EAAA8jB,EAAA11B,KAAAoV,SAAAzT,OAAgCiQ,IACrD86B,EAAA5nC,KAAA,qCAAA4wB,EAAA11B,KAAAoV,SAAAxD,GAAA6uB,gBAAA,aAEA/K,EAAA11B,KAAAoV,SAAAxD,GAAAkE,OACA42B,EAAA5nC,KAAA4wB,EAAA11B,KAAAoV,SAAAxD,GAAAkE,OAGA42B,EAAA5nC,KAAA,SAIA,OADA4nC,EAAA5nC,KAAA,SACA4nC,EAAAC,KAAA,OAmBA,IAAAs9B,GAAAvuC,GAAAvJ,OAAA,CACAoI,WAAA,SAAArkB,GACAgkB,GAAA/H,OAAAlyB,KAAAiW,GAEAjW,KAAAiqE,eAAA,GAKAjqE,KAAAkqE,aAAA,KAEAlqE,KAAAmqE,cAAA,GAKA/Y,aAAAmY,GACAvyD,OAAA,SAAAq6C,EAAAC,EAAAC,GACA,IAAAj/B,EAAAtyB,KAqBA,OAnBAsyB,EAAA8+B,eAEA9+B,EAAA++B,WACA/+B,EAAAg/B,YACAh/B,EAAAi/B,UAEAj/B,EAAAq/B,sBACAr/B,EAAAs/B,gBACAt/B,EAAAu/B,qBAEAv/B,EAAA83C,oBACA93C,EAAA+3C,cACA/3C,EAAAg4C,mBAEAh4C,EAAAogC,YACApgC,EAAAqgC,MACArgC,EAAAsgC,WAEAtgC,EAAAugC,cACAvgC,EAAAqb,SAEAklB,YAAA0W,GAEA5X,oBAAA4X,GACA3X,cAAA,WACA,IAAAt/B,EAAAtyB,KAEAsyB,EAAAuW,gBAEAvW,EAAAzd,MAAAyd,EAAA++B,SACA/+B,EAAAwD,KAAA,EACAxD,EAAA0D,MAAA1D,EAAAzd,QAEAyd,EAAA1d,OAAA0d,EAAAg/B,UAEAh/B,EAAAyD,IAAA,EACAzD,EAAA2D,OAAA3D,EAAA1d,QAIA0d,EAAAy+B,YAAA,EACAz+B,EAAA0+B,WAAA,EACA1+B,EAAA2+B,aAAA,EACA3+B,EAAA4+B,cAAA,EAEA5+B,EAAAqb,QAAA,CACA94B,MAAA,EACAD,OAAA,IAGAi9C,mBAAA0X,GAEAa,kBAAAb,GACAc,YAAA,WACA,IAAA/3C,EAAAtyB,KACA0pE,EAAAp3C,EAAA7d,QAAAg0B,QAAA,GACA8hC,EAAAtwC,GAAArJ,SAAA84C,EAAA/8B,eAAA,CAAAra,EAAAmD,OAAAnD,IAAA,GAEAo3C,EAAA94B,SACA25B,IAAA35B,OAAA,SAAAhe,GACA,OAAA82C,EAAA94B,OAAAhe,EAAAN,EAAAmD,MAAA11B,SAIAuyB,EAAA7d,QAAAwc,SACAs5C,EAAAt5C,UAGAqB,EAAAi4C,eAEAD,iBAAAf,GAEA7W,UAAA6W,GACA5W,IAAA,WACA,IAAArgC,EAAAtyB,KACAwtC,EAAAlb,EAAA7d,QACAi1D,EAAAl8B,EAAA/E,OACArwB,EAAAo1B,EAAAp1B,QACAsd,EAAApD,EAAAoD,IAEA80C,EAAAvwC,GAAAxlB,QAAA4kB,WAAAqwC,GAEAnwC,EAAAixC,EAAAtqE,KAEAuqE,EAAAn4C,EAAA23C,eAAA,GACAt8B,EAAArb,EAAAqb,QACA9E,EAAAvW,EAAAuW,eAYA,GAVAA,GACA8E,EAAA94B,MAAAyd,EAAA++B,SAEA1jB,EAAA/4B,OAAAwD,EAAA,OAEAu1B,EAAA94B,MAAAuD,EAAA,KACAu1B,EAAA/4B,OAAA0d,EAAAg/B,WAIAl5C,EAGA,GAFAsd,EAAA8D,KAAAgxC,EAAAx/D,OAEA69B,EAAA,CAGA,IAAA6hC,EAAAp4C,EAAAo4C,WAAA,IACAC,EAAA,EACAj1C,EAAAmyB,UAAA,OACAnyB,EAAAoyB,aAAA,MACA7tB,GAAAlJ,KAAAuB,EAAAi4C,YAAA,SAAAx9B,EAAAp7B,GACA,IAAAi4D,EAAAH,GAAAC,EAAAnwC,GACA1kB,EAAA+0D,EAAArwC,EAAA,EAAA7D,EAAA2wB,YAAAtZ,EAAAN,MAAA53B,OAEA,IAAAlD,GAAA+4D,IAAAhpE,OAAA,GAAAmT,EAAA60D,EAAAlkC,QAAAmI,EAAA94B,SACA81D,GAAApxC,EAAAmwC,EAAAlkC,QACAklC,IAAAhpE,QAAAiQ,EAAA,QAAA+3D,EAAAlkC,SAIAilC,EAAA94D,GAAA,CACAmkB,KAAA,EACAC,IAAA,EACAlhB,QACAD,OAAA2kB,GAEAmxC,IAAAhpE,OAAA,IAAAmT,EAAA60D,EAAAlkC,UAEAmI,EAAA/4B,QAAA+1D,MACS,CACT,IAAAC,EAAAlB,EAAAlkC,QACAqlC,EAAAv4C,EAAAu4C,aAAA,GACAC,EAAApB,EAAAlkC,QACAulC,EAAA,EACAC,EAAA,EACAC,EAAA1xC,EAAAqxC,EACA3wC,GAAAlJ,KAAAuB,EAAAi4C,YAAA,SAAAx9B,EAAAp7B,GACA,IAAAi4D,EAAAH,GAAAC,EAAAnwC,GACA2xC,EAAAtB,EAAArwC,EAAA,EAAA7D,EAAA2wB,YAAAtZ,EAAAN,MAAA53B,MAEAlD,EAAA,GAAAq5D,EAAAC,EAAAt9B,EAAA/4B,OAAAg2D,IACAE,GAAAC,EAAArB,EAAAlkC,QACAqlC,EAAAhmE,KAAAkmE,GAEAA,EAAA,EACAC,EAAA,GAIAD,EAAAhtD,KAAAC,IAAA+sD,EAAAG,GACAF,GAAAC,EAEAR,EAAA94D,GAAA,CACAmkB,KAAA,EACAC,IAAA,EACAlhB,MAAAq2D,EACAt2D,OAAA2kB,KAGAuxC,GAAAC,EACAF,EAAAhmE,KAAAkmE,GACAp9B,EAAA94B,OAAAi2D,EAIAx4C,EAAAzd,MAAA84B,EAAA94B,MACAyd,EAAA1d,OAAA+4B,EAAA/4B,QAEAg+C,SAAA2W,GAEA1gC,aAAA,WACA,cAAA7oC,KAAAyU,QAAA4D,UAAA,WAAArY,KAAAyU,QAAA4D,UAGA6nB,KAAA,WACA,IAAA5N,EAAAtyB,KACAwtC,EAAAlb,EAAA7d,QACAi1D,EAAAl8B,EAAA/E,OACAnP,EAAAN,GAAAz1B,OACAk1B,EAAAa,EAAAb,aACA0yC,EAAA7xC,EAAA2G,SAAA0D,KACAynC,EAAA94C,EAAAzd,MACA61D,EAAAp4C,EAAAo4C,WAEA,GAAAl9B,EAAAp1B,QAAA,CACA,IAMAizD,EANA31C,EAAApD,EAAAoD,IACA6gC,EAAAiT,GAAAE,EAAAnT,UAAAj9B,EAAAZ,kBAEA8xC,EAAAvwC,GAAAxlB,QAAA4kB,WAAAqwC,GAEAnwC,EAAAixC,EAAAtqE,KAGAw1B,EAAAmyB,UAAA,OACAnyB,EAAAoyB,aAAA,SACApyB,EAAA6N,UAAA,GACA7N,EAAA+N,YAAA8yB,EAEA7gC,EAAA4N,UAAAizB,EAEA7gC,EAAA8D,KAAAgxC,EAAAx/D,OACA,IAAA4+D,EAAAH,GAAAC,EAAAnwC,GACAkxC,EAAAn4C,EAAA23C,eA2DAphC,EAAAvW,EAAAuW,eAGAwiC,EADAxiC,EACA,CACArqB,EAAA8T,EAAAwD,MAAAs1C,EAAAV,EAAA,MAAAhB,EAAAlkC,QACA/mB,EAAA6T,EAAAyD,IAAA2zC,EAAAlkC,QACA7B,KAAA,GAGA,CACAnlB,EAAA8T,EAAAwD,KAAA4zC,EAAAlkC,QACA/mB,EAAA6T,EAAAyD,IAAA2zC,EAAAlkC,QACA7B,KAAA,GAIA,IAAAsnC,EAAA1xC,EAAAmwC,EAAAlkC,QACAvL,GAAAlJ,KAAAuB,EAAAi4C,YAAA,SAAAx9B,EAAAp7B,GACA,IAAA25D,EAAA51C,EAAA2wB,YAAAtZ,EAAAN,MAAA53B,MACAA,EAAA+0D,EAAArwC,EAAA,EAAA+xC,EACA9sD,EAAA6sD,EAAA7sD,EACAC,EAAA4sD,EAAA5sD,EAIAoqB,EACAl3B,EAAA,GAAA6M,EAAA3J,EAAA60D,EAAAlkC,QAAAlT,EAAAwD,KAAAxD,EAAAqb,QAAA94B,QACA4J,EAAA4sD,EAAA5sD,GAAAwsD,EACAI,EAAA1nC,OACAnlB,EAAA6sD,EAAA7sD,EAAA8T,EAAAwD,MAAAs1C,EAAAV,EAAAW,EAAA1nC,OAAA,EAAA+lC,EAAAlkC,SAEW7zB,EAAA,GAAA8M,EAAAwsD,EAAA34C,EAAAyD,IAAAzD,EAAAqb,QAAA/4B,SACX4J,EAAA6sD,EAAA7sD,IAAA8T,EAAAu4C,aAAAQ,EAAA1nC,MAAA+lC,EAAAlkC,QACA/mB,EAAA4sD,EAAA5sD,EAAA6T,EAAAyD,IAAA2zC,EAAAlkC,QACA6lC,EAAA1nC,QA3FA,SAAAnlB,EAAAC,EAAAsuB,GACA,KAAA5gB,MAAAy9C,OAAA,IAKAl0C,EAAA4B,OACA,IAAAiM,EAAAimC,GAAAz8B,EAAAxJ,UAAA4nC,EAAAzqC,aAaA,GAZAhL,EAAA4N,UAAAkmC,GAAAz8B,EAAAzJ,UAAA7K,GACA/C,EAAA+O,QAAA+kC,GAAAz8B,EAAAtI,QAAA0mC,EAAAvnC,gBACAlO,EAAAiP,eAAA6kC,GAAAz8B,EAAApI,eAAAwmC,EAAArnC,kBACApO,EAAA8N,SAAAgmC,GAAAz8B,EAAAvJ,SAAA2nC,EAAApnC,iBACArO,EAAA6N,YACA7N,EAAA+N,YAAA+lC,GAAAz8B,EAAAtJ,YAAAhL,GAEA/C,EAAAgP,aAEAhP,EAAAgP,YAAA8kC,GAAAz8B,EAAAg9B,SAAAoB,EAAAtnC,aAGA2J,EAAA/E,QAAA+E,EAAA/E,OAAAkhC,cAAA,CAGA,IAAA9zC,EAAA+zC,EAAA7rD,KAAAwtD,MAAA,EACA18B,EAAArwB,EAAAorD,EAAA,EACA96B,EAAArwB,EAAA8a,EAAA,EAEAU,GAAAE,OAAA7D,UAAAZ,EAAAqX,EAAA5H,WAAAtP,EAAAgZ,EAAAC,QAGA,IAAAvL,GACA7N,EAAA4yB,WAAA9pC,EAAAC,EAAAmrD,EAAArwC,GAGA7D,EAAA4R,SAAA9oB,EAAAC,EAAAmrD,EAAArwC,GAGA7D,EAAA+B,WAyDA+zC,CAAAhtD,EAAAC,EAAAsuB,GACA09B,EAAA94D,GAAAmkB,KAAAtX,EACAisD,EAAA94D,GAAAokB,IAAAtX,EAxDA,SAAAD,EAAAC,EAAAsuB,EAAAu+B,GACA,IAAAG,EAAAlyC,EAAA,EACAmyC,EAAA9B,EAAA6B,EAAAjtD,EACAmtD,EAAAltD,EAAAgtD,EACA/1C,EAAAqyB,SAAAhb,EAAAN,KAAAi/B,EAAAC,GAEA5+B,EAAAxS,SAEA7E,EAAAmB,YACAnB,EAAA6N,UAAA,EACA7N,EAAAQ,OAAAw1C,EAAAC,GACAj2C,EAAAoB,OAAA40C,EAAAJ,EAAAK,GACAj2C,EAAAuB,UA8CA8wB,CAAAvpC,EAAAC,EAAAsuB,EAAAu+B,GAEAziC,EACAwiC,EAAA7sD,GAAA3J,EAAA60D,EAAAlkC,QAEA6lC,EAAA5sD,GAAAwsD,MASAW,iBAAA,SAAAptD,EAAAC,GACA,IACA9M,EAAAk6D,EAAAC,EADAx5C,EAAAtyB,KAGA,GAAAwe,GAAA8T,EAAAwD,MAAAtX,GAAA8T,EAAA0D,OAAAvX,GAAA6T,EAAAyD,KAAAtX,GAAA6T,EAAA2D,OAIA,IAFA61C,EAAAx5C,EAAA23C,eAEAt4D,EAAA,EAAmBA,EAAAm6D,EAAApqE,SAAeiQ,EAGlC,GAFAk6D,EAAAC,EAAAn6D,GAEA6M,GAAAqtD,EAAA/1C,MAAAtX,GAAAqtD,EAAA/1C,KAAA+1C,EAAAh3D,OAAA4J,GAAAotD,EAAA91C,KAAAtX,GAAAotD,EAAA91C,IAAA81C,EAAAj3D,OAEA,OAAA0d,EAAAi4C,YAAA54D,GAKA,aAQAi3C,YAAA,SAAA7lD,GACA,IAGAgpE,EAHAz5C,EAAAtyB,KACAwtC,EAAAlb,EAAA7d,QACA/I,EAAA,YAAA3I,EAAA2I,KAAA,QAAA3I,EAAA2I,KAGA,iBAAAA,GACA,IAAA8hC,EAAA8b,UAAA9b,EAAAs8B,QACA,WAEO,cAAAp+D,EAKP,OAJA,IAAA8hC,EAAA/1B,QACA,OAOAs0D,EAAAz5C,EAAAs5C,iBAAA7oE,EAAAyb,EAAAzb,EAAA0b,GAEA,UAAA/S,EACAqgE,GAAAv+B,EAAA/1B,SAEA+1B,EAAA/1B,QAAApV,KAAAiwB,EAAAvvB,EAAAowC,OAAA44B,IAGAv+B,EAAAs8B,SAAAiC,IAAAz5C,EAAA43C,eACA53C,EAAA43C,cACA18B,EAAAs8B,QAAAznE,KAAAiwB,EAAAvvB,EAAAowC,OAAA7gB,EAAA43C,cAGA53C,EAAA43C,aAAA6B,GAGAv+B,EAAA8b,SAAAyiB,GAEAv+B,EAAA8b,QAAAjnD,KAAAiwB,EAAAvvB,EAAAowC,OAAA44B,OAMA,SAAAC,GAAAv2C,EAAAw2C,GACA,IAAAt3D,EAAA,IAAAq1D,GAAA,CACAt0C,IAAAD,EAAAC,IACAjhB,QAAAw3D,EACAx2C,UAEA6f,GAAAK,UAAAlgB,EAAA9gB,EAAAs3D,GACA32B,GAAAC,OAAA9f,EAAA9gB,GACA8gB,EAAA9gB,SAGA,IAAAu3D,GAAA,CACA30D,GAAA,SASA40D,SAAAnC,GACAoC,WAAA,SAAA32C,GACA,IAAAw2C,EAAAx2C,EAAAhhB,QAAAE,OAEAs3D,GACAD,GAAAv2C,EAAAw2C,IAGA7a,aAAA,SAAA37B,GACA,IAAAw2C,EAAAx2C,EAAAhhB,QAAAE,OACAA,EAAA8gB,EAAA9gB,OAEAs3D,GACAhyC,GAAAlI,QAAAk6C,EAAAjzC,GAAAz1B,OAAAoR,QAEAA,GACA2gC,GAAAK,UAAAlgB,EAAA9gB,EAAAs3D,GACAt3D,EAAAF,QAAAw3D,GAEAD,GAAAv2C,EAAAw2C,IAEOt3D,IACP2gC,GAAAG,UAAAhgB,EAAA9gB,UACA8gB,EAAA9gB,SAGA03D,WAAA,SAAA52C,EAAA1yB,GACA,IAAA4R,EAAA8gB,EAAA9gB,OAEAA,GACAA,EAAAi0C,YAAA7lD,KAIAupE,GAAAryC,GAAA/J,KAEA8I,GAAAT,KAAA,UACAkT,MAAA,CACArzB,SAAA,EACAwhB,UAAA,OACA4b,WAAA,EACAhQ,QAAA,GACAntB,SAAA,MACAo0B,KAAA,GACAtd,OAAA,OASA,IAAAo9C,GAAA9wC,GAAAvJ,OAAA,CACAoI,WAAA,SAAArkB,GAEAgkB,GAAA/H,OADAlyB,KACAiW,GADAjW,KAGAiqE,eAAA,IAGA7Y,aAAAkb,GACAt1D,OAAA,SAAAq6C,EAAAC,EAAAC,GACA,IAAAj/B,EAAAtyB,KAqBA,OAnBAsyB,EAAA8+B,eAEA9+B,EAAA++B,WACA/+B,EAAAg/B,YACAh/B,EAAAi/B,UAEAj/B,EAAAq/B,sBACAr/B,EAAAs/B,gBACAt/B,EAAAu/B,qBAEAv/B,EAAA83C,oBACA93C,EAAA+3C,cACA/3C,EAAAg4C,mBAEAh4C,EAAAogC,YACApgC,EAAAqgC,MACArgC,EAAAsgC,WAEAtgC,EAAAugC,cACAvgC,EAAAqb,SAEAklB,YAAAyZ,GAEA3a,oBAAA2a,GACA1a,cAAA,WACA,IAAAt/B,EAAAtyB,KAEAsyB,EAAAuW,gBAEAvW,EAAAzd,MAAAyd,EAAA++B,SACA/+B,EAAAwD,KAAA,EACAxD,EAAA0D,MAAA1D,EAAAzd,QAEAyd,EAAA1d,OAAA0d,EAAAg/B,UAEAh/B,EAAAyD,IAAA,EACAzD,EAAA2D,OAAA3D,EAAA1d,QAIA0d,EAAAy+B,YAAA,EACAz+B,EAAA0+B,WAAA,EACA1+B,EAAA2+B,aAAA,EACA3+B,EAAA4+B,cAAA,EAEA5+B,EAAAqb,QAAA,CACA94B,MAAA,EACAD,OAAA,IAGAi9C,mBAAAya,GAEAlC,kBAAAkC,GACAjC,YAAAiC,GACAhC,iBAAAgC,GAEA5Z,UAAA4Z,GACA3Z,IAAA,WACA,IAAArgC,EAAAtyB,KACAwtC,EAAAlb,EAAA7d,QACA2D,EAAAo1B,EAAAp1B,QACAu1B,EAAArb,EAAAqb,QACA6+B,EAAAvyC,GAAAx0B,QAAA+nC,EAAAf,MAAAe,EAAAf,KAAA/qC,OAAA,EAEA+qE,EAAAxyC,GAAAxlB,QAAA4kB,WAAAmU,GAEA8wB,EAAAlmD,EAAAo0D,EAAAC,EAAA9yC,WAAA,EAAA6T,EAAAhI,QAAA,EAEAlT,EAAAuW,gBACA8E,EAAA94B,MAAAyd,EAAA++B,SAEA1jB,EAAA/4B,OAAA0pD,IAEA3wB,EAAA94B,MAAAypD,EACA3wB,EAAA/4B,OAAA0d,EAAAg/B,WAGAh/B,EAAAzd,MAAA84B,EAAA94B,MACAyd,EAAA1d,OAAA+4B,EAAA/4B,QAEAg+C,SAAA0Z,GAEAzjC,aAAA,WACA,IAAA8U,EAAA39C,KAAAyU,QAAA4D,SACA,cAAAslC,GAAA,WAAAA,GAGAzd,KAAA,WACA,IAAA5N,EAAAtyB,KACA01B,EAAApD,EAAAoD,IACA8X,EAAAlb,EAAA7d,QAEA,GAAA+4B,EAAAp1B,QAAA,CACA,IASAi5C,EAAAqb,EAAAC,EATAF,EAAAxyC,GAAAxlB,QAAA4kB,WAAAmU,GAEA7T,EAAA8yC,EAAA9yC,WACAh4B,EAAAg4B,EAAA,EAAA6T,EAAAhI,QACAhP,EAAA,EACAT,EAAAzD,EAAAyD,IACAD,EAAAxD,EAAAwD,KACAG,EAAA3D,EAAA2D,OACAD,EAAA1D,EAAA0D,MAEAN,EAAA4N,UAAArJ,GAAAxJ,eAAA+c,EAAA+oB,UAAAv9B,GAAAz1B,OAAAm1B,kBAEAhD,EAAA8D,KAAAizC,EAAAzhE,OAEAsnB,EAAAuW,gBACA6jC,EAAA52C,GAAAE,EAAAF,GAAA,EAEA62C,EAAA52C,EAAAp0B,EACA0vD,EAAAr7B,EAAAF,IAEA42C,EAAA,SAAAl/B,EAAAn1B,SAAAyd,EAAAn0B,EAAAq0B,EAAAr0B,EACAgrE,EAAA52C,GAAAE,EAAAF,GAAA,EACAs7B,EAAAp7B,EAAAF,EACAS,EAAAzY,KAAAkC,IAAA,SAAAutB,EAAAn1B,UAAA,QAGAqd,EAAA4B,OACA5B,EAAAyiC,UAAAuU,EAAAC,GACAj3C,EAAA3G,OAAAyH,GACAd,EAAAmyB,UAAA,SACAnyB,EAAAoyB,aAAA,SACA,IAAArb,EAAAe,EAAAf,KAEA,GAAAxS,GAAAx0B,QAAAgnC,GAGA,IAFA,IAAAhuB,EAAA,EAEA9M,EAAA,EAAyBA,EAAA86B,EAAA/qC,SAAiBiQ,EAC1C+jB,EAAAqyB,SAAAtb,EAAA96B,GAAA,EAAA8M,EAAA4yC,GACA5yC,GAAAkb,OAGAjE,EAAAqyB,SAAAtb,EAAA,IAAA4kB,GAGA37B,EAAA+B,cAKA,SAAAm1C,GAAAn3C,EAAAo3C,GACA,IAAAphC,EAAA,IAAA8gC,GAAA,CACA72C,IAAAD,EAAAC,IACAjhB,QAAAo4D,EACAp3C,UAEA6f,GAAAK,UAAAlgB,EAAAgW,EAAAohC,GACAv3B,GAAAC,OAAA9f,EAAAgW,GACAhW,EAAAq3C,WAAArhC,EAGA,IAqCA/2B,GAAA,GACA+yD,GAAAmB,GACAj0D,GAAAu3D,GACAzgC,GAxCA,CACAl0B,GAAA,QASA40D,SAAAI,GACAH,WAAA,SAAA32C,GACA,IAAAo3C,EAAAp3C,EAAAhhB,QAAAg3B,MAEAohC,GACAD,GAAAn3C,EAAAo3C,IAGAzb,aAAA,SAAA37B,GACA,IAAAo3C,EAAAp3C,EAAAhhB,QAAAg3B,MACAqhC,EAAAr3C,EAAAq3C,WAEAD,GACA5yC,GAAAlI,QAAA86C,EAAA7zC,GAAAz1B,OAAAkoC,OAEAqhC,GACAx3B,GAAAK,UAAAlgB,EAAAq3C,EAAAD,GACAC,EAAAr4D,QAAAo4D,GAEAD,GAAAn3C,EAAAo3C,IAEOC,IACPx3B,GAAAG,UAAAhgB,EAAAq3C,UACAr3C,EAAAq3C,cAwCA,QAAA3uD,MAhCAzJ,GAAA+yD,UACA/yD,GAAAC,UACAD,GAAA+2B,SAKAgiB,GAAAp3C,QAAA4jB,GA76JA,WAoaA,SAAA8yC,EAAAC,EAAA91D,EAAA+1D,GACA,IAAAC,EAaA,MAXA,kBAAAF,GACAE,EAAAlhD,SAAAghD,EAAA,KAEA,IAAAA,EAAAl7D,QAAA,OAEAo7D,IAAA,IAAAh2D,EAAAgkC,WAAA+xB,KAGAC,EAAAF,EAGAE,EAQA,SAAAC,EAAAzsE,GACA,YAAA8D,IAAA9D,GAAA,OAAAA,GAAA,SAAAA,EAWA,SAAA0sE,EAAAC,EAAAC,EAAAC,GACA,IAAAvyC,EAAAgf,SAAAwzB,YAEAtyB,EAAAjhB,GAAAwzC,eAAAJ,GAEAK,EAAA1yC,EAAA2yC,iBAAAN,GAAAC,GACAM,EAAA5yC,EAAA2yC,iBAAAzyB,GAAAoyB,GACAO,EAAAV,EAAAO,GACAI,EAAAX,EAAAS,GACAG,EAAAv9C,OAAAojB,kBAEA,OAAAi6B,GAAAC,EACA/vD,KAAAD,IAAA+vD,EAAAd,EAAAW,EAAAL,EAAAE,GAAAQ,EAAAD,EAAAf,EAAAa,EAAA1yB,EAAAqyB,GAAAQ,GAGA,OAndA9zC,GAAA6a,MAAA,SAAAk5B,EAAAC,GACA,GAAAh0C,GAAAx0B,QAAAuoE,IAAA5kE,MAAAjJ,UAAAywC,OACA,OAAAo9B,EAAAp9B,OAAAq9B,GAGA,IAAAC,EAAA,GAMA,OALAj0C,GAAAlJ,KAAAi9C,EAAA,SAAAp7C,GACAq7C,EAAAr7C,IACAs7C,EAAArpE,KAAA+tB,KAGAs7C,GAGAj0C,GAAA8C,UAAA3zB,MAAAjJ,UAAA48B,UAAA,SAAAx7B,EAAAqvB,EAAA4H,GACA,OAAAj3B,EAAAw7B,UAAAnM,EAAA4H,IACK,SAAAj3B,EAAAqvB,EAAA4H,GACLA,OAAAh0B,IAAAg0B,EAAAj3B,EAAAi3B,EAEA,QAAA7mB,EAAA,EAAA2f,EAAA/vB,EAAAG,OAA0CiQ,EAAA2f,IAAU3f,EACpD,GAAAif,EAAAvuB,KAAAm2B,EAAAj3B,EAAAoQ,KAAApQ,GACA,OAAAoQ,EAIA,UAGAsoB,GAAAsd,cAAA,SAAA42B,EAAAF,EAAAG,GAEAn0C,GAAA9J,cAAAi+C,KACAA,GAAA,GAGA,QAAAz8D,EAAAy8D,EAAA,EAAkCz8D,EAAAw8D,EAAAzsE,OAA0BiQ,IAAA,CAC5D,IAAA08D,EAAAF,EAAAx8D,GAEA,GAAAs8D,EAAAI,GACA,OAAAA,IAKAp0C,GAAAq0C,kBAAA,SAAAH,EAAAF,EAAAG,GAEAn0C,GAAA9J,cAAAi+C,KACAA,EAAAD,EAAAzsE,QAGA,QAAAiQ,EAAAy8D,EAAA,EAAkCz8D,GAAA,EAAQA,IAAA,CAC1C,IAAA08D,EAAAF,EAAAx8D,GAEA,GAAAs8D,EAAAI,GACA,OAAAA,IAMAp0C,GAAAuB,SAAA,SAAA5tB,GACA,OAAAue,MAAAF,WAAAre,KAAAyiB,SAAAziB,IAGAqsB,GAAAuhC,aAAA,SAAAh9C,EAAAC,EAAA8vD,GACA,OAAAxwD,KAAAknB,IAAAzmB,EAAAC,GAAA8vD,GAGAt0C,GAAAshC,YAAA,SAAA/8C,EAAA+vD,GACA,IAAAC,EAAAzwD,KAAAkM,MAAAzL,GACA,OAAAgwD,EAAAD,EAAA/vD,GAAAgwD,EAAAD,EAAA/vD,GAGAyb,GAAAjc,IAAA,SAAAzc,GACA,OAAAA,EAAAykD,OAAA,SAAAhoC,EAAAtd,GACA,OAAAyrB,MAAAzrB,GAIAsd,EAHAD,KAAAC,MAAAtd,IAIO8vB,OAAAmuC,oBAGP1kC,GAAAnc,IAAA,SAAAvc,GACA,OAAAA,EAAAykD,OAAA,SAAAloC,EAAApd,GACA,OAAAyrB,MAAAzrB,GAIAod,EAHAC,KAAAD,MAAApd,IAIO8vB,OAAAojB,oBAGP3Z,GAAA2/B,KAAA77C,KAAA67C,KAAA,SAAAp7C,GACA,OAAAT,KAAA67C,KAAAp7C,IACK,SAAAA,GAGL,YAFAA,OAEA2N,MAAA3N,GACAA,EAGAA,EAAA,QAEAyb,GAAA40B,MAAA9wC,KAAA8wC,MAAA,SAAArwC,GACA,OAAAT,KAAA8wC,MAAArwC,IACK,SAAAA,GACL,IAAAiwD,EAAA1wD,KAAA2wD,IAAAlwD,GAAAT,KAAA4wD,OAIAC,EAAA7wD,KAAAkM,MAAAwkD,GACAI,EAAArwD,IAAAT,KAAAQ,IAAA,GAAAqwD,GACA,OAAAC,EAAAD,EAAAH,GAGAx0C,GAAAs5B,UAAA,SAAAvkC,GACA,OAAAA,GAAAjR,KAAAkC,GAAA,MAGAga,GAAAklC,UAAA,SAAA2P,GACA,OAAAA,GAAA,IAAA/wD,KAAAkC,KAWAga,GAAAqhC,eAAA,SAAA98C,GACA,GAAAyb,GAAA5J,SAAA7R,GAAA,CAOA,IAHA,IAAAzb,EAAA,EACAoc,EAAA,EAEApB,KAAAkM,MAAAzL,EAAAzb,OAAAyb,GACAzb,GAAA,GACAoc,IAGA,OAAAA,IAIA8a,GAAAkI,kBAAA,SAAA4sC,EAAAC,GACA,IAAAC,EAAAD,EAAAxwD,EAAAuwD,EAAAvwD,EACA0wD,EAAAF,EAAAvwD,EAAAswD,EAAAtwD,EACA0wD,EAAApxD,KAAAmC,KAAA+uD,IAAAC,KACA9sC,EAAArkB,KAAAiC,MAAAkvD,EAAAD,GAMA,OAJA7sC,GAAA,GAAArkB,KAAAkC,KACAmiB,GAAA,EAAArkB,KAAAkC,IAGA,CACAmiB,QACAC,SAAA8sC,IAIAl1C,GAAA+nB,sBAAA,SAAA/N,EAAAC,GACA,OAAAn2B,KAAAmC,KAAAnC,KAAAQ,IAAA21B,EAAA11B,EAAAy1B,EAAAz1B,EAAA,GAAAT,KAAAQ,IAAA21B,EAAAz1B,EAAAw1B,EAAAx1B,EAAA,KAUAwb,GAAAm1C,WAAA,SAAAC,GACA,OAAAA,EAAA,YAYAp1C,GAAA+8B,YAAA,SAAAvhC,EAAAs/B,EAAAlgD,GACA,IAAAm1C,EAAAv0B,EAAA65C,wBACAC,EAAA16D,EAAA,EACA,OAAAkJ,KAAAkM,OAAA8qC,EAAAwa,GAAAvlB,KAAAulB,GAGAt1C,GAAA8W,YAAA,SAAAy+B,EAAAC,EAAAC,EAAArwD,GAIA,IAAAqY,EAAA83C,EAAA3qC,KAAA4qC,EAAAD,EACA74D,EAAA84D,EACA/4D,EAAAg5D,EAAA7qC,KAAA4qC,EAAAC,EACAC,EAAA5xD,KAAAmC,KAAAnC,KAAAQ,IAAA5H,EAAA6H,EAAAkZ,EAAAlZ,EAAA,GAAAT,KAAAQ,IAAA5H,EAAA8H,EAAAiZ,EAAAjZ,EAAA,IACAmxD,EAAA7xD,KAAAmC,KAAAnC,KAAAQ,IAAA7H,EAAA8H,EAAA7H,EAAA6H,EAAA,GAAAT,KAAAQ,IAAA7H,EAAA+H,EAAA9H,EAAA8H,EAAA,IACAoxD,EAAAF,KAAAC,GACAE,EAAAF,GAAAD,EAAAC,GAEAC,EAAA1jD,MAAA0jD,GAAA,EAAAA,EACAC,EAAA3jD,MAAA2jD,GAAA,EAAAA,EACA,IAAAC,EAAA1wD,EAAAwwD,EAEAG,EAAA3wD,EAAAywD,EACA,OACAp4C,SAAA,CACAlZ,EAAA7H,EAAA6H,EAAAuxD,GAAAr5D,EAAA8H,EAAAkZ,EAAAlZ,GACAC,EAAA9H,EAAA8H,EAAAsxD,GAAAr5D,EAAA+H,EAAAiZ,EAAAjZ,IAEA/H,KAAA,CACA8H,EAAA7H,EAAA6H,EAAAwxD,GAAAt5D,EAAA8H,EAAAkZ,EAAAlZ,GACAC,EAAA9H,EAAA8H,EAAAuxD,GAAAt5D,EAAA+H,EAAAiZ,EAAAjZ,MAKAwb,GAAAg2C,QAAAz/C,OAAAy/C,SAAA,MAEAh2C,GAAA6W,oBAAA,SAAA1M,GAKA,IASAzyB,EAAAu+D,EAAAC,EAAAC,EA8BAC,EAAAC,EAAAC,EAAAC,EA6BAr8B,EApEAs8B,GAAArsC,GAAA,IAAAr5B,IAAA,SAAA6L,GACA,OACAkkB,MAAAlkB,EAAA8jB,OACAg2C,OAAA,EACAC,GAAA,KAIAC,EAAAH,EAAA/uE,OAGA,IAAAiQ,EAAA,EAAiBA,EAAAi/D,IAAej/D,EAGhC,KAFAw+D,EAAAM,EAAA9+D,IAEAmpB,MAAA+J,KAAA,CAOA,GAHAqrC,EAAAv+D,EAAA,EAAA8+D,EAAA9+D,EAAA,SACAy+D,EAAAz+D,EAAAi/D,EAAA,EAAAH,EAAA9+D,EAAA,WAEAy+D,EAAAt1C,MAAA+J,KAAA,CACA,IAAAgsC,EAAAT,EAAAt1C,MAAAtc,EAAA2xD,EAAAr1C,MAAAtc,EAEA2xD,EAAAO,OAAA,IAAAG,GAAAT,EAAAt1C,MAAArc,EAAA0xD,EAAAr1C,MAAArc,GAAAoyD,EAAA,GAGAX,KAAAp1C,MAAA+J,KACAsrC,EAAAQ,GAAAR,EAAAO,QACSN,KAAAt1C,MAAA+J,KACTsrC,EAAAQ,GAAAT,EAAAQ,OACS1wE,KAAA45D,KAAAsW,EAAAQ,UAAA1wE,KAAA45D,KAAAuW,EAAAO,QACTP,EAAAQ,GAAA,EAEAR,EAAAQ,IAAAT,EAAAQ,OAAAP,EAAAO,QAAA,EAOA,IAAA/+D,EAAA,EAAiBA,EAAAi/D,EAAA,IAAmBj/D,EACpCw+D,EAAAM,EAAA9+D,GACAy+D,EAAAK,EAAA9+D,EAAA,GAEAw+D,EAAAr1C,MAAA+J,MAAAurC,EAAAt1C,MAAA+J,OAIA5K,GAAAuhC,aAAA2U,EAAAO,OAAA,EAAA1wE,KAAAiwE,SACAE,EAAAQ,GAAAP,EAAAO,GAAA,GAIAN,EAAAF,EAAAQ,GAAAR,EAAAO,OACAJ,EAAAF,EAAAO,GAAAR,EAAAO,QACAF,EAAAzyD,KAAAQ,IAAA8xD,EAAA,GAAAtyD,KAAAQ,IAAA+xD,EAAA,KAEA,IAIAC,EAAA,EAAAxyD,KAAAmC,KAAAswD,GACAL,EAAAQ,GAAAN,EAAAE,EAAAJ,EAAAO,OACAN,EAAAO,GAAAL,EAAAC,EAAAJ,EAAAO,UAMA,IAAA/+D,EAAA,EAAiBA,EAAAi/D,IAAej/D,GAChCw+D,EAAAM,EAAA9+D,IAEAmpB,MAAA+J,OAIAqrC,EAAAv+D,EAAA,EAAA8+D,EAAA9+D,EAAA,QACAy+D,EAAAz+D,EAAAi/D,EAAA,EAAAH,EAAA9+D,EAAA,QAEAu+D,MAAAp1C,MAAA+J,OACAsP,GAAAg8B,EAAAr1C,MAAAtc,EAAA0xD,EAAAp1C,MAAAtc,GAAA,EACA2xD,EAAAr1C,MAAA7C,sBAAAk4C,EAAAr1C,MAAAtc,EAAA21B,EACAg8B,EAAAr1C,MAAA3C,sBAAAg4C,EAAAr1C,MAAArc,EAAA01B,EAAAg8B,EAAAQ,IAGAP,MAAAt1C,MAAA+J,OACAsP,GAAAi8B,EAAAt1C,MAAAtc,EAAA2xD,EAAAr1C,MAAAtc,GAAA,EACA2xD,EAAAr1C,MAAA5C,kBAAAi4C,EAAAr1C,MAAAtc,EAAA21B,EACAg8B,EAAAr1C,MAAA1C,kBAAA+3C,EAAAr1C,MAAArc,EAAA01B,EAAAg8B,EAAAQ,MAKA12C,GAAA+W,SAAA,SAAAg9B,EAAAvsE,EAAAwnE,GACA,OAAAA,EACAxnE,GAAAusE,EAAAtsE,OAAA,EAAAssE,EAAA,GAAAA,EAAAvsE,EAAA,GAGAA,GAAAusE,EAAAtsE,OAAA,EAAAssE,IAAAtsE,OAAA,GAAAssE,EAAAvsE,EAAA,IAGAw4B,GAAA2K,aAAA,SAAAopC,EAAAvsE,EAAAwnE,GACA,OAAAA,EACAxnE,GAAA,EAAAusE,IAAAtsE,OAAA,GAAAssE,EAAAvsE,EAAA,GAGAA,GAAA,EAAAusE,EAAA,GAAAA,EAAAvsE,EAAA,IAIAw4B,GAAAohC,QAAA,SAAA1wB,EAAA1gB,GACA,IAAAwkD,EAAA1wD,KAAAkB,MAAAgb,GAAA40B,MAAAlkB,IACAmmC,EAAAnmC,EAAA5sB,KAAAQ,IAAA,GAAAkwD,GAuBA,OApBAxkD,EACA6mD,EAAA,IACA,EACSA,EAAA,EACT,EACSA,EAAA,EACT,EAEA,GAEOA,GAAA,EACP,EACOA,GAAA,EACP,EACOA,GAAA,EACP,EAEA,IAGA/yD,KAAAQ,IAAA,GAAAkwD,IAIAx0C,GAAA+C,iBACA,qBAAAhN,OACA,SAAAY,GACAA,KAIAZ,OAAA6M,uBAAA7M,OAAA+gD,6BAAA/gD,OAAAghD,0BAAAhhD,OAAAihD,wBAAAjhD,OAAAkhD,yBAAA,SAAAtgD,GACA,OAAAZ,OAAAmhD,WAAAvgD,EAAA,SAKAqJ,GAAAiZ,oBAAA,SAAAk+B,EAAA37C,GACA,IAAAmM,EAAAyD,EACAtiC,EAAAquE,EAAAC,eAAAD,EACAj3C,EAAAi3C,EAAA1/D,QAAA0/D,EAAAE,WACAC,EAAAp3C,EAAAq3C,wBACAC,EAAA1uE,EAAA0uE,QAEAA,KAAA/vE,OAAA,GACAkgC,EAAA6vC,EAAA,GAAAC,QACArsC,EAAAosC,EAAA,GAAAE,UAEA/vC,EAAA7+B,EAAA2uE,QACArsC,EAAAtiC,EAAA4uE,SAMA,IAAA5gB,EAAA9kC,WAAAgO,GAAAkf,SAAAhf,EAAA,iBACA62B,EAAA/kC,WAAAgO,GAAAkf,SAAAhf,EAAA,gBACA82B,EAAAhlC,WAAAgO,GAAAkf,SAAAhf,EAAA,kBACA+2B,EAAAjlC,WAAAgO,GAAAkf,SAAAhf,EAAA,mBACAtlB,EAAA08D,EAAAv7C,MAAAu7C,EAAAz7C,KAAAi7B,EAAAE,EACAr8C,EAAA28D,EAAAt7C,OAAAs7C,EAAAx7C,IAAAi7B,EAAAE,EAKA,OAFAtvB,EAAA7jB,KAAAkM,OAAA2X,EAAA2vC,EAAAz7C,KAAAi7B,GAAAl8C,EAAAslB,EAAAtlB,MAAA4gB,EAAA65C,yBACAjqC,EAAAtnB,KAAAkM,OAAAob,EAAAksC,EAAAx7C,IAAAi7B,GAAAp8C,EAAAulB,EAAAvlB,OAAA6gB,EAAA65C,yBACA,CACA9wD,EAAAojB,EACAnjB,EAAA4mB,IA0DApL,GAAA23C,mBAAA,SAAAvE,GACA,OAAAD,EAAAC,EAAA,4BAIApzC,GAAA43C,oBAAA,SAAAxE,GACA,OAAAD,EAAAC,EAAA,8BAOApzC,GAAA63C,kBAAA,SAAA92B,EAAAxV,EAAAusC,GAEA,OADAvsC,EAAAvL,GAAAkf,SAAA6B,EAAAxV,IACA1zB,QAAA,QAAAigE,EAAA/lD,SAAAwZ,EAAA,QAAAxZ,SAAAwZ,EAAA,KAOAvL,GAAAwzC,eAAA,SAAAJ,GACA,IAAA2E,EAAA3E,EAAAnyB,WAMA,OAJA82B,GAAA,wBAAAA,EAAAtuE,aACAsuE,IAAAC,MAGAD,GAGA/3C,GAAAwwB,gBAAA,SAAA4iB,GACA,IAAAryB,EAAA/gB,GAAAwzC,eAAAJ,GAEA,IAAAryB,EACA,OAAAqyB,EAAAlyB,YAGA,IAAAA,EAAAH,EAAAG,YAEA4V,EAAA92B,GAAA63C,kBAAA92B,EAAA,eAAAG,GAEA8V,EAAAh3B,GAAA63C,kBAAA92B,EAAA,gBAAAG,GAEAj9B,EAAAi9B,EAAA4V,EAAAE,EACAihB,EAAAj4C,GAAA23C,mBAAAvE,GACA,OAAAlhD,MAAA+lD,GAAAh0D,EAAAH,KAAAD,IAAAI,EAAAg0D,IAGAj4C,GAAA0wB,iBAAA,SAAA0iB,GACA,IAAAryB,EAAA/gB,GAAAwzC,eAAAJ,GAEA,IAAAryB,EACA,OAAAqyB,EAAA8E,aAGA,IAAAA,EAAAn3B,EAAAm3B,aAEAnhB,EAAA/2B,GAAA63C,kBAAA92B,EAAA,cAAAm3B,GAEAjhB,EAAAj3B,GAAA63C,kBAAA92B,EAAA,iBAAAm3B,GAEAh3D,EAAAg3D,EAAAnhB,EAAAE,EACAkhB,EAAAn4C,GAAA43C,oBAAAxE,GACA,OAAAlhD,MAAAimD,GAAAj3D,EAAA4C,KAAAD,IAAA3C,EAAAi3D,IAGAn4C,GAAAkf,SAAA,SAAAY,EAAA1yC,GACA,OAAA0yC,EAAAs4B,aAAAt4B,EAAAs4B,aAAAhrE,GAAA2yC,SAAAwzB,YAAAG,iBAAA5zB,EAAA,MAAAu4B,iBAAAjrE,IAGA4yB,GAAA8vB,YAAA,SAAAt0B,EAAA88C,GACA,IAAAC,EAAA/8C,EAAA65C,wBAAAiD,GAAA,qBAAAviD,eAAAg6B,kBAAA,EAEA,OAAAwoB,EAAA,CAIA,IAAAr4C,EAAA1E,EAAA0E,OACAvlB,EAAA6gB,EAAA7gB,OACAC,EAAA4gB,EAAA5gB,MACAslB,EAAAvlB,SAAA49D,EACAr4C,EAAAtlB,QAAA29D,EACA/8C,EAAAC,IAAAxJ,MAAAsmD,KAIAr4C,EAAA5D,MAAA3hB,QAAAulB,EAAA5D,MAAA1hB,QACAslB,EAAA5D,MAAA3hB,SAAA,KACAulB,EAAA5D,MAAA1hB,QAAA,QAKAolB,GAAAqsB,WAAA,SAAAmsB,EAAA74C,EAAAF,GACA,OAAAE,EAAA,IAAA64C,EAAA,MAAA/4C,GAGAO,GAAAy1B,YAAA,SAAAh6B,EAAA8D,EAAAk5C,EAAAttE,GAEA,IAAArF,GADAqF,KAAA,IACArF,KAAAqF,EAAArF,MAAA,GACA4yE,EAAAvtE,EAAAwtE,eAAAxtE,EAAAwtE,gBAAA,GAEAxtE,EAAAo0B,WACAz5B,EAAAqF,EAAArF,KAAA,GACA4yE,EAAAvtE,EAAAwtE,eAAA,GACAxtE,EAAAo0B,QAGA9D,EAAA8D,OACA,IAAAq5C,EAAA,EACA54C,GAAAlJ,KAAA2hD,EAAA,SAAAI,QAEAtuE,IAAAsuE,GAAA,OAAAA,IAAA,IAAA74C,GAAAx0B,QAAAqtE,GACAD,EAAA54C,GAAAosB,YAAA3wB,EAAA31B,EAAA4yE,EAAAE,EAAAC,GACS74C,GAAAx0B,QAAAqtE,IAGT74C,GAAAlJ,KAAA+hD,EAAA,SAAAC,QAEAvuE,IAAAuuE,GAAA,OAAAA,GAAA94C,GAAAx0B,QAAAstE,KACAF,EAAA54C,GAAAosB,YAAA3wB,EAAA31B,EAAA4yE,EAAAE,EAAAE,QAKA,IAAAC,EAAAL,EAAAjxE,OAAA,EAEA,GAAAsxE,EAAAN,EAAAhxE,OAAA,CACA,QAAAiQ,EAAA,EAAuBA,EAAAqhE,EAAWrhE,WAClC5R,EAAA4yE,EAAAhhE,IAGAghE,EAAAxpE,OAAA,EAAA6pE,GAGA,OAAAH,GAGA54C,GAAAosB,YAAA,SAAA3wB,EAAA31B,EAAA4yE,EAAAE,EAAA7nE,GACA,IAAAsgE,EAAAvrE,EAAAiL,GAWA,OATAsgE,IACAA,EAAAvrE,EAAAiL,GAAA0qB,EAAA2wB,YAAAr7C,GAAA6J,MACA89D,EAAA9tE,KAAAmG,IAGAsgE,EAAAuH,IACAA,EAAAvH,GAGAuH,GAGA54C,GAAAi6B,mBAAA,SAAAwe,GACA,IAAAO,EAAA,EAQA,OAPAh5C,GAAAlJ,KAAA2hD,EAAA,SAAAI,GACA74C,GAAAx0B,QAAAqtE,IACAA,EAAApxE,OAAAuxE,IACAA,EAAAH,EAAApxE,UAIAuxE,GAGAh5C,GAAA01B,MAAA1/B,EAGK,SAAAvvB,GAML,OAJAA,aAAAwyE,iBACAxyE,EAAAs4B,GAAAz1B,OAAAk1B,cAGAxI,EAAAvvB,IATA,SAAAA,GAEA,OADAoV,QAAAC,MAAA,uBACArV,GAUAu5B,GAAAsG,cAAA,SAAA4yC,GAEA,OAAAA,aAAAC,eAAAD,aAAAD,eAAAC,EAAAl5C,GAAA01B,MAAAwjB,GAAA3kD,SAAA,IAAAD,OAAA,IAAAjD,aAiyIA+nD,GACA5lB,GAAA6lB,UAAA/kB,GACAd,GAAA8lB,UAAAx3C,GACA0xB,GAAA+lB,iBAAAp3C,GACAqxB,GAAAv1C,eACAu1C,GAAA/vB,kBAAA8D,GACAisB,GAAArzC,SAAA4e,GACAy0B,GAAArzB,QAAAqB,GACAgyB,GAAAxtB,YACAwtB,GAAAgmB,YAAAl/B,GACAkZ,GAAAimB,QAAAp+B,GACAmY,GAAAnR,YACAmR,GAAA/4C,QAAAspC,GACAyP,GAAAkmB,MAAA7iB,GACArD,GAAAmmB,aAAA70B,GACA0O,GAAAomB,MAAAplB,GACAhB,GAAAqmB,QAAA/qB,GAEA0E,GAAAp3C,QAAA0a,KAAAsN,GAAA,SAAAnS,EAAAxgB,GACA+hD,GAAAmmB,aAAA30B,kBAAAvzC,EAAAwgB,IAAAstC,aAIA9kD,GACAA,GAAA1O,eAAAmY,KACAsvC,GAAA/4C,QAAAypC,SAAAzpC,GAAAyJ,KAIAsvC,GAAAnR,SAAAhiB,aACA,IAAAy5C,GAAAtmB,GA8FA,MA5FA,qBAAAz9B,SACAA,OAAA05B,MAAA+D,IAYAA,GAAA/D,MAAA+D,GASAA,GAAAuc,OAAAt1D,GAAAC,OAAAw3D,SASA1e,GAAA8e,MAAA73D,GAAA+2B,MAAA0gC,SASA1e,GAAAumB,cAAAvmB,GAAA/4C,QAUA+4C,GAAAwmB,WAAAxmB,GAAArzB,QAAAlI,OAAA,IASAu7B,GAAAymB,cAAAzmB,GAAAp3C,QAAA8jB,OASAszB,GAAA0mB,cAAA1mB,GAAAimB,QASAjmB,GAAA2mB,gBAAA3a,GAQAhM,GAAAp3C,QAAA0a,KAAA,0EAAAsjD,GACA5mB,GAAA4mB,GAAA,SAAA3+C,EAAA4+C,GACA,WAAA7mB,GAAA/3B,EAAA+3B,GAAAp3C,QAAAwb,MAAAyiD,GAAA,GAA6E,CAC7E5oE,KAAA2oE,EAAA1kD,OAAA,GAAA4kD,cAAAF,EAAAxqD,MAAA,SAIAkqD,GAlxb8DS,CAAA,WAC9D,IACA,OAAaj1E,EAAQ,MAChB,MAAAwD,KAHyD,2BCP9D,SAAAvC,GAI8DA,EAAAC,QAC7D,WACD,aAEA,IAAAg0E,EAmHAC,EAjHA,SAAAC,IACA,OAAAF,EAAA1kE,MAAA,KAAAD,WASA,SAAArK,EAAA+9D,GACA,OAAAA,aAAAp6D,OAAA,mBAAArH,OAAA5B,UAAAuD,SAAArB,KAAAmhE,GAGA,SAAAvgE,EAAAugE,GAGA,aAAAA,GAAA,oBAAAzhE,OAAA5B,UAAAuD,SAAArB,KAAAmhE,GAmBA,SAAAoR,EAAApR,GACA,gBAAAA,EAGA,SAAAhoC,EAAAgoC,GACA,wBAAAA,GAAA,oBAAAzhE,OAAA5B,UAAAuD,SAAArB,KAAAmhE,GAGA,SAAAqR,EAAArR,GACA,OAAAA,aAAA9mC,MAAA,kBAAA36B,OAAA5B,UAAAuD,SAAArB,KAAAmhE,GAGA,SAAAz4D,EAAA+pE,EAAAjkD,GACA,IACAlf,EADAmuB,EAAA,GAGA,IAAAnuB,EAAA,EAAeA,EAAAmjE,EAAApzE,SAAgBiQ,EAC/BmuB,EAAAj7B,KAAAgsB,EAAAikD,EAAAnjE,OAGA,OAAAmuB,EAGA,SAAAi1C,EAAA3+D,EAAAyH,GACA,OAAA9b,OAAA5B,UAAA6F,eAAA3D,KAAA+T,EAAAyH,GAGA,SAAAqU,EAAA9b,EAAAyH,GACA,QAAAlM,KAAAkM,EACAk3D,EAAAl3D,EAAAlM,KACAyE,EAAAzE,GAAAkM,EAAAlM,IAYA,OARAojE,EAAAl3D,EAAA,cACAzH,EAAA1S,SAAAma,EAAAna,UAGAqxE,EAAAl3D,EAAA,aACAzH,EAAAzJ,QAAAkR,EAAAlR,SAGAyJ,EAGA,SAAA4+D,EAAAxR,EAAAxV,EAAAinB,EAAAC,GACA,OAAAC,GAAA3R,EAAAxV,EAAAinB,EAAAC,GAAA,GAAAE,MAuBA,SAAAC,EAAAz1D,GAKA,OAJA,MAAAA,EAAA01D,MACA11D,EAAA01D,IApBA,CACAC,OAAA,EACAC,aAAA,GACAC,YAAA,GACAC,UAAA,EACAC,cAAA,EACAC,WAAA,EACAC,aAAA,KACAC,eAAA,EACAC,iBAAA,EACAC,KAAA,EACAC,gBAAA,GACAC,SAAA,KACAC,SAAA,EACAC,iBAAA,IASAx2D,EAAA01D,IAsBA,SAAA3oD,EAAA/M,GACA,SAAAA,EAAAy2D,SAAA,CACA,IAAAC,EAAAjB,EAAAz1D,GACA22D,EAAA7B,EAAAryE,KAAAi0E,EAAAL,gBAAA,SAAAtkE,GACA,aAAAA,IAEA6kE,GAAArqD,MAAAvM,EAAA62D,GAAAC,YAAAJ,EAAAZ,SAAA,IAAAY,EAAAf,QAAAe,EAAAT,eAAAS,EAAAK,iBAAAL,EAAAF,kBAAAE,EAAAV,YAAAU,EAAAR,gBAAAQ,EAAAP,mBAAAO,EAAAJ,UAAAI,EAAAJ,UAAAK,GAMA,GAJA32D,EAAAg3D,UACAJ,KAAA,IAAAF,EAAAX,eAAA,IAAAW,EAAAd,aAAA9zE,aAAA8C,IAAA8xE,EAAAO,SAGA,MAAA90E,OAAA+0E,UAAA/0E,OAAA+0E,SAAAl3D,GAGA,OAAA42D,EAFA52D,EAAAy2D,SAAAG,EAMA,OAAA52D,EAAAy2D,SAGA,SAAAU,EAAAT,GACA,IAAA12D,EAAAo1D,EAAA9oC,KAQA,OANA,MAAAoqC,EACApkD,EAAAmjD,EAAAz1D,GAAA02D,GAEAjB,EAAAz1D,GAAAm2D,iBAAA,EAGAn2D,EA/CA80D,EADAtrE,MAAAjJ,UAAAu0E,KACAtrE,MAAAjJ,UAAAu0E,KAEA,SAAAsC,GAIA,IAHA,IAAA33D,EAAAtd,OAAA/B,MACAkxB,EAAA7R,EAAA3d,SAAA,EAEAiQ,EAAA,EAAqBA,EAAAuf,EAASvf,IAC9B,GAAAA,KAAA0N,GAAA23D,EAAA30E,KAAArC,KAAAqf,EAAA1N,KAAA0N,GACA,SAIA,UAwCA,IAAA43D,EAAAtC,EAAAsC,iBAAA,GAEA,SAAAC,EAAAltD,EAAAD,GACA,IAAApY,EAAA6d,EAAAzQ,EA0CA,GAxCA61D,EAAA7qD,EAAAotD,oBACAntD,EAAAmtD,iBAAAptD,EAAAotD,kBAGAvC,EAAA7qD,EAAAqtD,MACAptD,EAAAotD,GAAArtD,EAAAqtD,IAGAxC,EAAA7qD,EAAAstD,MACArtD,EAAAqtD,GAAAttD,EAAAstD,IAGAzC,EAAA7qD,EAAAutD,MACAttD,EAAAstD,GAAAvtD,EAAAutD,IAGA1C,EAAA7qD,EAAA6sD,WACA5sD,EAAA4sD,QAAA7sD,EAAA6sD,SAGAhC,EAAA7qD,EAAAwtD,QACAvtD,EAAAutD,KAAAxtD,EAAAwtD,MAGA3C,EAAA7qD,EAAAytD,UACAxtD,EAAAwtD,OAAAztD,EAAAytD,QAGA5C,EAAA7qD,EAAA0tD,WACAztD,EAAAytD,QAAA1tD,EAAA0tD,SAGA7C,EAAA7qD,EAAAurD,OACAtrD,EAAAsrD,IAAAD,EAAAtrD,IAGA6qD,EAAA7qD,EAAA2tD,WACA1tD,EAAA0tD,QAAA3tD,EAAA2tD,SAGAT,EAAAv1E,OAAA,EACA,IAAAiQ,EAAA,EAAiBA,EAAAslE,EAAAv1E,OAA6BiQ,IAC9C6d,EAAAynD,EAAAtlE,GAGAijE,EAFA71D,EAAAgL,EAAAyF,MAGAxF,EAAAwF,GAAAzQ,GAKA,OAAAiL,EAGA,IAAA2tD,GAAA,EAEA,SAAAC,EAAA3hE,GACAihE,EAAAl3E,KAAAiW,GACAjW,KAAAy2E,GAAA,IAAA/5C,KAAA,MAAAzmB,EAAAwgE,GAAAxgE,EAAAwgE,GAAAC,UAAAxqC,KAEAlsC,KAAA2sB,YACA3sB,KAAAy2E,GAAA,IAAA/5C,KAAAwP,OAKA,IAAAyrC,IACAA,GAAA,EACAhD,EAAAkD,aAAA73E,MACA23E,GAAA,GAIA,SAAAG,EAAAjmE,GACA,OAAAA,aAAA+lE,GAAA,MAAA/lE,GAAA,MAAAA,EAAAslE,iBAGA,SAAAY,EAAA3oE,GACA,OAAAA,EAAA,EAEA2O,KAAAq8C,KAAAhrD,IAAA,EAEA2O,KAAAkB,MAAA7P,GAIA,SAAA4oE,EAAAC,GACA,IAAAC,GAAAD,EACAv3E,EAAA,EAMA,OAJA,IAAAw3E,GAAA7nD,SAAA6nD,KACAx3E,EAAAq3E,EAAAG,IAGAx3E,EAIA,SAAAy3E,EAAAC,EAAAC,EAAAC,GACA,IAGA3mE,EAHAuf,EAAAnT,KAAAD,IAAAs6D,EAAA12E,OAAA22E,EAAA32E,QACA62E,EAAAx6D,KAAAknB,IAAAmzC,EAAA12E,OAAA22E,EAAA32E,QACA82E,EAAA,EAGA,IAAA7mE,EAAA,EAAeA,EAAAuf,EAASvf,KACxB2mE,GAAAF,EAAAzmE,KAAA0mE,EAAA1mE,KAAA2mE,GAAAN,EAAAI,EAAAzmE,MAAAqmE,EAAAK,EAAA1mE,MACA6mE,IAIA,OAAAA,EAAAD,EAGA,SAAAzT,EAAA2T,IACA,IAAA9D,EAAA+D,6BAAA,qBAAA5iE,iBAAAgvD,MACAhvD,QAAAgvD,KAAA,wBAAA2T,GAIA,SAAAE,EAAAF,EAAA5nD,GACA,IAAA+nD,GAAA,EACA,OAAA1mD,EAAA,WAKA,GAJA,MAAAyiD,EAAAkE,oBACAlE,EAAAkE,mBAAA,KAAAJ,GAGAG,EAAA,CAIA,IAHA,IACAjyE,EADAkJ,EAAA,GAGA8B,EAAA,EAAuBA,EAAA7B,UAAApO,OAAsBiQ,IAAA,CAG7C,GAFAhL,EAAA,GAEA,kBAAAmJ,UAAA6B,GAAA,CAGA,QAAA7M,KAFA6B,GAAA,MAAAgL,EAAA,KAEA7B,UAAA,GACAnJ,GAAA7B,EAAA,KAAAgL,UAAA,GAAAhL,GAAA,KAGA6B,IAAAkjB,MAAA,WAEAljB,EAAAmJ,UAAA6B,GAGA9B,EAAAhL,KAAA8B,GAGAm+D,EAAA2T,EAAA,gBAAArvE,MAAAjJ,UAAA0pB,MAAAxnB,KAAAwN,GAAA68B,KAAA,cAAAv0B,OAAA7W,OACAs3E,GAAA,EAGA,OAAA/nD,EAAA9gB,MAAA/P,KAAA8P,YACK+gB,GAGL,IA0EAtrB,EA1EAuzE,EAAA,GAEA,SAAAC,EAAAhsE,EAAA0rE,GACA,MAAA9D,EAAAkE,oBACAlE,EAAAkE,mBAAA9rE,EAAA0rE,GAGAK,EAAA/rE,KACA+3D,EAAA2T,GACAK,EAAA/rE,IAAA,GAOA,SAAAtD,EAAA+5D,GACA,OAAAA,aAAA//D,UAAA,sBAAA1B,OAAA5B,UAAAuD,SAAArB,KAAAmhE,GAuBA,SAAAwV,EAAAC,EAAAC,GACA,IACA1pD,EADAsQ,EAAA5N,EAAA,GAAuB+mD,GAGvB,IAAAzpD,KAAA0pD,EACAnE,EAAAmE,EAAA1pD,KACAvsB,EAAAg2E,EAAAzpD,KAAAvsB,EAAAi2E,EAAA1pD,KACAsQ,EAAAtQ,GAAA,GACA0C,EAAA4N,EAAAtQ,GAAAypD,EAAAzpD,IACA0C,EAAA4N,EAAAtQ,GAAA0pD,EAAA1pD,KACS,MAAA0pD,EAAA1pD,GACTsQ,EAAAtQ,GAAA0pD,EAAA1pD,UAEAsQ,EAAAtQ,IAKA,IAAAA,KAAAypD,EACAlE,EAAAkE,EAAAzpD,KAAAulD,EAAAmE,EAAA1pD,IAAAvsB,EAAAg2E,EAAAzpD,MAEAsQ,EAAAtQ,GAAA0C,EAAA,GAA6B4N,EAAAtQ,KAI7B,OAAAsQ,EAGA,SAAAq5C,EAAAljE,GACA,MAAAA,GACAjW,KAAAO,IAAA0V,GAzDA0+D,EAAA+D,6BAAA,EACA/D,EAAAkE,mBAAA,KA+DAtzE,EADAxD,OAAAwD,KACAxD,OAAAwD,KAEA,SAAAsM,GACA,IAAAF,EACAmuB,EAAA,GAEA,IAAAnuB,KAAAE,EACAkjE,EAAAljE,EAAAF,IACAmuB,EAAAj7B,KAAA8M,GAIA,OAAAmuB,GAiFA,IAAAs5C,EAAA,GAEA,SAAAC,EAAAre,EAAAse,GACA,IAAAC,EAAAve,EAAAuZ,cACA6E,EAAAG,GAAAH,EAAAG,EAAA,KAAAH,EAAAE,GAAAte,EAGA,SAAAwe,EAAAC,GACA,wBAAAA,EAAAL,EAAAK,IAAAL,EAAAK,EAAAlF,oBAAA/vE,EAGA,SAAAk1E,EAAAC,GACA,IACAC,EACApqD,EAFAqqD,EAAA,GAIA,IAAArqD,KAAAmqD,EACA5E,EAAA4E,EAAAnqD,KACAoqD,EAAAJ,EAAAhqD,MAGAqqD,EAAAD,GAAAD,EAAAnqD,IAKA,OAAAqqD,EAGA,IAAAC,EAAA,GAEA,SAAAC,EAAA/e,EAAAgf,GACAF,EAAA9e,GAAAgf,EAmBA,SAAAC,EAAA7qE,EAAA8qE,EAAAC,GACA,IAAAC,EAAA,GAAAr8D,KAAAknB,IAAA71B,GACAirE,EAAAH,EAAAE,EAAA14E,OACAk4D,EAAAxqD,GAAA,EACA,OAAAwqD,EAAAugB,EAAA,YAAAp8D,KAAAQ,IAAA,GAAAR,KAAAC,IAAA,EAAAq8D,IAAA32E,WAAA0sB,OAAA,GAAAgqD,EAGA,IAAAE,EAAA,uLACAC,EAAA,6CACAC,EAAA,GACAC,EAAA,GAKA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAjqD,GACA,IAAAjtB,EAAAitB,EAEA,kBAAAA,IACAjtB,EAAA,WACA,OAAA3D,KAAA4wB,OAIA+pD,IACAF,EAAAE,GAAAh3E,GAGAi3E,IACAH,EAAAG,EAAA,eACA,OAAAX,EAAAt2E,EAAAoM,MAAA/P,KAAA8P,WAAA8qE,EAAA,GAAAA,EAAA,MAIAC,IACAJ,EAAAI,GAAA,WACA,OAAA76E,KAAA86E,aAAAD,QAAAl3E,EAAAoM,MAAA/P,KAAA8P,WAAA6qE,KAuCA,SAAAI,EAAAn7D,EAAAouC,GACA,OAAApuC,EAAA+M,WAIAqhC,EAAAgtB,EAAAhtB,EAAApuC,EAAAk7D,cACAN,EAAAxsB,GAAAwsB,EAAAxsB,IAhCA,SAAAA,GACA,IACAr8C,EACAjQ,EAXA8hE,EASAjiE,EAAAysD,EAAA7+C,MAAAmrE,GAIA,IAAA3oE,EAAA,EAAAjQ,EAAAH,EAAAG,OAAsCiQ,EAAAjQ,EAAYiQ,IAClD8oE,EAAAl5E,EAAAoQ,IACApQ,EAAAoQ,GAAA8oE,EAAAl5E,EAAAoQ,IAEApQ,EAAAoQ,IAjBA6xD,EAiBAjiE,EAAAoQ,IAhBAxC,MAAA,YACAq0D,EAAAv5D,QAAA,eAGAu5D,EAAAv5D,QAAA,UAgBA,gBAAAgxE,GACA,IACAtpE,EADAupE,EAAA,GAGA,IAAAvpE,EAAA,EAAiBA,EAAAjQ,EAAYiQ,IAC7BupE,GAAAzxE,EAAAlI,EAAAoQ,IAAApQ,EAAAoQ,GAAAtP,KAAA44E,EAAAjtB,GAAAzsD,EAAAoQ,GAGA,OAAAupE,GAWAC,CAAAntB,GACAwsB,EAAAxsB,GAAApuC,IALAA,EAAAk7D,aAAAM,cAQA,SAAAJ,EAAAhtB,EAAAinB,GACA,IAAAtjE,EAAA,EAEA,SAAA0pE,EAAA7X,GACA,OAAAyR,EAAAqG,eAAA9X,MAKA,IAFA+W,EAAAgB,UAAA,EAEA5pE,GAAA,GAAA4oE,EAAArwE,KAAA8jD,IACAA,IAAA/jD,QAAAswE,EAAAc,GACAd,EAAAgB,UAAA,EACA5pE,GAAA,EAGA,OAAAq8C,EAGA,IAAAwtB,EAAA,KAEAC,EAAA,OAEAC,EAAA,QAEAC,EAAA,QAEAC,EAAA,aAEAC,EAAA,QAEAC,EAAA,YAEAC,EAAA,gBAEAC,GAAA,UAEAC,GAAA,UAEAC,GAAA,eAEAC,GAAA,MAEAC,GAAA,WAEAC,GAAA,qBAEAC,GAAA,0BAMAC,GAAA,wJACAC,GAAA,GAEA,SAAAC,GAAA9B,EAAA+B,EAAAC,GACAH,GAAA7B,GAAAlxE,EAAAizE,KAAA,SAAAE,EAAA9B,GACA,OAAA8B,GAAAD,IAAAD,GAIA,SAAAG,GAAAlC,EAAA1kE,GACA,OAAA8+D,EAAAyH,GAAA7B,GAIA6B,GAAA7B,GAAA1kE,EAAA2gE,QAAA3gE,EAAAyhE,SAHA,IAAA1tE,OAQA8yE,GARAnC,EAQA1wE,QAAA,SAAAA,QAAA,+CAAA8yE,EAAA5T,EAAA6T,EAAAC,EAAAC,GACA,OAAA/T,GAAA6T,GAAAC,GAAAC,MAIA,SAAAJ,GAAA1hE,GACA,OAAAA,EAAAnR,QAAA,yBAA0C,QAG1C,IAAAkzE,GAAA,GAEA,SAAAC,GAAAzC,EAAA/pD,GACA,IAAAjf,EACAhO,EAAAitB,EAYA,IAVA,kBAAA+pD,IACAA,EAAA,CAAAA,IAGAn/C,EAAA5K,KACAjtB,EAAA,SAAA6/D,EAAAjiE,GACAA,EAAAqvB,GAAAonD,EAAAxU,KAIA7xD,EAAA,EAAeA,EAAAgpE,EAAAj5E,OAAkBiQ,IACjCwrE,GAAAxC,EAAAhpE,IAAAhO,EAIA,SAAA05E,GAAA1C,EAAA/pD,GACAwsD,GAAAzC,EAAA,SAAAnX,EAAAjiE,EAAA0U,EAAA0kE,GACA1kE,EAAAqnE,GAAArnE,EAAAqnE,IAAA,GACA1sD,EAAA4yC,EAAAvtD,EAAAqnE,GAAArnE,EAAA0kE,KAIA,SAAA4C,GAAA5C,EAAAnX,EAAAvtD,GACA,MAAAutD,GAAAuR,EAAAoI,GAAAxC,IACAwC,GAAAxC,GAAAnX,EAAAvtD,EAAAunE,GAAAvnE,EAAA0kE,GAIA,IAAA8C,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EAiCA,SAAAC,GAAA1b,GACA,OAAA2b,GAAA3b,GAAA,QAGA,SAAA2b,GAAA3b,GACA,OAAAA,EAAA,OAAAA,EAAA,SAAAA,EAAA,QApCAkY,EAAA,mBACA,IAAAj8D,EAAAze,KAAAwiE,OACA,OAAA/jD,GAAA,QAAAA,EAAA,IAAAA,IAEAi8D,EAAA,wBACA,OAAA16E,KAAAwiE,OAAA,MAEAkY,EAAA,uBACAA,EAAA,wBACAA,EAAA,4BAEArB,EAAA,YAEAU,EAAA,UAEA0C,GAAA,IAAAL,IACAK,GAAA,KAAAZ,EAAAJ,GACAgB,GAAA,OAAAR,GAAAN,GACAc,GAAA,QAAAP,GAAAN,GACAa,GAAA,SAAAP,GAAAN,GACAwB,GAAA,mBAAAK,IACAL,GAAA,gBAAA5Z,EAAAjiE,GACAA,EAAAk8E,IAAA,IAAAja,EAAA9hE,OAAAizE,EAAAyJ,kBAAA5a,GAAAwU,EAAAxU,KAEA4Z,GAAA,cAAA5Z,EAAAjiE,GACAA,EAAAk8E,IAAA9I,EAAAyJ,kBAAA5a,KAEA4Z,GAAA,aAAA5Z,EAAAjiE,GACAA,EAAAk8E,IAAAzxD,SAAAw3C,EAAA,MAYAmR,EAAAyJ,kBAAA,SAAA5a,GACA,OAAAwU,EAAAxU,IAAAwU,EAAAxU,GAAA,cAIA,IAkEA1xD,GAlEAusE,GAAAC,GAAA,eAMA,SAAAA,GAAAtjB,EAAAujB,GACA,gBAAA79E,GACA,aAAAA,GACA89E,GAAAx+E,KAAAg7D,EAAAt6D,GACAi0E,EAAAkD,aAAA73E,KAAAu+E,GACAv+E,MAEAK,GAAAL,KAAAg7D,IAKA,SAAA36D,GAAA46E,EAAAjgB,GACA,OAAAigB,EAAAtuD,UAAAsuD,EAAAxE,GAAA,OAAAwE,EAAAzD,OAAA,UAAAxc,KAAA9uB,IAGA,SAAAsyC,GAAAvD,EAAAjgB,EAAAt6D,GACAu6E,EAAAtuD,YAAAR,MAAAzrB,KACA,aAAAs6D,GAAAmjB,GAAAlD,EAAAzY,SAAA,IAAAyY,EAAA3Y,SAAA,KAAA2Y,EAAApW,OACAoW,EAAAxE,GAAA,OAAAwE,EAAAzD,OAAA,UAAAxc,GAAAt6D,EAAAu6E,EAAA3Y,QAAAmc,GAAA/9E,EAAAu6E,EAAA3Y,UAEA2Y,EAAAxE,GAAA,OAAAwE,EAAAzD,OAAA,UAAAxc,GAAAt6D,IA0DA,SAAA+9E,GAAAjc,EAAAF,GACA,GAAAn2C,MAAAq2C,IAAAr2C,MAAAm2C,GACA,OAAAp2B,IAGA,IA5BA1tB,EA4BAkgE,GAAApc,GA5BA9jD,EA4BA,IA3BAA,KA6BA,OADAgkD,IAAAF,EAAAoc,GAAA,GACA,IAAAA,EAAAP,GAAA3b,GAAA,SAAAkc,EAAA,IAvBA5sE,GADA1I,MAAAjJ,UAAA2R,QACA1I,MAAAjJ,UAAA2R,QAEA,SAAA6sE,GAEA,IAAAhtE,EAEA,IAAAA,EAAA,EAAiBA,EAAA3R,KAAA0B,SAAiBiQ,EAClC,GAAA3R,KAAA2R,KAAAgtE,EACA,OAAAhtE,EAIA,UAeA+oE,EAAA,6BACA,OAAA16E,KAAAsiE,QAAA,IAEAoY,EAAA,mBAAA1sB,GACA,OAAAhuD,KAAA86E,aAAA8D,YAAA5+E,KAAAguD,KAEA0sB,EAAA,oBAAA1sB,GACA,OAAAhuD,KAAA86E,aAAA+D,OAAA7+E,KAAAguD,KAGAqrB,EAAA,aAEAU,EAAA,WAEA0C,GAAA,IAAAZ,GACAY,GAAA,KAAAZ,EAAAJ,GACAgB,GAAA,eAAAG,EAAA3H,GACA,OAAAA,EAAA6J,iBAAAlC,KAEAH,GAAA,gBAAAG,EAAA3H,GACA,OAAAA,EAAA8J,YAAAnC,KAEAQ,GAAA,oBAAA5Z,EAAAjiE,GACAA,EAAAm8E,IAAA1F,EAAAxU,GAAA,IAEA4Z,GAAA,wBAAA5Z,EAAAjiE,EAAA0U,EAAA0kE,GACA,IAAArY,EAAArsD,EAAAyhE,QAAAsH,YAAAxb,EAAAmX,EAAA1kE,EAAA2gE,SAGA,MAAAtU,EACA/gE,EAAAm8E,IAAApb,EAEA+S,EAAAp/D,GAAA4/D,aAAArS,IAIA,IAAAyb,GAAA,gCACAC,GAAA,wFAAA78B,MAAA,KAUA88B,GAAA,kDAAA98B,MAAA,KAsGA,SAAA+8B,GAAAnE,EAAAv6E,GACA,IAAA2+E,EAEA,IAAApE,EAAAtuD,UAEA,OAAAsuD,EAGA,qBAAAv6E,EACA,WAAAwJ,KAAAxJ,GACAA,EAAAs3E,EAAAt3E,QAIA,IAAA86B,EAFA96B,EAAAu6E,EAAAH,aAAAkE,YAAAt+E,IAGA,OAAAu6E,EASA,OAJAoE,EAAAthE,KAAAD,IAAAm9D,EAAApW,OAAA4Z,GAAAxD,EAAAzY,OAAA9hE,IAEAu6E,EAAAxE,GAAA,OAAAwE,EAAAzD,OAAA,mBAAA92E,EAAA2+E,GAEApE,EAGA,SAAAqE,GAAA5+E,GACA,aAAAA,GACA0+E,GAAAp/E,KAAAU,GACAi0E,EAAAkD,aAAA73E,MAAA,GACAA,MAEAK,GAAAL,KAAA,SAQA,IAAAu/E,GAAAhD,GAsBAiD,GAAAjD,GAsBA,SAAAkD,KACA,SAAAC,EAAAtpE,EAAAyH,GACA,OAAAA,EAAAnc,OAAA0U,EAAA1U,OAGA,IAGAiQ,EACAspE,EAJA0E,EAAA,GACAC,EAAA,GACAC,EAAA,GAIA,IAAAluE,EAAA,EAAeA,EAAA,GAAQA,IAEvBspE,EAAAjG,EAAA,KAAArjE,IACAguE,EAAA96E,KAAA7E,KAAA4+E,YAAA3D,EAAA,KACA2E,EAAA/6E,KAAA7E,KAAA6+E,OAAA5D,EAAA,KACA4E,EAAAh7E,KAAA7E,KAAA6+E,OAAA5D,EAAA,KACA4E,EAAAh7E,KAAA7E,KAAA4+E,YAAA3D,EAAA,KASA,IAJA0E,EAAA1qC,KAAAyqC,GACAE,EAAA3qC,KAAAyqC,GACAG,EAAA5qC,KAAAyqC,GAEA/tE,EAAA,EAAeA,EAAA,GAAQA,IACvBguE,EAAAhuE,GAAAmrE,GAAA6C,EAAAhuE,IACAiuE,EAAAjuE,GAAAmrE,GAAA8C,EAAAjuE,IAGA,IAAAA,EAAA,EAAeA,EAAA,GAAQA,IACvBkuE,EAAAluE,GAAAmrE,GAAA+C,EAAAluE,IAGA3R,KAAA8/E,aAAA,IAAA91E,OAAA,KAAA61E,EAAAnzC,KAAA,cACA1sC,KAAA+/E,kBAAA//E,KAAA8/E,aACA9/E,KAAAggF,mBAAA,IAAAh2E,OAAA,KAAA41E,EAAAlzC,KAAA,cACA1sC,KAAAigF,wBAAA,IAAAj2E,OAAA,KAAA21E,EAAAjzC,KAAA,cAsBA,SAAAwzC,GAAAzhE,GACA,IAAAomD,EAEA,GAAApmD,EAAA,KAAAA,GAAA,GACA,IAAA5O,EAAAzG,MAAAjJ,UAAA0pB,MAAAxnB,KAAAyN,WAEAD,EAAA,GAAA4O,EAAA,IACAomD,EAAA,IAAAnoC,UAAAyjD,IAAApwE,MAAA,KAAAF,IAEAwgB,SAAAw0C,EAAAub,mBACAvb,EAAAwb,eAAA5hE,QAGAomD,EAAA,IAAAnoC,UAAAyjD,IAAApwE,MAAA,KAAAD,YAGA,OAAA+0D,EAIA,SAAAyb,GAAA9d,EAAA+d,EAAAC,GACA,IACAC,EAAA,EAAAF,EAAAC,EAEAE,GAAA,EAAAR,GAAA1d,EAAA,EAAAie,GAAAE,YAAAJ,GAAA,EACA,OAAAG,EAAAD,EAAA,EAIA,SAAAG,GAAApe,EAAAH,EAAAgC,EAAAkc,EAAAC,GACA,IAGAK,EACAC,EAJAC,GAAA,EAAA1c,EAAAkc,GAAA,EACAS,EAAAV,GAAA9d,EAAA+d,EAAAC,GACAS,EAAA,KAAA5e,EAAA,GAAA0e,EAAAC,EAeA,OAXAC,GAAA,EAEAH,EAAA5C,GADA2C,EAAAre,EAAA,GACAye,EACKA,EAAA/C,GAAA1b,IACLqe,EAAAre,EAAA,EACAse,EAAAG,EAAA/C,GAAA1b,KAEAqe,EAAAre,EACAse,EAAAG,GAGA,CACAze,KAAAqe,EACAI,UAAAH,GAIA,SAAAI,GAAAjG,EAAAsF,EAAAC,GACA,IAEAW,EACAN,EAHAG,EAAAV,GAAArF,EAAAzY,OAAA+d,EAAAC,GACAne,EAAAtkD,KAAAkB,OAAAg8D,EAAAgG,YAAAD,EAAA,QAeA,OAXA3e,EAAA,GACAwe,EAAA5F,EAAAzY,OAAA,EACA2e,EAAA9e,EAAA+e,GAAAP,EAAAN,EAAAC,IACKne,EAAA+e,GAAAnG,EAAAzY,OAAA+d,EAAAC,IACLW,EAAA9e,EAAA+e,GAAAnG,EAAAzY,OAAA+d,EAAAC,GACAK,EAAA5F,EAAAzY,OAAA,IAEAqe,EAAA5F,EAAAzY,OACA2e,EAAA9e,GAGA,CACAA,KAAA8e,EACA3e,KAAAqe,GAIA,SAAAO,GAAA5e,EAAA+d,EAAAC,GACA,IAAAQ,EAAAV,GAAA9d,EAAA+d,EAAAC,GACAa,EAAAf,GAAA9d,EAAA,EAAA+d,EAAAC,GACA,OAAAtC,GAAA1b,GAAAwe,EAAAK,GAAA,EA+HA,SAAAC,GAAAC,EAAA3zE,GACA,OAAA2zE,EAAA13D,MAAAjc,EAAA,GAAAuF,OAAAouE,EAAA13D,MAAA,EAAAjc,IA5HA8sE,EAAA,0BACAA,EAAA,6BAEArB,EAAA,YACAA,EAAA,eAEAU,EAAA,UACAA,EAAA,aAEA0C,GAAA,IAAAZ,GACAY,GAAA,KAAAZ,EAAAJ,GACAgB,GAAA,IAAAZ,GACAY,GAAA,KAAAZ,EAAAJ,GACA4B,GAAA,6BAAA7Z,EAAAnB,EAAApsD,EAAA0kE,GACAtY,EAAAsY,EAAAvqD,OAAA,MAAA4nD,EAAAxU,KAmCAkX,EAAA,kBACAA,EAAA,kBAAA1sB,GACA,OAAAhuD,KAAA86E,aAAA0G,YAAAxhF,KAAAguD,KAEA0sB,EAAA,mBAAA1sB,GACA,OAAAhuD,KAAA86E,aAAA2G,cAAAzhF,KAAAguD,KAEA0sB,EAAA,oBAAA1sB,GACA,OAAAhuD,KAAA86E,aAAA4G,SAAA1hF,KAAAguD,KAEA0sB,EAAA,mBACAA,EAAA,sBAEArB,EAAA,WACAA,EAAA,eACAA,EAAA,kBAEAU,EAAA,UACAA,EAAA,cACAA,EAAA,iBAEA0C,GAAA,IAAAZ,GACAY,GAAA,IAAAZ,GACAY,GAAA,IAAAZ,GACAY,GAAA,cAAAG,EAAA3H,GACA,OAAAA,EAAA0M,iBAAA/E,KAEAH,GAAA,eAAAG,EAAA3H,GACA,OAAAA,EAAA2M,mBAAAhF,KAEAH,GAAA,gBAAAG,EAAA3H,GACA,OAAAA,EAAA4M,cAAAjF,KAEAS,GAAA,6BAAA7Z,EAAAnB,EAAApsD,EAAA0kE,GACA,IAAAtW,EAAApuD,EAAAyhE,QAAAoK,cAAAte,EAAAmX,EAAA1kE,EAAA2gE,SAGA,MAAAvS,EACAhC,EAAA/xD,EAAA+zD,EAEAgR,EAAAp/D,GAAA0gE,eAAAnT,IAGA6Z,GAAA,uBAAA7Z,EAAAnB,EAAApsD,EAAA0kE,GACAtY,EAAAsY,GAAA3C,EAAAxU,KAkCA,IAAAue,GAAA,2DAAA1/B,MAAA,KAOA2/B,GAAA,8BAAA3/B,MAAA,KAMA4/B,GAAA,uBAAA5/B,MAAA,KAyKA6/B,GAAA3F,GAsBA4F,GAAA5F,GAsBA6F,GAAA7F,GAsBA,SAAA8F,KACA,SAAA3C,EAAAtpE,EAAAyH,GACA,OAAAA,EAAAnc,OAAA0U,EAAA1U,OAGA,IAIAiQ,EACAspE,EACAqH,EACAC,EACAC,EARAC,EAAA,GACA9C,EAAA,GACAC,EAAA,GACAC,EAAA,GAOA,IAAAluE,EAAA,EAAeA,EAAA,EAAOA,IAEtBspE,EAAAjG,EAAA,SAAA5S,IAAAzwD,GACA2wE,EAAAtiF,KAAAwhF,YAAAvG,EAAA,IACAsH,EAAAviF,KAAAyhF,cAAAxG,EAAA,IACAuH,EAAAxiF,KAAA0hF,SAAAzG,EAAA,IACAwH,EAAA59E,KAAAy9E,GACA3C,EAAA96E,KAAA09E,GACA3C,EAAA/6E,KAAA29E,GACA3C,EAAAh7E,KAAAy9E,GACAzC,EAAAh7E,KAAA09E,GACA1C,EAAAh7E,KAAA29E,GAUA,IALAC,EAAAxtC,KAAAyqC,GACAC,EAAA1qC,KAAAyqC,GACAE,EAAA3qC,KAAAyqC,GACAG,EAAA5qC,KAAAyqC,GAEA/tE,EAAA,EAAeA,EAAA,EAAOA,IACtBguE,EAAAhuE,GAAAmrE,GAAA6C,EAAAhuE,IACAiuE,EAAAjuE,GAAAmrE,GAAA8C,EAAAjuE,IACAkuE,EAAAluE,GAAAmrE,GAAA+C,EAAAluE,IAGA3R,KAAA0iF,eAAA,IAAA14E,OAAA,KAAA61E,EAAAnzC,KAAA,cACA1sC,KAAA2iF,oBAAA3iF,KAAA0iF,eACA1iF,KAAA4iF,kBAAA5iF,KAAA0iF,eACA1iF,KAAA6iF,qBAAA,IAAA74E,OAAA,KAAA41E,EAAAlzC,KAAA,cACA1sC,KAAA8iF,0BAAA,IAAA94E,OAAA,KAAA21E,EAAAjzC,KAAA,cACA1sC,KAAA+iF,wBAAA,IAAA/4E,OAAA,KAAAy4E,EAAA/1C,KAAA,cAIA,SAAAs2C,KACA,OAAAhjF,KAAAijF,QAAA,OAuBA,SAAA/M,GAAAyE,EAAAuI,GACAxI,EAAAC,EAAA,eACA,OAAA36E,KAAA86E,aAAA5E,SAAAl2E,KAAAijF,QAAAjjF,KAAAmjF,UAAAD,KAWA,SAAAE,GAAAxG,EAAA3H,GACA,OAAAA,EAAAoO,eA9BA3I,EAAA,uBACAA,EAAA,eAAAsI,IACAtI,EAAA,eANA,WACA,OAAA16E,KAAAijF,SAAA,KAMAvI,EAAA,qBACA,SAAAsI,GAAAjzE,MAAA/P,MAAAi6E,EAAAj6E,KAAAmjF,UAAA,KAEAzI,EAAA,uBACA,SAAAsI,GAAAjzE,MAAA/P,MAAAi6E,EAAAj6E,KAAAmjF,UAAA,GAAAlJ,EAAAj6E,KAAAsjF,UAAA,KAEA5I,EAAA,qBACA,SAAA16E,KAAAijF,QAAAhJ,EAAAj6E,KAAAmjF,UAAA,KAEAzI,EAAA,uBACA,SAAA16E,KAAAijF,QAAAhJ,EAAAj6E,KAAAmjF,UAAA,GAAAlJ,EAAAj6E,KAAAsjF,UAAA,KASApN,GAAA,QACAA,GAAA,QAEAmD,EAAA,YAEAU,EAAA,WAMA0C,GAAA,IAAA2G,IACA3G,GAAA,IAAA2G,IACA3G,GAAA,IAAAZ,GACAY,GAAA,IAAAZ,GACAY,GAAA,IAAAZ,GACAY,GAAA,KAAAZ,EAAAJ,GACAgB,GAAA,KAAAZ,EAAAJ,GACAgB,GAAA,KAAAZ,EAAAJ,GACAgB,GAAA,MAAAX,GACAW,GAAA,QAAAV,GACAU,GAAA,MAAAX,GACAW,GAAA,QAAAV,GACAqB,GAAA,WAAAQ,IACAR,GAAA,oBAAA5Z,EAAAjiE,EAAA0U,GACA,IAAAstE,EAAAvL,EAAAxU,GACAjiE,EAAAq8E,IAAA,KAAA2F,EAAA,EAAAA,IAEAnG,GAAA,mBAAA5Z,EAAAjiE,EAAA0U,GACAA,EAAAutE,MAAAvtE,EAAAyhE,QAAA+L,KAAAjgB,GACAvtD,EAAAytE,UAAAlgB,IAEA4Z,GAAA,oBAAA5Z,EAAAjiE,EAAA0U,GACA1U,EAAAq8E,IAAA5F,EAAAxU,GACA6R,EAAAp/D,GAAA4gE,SAAA,IAEAuG,GAAA,eAAA5Z,EAAAjiE,EAAA0U,GACA,IAAA0nC,EAAA6lB,EAAA9hE,OAAA,EACAH,EAAAq8E,IAAA5F,EAAAxU,EAAApzC,OAAA,EAAAutB,IACAp8C,EAAAs8E,IAAA7F,EAAAxU,EAAApzC,OAAAutB,IACA03B,EAAAp/D,GAAA4gE,SAAA,IAEAuG,GAAA,iBAAA5Z,EAAAjiE,EAAA0U,GACA,IAAA0tE,EAAAngB,EAAA9hE,OAAA,EACAkiF,EAAApgB,EAAA9hE,OAAA,EACAH,EAAAq8E,IAAA5F,EAAAxU,EAAApzC,OAAA,EAAAuzD,IACApiF,EAAAs8E,IAAA7F,EAAAxU,EAAApzC,OAAAuzD,EAAA,IACApiF,EAAAu8E,IAAA9F,EAAAxU,EAAApzC,OAAAwzD,IACAvO,EAAAp/D,GAAA4gE,SAAA,IAEAuG,GAAA,eAAA5Z,EAAAjiE,EAAA0U,GACA,IAAA0nC,EAAA6lB,EAAA9hE,OAAA,EACAH,EAAAq8E,IAAA5F,EAAAxU,EAAApzC,OAAA,EAAAutB,IACAp8C,EAAAs8E,IAAA7F,EAAAxU,EAAApzC,OAAAutB,MAEAy/B,GAAA,iBAAA5Z,EAAAjiE,EAAA0U,GACA,IAAA0tE,EAAAngB,EAAA9hE,OAAA,EACAkiF,EAAApgB,EAAA9hE,OAAA,EACAH,EAAAq8E,IAAA5F,EAAAxU,EAAApzC,OAAA,EAAAuzD,IACApiF,EAAAs8E,IAAA7F,EAAAxU,EAAApzC,OAAAuzD,EAAA,IACApiF,EAAAu8E,IAAA9F,EAAAxU,EAAApzC,OAAAwzD,MAwBA,IAmBAC,GAnBAC,GAAAxF,GAAA,YACAyF,GAAA,CACAC,SAr3CA,CACAC,QAAA,gBACAC,QAAA,mBACAC,SAAA,eACAC,QAAA,oBACAC,SAAA,sBACAC,SAAA,KAg3CAhJ,eAx2CA,CACAiJ,IAAA,YACAC,GAAA,SACAC,EAAA,aACAC,GAAA,eACAC,IAAA,sBACAC,KAAA,6BAm2CAxJ,YAl1CA,eAm1CAP,QA70CA,KA80CAgK,uBA70CA,UA80CAC,aAx0CA,CACAC,OAAA,QACAC,KAAA,SACA5pE,EAAA,gBACA6pE,GAAA,aACArlE,EAAA,WACAslE,GAAA,aACA/pE,EAAA,UACAgqE,GAAA,WACA70E,EAAA,QACA80E,GAAA,UACAC,EAAA,UACAC,GAAA,YACA7mE,EAAA,SACA8mE,GAAA,YA2zCA1G,OAAAK,GACAN,YAAAO,GACA9c,KAhhBA,CACAke,IAAA,EAEAC,IAAA,GA8gBAkB,SAAAK,GACAP,YAAAS,GACAR,cAAAO,GACAwD,cA7BA,iBAgCAC,GAAA,GACAC,GAAA,GAGA,SAAAC,GAAA7gF,GACA,OAAAA,IAAAyvE,cAAAtqE,QAAA,SAAAnF,EAwCA,SAAA8gF,GAAA74E,GACA,IAAA84E,EAAA,KAEA,IAAAJ,GAAA14E,IAAA,qBAAAvM,QAAAC,QACA,IACAolF,EAAAhC,GAAAiC,OAEQ,eAAA/iF,EAAA,IAAAoV,MAAA,wCAAApV,EAAAgjF,KAAA,mBAAAhjF,EAAA,GACRijF,GAAAH,GACO,MAAA9iF,IAGP,OAAA0iF,GAAA14E,GAMA,SAAAi5E,GAAAlhF,EAAAtD,GACA,IAAAzB,EAoBA,OAlBA+E,KAEA/E,EADA60E,EAAApzE,GACAykF,GAAAnhF,GAEAohF,GAAAphF,EAAAtD,IAKAqiF,GAAA9jF,EAEA,qBAAA+V,iBAAAgvD,MAEAhvD,QAAAgvD,KAAA,UAAAhgE,EAAA,2CAKA++E,GAAAiC,MAGA,SAAAI,GAAAn5E,EAAAkJ,GACA,UAAAA,EAAA,CACA,IAAAg/D,EACAgE,EAAA8K,GAGA,GAFA9tE,EAAAkwE,KAAAp5E,EAEA,MAAA04E,GAAA14E,GACAgsE,EAAA,kQACAE,EAAAwM,GAAA14E,GAAAq5E,aACO,SAAAnwE,EAAAowE,aACP,SAAAZ,GAAAxvE,EAAAowE,cACApN,EAAAwM,GAAAxvE,EAAAowE,cAAAD,YACS,CAGT,UAFAnR,EAAA2Q,GAAA3vE,EAAAowE,eAaA,OARAX,GAAAzvE,EAAAowE,gBACAX,GAAAzvE,EAAAowE,cAAA,IAGAX,GAAAzvE,EAAAowE,cAAAxhF,KAAA,CACAkI,OACAkJ,WAEA,KAVAgjE,EAAAhE,EAAAmR,QA2BA,OAZAX,GAAA14E,GAAA,IAAAosE,EAAAH,EAAAC,EAAAhjE,IAEAyvE,GAAA34E,IACA24E,GAAA34E,GAAAG,QAAA,SAAAsR,GACA0nE,GAAA1nE,EAAAzR,KAAAyR,EAAAvI,UAOA+vE,GAAAj5E,GACA04E,GAAA14E,GAIA,cADA04E,GAAA14E,GACA,KAqCA,SAAAk5E,GAAAnhF,GACA,IAAAmwE,EAMA,GAJAnwE,KAAA4yE,SAAA5yE,EAAA4yE,QAAAoO,QACAhhF,IAAA4yE,QAAAoO,QAGAhhF,EACA,OAAA++E,GAGA,IAAAp+E,EAAAX,GAAA,CAIA,GAFAmwE,EAAA2Q,GAAA9gF,GAGA,OAAAmwE,EAGAnwE,EAAA,CAAAA,GAGA,OAtLA,SAAAwhF,GAOA,IANA,IACA/4C,EACA72B,EACAu+D,EACA5yB,EAJA1wC,EAAA,EAMAA,EAAA20E,EAAA5kF,QAAA,CAMA,IALA2gD,EAAAsjC,GAAAW,EAAA30E,IAAA0wC,MAAA,KACA9U,EAAA8U,EAAA3gD,OAEAgV,GADAA,EAAAivE,GAAAW,EAAA30E,EAAA,KACA+E,EAAA2rC,MAAA,UAEA9U,EAAA,IAGA,GAFA0nC,EAAA2Q,GAAAvjC,EAAAx4B,MAAA,EAAA0jB,GAAAb,KAAA,MAGA,OAAAuoC,EAGA,GAAAv+D,KAAAhV,QAAA6rC,GAAA4qC,EAAA91B,EAAA3rC,GAAA,IAAA62B,EAAA,EAEA,MAGAA,IAGA57B,IAGA,OAAAkyE,GAuJA0C,CAAAzhF,GAOA,SAAA0hF,GAAA5mE,GACA,IAAA81D,EACAt/D,EAAAwJ,EAAA49D,GAoBA,OAlBApnE,IAAA,IAAAi/D,EAAAz1D,GAAA81D,WACAA,EAAAt/D,EAAAsnE,IAAA,GAAAtnE,EAAAsnE,IAAA,GAAAA,GAAAtnE,EAAAunE,IAAA,GAAAvnE,EAAAunE,IAAAc,GAAAroE,EAAAqnE,IAAArnE,EAAAsnE,KAAAC,GAAAvnE,EAAAwnE,IAAA,GAAAxnE,EAAAwnE,IAAA,SAAAxnE,EAAAwnE,MAAA,IAAAxnE,EAAAynE,KAAA,IAAAznE,EAAA0nE,KAAA,IAAA1nE,EAAA2nE,KAAAH,GAAAxnE,EAAAynE,IAAA,GAAAznE,EAAAynE,IAAA,GAAAA,GAAAznE,EAAA0nE,IAAA,GAAA1nE,EAAA0nE,IAAA,GAAAA,GAAA1nE,EAAA2nE,IAAA,GAAA3nE,EAAA2nE,IAAA,IAAAA,IAAA,EAEA1I,EAAAz1D,GAAA6mE,qBAAA/Q,EAAA+H,IAAA/H,EAAAiI,MACAjI,EAAAiI,IAGAtI,EAAAz1D,GAAA8mE,iBAAA,IAAAhR,IACAA,EAAAsI,IAGA3I,EAAAz1D,GAAA+mE,mBAAA,IAAAjR,IACAA,EAAAuI,IAGA5I,EAAAz1D,GAAA81D,YAGA91D,EAIA,SAAAxF,GAAAhE,EAAAyH,EAAA8B,GACA,aAAAvJ,EACAA,EAGA,MAAAyH,EACAA,EAGA8B,EAkBA,SAAAinE,GAAA3wE,GACA,IAAAtE,EACAkzD,EAEAgiB,EACAC,EACAC,EAHAvjB,EAAA,GAKA,IAAAvtD,EAAAwgE,GAAA,CA4BA,IAxBAoQ,EA3BA,SAAA5wE,GAEA,IAAA+wE,EAAA,IAAAtqD,KAAAi4C,EAAAh4C,OAEA,OAAA1mB,EAAAgxE,QACA,CAAAD,EAAA5G,iBAAA4G,EAAAE,cAAAF,EAAAG,cAGA,CAAAH,EAAAI,cAAAJ,EAAAK,WAAAL,EAAAM,WAmBAC,CAAAtxE,GAEAA,EAAAqnE,IAAA,MAAArnE,EAAAunE,GAAAG,KAAA,MAAA1nE,EAAAunE,GAAAE,KAuDA,SAAAznE,GACA,IAAAiI,EAAAspE,EAAAnlB,EAAAgC,EAAAkc,EAAAC,EAAAiH,EAAAC,EAGA,UAFAxpE,EAAAjI,EAAAqnE,IAEAqK,IAAA,MAAAzpE,EAAA0pE,GAAA,MAAA1pE,EAAA2pE,EACAtH,EAAA,EACAC,EAAA,EAKAgH,EAAAptE,GAAA8D,EAAAypE,GAAA1xE,EAAAunE,GAAAC,IAAAyD,GAAA4G,KAAA,KAAAtlB,MACAH,EAAAjoD,GAAA8D,EAAA0pE,EAAA,KACAvjB,EAAAjqD,GAAA8D,EAAA2pE,EAAA,IAEA,GAAAxjB,EAAA,KACAqjB,GAAA,OAEK,CACLnH,EAAAtqE,EAAAyhE,QAAAqQ,MAAAxH,IACAC,EAAAvqE,EAAAyhE,QAAAqQ,MAAAvH,IACA,IAAAwH,EAAA9G,GAAA4G,KAAAvH,EAAAC,GACAgH,EAAAptE,GAAA8D,EAAA+pE,GAAAhyE,EAAAunE,GAAAC,IAAAuK,EAAAxlB,MAEAH,EAAAjoD,GAAA8D,IAAA8pE,EAAA3lB,MAEA,MAAAnkD,EAAA5N,IAEA+zD,EAAAnmD,EAAA5N,GAEA,GAAA+zD,EAAA,KACAqjB,GAAA,GAEO,MAAAxpE,EAAAnb,GAEPshE,EAAAnmD,EAAAnb,EAAAw9E,GAEAriE,EAAAnb,EAAA,GAAAmb,EAAAnb,EAAA,KACA2kF,GAAA,IAIArjB,EAAAkc,EAIAle,EAAA,GAAAA,EAAA+e,GAAAoG,EAAAjH,EAAAC,GACAnL,EAAAp/D,GAAAywE,gBAAA,EACK,MAAAgB,EACLrS,EAAAp/D,GAAA0wE,kBAAA,GAEAc,EAAA7G,GAAA4G,EAAAnlB,EAAAgC,EAAAkc,EAAAC,GACAvqE,EAAAunE,GAAAC,IAAAgK,EAAAjlB,KACAvsD,EAAAiyE,WAAAT,EAAAxG,WA3GAkH,CAAAlyE,GAIA,MAAAA,EAAAiyE,aACAnB,EAAA3sE,GAAAnE,EAAAunE,GAAAC,IAAAoJ,EAAApJ,MAEAxnE,EAAAiyE,WAAAhK,GAAA6I,IAAA,IAAA9wE,EAAAiyE,cACA7S,EAAAp/D,GAAAwwE,oBAAA,GAGA5hB,EAAAqb,GAAA6G,EAAA,EAAA9wE,EAAAiyE,YACAjyE,EAAAunE,GAAAE,IAAA7Y,EAAAqiB,cACAjxE,EAAAunE,GAAAG,IAAA9Y,EAAAsiB,cAQAx1E,EAAA,EAAeA,EAAA,SAAAsE,EAAAunE,GAAA7rE,KAA+BA,EAC9CsE,EAAAunE,GAAA7rE,GAAA6xD,EAAA7xD,GAAAk1E,EAAAl1E,GAIA,KAAUA,EAAA,EAAOA,IACjBsE,EAAAunE,GAAA7rE,GAAA6xD,EAAA7xD,GAAA,MAAAsE,EAAAunE,GAAA7rE,GAAA,IAAAA,EAAA,IAAAsE,EAAAunE,GAAA7rE,GAIA,KAAAsE,EAAAunE,GAAAI,KAAA,IAAA3nE,EAAAunE,GAAAK,KAAA,IAAA5nE,EAAAunE,GAAAM,KAAA,IAAA7nE,EAAAunE,GAAAO,MACA9nE,EAAAmyE,UAAA,EACAnyE,EAAAunE,GAAAI,IAAA,GAGA3nE,EAAAwgE,IAAAxgE,EAAAgxE,QAAA/G,GAn8BA,SAAAzhE,EAAAmB,EAAAtP,EAAA6K,EAAAkqE,EAAAjqE,EAAAitE,GAGA,IAAAxjB,EAaA,OAXApmD,EAAA,KAAAA,GAAA,GAEAomD,EAAA,IAAAnoC,KAAAje,EAAA,IAAAmB,EAAAtP,EAAA6K,EAAAkqE,EAAAjqE,EAAAitE,GAEAh4D,SAAAw0C,EAAAuiB,gBACAviB,EAAAyjB,YAAA7pE,IAGAomD,EAAA,IAAAnoC,KAAAje,EAAAmB,EAAAtP,EAAA6K,EAAAkqE,EAAAjqE,EAAAitE,GAGAxjB,IAm7BA90D,MAAA,KAAAyzD,GACAsjB,EAAA7wE,EAAAgxE,QAAAhxE,EAAAwgE,GAAAkK,YAAA1qE,EAAAwgE,GAAA8R,SAGA,MAAAtyE,EAAAshE,MACAthE,EAAAwgE,GAAA+R,cAAAvyE,EAAAwgE,GAAAgS,gBAAAxyE,EAAAshE,MAGAthE,EAAAmyE,WACAnyE,EAAAunE,GAAAI,IAAA,IAIA3nE,EAAAqnE,IAAA,qBAAArnE,EAAAqnE,GAAAhtE,GAAA2F,EAAAqnE,GAAAhtE,IAAAw2E,IACAzR,EAAAp/D,GAAAmgE,iBAAA,IA+DA,IAAAsS,GAAA,mJACAC,GAAA,8IACAC,GAAA,wBACAC,GAAA,wCAA6C,iCAAmC,kCAAqC,6BAAkC,8BAA0C,yBAAsB,+BAA0C,qBACjQ,6BAA6B,4BAA8B,wBAE3DC,GAAA,wQACAC,GAAA,sBAEA,SAAAC,GAAA/yE,GACA,IAAAtE,EACA0J,EAGA4tE,EACAC,EACAC,EACAC,EALAp+E,EAAAiL,EAAAmhE,GACAjoE,EAAAu5E,GAAA/9E,KAAAK,IAAA29E,GAAAh+E,KAAAK,GAMA,GAAAmE,EAAA,CAGA,IAFAkmE,EAAAp/D,GAAA+/D,KAAA,EAEArkE,EAAA,EAAA0J,EAAAwtE,GAAAnnF,OAAsCiQ,EAAA0J,EAAO1J,IAC7C,GAAAk3E,GAAAl3E,GAAA,GAAAhH,KAAAwE,EAAA,KACA+5E,EAAAL,GAAAl3E,GAAA,GACAs3E,GAAA,IAAAJ,GAAAl3E,GAAA,GACA,MAIA,SAAAu3E,EAEA,YADAjzE,EAAAogE,UAAA,GAIA,GAAAlnE,EAAA,IACA,IAAAwC,EAAA,EAAA0J,EAAAytE,GAAApnF,OAAwCiQ,EAAA0J,EAAO1J,IAC/C,GAAAm3E,GAAAn3E,GAAA,GAAAhH,KAAAwE,EAAA,KAEAg6E,GAAAh6E,EAAA,SAAA25E,GAAAn3E,GAAA,GACA,MAIA,SAAAw3E,EAEA,YADAlzE,EAAAogE,UAAA,GAKA,IAAA4S,GAAA,MAAAE,EAEA,YADAlzE,EAAAogE,UAAA,GAIA,GAAAlnE,EAAA,IACA,IAAAy5E,GAAAj+E,KAAAwE,EAAA,IAIA,YADA8G,EAAAogE,UAAA,GAFA+S,EAAA,IAOAnzE,EAAAohE,GAAA6R,GAAAC,GAAA,KAAAC,GAAA,IACAC,GAAApzE,QAEAA,EAAAogE,UAAA,EAKA,IAAAF,GAAA,0LAYA,SAAAmT,GAAAC,GACA,IAAA/mB,EAAAx2C,SAAAu9D,EAAA,IAEA,OAAA/mB,GAAA,GACA,IAAAA,EACKA,GAAA,IACL,KAAAA,EAGAA,EAwBA,IAAAgnB,GAAA,CACAC,GAAA,EACAC,IAAA,EACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,KAkBA,SAAAC,GAAAl0E,GACA,IAAA9G,EAAAgnE,GAAAxrE,KAAAsL,EAAAmhE,GAhDAntE,QAAA,yBAAAA,QAAA,gBAAAA,QAAA,aAAAA,QAAA,cAkDA,GAAAkF,EAAA,CACA,IAAAi7E,EA3EA,SAAAb,EAAAc,EAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAAnmF,EAAA,CAAAglF,GAAAC,GAAApK,GAAArtE,QAAAu4E,GAAAr+D,SAAAs+D,EAAA,IAAAt+D,SAAAu+D,EAAA,IAAAv+D,SAAAw+D,EAAA,KAMA,OAJAC,GACAnmF,EAAAO,KAAAmnB,SAAAy+D,EAAA,KAGAnmF,EAoEAomF,CAAAv7E,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEA,IAlDA,SAAAw7E,EAAAC,EAAA30E,GACA,GAAA00E,EAAA,CAEA,IAAAE,EAAA7I,GAAAlwE,QAAA64E,GACAG,EAAA,IAAApuD,KAAAkuD,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAArC,SAEA,GAAAsC,IAAAC,EAGA,OAFAzV,EAAAp/D,GAAAmgE,iBAAA,EACAngE,EAAAogE,UAAA,GACA,EAIA,SAqCA0U,CAAA57E,EAAA,GAAAi7E,EAAAn0E,GACA,OAGAA,EAAAunE,GAAA4M,EACAn0E,EAAAshE,KA1BA,SAAAyT,EAAAC,EAAAC,GACA,GAAAF,EACA,OAAAxB,GAAAwB,GACK,GAAAC,EAEL,SAEA,IAAAE,EAAAn/D,SAAAk/D,EAAA,IACAtrE,EAAAurE,EAAA,IACAhwE,GAAAgwE,EAAAvrE,GAAA,IACA,UAAAzE,EAAAyE,EAgBAwrE,CAAAj8E,EAAA,GAAAA,EAAA,GAAAA,EAAA,KACA8G,EAAAwgE,GAAAyJ,GAAAnwE,MAAA,KAAAkG,EAAAunE,IAEAvnE,EAAAwgE,GAAA+R,cAAAvyE,EAAAwgE,GAAAgS,gBAAAxyE,EAAAshE,MAEAlC,EAAAp/D,GAAAkgE,SAAA,OAEAlgE,EAAAogE,UAAA,EA2CA,SAAAgT,GAAApzE,GAEA,GAAAA,EAAAohE,KAAA1C,EAAA0W,SAKA,GAAAp1E,EAAAohE,KAAA1C,EAAA2W,SAAA,CAKAr1E,EAAAunE,GAAA,GACAnI,EAAAp/D,GAAAs/D,OAAA,EAEA,IACA5jE,EACAi5E,EACAzN,EACAxC,EACA4Q,EALAvgF,EAAA,GAAAiL,EAAAmhE,GAMAoU,EAAAxgF,EAAAtJ,OACA+pF,EAAA,EAGA,IAFAtO,EAAAnC,EAAA/kE,EAAAohE,GAAAphE,EAAAyhE,SAAAvoE,MAAAmrE,IAAA,GAEA3oE,EAAA,EAAeA,EAAAwrE,EAAAz7E,OAAmBiQ,IAClCgpE,EAAAwC,EAAAxrE,IACAi5E,GAAA5/E,EAAAmE,MAAA0tE,GAAAlC,EAAA1kE,KAAA,WAIAs1E,EAAAvgF,EAAAolB,OAAA,EAAAplB,EAAA8G,QAAA84E,KAEAlpF,OAAA,GACA2zE,EAAAp/D,GAAAw/D,YAAA5wE,KAAA0mF,GAGAvgF,IAAA6e,MAAA7e,EAAA8G,QAAA84E,KAAAlpF,QACA+pF,GAAAb,EAAAlpF,QAIA+4E,EAAAE,IACAiQ,EACAvV,EAAAp/D,GAAAs/D,OAAA,EAEAF,EAAAp/D,GAAAu/D,aAAA3wE,KAAA81E,GAGA4C,GAAA5C,EAAAiQ,EAAA30E,IACOA,EAAA2gE,UAAAgU,GACPvV,EAAAp/D,GAAAu/D,aAAA3wE,KAAA81E,GAKAtF,EAAAp/D,GAAA0/D,cAAA6V,EAAAC,EAEAzgF,EAAAtJ,OAAA,GACA2zE,EAAAp/D,GAAAw/D,YAAA5wE,KAAAmG,GAIAiL,EAAAunE,GAAAI,KAAA,SAAAvI,EAAAp/D,GAAA4gE,SAAA5gE,EAAAunE,GAAAI,IAAA,IACAvI,EAAAp/D,GAAA4gE,aAAAryE,GAGA6wE,EAAAp/D,GAAAggE,gBAAAhgE,EAAAunE,GAAA3zD,MAAA,GACAwrD,EAAAp/D,GAAAigE,SAAAjgE,EAAAytE,UAEAztE,EAAAunE,GAAAI,IAKA,SAAA3I,EAAA9S,EAAA+T,GACA,IAAAwV,EAEA,aAAAxV,EAEA/T,EAGA,MAAA8S,EAAA0W,aACA1W,EAAA0W,aAAAxpB,EAAA+T,GACK,MAAAjB,EAAAwO,OAELiI,EAAAzW,EAAAwO,KAAAvN,KAEA/T,EAAA,KACAA,GAAA,IAGAupB,GAAA,KAAAvpB,IACAA,EAAA,GAGAA,GAGAA,EA9BAypB,CAAA31E,EAAAyhE,QAAAzhE,EAAAunE,GAAAI,IAAA3nE,EAAAytE,WACAkD,GAAA3wE,GACAuwE,GAAAvwE,QAhEAk0E,GAAAl0E,QALA+yE,GAAA/yE,GAqKA,SAAA41E,GAAA51E,GACA,IAAAutD,EAAAvtD,EAAAmhE,GACAppB,EAAA/3C,EAAAohE,GAGA,OAFAphE,EAAAyhE,QAAAzhE,EAAAyhE,SAAAuO,GAAAhwE,EAAAqhE,IAEA,OAAA9T,QAAAh/D,IAAAwpD,GAAA,KAAAwV,EACAuT,EAAA,CACAnB,WAAA,KAIA,kBAAApS,IACAvtD,EAAAmhE,GAAA5T,EAAAvtD,EAAAyhE,QAAAoU,SAAAtoB,IAGAsU,EAAAtU,GACA,IAAAoU,EAAA4O,GAAAhjB,KACKqR,EAAArR,GACLvtD,EAAAwgE,GAAAjT,EACK/9D,EAAAuoD,GAlFL,SAAA/3C,GACA,IAAA81E,EAAAC,EAAAC,EAAAt6E,EAAAu6E,EAEA,OAAAj2E,EAAAohE,GAAA31E,OAGA,OAFA2zE,EAAAp/D,GAAA6/D,eAAA,OACA7/D,EAAAwgE,GAAA,IAAA/5C,KAAAwP,MAIA,IAAAv6B,EAAA,EAAeA,EAAAsE,EAAAohE,GAAA31E,OAAsBiQ,IACrCu6E,EAAA,EACAH,EAAA7U,EAAA,GAAgCjhE,GAEhC,MAAAA,EAAAgxE,UACA8E,EAAA9E,QAAAhxE,EAAAgxE,SAGA8E,EAAA1U,GAAAphE,EAAAohE,GAAA1lE,GACA03E,GAAA0C,GAEAp/D,EAAAo/D,KAKAG,GAAA7W,EAAA0W,GAAApW,cAEAuW,GAAA,GAAA7W,EAAA0W,GAAAvW,aAAA9zE,OACA2zE,EAAA0W,GAAAI,MAAAD,GAEA,MAAAD,GAAAC,EAAAD,KACAA,EAAAC,EACAF,EAAAD,IAIA75D,EAAAjc,EAAA+1E,GAAAD,GA+CAK,CAAAn2E,GACK+3C,EACLq7B,GAAApzE,GAYA,SAAAA,GACA,IAAAutD,EAAAvtD,EAAAmhE,GAEAxC,EAAApR,GACAvtD,EAAAwgE,GAAA,IAAA/5C,KAAAi4C,EAAAh4C,OACKk4C,EAAArR,GACLvtD,EAAAwgE,GAAA,IAAA/5C,KAAA8mC,EAAA72D,WACK,kBAAA62D,EAvPL,SAAAvtD,GACA,IAAA8mE,EAAAgM,GAAAp+E,KAAAsL,EAAAmhE,IAEA,OAAA2F,GAKAiM,GAAA/yE,IAEA,IAAAA,EAAAogE,kBACApgE,EAAAogE,SAKA8T,GAAAl0E,IAEA,IAAAA,EAAAogE,kBACApgE,EAAAogE,SAMA1B,EAAA0X,wBAAAp2E,MArBAA,EAAAwgE,GAAA,IAAA/5C,MAAAqgD,EAAA,IAoPAuP,CAAAr2E,GACKxQ,EAAA+9D,IACLvtD,EAAAunE,GAAAzyE,EAAAy4D,EAAA35C,MAAA,YAAAhY,GACA,OAAAma,SAAAna,EAAA,MAEA+0E,GAAA3wE,IACKhT,EAAAugE,GAxEL,SAAAvtD,GACA,IAAAA,EAAAwgE,GAAA,CAIA,IAAA9kE,EAAA+nE,EAAAzjE,EAAAmhE,IACAnhE,EAAAunE,GAAAzyE,EAAA,CAAA4G,EAAA6wD,KAAA7wD,EAAA2wD,MAAA3wD,EAAAywD,KAAAzwD,EAAAkzD,KAAAlzD,EAAAwwD,KAAAxwD,EAAAuwD,OAAAvwD,EAAAswD,OAAAtwD,EAAAmwD,aAAA,SAAAjwD,GACA,OAAAA,GAAAma,SAAAna,EAAA,MAEA+0E,GAAA3wE,IAgEAs2E,CAAAt2E,GACKulB,EAAAgoC,GAELvtD,EAAAwgE,GAAA,IAAA/5C,KAAA8mC,GAEAmR,EAAA0X,wBAAAp2E,GA9BAu2E,CAAAv2E,GAGA0W,EAAA1W,KACAA,EAAAwgE,GAAA,MAGAxgE,IA2BA,SAAAk/D,GAAA3R,EAAAxV,EAAAinB,EAAAC,EAAAuX,GACA,IAAA9sE,EAAA,GAmBA,OAjBA,IAAAs1D,IAAA,IAAAA,IACAC,EAAAD,EACAA,OAAAzwE,IAGAvB,EAAAugE,IA3kFA,SAAA3xD,GACA,GAAA9P,OAAA2qF,oBACA,WAAA3qF,OAAA2qF,oBAAA76E,GAAAnQ,OAEA,IAAAyc,EAEA,IAAAA,KAAAtM,EACA,GAAAA,EAAA7L,eAAAmY,GACA,SAIA,SA+jFAwuE,CAAAnpB,IAAA/9D,EAAA+9D,IAAA,IAAAA,EAAA9hE,UACA8hE,OAAAh/D,GAKAmb,EAAAw3D,kBAAA,EACAx3D,EAAAsnE,QAAAtnE,EAAA63D,OAAAiV,EACA9sE,EAAA23D,GAAArC,EACAt1D,EAAAy3D,GAAA5T,EACA7jD,EAAA03D,GAAArpB,EACAruC,EAAAi3D,QAAA1B,EAzFA,SAAAj/D,GACA,IAAA6pB,EAAA,IAAA83C,EAAA4O,GAAAqF,GAAA51E,KAQA,OANA6pB,EAAAsoD,WAEAtoD,EAAA36B,IAAA,OACA26B,EAAAsoD,cAAA5jF,GAGAs7B,EAiFA8sD,CAAAjtE,GAGA,SAAAmoE,GAAAtkB,EAAAxV,EAAAinB,EAAAC,GACA,OAAAC,GAAA3R,EAAAxV,EAAAinB,EAAAC,GAAA,GApQAP,EAAA0X,wBAAA1T,EAAA,0VAAA1iE,GACAA,EAAAwgE,GAAA,IAAA/5C,KAAAzmB,EAAAmhE,IAAAnhE,EAAAgxE,QAAA,cAGAtS,EAAA0W,SAAA,aAGA1W,EAAA2W,SAAA,aAgQA,IAAAuB,GAAAlU,EAAA,gHACA,IAAAh4E,EAAAmnF,GAAA/3E,MAAA,KAAAD,WAEA,OAAA9P,KAAA2sB,WAAAhsB,EAAAgsB,UACAhsB,EAAAX,UAAAW,EAEAo2E,MAGA+V,GAAAnU,EAAA,gHACA,IAAAh4E,EAAAmnF,GAAA/3E,MAAA,KAAAD,WAEA,OAAA9P,KAAA2sB,WAAAhsB,EAAAgsB,UACAhsB,EAAAX,UAAAW,EAEAo2E,MAQA,SAAAgW,GAAAl8D,EAAAm8D,GACA,IAAAltD,EAAAnuB,EAMA,GAJA,IAAAq7E,EAAAtrF,QAAA+D,EAAAunF,EAAA,MACAA,IAAA,KAGAA,EAAAtrF,OACA,OAAAomF,KAKA,IAFAhoD,EAAAktD,EAAA,GAEAr7E,EAAA,EAAeA,EAAAq7E,EAAAtrF,SAAoBiQ,EACnCq7E,EAAAr7E,GAAAgb,YAAAqgE,EAAAr7E,GAAAkf,GAAAiP,KACAA,EAAAktD,EAAAr7E,IAIA,OAAAmuB,EAcA,IAIAmtD,GAAA,+EAkCA,SAAAC,GAAAjxD,GACA,IAAA49C,EAAAH,EAAAz9C,GACAkxD,EAAAtT,EAAArX,MAAA,EACA4qB,EAAAvT,EAAAtX,SAAA,EACAsc,EAAAhF,EAAAvX,OAAA,EACA+qB,EAAAxT,EAAAxX,MAAAwX,EAAAyT,SAAA,EACAC,EAAA1T,EAAAzX,KAAA,EACA6gB,EAAApJ,EAAA1X,MAAA,EACAghB,EAAAtJ,EAAA3X,QAAA,EACAohB,EAAAzJ,EAAA5X,QAAA,EACAwC,EAAAoV,EAAA/X,aAAA,EACA9hE,KAAAq2E,SA3CA,SAAAz2D,GACA,QAAA9a,KAAA8a,EACA,QAAA9N,GAAAzP,KAAA4qF,GAAAnoF,IAAA,MAAA8a,EAAA9a,IAAAqnB,MAAAvM,EAAA9a,IACA,SAMA,IAFA,IAAA0oF,GAAA,EAEA77E,EAAA,EAAmBA,EAAAs7E,GAAAvrF,SAAqBiQ,EACxC,GAAAiO,EAAAqtE,GAAAt7E,IAAA,CACA,GAAA67E,EACA,SAGAvhE,WAAArM,EAAAqtE,GAAAt7E,OAAAqmE,EAAAp4D,EAAAqtE,GAAAt7E,OACA67E,GAAA,GAKA,SAsBAC,CAAA5T,GAEA75E,KAAA0tF,eAAAjpB,EAAA,IAAA6e,EACA,IAAAH,EACA,IAAAF,EAAA,MAIAjjF,KAAA2tF,OAAAJ,EAAA,EAAAF,EAIArtF,KAAA4tF,SAAA/O,EAAA,EAAAuO,EAAA,GAAAD,EACAntF,KAAAi/B,MAAA,GACAj/B,KAAA03E,QAAAuO,KAEAjmF,KAAA6tF,UAGA,SAAAC,GAAAj8E,GACA,OAAAA,aAAAq7E,GAGA,SAAAa,GAAA3+E,GACA,OAAAA,EAAA,GACA,EAAA2O,KAAAkM,OAAA,EAAA7a,GAEA2O,KAAAkM,MAAA7a,GAKA,SAAAzN,GAAAg5E,EAAAqT,GACAtT,EAAAC,EAAA,eACA,IAAAh5E,EAAA3B,KAAAiuF,YACAr0B,EAAA,IAOA,OALAj4D,EAAA,IACAA,KACAi4D,EAAA,KAGAA,EAAAqgB,KAAAt4E,EAAA,OAAAqsF,EAAA/T,IAAAt4E,EAAA,QAIAA,GAAA,SACAA,GAAA,SAEA86E,GAAA,IAAAH,IACAG,GAAA,KAAAH,IACAc,GAAA,oBAAA5Z,EAAAjiE,EAAA0U,GACAA,EAAAgxE,SAAA,EACAhxE,EAAAshE,KAAA2W,GAAA5R,GAAA9Y,KAMA,IAAA2qB,GAAA,kBAEA,SAAAD,GAAAE,EAAApjF,GACA,IAAAmuB,GAAAnuB,GAAA,IAAAmE,MAAAi/E,GAEA,UAAAj1D,EACA,YAGA,IAAA0R,EAAA1R,IAAAz3B,OAAA,OACA2sF,GAAAxjD,EAAA,IAAA17B,MAAAg/E,KAAA,UACAhL,EAAA,GAAAkL,EAAA,GAAArW,EAAAqW,EAAA,IACA,WAAAlL,EAAA,QAAAkL,EAAA,GAAAlL,KAIA,SAAAmL,GAAA9qB,EAAA1oC,GACA,IAAAgF,EAAAmuB,EAEA,OAAAnzB,EAAA08C,QACA13C,EAAAhF,EAAAvL,QACA0+B,GAAA6pB,EAAAtU,IAAAqR,EAAArR,KAAA72D,UAAAm7E,GAAAtkB,GAAA72D,WAAAmzB,EAAAnzB,UAEAmzB,EAAA22C,GAAA8X,QAAAzuD,EAAA22C,GAAA9pE,UAAAshD,GAEA0mB,EAAAkD,aAAA/3C,GAAA,GACAA,GAEAgoD,GAAAtkB,GAAAgrB,QAIA,SAAAC,GAAA7uE,GAGA,WAAA7B,KAAAkM,MAAArK,EAAA62D,GAAAiY,oBAAA,IAuJA,SAAAC,KACA,QAAA3uF,KAAA2sB,WAAA3sB,KAAAw3E,QAAA,IAAAx3E,KAAAy3E,QAlJA9C,EAAAkD,aAAA,aAsJA,IAAA+W,GAAA,2DAIAC,GAAA,sKAEA,SAAAC,GAAAtrB,EAAA1+D,GACA,IAGA80D,EACAm1B,EACAC,EALA/yD,EAAAunC,EAEAr0D,EAAA,KAyDA,OApDA2+E,GAAAtqB,GACAvnC,EAAA,CACAosD,GAAA7kB,EAAAkqB,cACAp9E,EAAAkzD,EAAAmqB,MACAtI,EAAA7hB,EAAAoqB,SAEKpyD,EAAAgoC,IACLvnC,EAAA,GAEAn3B,EACAm3B,EAAAn3B,GAAA0+D,EAEAvnC,EAAAwoC,aAAAjB,IAEKr0D,EAAAy/E,GAAAjkF,KAAA64D,KACL5J,EAAA,MAAAzqD,EAAA,QACA8sB,EAAA,CACAxd,EAAA,EACAnO,EAAA0nE,EAAA7oE,EAAAwuE,KAAA/jB,EACAz+C,EAAA68D,EAAA7oE,EAAAyuE,KAAAhkB,EACAh6C,EAAAo4D,EAAA7oE,EAAA0uE,KAAAjkB,EACAx+C,EAAA48D,EAAA7oE,EAAA2uE,KAAAlkB,EACAyuB,GAAArQ,EAAA+V,GAAA,IAAA5+E,EAAA4uE,MAAAnkB,KAGKzqD,EAAA0/E,GAAAlkF,KAAA64D,KACL5J,EAAA,MAAAzqD,EAAA,QACA8sB,EAAA,CACAxd,EAAAwwE,GAAA9/E,EAAA,GAAAyqD,GACAyrB,EAAA4J,GAAA9/E,EAAA,GAAAyqD,GACA17C,EAAA+wE,GAAA9/E,EAAA,GAAAyqD,GACAtpD,EAAA2+E,GAAA9/E,EAAA,GAAAyqD,GACAz+C,EAAA8zE,GAAA9/E,EAAA,GAAAyqD,GACAh6C,EAAAqvE,GAAA9/E,EAAA,GAAAyqD,GACAx+C,EAAA6zE,GAAA9/E,EAAA,GAAAyqD,KAEK,MAAA39B,EAELA,EAAA,GACK,kBAAAA,IAAA,SAAAA,GAAA,OAAAA,KACL+yD,EAuCA,SAAAnvD,EAAAl/B,GACA,IAAAm/B,EAEA,OAAAD,EAAAlT,WAAAhsB,EAAAgsB,WAOAhsB,EAAA2tF,GAAA3tF,EAAAk/B,GAEAA,EAAAqvD,SAAAvuF,GACAm/B,EAAAqvD,GAAAtvD,EAAAl/B,KAEAm/B,EAAAqvD,GAAAxuF,EAAAk/B,IACA4kC,cAAA3kC,EAAA2kC,aACA3kC,EAAA++C,QAAA/+C,EAAA++C,QAGA/+C,GAhBA,CACA2kC,aAAA,EACAoa,OAAA,GA7CAuQ,CAAAtH,GAAA7rD,EAAAlS,MAAA+9D,GAAA7rD,EAAAjS,MACAiS,EAAA,IACAosD,GAAA2G,EAAAvqB,aACAxoC,EAAAopD,EAAA2J,EAAAnQ,QAGAkQ,EAAA,IAAA7B,GAAAjxD,GAEA6xD,GAAAtqB,IAAAuR,EAAAvR,EAAA,aACAurB,EAAArX,QAAAlU,EAAAkU,SAGAqX,EAMA,SAAAE,GAAAI,EAAAz1B,GAIA,IAAA95B,EAAAuvD,GAAApjE,WAAAojE,EAAAplF,QAAA,UAEA,OAAAkiB,MAAA2T,GAAA,EAAAA,GAAA85B,EAGA,SAAAu1B,GAAAtvD,EAAAl/B,GACA,IAAAm/B,EAAA,GAQA,OAPAA,EAAA++C,OAAAl+E,EAAA2hE,QAAAziC,EAAAyiC,QAAA,IAAA3hE,EAAA6hE,OAAA3iC,EAAA2iC,QAEA3iC,EAAAtQ,QAAApqB,IAAA26B,EAAA++C,OAAA,KAAAyQ,QAAA3uF,MACAm/B,EAAA++C,OAGA/+C,EAAA2kC,cAAA9jE,GAAAk/B,EAAAtQ,QAAApqB,IAAA26B,EAAA++C,OAAA,KACA/+C,EA2BA,SAAAyvD,GAAAC,EAAAziF,GACA,gBAAAgS,EAAA0wE,GACA,IAAA9nC,EAYA,OAVA,OAAA8nC,GAAAtjE,OAAAsjE,KACA1W,EAAAhsE,EAAA,YAAAA,EAAA,uDAAAA,EAAA,kGACA46C,EAAA5oC,EACAA,EAAA0wE,EACAA,EAAA9nC,GAKA+nC,GAAA1vF,KADA8uF,GADA/vE,EAAA,kBAAAA,OACA0wE,GACAD,GACAxvF,MAIA,SAAA0vF,GAAAzU,EAAAh/C,EAAA0zD,EAAA9X,GACA,IAAApT,EAAAxoC,EAAAyxD,cACAH,EAAAQ,GAAA9xD,EAAA0xD,OACA9O,EAAAkP,GAAA9xD,EAAA2xD,SAEA3S,EAAAtuD,YAKAkrD,EAAA,MAAAA,KAEAgH,GACAO,GAAAnE,EAAA56E,GAAA46E,EAAA,SAAA4D,EAAA8Q,GAGApC,GACA/O,GAAAvD,EAAA,OAAA56E,GAAA46E,EAAA,QAAAsS,EAAAoC,GAGAlrB,GACAwW,EAAAxE,GAAA8X,QAAAtT,EAAAxE,GAAA9pE,UAAA83D,EAAAkrB,GAGA9X,GACAlD,EAAAkD,aAAAoD,EAAAsS,GAAA1O,IA3FAiQ,GAAAj+D,GAAAq8D,GAAA/sF,UACA2uF,GAAAc,QA/UA,WACA,OAAAd,GAAA5iD,MA4aA,IAAA/mC,GAAAoqF,GAAA,SACAM,GAAAN,IAAA,cAwJA,SAAAO,GAAA15E,EAAAyH,GAEA,IAGAkyE,EACAC,EAJAC,EAAA,IAAApyE,EAAA2kD,OAAApsD,EAAAosD,SAAA3kD,EAAAykD,QAAAlsD,EAAAksD,SAEA4tB,EAAA95E,EAAAmZ,QAAApqB,IAAA8qF,EAAA,UAeA,OAXApyE,EAAAqyE,EAAA,GACAH,EAAA35E,EAAAmZ,QAAApqB,IAAA8qF,EAAA,YAEAD,GAAAnyE,EAAAqyE,MAAAH,KAEAA,EAAA35E,EAAAmZ,QAAApqB,IAAA8qF,EAAA,YAEAD,GAAAnyE,EAAAqyE,IAAAH,EAAAG,MAIAD,EAAAD,IAAA,EAuGA,SAAA/a,GAAAnwE,GACA,IAAAqrF,EAEA,YAAA3rF,IAAAM,EACA9E,KAAA03E,QAAAoO,OAIA,OAFAqK,EAAAlK,GAAAnhF,MAGA9E,KAAA03E,QAAAyY,GAGAnwF,MAhHA20E,EAAAyb,cAAA,uBACAzb,EAAA0b,iBAAA,yBAmHA,IAAAC,GAAA3X,EAAA,2JAAA7zE,GACA,YAAAN,IAAAM,EACA9E,KAAA86E,aAEA96E,KAAAi1E,OAAAnwE,KAIA,SAAAg2E,KACA,OAAA96E,KAAA03E,QAGA,IAAA6Y,GAAA,IACAC,GAAA,GAAAD,GACAE,GAAA,GAAAD,GACAE,GAAA,QAAAD,GAEA,SAAAE,GAAAC,EAAAC,GACA,OAAAD,EAAAC,OAGA,SAAAC,GAAAryE,EAAAmB,EAAAtP,GAEA,OAAAmO,EAAA,KAAAA,GAAA,EAEA,IAAAie,KAAAje,EAAA,IAAAmB,EAAAtP,GAAAogF,GAEA,IAAAh0D,KAAAje,EAAAmB,EAAAtP,GAAA3D,UAIA,SAAAokF,GAAAtyE,EAAAmB,EAAAtP,GAEA,OAAAmO,EAAA,KAAAA,GAAA,EAEAie,KAAAyjD,IAAA1hE,EAAA,IAAAmB,EAAAtP,GAAAogF,GAEAh0D,KAAAyjD,IAAA1hE,EAAAmB,EAAAtP,GAyLA,SAAA0gF,GAAArW,EAAAsW,GACAvW,EAAA,GAAAC,IAAAj5E,QAAA,EAAAuvF,GA+CA,SAAAC,GAAA1tB,EAAAnB,EAAAgC,EAAAkc,EAAAC,GACA,IAAA2Q,EAEA,aAAA3tB,EACA0d,GAAAlhF,KAAAugF,EAAAC,GAAAhe,MAEA2uB,EAAA/P,GAAA5d,EAAA+c,EAAAC,GAEAne,EAAA8uB,IACA9uB,EAAA8uB,GAOA,SAAA3J,EAAAnlB,EAAAgC,EAAAkc,EAAAC,GACA,IAAA4Q,EAAAxQ,GAAA4G,EAAAnlB,EAAAgC,EAAAkc,EAAAC,GACA3b,EAAAqb,GAAAkR,EAAA5uB,KAAA,EAAA4uB,EAAAnQ,WAIA,OAHAjhF,KAAAwiE,KAAAqC,EAAAub,kBACApgF,KAAAsiE,MAAAuC,EAAAqiB,eACAlnF,KAAA6kE,OAAAsiB,cACAnnF,MAVAqC,KAAArC,KAAAwjE,EAAAnB,EAAAgC,EAAAkc,EAAAC,IAnEA9F,EAAA,wBACA,OAAA16E,KAAAwnF,WAAA,MAEA9M,EAAA,wBACA,OAAA16E,KAAAqxF,cAAA,MAOAL,GAAA,mBACAA,GAAA,oBACAA,GAAA,sBACAA,GAAA,uBAEA3X,EAAA,iBACAA,EAAA,oBAEAU,EAAA,cACAA,EAAA,iBAEA0C,GAAA,IAAAL,IACAK,GAAA,IAAAL,IACAK,GAAA,KAAAZ,EAAAJ,GACAgB,GAAA,KAAAZ,EAAAJ,GACAgB,GAAA,OAAAR,GAAAN,GACAc,GAAA,OAAAR,GAAAN,GACAc,GAAA,QAAAP,GAAAN,GACAa,GAAA,QAAAP,GAAAN,GACAyB,GAAA,yCAAA7Z,EAAAnB,EAAApsD,EAAA0kE,GACAtY,EAAAsY,EAAAvqD,OAAA,MAAA4nD,EAAAxU,KAEA6Z,GAAA,qBAAA7Z,EAAAnB,EAAApsD,EAAA0kE,GACAtY,EAAAsY,GAAAhG,EAAAyJ,kBAAA5a,KA+CAkX,EAAA,sBAEArB,EAAA,eAEAU,EAAA,aAEA0C,GAAA,IAAAjB,GACA4B,GAAA,aAAA5Z,EAAAjiE,GACAA,EAAAm8E,IAAA,GAAA1F,EAAAxU,GAAA,KAQAkX,EAAA,0BAEArB,EAAA,YAEAU,EAAA,UAEA0C,GAAA,IAAAZ,GACAY,GAAA,KAAAZ,EAAAJ,GACAgB,GAAA,cAAAG,EAAA3H,GAEA,OAAA2H,EAAA3H,EAAAqc,yBAAArc,EAAAsc,cAAAtc,EAAAuc,iCAEApU,GAAA,WAAAO,IACAP,GAAA,cAAA5Z,EAAAjiE,GACAA,EAAAo8E,IAAA3F,EAAAxU,EAAAr0D,MAAA0sE,GAAA,MAGA,IAAA4V,GAAAnT,GAAA,WAEA5D,EAAA,qCAEArB,EAAA,mBAEAU,EAAA,eAEA0C,GAAA,MAAAT,IACAS,GAAA,OAAAf,GACA0B,GAAA,wBAAA5Z,EAAAjiE,EAAA0U,GACAA,EAAAiyE,WAAAlQ,EAAAxU,KAUAkX,EAAA,yBAEArB,EAAA,cAEAU,EAAA,aAEA0C,GAAA,IAAAZ,GACAY,GAAA,KAAAZ,EAAAJ,GACA2B,GAAA,WAAAS,IAEA,IAAA6T,GAAApT,GAAA,cAEA5D,EAAA,yBAEArB,EAAA,cAEAU,EAAA,aAEA0C,GAAA,IAAAZ,GACAY,GAAA,KAAAZ,EAAAJ,GACA2B,GAAA,WAAAU,IAEA,IAmCAnD,GAnCAgX,GAAArT,GAAA,cAqCA,IAnCA5D,EAAA,mBACA,SAAA16E,KAAA8hE,cAAA,OAEA4Y,EAAA,wBACA,SAAA16E,KAAA8hE,cAAA,MAEA4Y,EAAA,6BACAA,EAAA,0BACA,UAAA16E,KAAA8hE,gBAEA4Y,EAAA,2BACA,WAAA16E,KAAA8hE,gBAEA4Y,EAAA,4BACA,WAAA16E,KAAA8hE,gBAEA4Y,EAAA,6BACA,WAAA16E,KAAA8hE,gBAEA4Y,EAAA,8BACA,WAAA16E,KAAA8hE,gBAEA4Y,EAAA,+BACA,WAAA16E,KAAA8hE,gBAGAuX,EAAA,oBAEAU,EAAA,kBAEA0C,GAAA,IAAAT,GAAAR,GACAiB,GAAA,KAAAT,GAAAP,GACAgB,GAAA,MAAAT,GAAAN,GAGAf,GAAA,OAAsBA,GAAAj5E,QAAA,EAAmBi5E,IAAA,IACzC8B,GAAA9B,GAAAwB,IAGA,SAAAyV,GAAApuB,EAAAjiE,GACAA,EAAAw8E,IAAA/F,EAAA,UAAAxU,IAGA,IAAAmX,GAAA,IAAmBA,GAAAj5E,QAAA,EAAmBi5E,IAAA,IACtCyC,GAAAzC,GAAAiX,IAIA,IAAAC,GAAAvT,GAAA,mBAEA5D,EAAA,oBACAA,EAAA,qBAUA,IAAAoX,GAAAla,EAAAz3E,UAqFA,SAAA4xF,GAAA/mF,GACA,OAAAA,EArFA8mF,GAAA3sF,OACA2sF,GAAA9N,SAhtBA,SAAArgB,EAAA7V,GAGA,IAAAnxB,EAAAgnC,GAAAmkB,KACAkK,EAAA1D,GAAA3xD,EAAA38B,MAAAkuD,QAAA,OACAF,EAAA2mB,EAAAsd,eAAAjyF,KAAAgyF,IAAA,WACA9W,EAAAptB,IAAArkD,EAAAqkD,EAAAE,IAAAF,EAAAE,GAAA3rD,KAAArC,KAAA28B,GAAAmxB,EAAAE,IACA,OAAAhuD,KAAAguD,OAAAktB,GAAAl7E,KAAA86E,aAAAkJ,SAAAh2B,EAAAhuD,KAAA8nF,GAAAnrD,MA0sBAm1D,GAAAviE,MAvsBA,WACA,WAAAqoD,EAAA53E,OAusBA8xF,GAAA7jC,KA9nBA,SAAAuV,EAAAiW,EAAAyY,GACA,IAAAC,EAAAC,EAAAlX,EAEA,IAAAl7E,KAAA2sB,UACA,OAAAuf,IAKA,KAFAimD,EAAA7D,GAAA9qB,EAAAxjE,OAEA2sB,UACA,OAAAuf,IAMA,OAHAkmD,EAAA,KAAAD,EAAAlE,YAAAjuF,KAAAiuF,aACAxU,EAAAD,EAAAC,IAGA,WACAyB,EAAA4U,GAAA9vF,KAAAmyF,GAAA,GACA,MAEA,YACAjX,EAAA4U,GAAA9vF,KAAAmyF,GACA,MAEA,cACAjX,EAAA4U,GAAA9vF,KAAAmyF,GAAA,EACA,MAEA,aACAjX,GAAAl7E,KAAAmyF,GAAA,IACA,MAGA,aACAjX,GAAAl7E,KAAAmyF,GAAA,IACA,MAGA,WACAjX,GAAAl7E,KAAAmyF,GAAA,KACA,MAGA,UACAjX,GAAAl7E,KAAAmyF,EAAAC,GAAA,MACA,MAGA,WACAlX,GAAAl7E,KAAAmyF,EAAAC,GAAA,OACA,MAGA,QACAlX,EAAAl7E,KAAAmyF,EAGA,OAAAD,EAAAhX,EAAAnD,EAAAmD,IAqkBA4W,GAAA3jC,MArVA,SAAAsrB,GACA,IAAA9V,EAGA,QAAAn/D,KAFAi1E,EAAAD,EAAAC,KAEA,gBAAAA,IAAAz5E,KAAA2sB,UACA,OAAA3sB,KAGA,IAAAqyF,EAAAryF,KAAAw3E,OAAAuZ,GAAAD,GAEA,OAAArX,GACA,WACA9V,EAAA0uB,EAAAryF,KAAAwiE,OAAA,SACA,MAEA,cACAmB,EAAA0uB,EAAAryF,KAAAwiE,OAAAxiE,KAAAsiE,QAAAtiE,KAAAsiE,QAAA,SACA,MAEA,YACAqB,EAAA0uB,EAAAryF,KAAAwiE,OAAAxiE,KAAAsiE,QAAA,OACA,MAEA,WACAqB,EAAA0uB,EAAAryF,KAAAwiE,OAAAxiE,KAAAsiE,QAAAtiE,KAAA6kE,OAAA7kE,KAAAqkE,UAAA,KACA,MAEA,cACAV,EAAA0uB,EAAAryF,KAAAwiE,OAAAxiE,KAAAsiE,QAAAtiE,KAAA6kE,QAAA7kE,KAAAskE,aAAA,QACA,MAEA,UACA,WACAX,EAAA0uB,EAAAryF,KAAAwiE,OAAAxiE,KAAAsiE,QAAAtiE,KAAA6kE,OAAA,KACA,MAEA,WACAlB,EAAA3jE,KAAAy2E,GAAA9pE,UACAg3D,GAAA8sB,GAAAE,GAAAhtB,GAAA3jE,KAAAw3E,OAAA,EAAAx3E,KAAAiuF,YAAAuC,IAAAC,IAAA,EACA,MAEA,aACA9sB,EAAA3jE,KAAAy2E,GAAA9pE,UACAg3D,GAAA6sB,GAAAG,GAAAhtB,EAAA6sB,IAAA,EACA,MAEA,aACA7sB,EAAA3jE,KAAAy2E,GAAA9pE,UACAg3D,GAAA4sB,GAAAI,GAAAhtB,EAAA4sB,IAAA,EAOA,OAHAvwF,KAAAy2E,GAAA8X,QAAA5qB,GAEAgR,EAAAkD,aAAA73E,MAAA,GACAA,MA+RA8xF,GAAA9jC,OAnfA,SAAAskC,GACAA,IACAA,EAAAtyF,KAAA2uF,QAAAha,EAAA0b,iBAAA1b,EAAAyb,eAGA,IAAAlV,EAAAH,EAAA/6E,KAAAsyF,GACA,OAAAtyF,KAAA86E,aAAAyX,WAAArX,IA8eA4W,GAAA/nE,KA3eA,SAAA45C,EAAA6uB,GACA,OAAAxyF,KAAA2sB,YAAAmrD,EAAAnU,MAAAh3C,WAAAm7D,GAAAnkB,GAAAh3C,WACAmiE,GAAA,CACA9kE,GAAAhqB,KACA+pB,KAAA45C,IACOsR,OAAAj1E,KAAAi1E,UAAAwd,UAAAD,GAEPxyF,KAAA86E,aAAAM,eAqeA0W,GAAAY,QAjeA,SAAAF,GACA,OAAAxyF,KAAA+pB,KAAA+9D,KAAA0K,IAieAV,GAAA9nE,GA9dA,SAAA25C,EAAA6uB,GACA,OAAAxyF,KAAA2sB,YAAAmrD,EAAAnU,MAAAh3C,WAAAm7D,GAAAnkB,GAAAh3C,WACAmiE,GAAA,CACA/kE,KAAA/pB,KACAgqB,GAAA25C,IACOsR,OAAAj1E,KAAAi1E,UAAAwd,UAAAD,GAEPxyF,KAAA86E,aAAAM,eAwdA0W,GAAAa,MApdA,SAAAH,GACA,OAAAxyF,KAAAgqB,GAAA89D,KAAA0K,IAodAV,GAAAzxF,IArhGA,SAAAo5E,GAGA,OAAAhwE,EAAAzJ,KAFAy5E,EAAAD,EAAAC,KAGAz5E,KAAAy5E,KAGAz5E,MA+gGA8xF,GAAAc,UAvPA,WACA,OAAAvd,EAAAr1E,MAAA01E,UAuPAoc,GAAAxC,QA7sBA,SAAA9rB,EAAAiW,GACA,IAAAoZ,EAAA/a,EAAAtU,KAAAskB,GAAAtkB,GAEA,SAAAxjE,KAAA2sB,YAAAkmE,EAAAlmE,aAMA,iBAFA8sD,EAAAD,EAAAC,IAAA,eAGAz5E,KAAA2M,UAAAkmF,EAAAlmF,UAEAkmF,EAAAlmF,UAAA3M,KAAAuvB,QAAA2+B,QAAAurB,GAAA9sE,YAksBAmlF,GAAA5C,SA9rBA,SAAA1rB,EAAAiW,GACA,IAAAoZ,EAAA/a,EAAAtU,KAAAskB,GAAAtkB,GAEA,SAAAxjE,KAAA2sB,YAAAkmE,EAAAlmE,aAMA,iBAFA8sD,EAAAD,EAAAC,IAAA,eAGAz5E,KAAA2M,UAAAkmF,EAAAlmF,UAEA3M,KAAAuvB,QAAA4+B,MAAAsrB,GAAA9sE,UAAAkmF,EAAAlmF,YAmrBAmlF,GAAAgB,UA/qBA,SAAA/oE,EAAAC,EAAAyvD,EAAAsZ,GACA,IAAAC,EAAAlb,EAAA/tD,KAAA+9D,GAAA/9D,GACAkpE,EAAAnb,EAAA9tD,KAAA89D,GAAA99D,GAEA,SAAAhqB,KAAA2sB,WAAAqmE,EAAArmE,WAAAsmE,EAAAtmE,cAKA,OADAomE,KAAA,MACA,GAAA/yF,KAAAsvF,QAAA0D,EAAAvZ,IAAAz5E,KAAAkvF,SAAA8D,EAAAvZ,MAAA,MAAAsZ,EAAA,GAAA/yF,KAAAkvF,SAAA+D,EAAAxZ,IAAAz5E,KAAAsvF,QAAA2D,EAAAxZ,MAuqBAqY,GAAAoB,OApqBA,SAAA1vB,EAAAiW,GACA,IACA0Z,EADAN,EAAA/a,EAAAtU,KAAAskB,GAAAtkB,GAGA,SAAAxjE,KAAA2sB,YAAAkmE,EAAAlmE,aAMA,iBAFA8sD,EAAAD,EAAAC,IAAA,eAGAz5E,KAAA2M,YAAAkmF,EAAAlmF,WAEAwmF,EAAAN,EAAAlmF,UACA3M,KAAAuvB,QAAA2+B,QAAAurB,GAAA9sE,WAAAwmF,MAAAnzF,KAAAuvB,QAAA4+B,MAAAsrB,GAAA9sE,aAupBAmlF,GAAAsB,cAnpBA,SAAA5vB,EAAAiW,GACA,OAAAz5E,KAAAkzF,OAAA1vB,EAAAiW,IAAAz5E,KAAAsvF,QAAA9rB,EAAAiW,IAmpBAqY,GAAAuB,eAhpBA,SAAA7vB,EAAAiW,GACA,OAAAz5E,KAAAkzF,OAAA1vB,EAAAiW,IAAAz5E,KAAAkvF,SAAA1rB,EAAAiW,IAgpBAqY,GAAAnlE,QAtQA,WACA,OAAAA,EAAA3sB,OAsQA8xF,GAAAxB,QACAwB,GAAA7c,UACA6c,GAAAhX,cACAgX,GAAA9zE,IAAA8uE,GACAgF,GAAAh0E,IAAA+uE,GACAiF,GAAAwB,aAxQA,WACA,OAAAphE,EAAA,GAAoBmjD,EAAAr1E,QAwQpB8xF,GAAAvxF,IA1hGA,SAAAk5E,EAAA/4E,GACA,qBAAA+4E,EAIA,IAFA,IAAA8Z,EA5TA,SAAAC,GACA,IAAA/Z,EAAA,GAEA,QAAAga,KAAAD,EACA/Z,EAAA50E,KAAA,CACAm2D,KAAAy4B,EACAzZ,SAAAF,EAAA2Z,KAOA,OAHAha,EAAAxkC,KAAA,SAAA7+B,EAAAyH,GACA,OAAAzH,EAAA4jE,SAAAn8D,EAAAm8D,WAEAP,EA+SAia,CADAja,EAAAC,EAAAD,IAGA9nE,EAAA,EAAqBA,EAAA4hF,EAAA7xF,OAAwBiQ,IAC7C3R,KAAAuzF,EAAA5hF,GAAAqpD,MAAAye,EAAA8Z,EAAA5hF,GAAAqpD,YAKA,GAAAvxD,EAAAzJ,KAFAy5E,EAAAD,EAAAC,KAGA,OAAAz5E,KAAAy5E,GAAA/4E,GAIA,OAAAV,MA2gGA8xF,GAAA5jC,QAraA,SAAAurB,GACA,IAAA9V,EAGA,QAAAn/D,KAFAi1E,EAAAD,EAAAC,KAEA,gBAAAA,IAAAz5E,KAAA2sB,UACA,OAAA3sB,KAGA,IAAAqyF,EAAAryF,KAAAw3E,OAAAuZ,GAAAD,GAEA,OAAArX,GACA,WACA9V,EAAA0uB,EAAAryF,KAAAwiE,OAAA,KACA,MAEA,cACAmB,EAAA0uB,EAAAryF,KAAAwiE,OAAAxiE,KAAAsiE,QAAAtiE,KAAAsiE,QAAA,KACA,MAEA,YACAqB,EAAA0uB,EAAAryF,KAAAwiE,OAAAxiE,KAAAsiE,QAAA,GACA,MAEA,WACAqB,EAAA0uB,EAAAryF,KAAAwiE,OAAAxiE,KAAAsiE,QAAAtiE,KAAA6kE,OAAA7kE,KAAAqkE,WACA,MAEA,cACAV,EAAA0uB,EAAAryF,KAAAwiE,OAAAxiE,KAAAsiE,QAAAtiE,KAAA6kE,QAAA7kE,KAAAskE,aAAA,IACA,MAEA,UACA,WACAX,EAAA0uB,EAAAryF,KAAAwiE,OAAAxiE,KAAAsiE,QAAAtiE,KAAA6kE,QACA,MAEA,WACAlB,EAAA3jE,KAAAy2E,GAAA9pE,UACAg3D,GAAAgtB,GAAAhtB,GAAA3jE,KAAAw3E,OAAA,EAAAx3E,KAAAiuF,YAAAuC,IAAAC,IACA,MAEA,aACA9sB,EAAA3jE,KAAAy2E,GAAA9pE,UACAg3D,GAAAgtB,GAAAhtB,EAAA6sB,IACA,MAEA,aACA7sB,EAAA3jE,KAAAy2E,GAAA9pE,UACAg3D,GAAAgtB,GAAAhtB,EAAA4sB,IAOA,OAHAvwF,KAAAy2E,GAAA8X,QAAA5qB,GAEAgR,EAAAkD,aAAA73E,MAAA,GACAA,MA+WA8xF,GAAAjC,YACAiC,GAAA6B,QAvSA,WACA,IAAA/zE,EAAA5f,KACA,OAAA4f,EAAA4iD,OAAA5iD,EAAA0iD,QAAA1iD,EAAAilD,OAAAjlD,EAAAuiD,OAAAviD,EAAAsiD,SAAAtiD,EAAAqiD,SAAAriD,EAAAkiD,gBAsSAgwB,GAAA8B,SAnSA,WACA,IAAAh0E,EAAA5f,KACA,OACAmtF,MAAAvtE,EAAA4iD,OACAqc,OAAAj/D,EAAA0iD,QACAuC,KAAAjlD,EAAAilD,OACAoe,MAAArjE,EAAAqjE,QACAE,QAAAvjE,EAAAujE,UACAG,QAAA1jE,EAAA0jE,UACA7e,aAAA7kD,EAAA6kD,iBA2RAqtB,GAAA+B,OA7SA,WACA,WAAAn3D,KAAA18B,KAAA2M,YA6SAmlF,GAAAgC,YAhkBA,SAAAC,GACA,IAAA/zF,KAAA2sB,UACA,YAGA,IAAAyoD,GAAA,IAAA2e,EACAn0E,EAAAw1D,EAAAp1E,KAAAuvB,QAAA6lD,MAAAp1E,KAEA,OAAA4f,EAAA4iD,OAAA,GAAA5iD,EAAA4iD,OAAA,KACAuY,EAAAn7D,EAAAw1D,EAAA,iEAGA3rE,EAAAizB,KAAAv8B,UAAA2zF,aAEA1e,EACAp1E,KAAA6zF,SAAAC,cAEA,IAAAp3D,KAAA18B,KAAA2M,UAAA,GAAA3M,KAAAiuF,YAAA,KAAA6F,cAAA7pF,QAAA,IAAA8wE,EAAAn7D,EAAA,MAIAm7D,EAAAn7D,EAAAw1D,EAAA,8DA4iBA0c,GAAAkC,QAliBA,WACA,IAAAh0F,KAAA2sB,UACA,2BAAA3sB,KAAAo3E,GAAA,OAGA,IAAAzzE,EAAA,SACAswF,EAAA,GAEAj0F,KAAAk0F,YACAvwF,EAAA,IAAA3D,KAAAiuF,YAAA,gCACAgG,EAAA,KAGA,IAAAE,EAAA,IAAAxwF,EAAA,MACA6+D,EAAA,GAAAxiE,KAAAwiE,QAAAxiE,KAAAwiE,QAAA,qBAEA4xB,EAAAH,EAAA,OACA,OAAAj0F,KAAAguD,OAAAmmC,EAAA3xB,EAFA,wBAEA4xB,IAkhBAtC,GAAAxiE,OA1RA,WAEA,OAAAtvB,KAAA2sB,UAAA3sB,KAAA8zF,cAAA,MAyRAhC,GAAApuF,SAvkBA,WACA,OAAA1D,KAAAuvB,QAAA0lD,OAAA,MAAAjnB,OAAA,qCAukBA8jC,GAAAuC,KAtTA,WACA,OAAAt2E,KAAAkB,MAAAjf,KAAA2M,UAAA,MAsTAmlF,GAAAnlF,QA3TA,WACA,OAAA3M,KAAAy2E,GAAA9pE,UAAA,KAAA3M,KAAAy3E,SAAA,IA2TAqa,GAAAwC,aA7QA,WACA,OACA9wB,MAAAxjE,KAAAo3E,GACAppB,OAAAhuD,KAAAq3E,GACApC,OAAAj1E,KAAA03E,QACA+U,MAAAzsF,KAAAw3E,OACAtC,OAAAl1E,KAAA42E,UAwQAkb,GAAAtvB,KAAA6b,GACAyT,GAAA3T,WAjlGA,WACA,OAAAA,GAAAn+E,KAAAwiE,SAilGAsvB,GAAAtK,SAhOA,SAAAhkB,GACA,OAAA0tB,GAAA7uF,KAAArC,KAAAwjE,EAAAxjE,KAAAqiE,OAAAriE,KAAAqkE,UAAArkE,KAAA86E,aAAAiN,MAAAxH,IAAAvgF,KAAA86E,aAAAiN,MAAAvH,MAgOAsR,GAAAT,YA7NA,SAAA7tB,GACA,OAAA0tB,GAAA7uF,KAAArC,KAAAwjE,EAAAxjE,KAAAstF,UAAAttF,KAAAskE,aAAA,MA6NAwtB,GAAAvvB,QAAAuvB,GAAA1E,SA3KA,SAAA5pB,GACA,aAAAA,EAAAzlD,KAAAq8C,MAAAp6D,KAAAsiE,QAAA,MAAAtiE,KAAAsiE,MAAA,GAAAkB,EAAA,GAAAxjE,KAAAsiE,QAAA,IA2KAwvB,GAAAxvB,MAAAgd,GACAwS,GAAArT,YA9zFA,WACA,OAAAA,GAAAz+E,KAAAwiE,OAAAxiE,KAAAsiE,UA8zFAwvB,GAAAzvB,KAAAyvB,GAAAzE,MA1lFA,SAAA7pB,GACA,IAAAnB,EAAAriE,KAAA86E,aAAAzY,KAAAriE,MACA,aAAAwjE,EAAAnB,EAAAriE,KAAAmF,IAAA,GAAAq+D,EAAAnB,GAAA,MAylFAyvB,GAAAxE,QAAAwE,GAAAyC,SAtlFA,SAAA/wB,GACA,IAAAnB,EAAA6e,GAAAlhF,KAAA,KAAAqiE,KACA,aAAAmB,EAAAnB,EAAAriE,KAAAmF,IAAA,GAAAq+D,EAAAnB,GAAA,MAqlFAyvB,GAAA1Q,YA3NA,WACA,IAAAoT,EAAAx0F,KAAA86E,aAAAiN,MAEA,OAAA3G,GAAAphF,KAAAwiE,OAAAgyB,EAAAjU,IAAAiU,EAAAhU,MAyNAsR,GAAA2C,eAhOA,WACA,OAAArT,GAAAphF,KAAAwiE,OAAA,MAgOAsvB,GAAAjtB,KAAA4sB,GACAK,GAAA1vB,IAAA0vB,GAAAvE,KAx3EA,SAAA/pB,GACA,IAAAxjE,KAAA2sB,UACA,aAAA62C,EAAAxjE,KAAAksC,IAGA,IAAAk2B,EAAApiE,KAAAw3E,OAAAx3E,KAAAy2E,GAAAkK,YAAA3gF,KAAAy2E,GAAA8R,SAEA,aAAA/kB,GACAA,EArLA,SAAAA,EAAAyR,GACA,wBAAAzR,EACAA,EAGAr3C,MAAAq3C,GAMA,kBAFAA,EAAAyR,EAAA6M,cAAAte,IAGAA,EAGA,KATAx3C,SAAAw3C,EAAA,IA+KAkxB,CAAAlxB,EAAAxjE,KAAA86E,cACA96E,KAAAmF,IAAAq+D,EAAApB,EAAA,MAEAA,GA82EA0vB,GAAAztB,QA12EA,SAAAb,GACA,IAAAxjE,KAAA2sB,UACA,aAAA62C,EAAAxjE,KAAAksC,IAGA,IAAAm4B,GAAArkE,KAAAoiE,MAAA,EAAApiE,KAAA86E,aAAAiN,MAAAxH,KAAA,EACA,aAAA/c,EAAAa,EAAArkE,KAAAmF,IAAAq+D,EAAAa,EAAA,MAq2EAytB,GAAAxtB,WAl2EA,SAAAd,GACA,IAAAxjE,KAAA2sB,UACA,aAAA62C,EAAAxjE,KAAAksC,IAMA,SAAAs3B,EAAA,CACA,IAAAa,EA5LA,SAAAb,EAAAyR,GACA,wBAAAzR,EACAyR,EAAA6M,cAAAte,GAAA,KAGAr3C,MAAAq3C,GAAA,KAAAA,EAuLAmxB,CAAAnxB,EAAAxjE,KAAA86E,cACA,OAAA96E,KAAAoiE,IAAApiE,KAAAoiE,MAAA,EAAAiC,IAAA,GAEA,OAAArkE,KAAAoiE,OAAA,GAu1EA0vB,GAAA7Q,UAjJA,SAAAzd,GACA,IAAAyd,EAAAljE,KAAAkM,OAAAjqB,KAAAuvB,QAAA2+B,QAAA,OAAAluD,KAAAuvB,QAAA2+B,QAAA,kBACA,aAAAsV,EAAAyd,EAAAjhF,KAAAmF,IAAAq+D,EAAAyd,EAAA,MAgJA6Q,GAAA3vB,KAAA2vB,GAAA7O,MAAAa,GACAgO,GAAA5vB,OAAA4vB,GAAA3O,QAAAuO,GACAI,GAAA7vB,OAAA6vB,GAAAxO,QAAAqO,GACAG,GAAAhwB,YAAAgwB,GAAArtB,aAAAotB,GACAC,GAAA7D,UA9jCA,SAAAzqB,EAAAoxB,EAAAC,GACA,IACAC,EADAnzF,EAAA3B,KAAAy3E,SAAA,EAGA,IAAAz3E,KAAA2sB,UACA,aAAA62C,EAAAxjE,KAAAksC,IAGA,SAAAs3B,EAAA,CACA,qBAAAA,GAGA,WAFAA,EAAA0qB,GAAA5R,GAAA9Y,IAGA,OAAAxjE,UAEO+d,KAAAknB,IAAAu+B,GAAA,KAAAqxB,IACPrxB,GAAA,IAwBA,OArBAxjE,KAAAw3E,QAAAod,IACAE,EAAArG,GAAAzuF,OAGAA,KAAAy3E,QAAAjU,EACAxjE,KAAAw3E,QAAA,EAEA,MAAAsd,GACA90F,KAAAmF,IAAA2vF,EAAA,KAGAnzF,IAAA6hE,KACAoxB,GAAA50F,KAAA+0F,kBACArF,GAAA1vF,KAAA8uF,GAAAtrB,EAAA7hE,EAAA,WACS3B,KAAA+0F,oBACT/0F,KAAA+0F,mBAAA,EACApgB,EAAAkD,aAAA73E,MAAA,GACAA,KAAA+0F,kBAAA,OAIA/0F,KAEA,OAAAA,KAAAw3E,OAAA71E,EAAA8sF,GAAAzuF,OAqhCA8xF,GAAA1c,IApgCA,SAAAwf,GACA,OAAA50F,KAAAiuF,UAAA,EAAA2G,IAogCA9C,GAAAtD,MAjgCA,SAAAoG,GAUA,OATA50F,KAAAw3E,SACAx3E,KAAAiuF,UAAA,EAAA2G,GACA50F,KAAAw3E,QAAA,EAEAod,GACA50F,KAAA6vF,SAAApB,GAAAzuF,MAAA,MAIAA,MAw/BA8xF,GAAAkD,UAr/BA,WACA,SAAAh1F,KAAAu3E,KACAv3E,KAAAiuF,UAAAjuF,KAAAu3E,MAAA,WACK,qBAAAv3E,KAAAo3E,GAAA,CACL,IAAA6d,EAAA/G,GAAA7R,GAAAr8E,KAAAo3E,IAEA,MAAA6d,EACAj1F,KAAAiuF,UAAAgH,GAEAj1F,KAAAiuF,UAAA,MAIA,OAAAjuF,MAy+BA8xF,GAAAoD,qBAt+BA,SAAA1xB,GACA,QAAAxjE,KAAA2sB,YAIA62C,IAAAskB,GAAAtkB,GAAAyqB,YAAA,GACAjuF,KAAAiuF,YAAAzqB,GAAA,SAi+BAsuB,GAAAqD,MA99BA,WACA,OAAAn1F,KAAAiuF,YAAAjuF,KAAAuvB,QAAA+yC,MAAA,GAAA2rB,aAAAjuF,KAAAiuF,YAAAjuF,KAAAuvB,QAAA+yC,MAAA,GAAA2rB,aA89BA6D,GAAAoC,QAx8BA,WACA,QAAAl0F,KAAA2sB,YAAA3sB,KAAAw3E,QAw8BAsa,GAAAsD,YAr8BA,WACA,QAAAp1F,KAAA2sB,WAAA3sB,KAAAw3E,QAq8BAsa,GAAAnD,SACAmD,GAAArF,MAAAkC,GACAmD,GAAAuD,SA7EA,WACA,OAAAr1F,KAAAw3E,OAAA,UA6EAsa,GAAAwD,SA1EA,WACA,OAAAt1F,KAAAw3E,OAAA,iCA0EAsa,GAAAyD,MAAA5c,EAAA,kDAAA8Y,IACAK,GAAAjT,OAAAlG,EAAA,mDAAA2G,IACAwS,GAAA3E,MAAAxU,EAAA,iDAAA0F,IACAyT,GAAAmC,KAAAtb,EAAA,2GA/hCA,SAAAnV,EAAAoxB,GACA,aAAApxB,GACA,kBAAAA,IACAA,MAGAxjE,KAAAiuF,UAAAzqB,EAAAoxB,GACA50F,OAEAA,KAAAiuF,cAuhCA6D,GAAA0D,aAAA7c,EAAA,0GAr+BA,WACA,IAAA/D,EAAA50E,KAAAy1F,eACA,OAAAz1F,KAAAy1F,cAGA,IAAA91E,EAAA,GAIA,GAHAu3D,EAAAv3D,EAAA3f,OACA2f,EAAAksE,GAAAlsE,IAEA69D,GAAA,CACA,IAAA78E,EAAAgf,EAAA63D,OAAAxC,EAAAr1D,EAAA69D,IAAAsK,GAAAnoE,EAAA69D,IACAx9E,KAAAy1F,cAAAz1F,KAAA2sB,WAAAwrD,EAAAx4D,EAAA69D,GAAA78E,EAAAgzF,WAAA,OAEA3zF,KAAAy1F,eAAA,EAGA,OAAAz1F,KAAAy1F,gBAm+BA,IAAAC,GAAAvc,EAAAh5E,UA4BA,SAAAw1F,GAAA3nC,EAAAvsD,EAAAm0F,EAAAC,GACA,IAAA5gB,EAAAgR,KACA7Q,EAAAJ,IAAAz0E,IAAAs1F,EAAAp0F,GACA,OAAAwzE,EAAA2gB,GAAAxgB,EAAApnB,GAGA,SAAA8nC,GAAA9nC,EAAAvsD,EAAAm0F,GAQA,GAPAp6D,EAAAwyB,KACAvsD,EAAAusD,EACAA,OAAAxpD,GAGAwpD,KAAA,GAEA,MAAAvsD,EACA,OAAAk0F,GAAA3nC,EAAAvsD,EAAAm0F,EAAA,SAGA,IAAAjkF,EACAixD,EAAA,GAEA,IAAAjxD,EAAA,EAAeA,EAAA,GAAQA,IACvBixD,EAAAjxD,GAAAgkF,GAAA3nC,EAAAr8C,EAAAikF,EAAA,SAGA,OAAAhzB,EAWA,SAAAmzB,GAAAC,EAAAhoC,EAAAvsD,EAAAm0F,GACA,mBAAAI,GACAx6D,EAAAwyB,KACAvsD,EAAAusD,EACAA,OAAAxpD,GAGAwpD,KAAA,KAGAvsD,EADAusD,EAAAgoC,EAEAA,GAAA,EAEAx6D,EAAAwyB,KACAvsD,EAAAusD,EACAA,OAAAxpD,GAGAwpD,KAAA,IAGA,IAOAr8C,EAPAsjE,EAAAgR,KACA5kD,EAAA20D,EAAA/gB,EAAA8S,MAAAxH,IAAA,EAEA,SAAA9+E,EACA,OAAAk0F,GAAA3nC,GAAAvsD,EAAA4/B,GAAA,EAAAu0D,EAAA,OAIA,IAAAhzB,EAAA,GAEA,IAAAjxD,EAAA,EAAeA,EAAA,EAAOA,IACtBixD,EAAAjxD,GAAAgkF,GAAA3nC,GAAAr8C,EAAA0vB,GAAA,EAAAu0D,EAAA,OAGA,OAAAhzB,EAlGA8yB,GAAA1R,SA1/GA,SAAAl/E,EAAAm2E,EAAAt+C,GACA,IAAAu+C,EAAAl7E,KAAAi2F,UAAAnxF,IAAA9E,KAAAi2F,UAAA,SACA,OAAAxsF,EAAAyxE,KAAA74E,KAAA44E,EAAAt+C,GAAAu+C,GAy/GAwa,GAAApa,eA7+GA,SAAAx2E,GACA,IAAAkpD,EAAAhuD,KAAAk2F,gBAAApxF,GACAqxF,EAAAn2F,KAAAk2F,gBAAApxF,EAAAwnB,eAEA,OAAA0hC,IAAAmoC,EACAnoC,GAGAhuD,KAAAk2F,gBAAApxF,GAAAqxF,EAAAlsF,QAAA,4BAAA8U,GACA,OAAAA,EAAA8K,MAAA,KAEA7pB,KAAAk2F,gBAAApxF,KAm+GA4wF,GAAAta,YA99GA,WACA,OAAAp7E,KAAAo2F,cA89GAV,GAAA7a,QAx9GA,SAAAzrE,GACA,OAAApP,KAAAq2F,SAAApsF,QAAA,KAAAmF,IAw9GAsmF,GAAA5J,SAAAiG,GACA2D,GAAAnD,WAAAR,GACA2D,GAAA5Q,aAt8GA,SAAA11E,EAAAojF,EAAAxnF,EAAAsrF,GACA,IAAApb,EAAAl7E,KAAAu2F,cAAAvrF,GACA,OAAAvB,EAAAyxE,KAAA9rE,EAAAojF,EAAAxnF,EAAAsrF,GAAApb,EAAAjxE,QAAA,MAAAmF,IAq8GAsmF,GAAAc,WAl8GA,SAAAvoC,EAAAitB,GACA,IAAAltB,EAAAhuD,KAAAu2F,cAAAtoC,EAAA,mBACA,OAAAxkD,EAAAukD,KAAAktB,GAAAltB,EAAA/jD,QAAA,MAAAixE,IAi8GAwa,GAAAn1F,IAplHA,SAAA0V,GACA,IAAAuZ,EAAA7d,EAEA,IAAAA,KAAAsE,EAGAxM,EAFA+lB,EAAAvZ,EAAAtE,IAGA3R,KAAA2R,GAAA6d,EAEAxvB,KAAA,IAAA2R,GAAA6d,EAIAxvB,KAAAomF,QAAAnwE,EAIAjW,KAAAwxF,+BAAA,IAAAxnF,QAAAhK,KAAAsxF,wBAAA/iF,QAAAvO,KAAAuxF,cAAAhjF,QAAA,cAAwIA,SAokHxImnF,GAAA7W,OAvgGA,SAAAj/D,EAAAouC,GACA,OAAApuC,EAIAna,EAAAzF,KAAA4tF,SAAA5tF,KAAA4tF,QAAAhuE,EAAA0iD,SAAAtiE,KAAA4tF,SAAA5tF,KAAA4tF,QAAA6I,UAAAxX,IAAA/0E,KAAA8jD,GAAA,uBAAApuC,EAAA0iD,SAHA78D,EAAAzF,KAAA4tF,SAAA5tF,KAAA4tF,QAAA5tF,KAAA4tF,QAAA,YAsgGA8H,GAAA9W,YA9/FA,SAAAh/D,EAAAouC,GACA,OAAApuC,EAIAna,EAAAzF,KAAA02F,cAAA12F,KAAA02F,aAAA92E,EAAA0iD,SAAAtiE,KAAA02F,aAAAzX,GAAA/0E,KAAA8jD,GAAA,uBAAApuC,EAAA0iD,SAHA78D,EAAAzF,KAAA02F,cAAA12F,KAAA02F,aAAA12F,KAAA02F,aAAA,YA6/FAhB,GAAA1W,YAr8FA,SAAA2X,EAAA3oC,EAAAknB,GACA,IAAAvjE,EAAAspE,EAAAyB,EAEA,GAAA18E,KAAA42F,kBACA,OAtDA,SAAAD,EAAA3oC,EAAAknB,GACA,IAAAvjE,EACAklF,EACA5b,EACA6b,EAAAH,EAAAI,oBAEA,IAAA/2F,KAAAg3F,aAMA,IAJAh3F,KAAAg3F,aAAA,GACAh3F,KAAAi3F,iBAAA,GACAj3F,KAAAk3F,kBAAA,GAEAvlF,EAAA,EAAiBA,EAAA,KAAQA,EACzBspE,EAAAjG,EAAA,KAAArjE,IACA3R,KAAAk3F,kBAAAvlF,GAAA3R,KAAA4+E,YAAA3D,EAAA,IAAA8b,oBACA/2F,KAAAi3F,iBAAAtlF,GAAA3R,KAAA6+E,OAAA5D,EAAA,IAAA8b,oBAIA,OAAA7hB,EACA,QAAAlnB,GAEA,KADA6oC,EAAA/kF,GAAAzP,KAAArC,KAAAk3F,kBAAAJ,IACAD,EAAA,MAGA,KADAA,EAAA/kF,GAAAzP,KAAArC,KAAAi3F,iBAAAH,IACAD,EAAA,KAGA,QAAA7oC,GAGA,KAFA6oC,EAAA/kF,GAAAzP,KAAArC,KAAAk3F,kBAAAJ,IAGAD,GAIA,KADAA,EAAA/kF,GAAAzP,KAAArC,KAAAi3F,iBAAAH,IACAD,EAAA,MAIA,KAFAA,EAAA/kF,GAAAzP,KAAArC,KAAAi3F,iBAAAH,IAGAD,GAIA,KADAA,EAAA/kF,GAAAzP,KAAArC,KAAAk3F,kBAAAJ,IACAD,EAAA,MASAx0F,KAAArC,KAAA22F,EAAA3oC,EAAAknB,GAYA,IATAl1E,KAAAg3F,eACAh3F,KAAAg3F,aAAA,GACAh3F,KAAAi3F,iBAAA,GACAj3F,KAAAk3F,kBAAA,IAMAvlF,EAAA,EAAeA,EAAA,GAAQA,IAAA,CAevB,GAbAspE,EAAAjG,EAAA,KAAArjE,IAEAujE,IAAAl1E,KAAAi3F,iBAAAtlF,KACA3R,KAAAi3F,iBAAAtlF,GAAA,IAAA3H,OAAA,IAAAhK,KAAA6+E,OAAA5D,EAAA,IAAAhxE,QAAA,iBACAjK,KAAAk3F,kBAAAvlF,GAAA,IAAA3H,OAAA,IAAAhK,KAAA4+E,YAAA3D,EAAA,IAAAhxE,QAAA,kBAGAirE,GAAAl1E,KAAAg3F,aAAArlF,KACA+qE,EAAA,IAAA18E,KAAA6+E,OAAA5D,EAAA,SAAAj7E,KAAA4+E,YAAA3D,EAAA,IACAj7E,KAAAg3F,aAAArlF,GAAA,IAAA3H,OAAA0yE,EAAAzyE,QAAA,cAIAirE,GAAA,SAAAlnB,GAAAhuD,KAAAi3F,iBAAAtlF,GAAAzH,KAAAysF,GACA,OAAAhlF,EACO,GAAAujE,GAAA,QAAAlnB,GAAAhuD,KAAAk3F,kBAAAvlF,GAAAzH,KAAAysF,GACP,OAAAhlF,EACO,IAAAujE,GAAAl1E,KAAAg3F,aAAArlF,GAAAzH,KAAAysF,GACP,OAAAhlF,IAk6FA+jF,GAAA3W,YA31FA,SAAAnC,GACA,OAAA58E,KAAA42F,mBACA7hB,EAAA/0E,KAAA,iBACAy/E,GAAAp9E,KAAArC,MAGA48E,EACA58E,KAAAggF,mBAEAhgF,KAAA8/E,eAGA/K,EAAA/0E,KAAA,kBACAA,KAAA8/E,aAAAN,IAGAx/E,KAAAggF,oBAAApD,EAAA58E,KAAAggF,mBAAAhgF,KAAA8/E,eA40FA4V,GAAA5W,iBAl3FA,SAAAlC,GACA,OAAA58E,KAAA42F,mBACA7hB,EAAA/0E,KAAA,iBACAy/E,GAAAp9E,KAAArC,MAGA48E,EACA58E,KAAAigF,wBAEAjgF,KAAA+/E,oBAGAhL,EAAA/0E,KAAA,uBACAA,KAAA+/E,kBAAAR,IAGAv/E,KAAAigF,yBAAArD,EAAA58E,KAAAigF,wBAAAjgF,KAAA+/E,oBAm2FA2V,GAAArzB,KAxqFA,SAAA4Y,GACA,OAAAiG,GAAAjG,EAAAj7E,KAAA+nF,MAAAxH,IAAAvgF,KAAA+nF,MAAAvH,KAAAne,MAwqFAqzB,GAAAyB,eA1pFA,WACA,OAAAn3F,KAAA+nF,MAAAvH,KA0pFAkV,GAAA0B,eA/pFA,WACA,OAAAp3F,KAAA+nF,MAAAxH,KA+pFAmV,GAAAhU,SA5jFA,SAAA9hE,EAAAouC,GACA,IAAA0zB,EAAAj8E,EAAAzF,KAAAq3F,WAAAr3F,KAAAq3F,UAAAr3F,KAAAq3F,UAAAz3E,IAAA,IAAAA,GAAA5f,KAAAq3F,UAAAZ,SAAAvsF,KAAA8jD,GAAA,uBACA,WAAApuC,EAAA0hE,GAAAI,EAAA1hF,KAAA+nF,MAAAxH,KAAA3gE,EAAA8hE,EAAA9hE,EAAAwiD,OAAAsf,GA2jFAgU,GAAAlU,YAhjFA,SAAA5hE,GACA,WAAAA,EAAA0hE,GAAAthF,KAAAs3F,aAAAt3F,KAAA+nF,MAAAxH,KAAA3gE,EAAA5f,KAAAs3F,aAAA13E,EAAAwiD,OAAApiE,KAAAs3F,cAgjFA5B,GAAAjU,cAvjFA,SAAA7hE,GACA,WAAAA,EAAA0hE,GAAAthF,KAAAu3F,eAAAv3F,KAAA+nF,MAAAxH,KAAA3gE,EAAA5f,KAAAu3F,eAAA33E,EAAAwiD,OAAApiE,KAAAu3F,gBAujFA7B,GAAA5T,cA99EA,SAAA0V,EAAAxpC,EAAAknB,GACA,IAAAvjE,EAAAspE,EAAAyB,EAEA,GAAA18E,KAAAy3F,oBACA,OApFA,SAAAD,EAAAxpC,EAAAknB,GACA,IAAAvjE,EACAklF,EACA5b,EACA6b,EAAAU,EAAAT,oBAEA,IAAA/2F,KAAA03F,eAKA,IAJA13F,KAAA03F,eAAA,GACA13F,KAAA23F,oBAAA,GACA33F,KAAA43F,kBAAA,GAEAjmF,EAAA,EAAiBA,EAAA,IAAOA,EACxBspE,EAAAjG,EAAA,SAAA5S,IAAAzwD,GACA3R,KAAA43F,kBAAAjmF,GAAA3R,KAAAwhF,YAAAvG,EAAA,IAAA8b,oBACA/2F,KAAA23F,oBAAAhmF,GAAA3R,KAAAyhF,cAAAxG,EAAA,IAAA8b,oBACA/2F,KAAA03F,eAAA/lF,GAAA3R,KAAA0hF,SAAAzG,EAAA,IAAA8b,oBAIA,OAAA7hB,EACA,SAAAlnB,GAEA,KADA6oC,EAAA/kF,GAAAzP,KAAArC,KAAA03F,eAAAZ,IACAD,EAAA,KACO,QAAA7oC,GAEP,KADA6oC,EAAA/kF,GAAAzP,KAAArC,KAAA23F,oBAAAb,IACAD,EAAA,MAGA,KADAA,EAAA/kF,GAAAzP,KAAArC,KAAA43F,kBAAAd,IACAD,EAAA,KAGA,SAAA7oC,GAGA,KAFA6oC,EAAA/kF,GAAAzP,KAAArC,KAAA03F,eAAAZ,IAGAD,GAKA,KAFAA,EAAA/kF,GAAAzP,KAAArC,KAAA23F,oBAAAb,IAGAD,GAIA,KADAA,EAAA/kF,GAAAzP,KAAArC,KAAA43F,kBAAAd,IACAD,EAAA,KACO,QAAA7oC,GAGP,KAFA6oC,EAAA/kF,GAAAzP,KAAArC,KAAA23F,oBAAAb,IAGAD,GAKA,KAFAA,EAAA/kF,GAAAzP,KAAArC,KAAA03F,eAAAZ,IAGAD,GAIA,KADAA,EAAA/kF,GAAAzP,KAAArC,KAAA43F,kBAAAd,IACAD,EAAA,MAIA,KAFAA,EAAA/kF,GAAAzP,KAAArC,KAAA43F,kBAAAd,IAGAD,GAKA,KAFAA,EAAA/kF,GAAAzP,KAAArC,KAAA03F,eAAAZ,IAGAD,GAIA,KADAA,EAAA/kF,GAAAzP,KAAArC,KAAA23F,oBAAAb,IACAD,EAAA,MASAx0F,KAAArC,KAAAw3F,EAAAxpC,EAAAknB,GAUA,IAPAl1E,KAAA03F,iBACA13F,KAAA03F,eAAA,GACA13F,KAAA43F,kBAAA,GACA53F,KAAA23F,oBAAA,GACA33F,KAAA63F,mBAAA,IAGAlmF,EAAA,EAAeA,EAAA,EAAOA,IAAA,CAgBtB,GAdAspE,EAAAjG,EAAA,SAAA5S,IAAAzwD,GAEAujE,IAAAl1E,KAAA63F,mBAAAlmF,KACA3R,KAAA63F,mBAAAlmF,GAAA,IAAA3H,OAAA,IAAAhK,KAAA0hF,SAAAzG,EAAA,IAAAhxE,QAAA,qBACAjK,KAAA23F,oBAAAhmF,GAAA,IAAA3H,OAAA,IAAAhK,KAAAyhF,cAAAxG,EAAA,IAAAhxE,QAAA,qBACAjK,KAAA43F,kBAAAjmF,GAAA,IAAA3H,OAAA,IAAAhK,KAAAwhF,YAAAvG,EAAA,IAAAhxE,QAAA,sBAGAjK,KAAA03F,eAAA/lF,KACA+qE,EAAA,IAAA18E,KAAA0hF,SAAAzG,EAAA,SAAAj7E,KAAAyhF,cAAAxG,EAAA,SAAAj7E,KAAAwhF,YAAAvG,EAAA,IACAj7E,KAAA03F,eAAA/lF,GAAA,IAAA3H,OAAA0yE,EAAAzyE,QAAA,cAIAirE,GAAA,SAAAlnB,GAAAhuD,KAAA63F,mBAAAlmF,GAAAzH,KAAAstF,GACA,OAAA7lF,EACO,GAAAujE,GAAA,QAAAlnB,GAAAhuD,KAAA23F,oBAAAhmF,GAAAzH,KAAAstF,GACP,OAAA7lF,EACO,GAAAujE,GAAA,OAAAlnB,GAAAhuD,KAAA43F,kBAAAjmF,GAAAzH,KAAAstF,GACP,OAAA7lF,EACO,IAAAujE,GAAAl1E,KAAA03F,eAAA/lF,GAAAzH,KAAAstF,GACP,OAAA7lF,IA07EA+jF,GAAA7T,cA14EA,SAAAjF,GACA,OAAA58E,KAAAy3F,qBACA1iB,EAAA/0E,KAAA,mBACAqiF,GAAAhgF,KAAArC,MAGA48E,EACA58E,KAAA6iF,qBAEA7iF,KAAA0iF,iBAGA3N,EAAA/0E,KAAA,oBACAA,KAAA0iF,eAAAR,IAGAliF,KAAA6iF,sBAAAjG,EAAA58E,KAAA6iF,qBAAA7iF,KAAA0iF,iBA23EAgT,GAAA9T,mBAr3EA,SAAAhF,GACA,OAAA58E,KAAAy3F,qBACA1iB,EAAA/0E,KAAA,mBACAqiF,GAAAhgF,KAAArC,MAGA48E,EACA58E,KAAA8iF,0BAEA9iF,KAAA2iF,sBAGA5N,EAAA/0E,KAAA,yBACAA,KAAA2iF,oBAAAR,IAGAniF,KAAA8iF,2BAAAlG,EAAA58E,KAAA8iF,0BAAA9iF,KAAA2iF,sBAs2EA+S,GAAA/T,iBAh2EA,SAAA/E,GACA,OAAA58E,KAAAy3F,qBACA1iB,EAAA/0E,KAAA,mBACAqiF,GAAAhgF,KAAArC,MAGA48E,EACA58E,KAAA+iF,wBAEA/iF,KAAA4iF,oBAGA7N,EAAA/0E,KAAA,uBACAA,KAAA4iF,kBAAAR,IAGApiF,KAAA+iF,yBAAAnG,EAAA58E,KAAA+iF,wBAAA/iF,KAAA4iF,oBAi1EA8S,GAAAjS,KA7rEA,SAAAjgB,GAGA,aAAAA,EAAA,IAAA+Q,cAAA5kD,OAAA,IA2rEA+lE,GAAAxf,SAtrEA,SAAA+M,EAAAE,EAAA2U,GACA,OAAA7U,EAAA,GACA6U,EAAA,UAEAA,EAAA,WAkxEA9R,GAAA,MACAnB,uBAAA,uBACAhK,QAAA,SAAAzrE,GACA,IAAAyO,EAAAzO,EAAA,GACA8rE,EAAA,IAAAlD,EAAA5oE,EAAA,iBAAAyO,EAAA,SAAAA,EAAA,SAAAA,EAAA,UACA,OAAAzO,EAAA8rE,KAIAvG,EAAA2b,KAAA3X,EAAA,wDAAAqN,IACArR,EAAAojB,SAAApf,EAAA,gEAAAsN,IACA,IAAA+R,GAAAj6E,KAAAknB,IAgBA,SAAAgzD,GAAAh8D,EAAAunC,EAAA9iE,EAAA8uF,GACA,IAAA7uF,EAAAmuF,GAAAtrB,EAAA9iE,GAIA,OAHAu7B,EAAAyxD,eAAA8B,EAAA7uF,EAAA+sF,cACAzxD,EAAA0xD,OAAA6B,EAAA7uF,EAAAgtF,MACA1xD,EAAA2xD,SAAA4B,EAAA7uF,EAAAitF,QACA3xD,EAAA4xD,UAaA,SAAAqK,GAAA9oF,GACA,OAAAA,EAAA,EACA2O,KAAAkB,MAAA7P,GAEA2O,KAAAq8C,KAAAhrD,GAyCA,SAAA+oF,GAAA5K,GAGA,YAAAA,EAAA,OAGA,SAAA6K,GAAAvZ,GAEA,cAAAA,EAAA,KAkEA,SAAAwZ,GAAAC,GACA,kBACA,OAAAt4F,KAAAwnE,GAAA8wB,IAIA,IAAAC,GAAAF,GAAA,MACAG,GAAAH,GAAA,KACAI,GAAAJ,GAAA,KACAK,GAAAL,GAAA,KACAM,GAAAN,GAAA,KACAO,GAAAP,GAAA,KACAQ,GAAAR,GAAA,KACAS,GAAAT,GAAA,KACAU,GAAAV,GAAA,KAWA,SAAAW,GAAAjsF,GACA,kBACA,OAAA/M,KAAA2sB,UAAA3sB,KAAAi/B,MAAAlyB,GAAAm/B,KAIA,IAAAu4B,GAAAu0B,GAAA,gBACA1V,GAAA0V,GAAA,WACA7V,GAAA6V,GAAA,WACA/V,GAAA+V,GAAA,SACAzL,GAAAyL,GAAA,QACAna,GAAAma,GAAA,UACA7L,GAAA6L,GAAA,SAMA/uE,GAAAlM,KAAAkM,MACAgvE,GAAA,CACAhU,GAAA,GAEA7pE,EAAA,GAEAwE,EAAA,GAEAzE,EAAA,GAEA7K,EAAA,GAEA+0E,EAAA,IAuEA6T,GAAAn7E,KAAAknB,IAEA,SAAA20B,GAAAp7C,GACA,OAAAA,EAAA,IAAAA,EAAA,KAAAA,EAGA,SAAA26E,KAQA,IAAAn5F,KAAA2sB,UACA,OAAA3sB,KAAA86E,aAAAM,cAGA,IAGA+H,EAAAF,EAHAK,EAAA4V,GAAAl5F,KAAA0tF,eAAA,IACAH,EAAA2L,GAAAl5F,KAAA2tF,OACA9O,EAAAqa,GAAAl5F,KAAA4tF,SAGAzK,EAAApL,EAAAuL,EAAA,IACAL,EAAAlL,EAAAoL,EAAA,IACAG,GAAA,GACAH,GAAA,GAKA,IAAAiW,EAHArhB,EAAA8G,EAAA,IAIAwG,EAHAxG,GAAA,GAIAwa,EAAA9L,EACApyE,EAAA8nE,EACArjE,EAAAujE,EACA/nE,EAAAkoE,IAAAn0B,QAAA,GAAAllD,QAAA,gBACAwkC,EAAAzuC,KAAAw4F,YAEA,IAAA/pD,EAGA,YAGA,IAAA6qD,EAAA7qD,EAAA,SACA8qD,EAAA3/B,GAAA55D,KAAA4tF,WAAAh0B,GAAAnrB,GAAA,OACA+qD,EAAA5/B,GAAA55D,KAAA2tF,SAAA/zB,GAAAnrB,GAAA,OACAgrD,EAAA7/B,GAAA55D,KAAA0tF,iBAAA9zB,GAAAnrB,GAAA,OACA,OAAA6qD,EAAA,KAAAF,EAAAG,EAAAH,EAAA,SAAA/T,EAAAkU,EAAAlU,EAAA,SAAAgU,EAAAG,EAAAH,EAAA,SAAAl+E,GAAAyE,GAAAxE,EAAA,SAAAD,EAAAs+E,EAAAt+E,EAAA,SAAAyE,EAAA65E,EAAA75E,EAAA,SAAAxE,EAAAq+E,EAAAr+E,EAAA,QAGA,IAAAs+E,GAAAxM,GAAA/sF,UAmGA,OAlGAu5F,GAAA/sE,QAjrDA,WACA,OAAA3sB,KAAAq2E,UAirDAqjB,GAAAz0D,IA3UA,WACA,IAAAllC,EAAAC,KAAAi/B,MAUA,OATAj/B,KAAA0tF,cAAAsK,GAAAh4F,KAAA0tF,eACA1tF,KAAA2tF,MAAAqK,GAAAh4F,KAAA2tF,OACA3tF,KAAA4tF,QAAAoK,GAAAh4F,KAAA4tF,SACA7tF,EAAA0kE,aAAAuzB,GAAAj4F,EAAA0kE,cACA1kE,EAAAujF,QAAA0U,GAAAj4F,EAAAujF,SACAvjF,EAAAojF,QAAA6U,GAAAj4F,EAAAojF,SACApjF,EAAAkjF,MAAA+U,GAAAj4F,EAAAkjF,OACAljF,EAAA8+E,OAAAmZ,GAAAj4F,EAAA8+E,QACA9+E,EAAAotF,MAAA6K,GAAAj4F,EAAAotF,OACAntF,MAiUA05F,GAAAv0F,IArTA,SAAAq+D,EAAA9iE,GACA,OAAAu3F,GAAAj4F,KAAAwjE,EAAA9iE,EAAA,IAqTAg5F,GAAA7J,SAjTA,SAAArsB,EAAA9iE,GACA,OAAAu3F,GAAAj4F,KAAAwjE,EAAA9iE,GAAA,IAiTAg5F,GAAAlyB,GAtPA,SAAAiS,GACA,IAAAz5E,KAAA2sB,UACA,OAAAuf,IAGA,IAAAqhD,EACA1O,EACApa,EAAAzkE,KAAA0tF,cAGA,cAFAjU,EAAAD,EAAAC,KAEA,YAAAA,GAAA,SAAAA,EAIA,OAHA8T,EAAAvtF,KAAA2tF,MAAAlpB,EAAA,MACAoa,EAAA7+E,KAAA4tF,QAAAuK,GAAA5K,GAEA9T,GACA,YACA,OAAAoF,EAEA,cACA,OAAAA,EAAA,EAEA,WACA,OAAAA,EAAA,QAMA,OAFA0O,EAAAvtF,KAAA2tF,MAAA5vE,KAAAkM,MAAAmuE,GAAAp4F,KAAA4tF,UAEAnU,GACA,WACA,OAAA8T,EAAA,EAAA9oB,EAAA,OAEA,UACA,OAAA8oB,EAAA9oB,EAAA,MAEA,WACA,UAAA8oB,EAAA9oB,EAAA,KAEA,aACA,YAAA8oB,EAAA9oB,EAAA,IAEA,aACA,aAAA8oB,EAAA9oB,EAAA,IAGA,kBACA,OAAA1mD,KAAAkB,MAAA,MAAAsuE,GAAA9oB,EAEA,QACA,UAAAtsD,MAAA,gBAAAshE,KAsMAigB,GAAAnB,kBACAmB,GAAAlB,aACAkB,GAAAjB,aACAiB,GAAAhB,WACAgB,GAAAf,UACAe,GAAAd,WACAc,GAAAb,YACAa,GAAAZ,cACAY,GAAAX,WACAW,GAAA/sF,QAzMA,WACA,OAAA3M,KAAA2sB,UAIA3sB,KAAA0tF,cAAA,MAAA1tF,KAAA2tF,MAAA3tF,KAAA4tF,QAAA,kBAAA5V,EAAAh4E,KAAA4tF,QAAA,IAHA1hD,KAwMAwtD,GAAA7L,QAjTA,WACA,IAIAvK,EAAAH,EAAAF,EAAAkK,EAAAwM,EAJAl1B,EAAAzkE,KAAA0tF,cACAH,EAAAvtF,KAAA2tF,MACA9O,EAAA7+E,KAAA4tF,QACA7tF,EAAAC,KAAAi/B,MA8BA,OA1BAwlC,GAAA,GAAA8oB,GAAA,GAAA1O,GAAA,GAAApa,GAAA,GAAA8oB,GAAA,GAAA1O,GAAA,IACApa,GAAA,MAAAyzB,GAAAE,GAAAvZ,GAAA0O,GACAA,EAAA,EACA1O,EAAA,GAKA9+E,EAAA0kE,eAAA,IACA6e,EAAAvL,EAAAtT,EAAA,KACA1kE,EAAAujF,UAAA,GACAH,EAAApL,EAAAuL,EAAA,IACAvjF,EAAAojF,UAAA,GACAF,EAAAlL,EAAAoL,EAAA,IACApjF,EAAAkjF,QAAA,GACAsK,GAAAxV,EAAAkL,EAAA,IAEA0W,EAAA5hB,EAAAogB,GAAA5K,IACA1O,GAAA8a,EACApM,GAAA2K,GAAAE,GAAAuB,IAEAxM,EAAApV,EAAA8G,EAAA,IACAA,GAAA,GACA9+E,EAAAwtF,OACAxtF,EAAA8+E,SACA9+E,EAAAotF,QACAntF,MAgRA05F,GAAAnqE,MAnLA,WACA,OAAAu/D,GAAA9uF,OAmLA05F,GAAAr5F,IAhLA,SAAAo5E,GAEA,OADAA,EAAAD,EAAAC,GACAz5E,KAAA2sB,UAAA3sB,KAAAy5E,EAAA,OAAAvtC,KA+KAwtD,GAAAj1B,gBACAi1B,GAAApW,WACAoW,GAAAvW,WACAuW,GAAAzW,SACAyW,GAAAnM,QACAmM,GAAArM,MAnKA,WACA,OAAAtV,EAAA/3E,KAAAutF,OAAA,IAmKAmM,GAAA7a,UACA6a,GAAAvM,SACAuM,GAAAjH,SA9FA,SAAAmH,GACA,IAAA55F,KAAA2sB,UACA,OAAA3sB,KAAA86E,aAAAM,cAGA,IAAAnG,EAAAj1E,KAAA86E,aACAI,EAtDA,SAAA2e,EAAArH,EAAAvd,GACA,IAAAh5C,EAAA6yD,GAAA+K,GAAA50D,MACAq+C,EAAAr5D,GAAAgS,EAAAurC,GAAA,MACA2b,EAAAl5D,GAAAgS,EAAAurC,GAAA,MACAyb,EAAAh5D,GAAAgS,EAAAurC,GAAA,MACA+lB,EAAAtjE,GAAAgS,EAAAurC,GAAA,MACAqX,EAAA50D,GAAAgS,EAAAurC,GAAA,MACA2lB,EAAAljE,GAAAgS,EAAAurC,GAAA,MACApxD,EAAAktE,GAAA2V,GAAAhU,IAAA,KAAA3B,MAAA2V,GAAA79E,GAAA,MAAAkoE,IAAAH,GAAA,UAAAA,EAAA8V,GAAAr5E,GAAA,MAAAujE,IAAAF,GAAA,UAAAA,EAAAgW,GAAA99E,GAAA,MAAA8nE,IAAAsK,GAAA,UAAAA,EAAA0L,GAAA3oF,GAAA,MAAAi9E,IAAA1O,GAAA,UAAAA,EAAAoa,GAAA5T,GAAA,MAAAxG,IAAAsO,GAAA,gBAAAA,GAIA,OAHA/2E,EAAA,GAAAo8E,EACAp8E,EAAA,IAAAyjF,EAAA,EACAzjF,EAAA,GAAA6+D,EAfA,SAAAjqE,EAAAoE,EAAAojF,EAAA8D,EAAArhB,GACA,OAAAA,EAAA6P,aAAA11E,GAAA,IAAAojF,EAAAxnF,EAAAsrF,IAeAvmF,MAAA,KAAAqG,GA0CA0jF,CAAA95F,MAAA45F,EAAA3kB,GAMA,OAJA2kB,IACA1e,EAAAjG,EAAAuhB,YAAAx2F,KAAAk7E,IAGAjG,EAAAsd,WAAArX,IAmFAwe,GAAA5F,YAAAqF,GACAO,GAAAh2F,SAAAy1F,GACAO,GAAApqE,OAAA6pE,GACAO,GAAAzkB,UACAykB,GAAA5e,cACA4e,GAAAK,YAAAphB,EAAA,sFAAAwgB,IACAO,GAAApJ,QAGA5V,EAAA,gBACAA,EAAA,mBAEA+B,GAAA,IAAAL,IACAK,GAAA,IAtvHA,wBAuvHAW,GAAA,aAAA5Z,EAAAjiE,EAAA0U,GACAA,EAAAwgE,GAAA,IAAA/5C,KAAA,IAAAzQ,WAAAu3C,EAAA,OAEA4Z,GAAA,aAAA5Z,EAAAjiE,EAAA0U,GACAA,EAAAwgE,GAAA,IAAA/5C,KAAAs7C,EAAAxU,MAGAmR,EAAAqlB,QAAA,SAl6IAvlB,EAm6IAqT,GACAnT,EAAA9jD,GAAAihE,GACAnd,EAAA72D,IA5wDA,WAEA,OAAAivE,GAAA,WADA,GAAAljE,MAAAxnB,KAAAyN,UAAA,KA4wDA6kE,EAAA32D,IAxwDA,WAEA,OAAA+uE,GAAA,UADA,GAAAljE,MAAAxnB,KAAAyN,UAAA,KAwwDA6kE,EAAAh4C,IApwDA,WACA,OAAAD,KAAAC,IAAAD,KAAAC,OAAA,IAAAD,MAowDAi4C,EAAAS,IAAAJ,EACAL,EAAA0f,KAphBA,SAAA7wB,GACA,OAAAskB,GAAA,IAAAtkB,IAohBAmR,EAAAkK,OAnaA,SAAA7wB,EAAAvsD,GACA,OAAAq0F,GAAA9nC,EAAAvsD,EAAA,WAmaAkzE,EAAAE,SACAF,EAAAM,OAAA+Q,GACArR,EAAAib,QAAA7Y,EACApC,EAAA14C,SAAA6yD,GACAna,EAAAmD,WACAnD,EAAA+M,SAjaA,SAAAsU,EAAAhoC,EAAAvsD,GACA,OAAAs0F,GAAAC,EAAAhoC,EAAAvsD,EAAA,aAiaAkzE,EAAAqgB,UAxhBA,WACA,OAAAlN,GAAA/3E,MAAA,KAAAD,WAAAklF,aAwhBArgB,EAAAmG,WAAAmL,GACAtR,EAAAmZ,cACAnZ,EAAAiK,YAzaA,SAAA5wB,EAAAvsD,GACA,OAAAq0F,GAAA9nC,EAAAvsD,EAAA,gBAyaAkzE,EAAA6M,YA9ZA,SAAAwU,EAAAhoC,EAAAvsD,GACA,OAAAs0F,GAAAC,EAAAhoC,EAAAvsD,EAAA,gBA8ZAkzE,EAAAuR,gBACAvR,EAAAslB,aA1gFA,SAAAltF,EAAAkJ,GACA,SAAAA,EAAA,CACA,IAAAg/D,EACAilB,EACAjhB,EAAA8K,GAIA,OAFAmW,EAAAtU,GAAA74E,MAGAksE,EAAAihB,EAAA9T,SAGAnwE,EAAA+iE,EAAAC,EAAAhjE,IACAg/D,EAAA,IAAAkE,EAAAljE,IACAowE,aAAAZ,GAAA14E,GACA04E,GAAA14E,GAAAkoE,EAEA+Q,GAAAj5E,QAGA,MAAA04E,GAAA14E,KACA,MAAA04E,GAAA14E,GAAAs5E,aACAZ,GAAA14E,GAAA04E,GAAA14E,GAAAs5E,aACS,MAAAZ,GAAA14E,WACT04E,GAAA14E,IAKA,OAAA04E,GAAA14E,IA8+EA4nE,EAAA8Q,QAj9EA,WACA,OAAAlgF,EAAAkgF,KAi9EA9Q,EAAA8M,cAtaA,SAAAuU,EAAAhoC,EAAAvsD,GACA,OAAAs0F,GAAAC,EAAAhoC,EAAAvsD,EAAA,kBAsaAkzE,EAAA6E,iBACA7E,EAAAwlB,qBA7KA,SAAAC,GACA,YAAA51F,IAAA41F,EACAnwE,GAGA,oBAAAmwE,IACAnwE,GAAAmwE,GACA,IAuKAzlB,EAAA0lB,sBAhKA,SAAAC,EAAAC,GACA,YAAA/1F,IAAAy0F,GAAAqB,UAIA91F,IAAA+1F,EACAtB,GAAAqB,IAGArB,GAAAqB,GAAAC,EAEA,MAAAD,IACArB,GAAAhU,GAAAsV,EAAA,IAGA,KAkJA5lB,EAAAsd,eAx0CA,SAAAuI,EAAA79D,GACA,IAAAsxB,EAAAusC,EAAAvsC,KAAAtxB,EAAA,WACA,OAAAsxB,GAAA,aAAAA,GAAA,aAAAA,EAAA,YAAAA,EAAA,YAAAA,EAAA,YAAAA,EAAA,yBAu0CA0mB,EAAAx0E,UAAA2xF,GAEAnd,EAAA8lB,UAAA,CACAC,eAAA,mBAEAC,uBAAA,sBAEAC,kBAAA,0BAEAjd,KAAA,aAEAkd,KAAA,QAEAC,aAAA,WAEAC,QAAA,eAEA/c,KAAA,aAEAN,MAAA,WAGA/I,EAj+I8DH,gDCJ9D,IAAArzE,EAAkB5B,EAAQ,MAmC1BiB,EAAAC,QAJA,SAAAC,EAAAC,GACA,OAAAQ,EAAAT,EAAAC,0BChCA,IAAAq6F,EAAsBz7F,EAAQ,MAgC9B07F,EA/BuB17F,EAAQ,KA+B/B27F,CAAA,SAAA52F,EAAA5D,EAAAoE,GACAk2F,EAAA12F,EAAAQ,EAAApE,KAEAF,EAAAC,QAAAw6F,wBCnCA,IAAAE,EAAsB57F,EAAQ,MAC9B67F,EAAqB77F,EAAQ,MAC7B87F,EAAmB97F,EAAQ,MAC3BkG,EAAclG,EAAQ,KAmBtBiB,EAAAC,QARA,SAAAo1F,EAAAyF,GACA,gBAAAttB,EAAAngE,GACA,IAAAlK,EAAA8B,EAAAuoE,GAAAmtB,EAAAC,EACAG,EAAAD,MAAA,GACA,OAAA33F,EAAAqqE,EAAA6nB,EAAAwF,EAAAxtF,EAAA,GAAA0tF,yBCIA/6F,EAAAC,QAZA,SAAAc,EAAAs0F,EAAAhoF,EAAA0tF,GAIA,IAHA,IAAA95F,GAAA,EACAC,EAAA,MAAAH,EAAA,EAAAA,EAAAG,SAEAD,EAAAC,GAAA,CACA,IAAAhB,EAAAa,EAAAE,GACAo0F,EAAA0F,EAAA76F,EAAAmN,EAAAnN,GAAAa,GAGA,OAAAg6F,yBCnBA,IAAAC,EAAej8F,EAAQ,MAqBvBiB,EAAAC,QAPA,SAAAutE,EAAA6nB,EAAAhoF,EAAA0tF,GAIA,OAHAC,EAAAxtB,EAAA,SAAAttE,EAAAoE,EAAAkpE,GACA6nB,EAAA0F,EAAA76F,EAAAmN,EAAAnN,GAAAstE,KAEAutB,yBClBA,IAAAE,EAAiBl8F,EAAQ,MAYzBi8F,EAXqBj8F,EAAQ,KAW7Bm8F,CAAAD,GACAj7F,EAAAC,QAAA+6F,wBCbA,IAAAG,EAAcp8F,EAAQ,MACtBgG,EAAWhG,EAAQ,KAenBiB,EAAAC,QAJA,SAAA0B,EAAA0L,GACA,OAAA1L,GAAAw5F,EAAAx5F,EAAA0L,EAAAtI,0BCbA,IAcAo2F,EAdoBp8F,EAAQ,KAc5Bq8F,GACAp7F,EAAAC,QAAAk7F,sBCWAn7F,EAAAC,QAnBA,SAAAo7F,GACA,gBAAA15F,EAAA0L,EAAAnI,GAMA,IALA,IAAAjE,GAAA,EACAq6F,EAAA/5F,OAAAI,GACAqR,EAAA9N,EAAAvD,GACAT,EAAA8R,EAAA9R,OAEAA,KAAA,CACA,IAAAoD,EAAA0O,EAAAqoF,EAAAn6F,IAAAD,GAEA,QAAAoM,EAAAiuF,EAAAh3F,KAAAg3F,GACA,MAIA,OAAA35F,0BCtBA,IAAA45F,EAAkBx8F,EAAQ,KAmC1BiB,EAAAC,QAxBA,SAAAu7F,EAAAH,GACA,gBAAA7tB,EAAAngE,GACA,SAAAmgE,EACA,OAAAA,EAGA,IAAA+tB,EAAA/tB,GACA,OAAAguB,EAAAhuB,EAAAngE,GAOA,IAJA,IAAAnM,EAAAssE,EAAAtsE,OACAD,EAAAo6F,EAAAn6F,GAAA,EACAo6F,EAAA/5F,OAAAisE,IAEA6tB,EAAAp6F,QAAAC,KACA,IAAAmM,EAAAiuF,EAAAr6F,KAAAq6F,KAKA,OAAA9tB,yBC/BA,IAAA1rE,EAAiB/C,EAAQ,MAIzB08F,EAAA,iBAAA9pF,iBAAApQ,iBAAAoQ,KAGA+pF,EAAA55F,GAAA25F,GAAAx4F,SAAA,cAAAA,GACAjD,EAAAC,QAAAy7F,qBCeA,IAAAz2F,EAAA2D,MAAA3D,QACAjF,EAAAC,QAAAgF,oCCxBA,IAAA02F,EAAA58F,EAAA,IAAA68F,EAAA78F,EAAA,KAAA88F,EAAA98F,EAAA,GAAA+8F,EAAA/8F,EAAAqO,EAAAyuF,GAAAE,EAAAh9F,EAAA,KAAAi9F,EAAAj9F,EAAAqO,EAAA2uF,GAAAE,EAAAl9F,EAAA,KAAAm9F,EAAAn9F,EAAAqO,EAAA6uF,GAAAE,EAAAp9F,EAAA,KAMAoY,EAAA,CACArU,IAAOq5F,EAAA,EACPC,QAAWJ,EAAApmF,EAAS2B,KACpB43C,MAAS6sC,EAAApmF,EAASpL,OAClB46C,KAAQ42C,EAAApmF,EAAS2B,KACjB8kF,QAAWL,EAAApmF,EAAS2B,KACpBkiC,UAAauiD,EAAApmF,EAASpL,OACtB8xF,UAAaN,EAAApmF,EAASjU,OACtB46F,SAAYP,EAAApmF,EAASwB,UAAA,CAAY4kF,EAAApmF,EAASjU,OAASq6F,EAAApmF,EAASpL,OAASwxF,EAAApmF,EAASzS,QAM9Eq5F,EAAA,SAAAxpF,GACA,IAAAymC,EAAAzmC,EAAAymC,UACA6iD,EAAAtpF,EAAAspF,UACAntC,EAAAn8C,EAAAm8C,MACA/J,EAAApyC,EAAAoyC,KACAg3C,EAAAppF,EAAAopF,QACAC,EAAArpF,EAAAqpF,QACAI,EAAAzpF,EAAAlQ,IACAy5F,EAAAvpF,EAAAupF,SACAG,EAAmBn7F,OAAAq6F,EAAA,EAAAr6F,CAA6ByR,EAAA,+EAEhD2pF,EAAgBp7F,OAAA46F,EAAA,EAAA56F,CAAgB26F,IAAUziD,EAAA,SAAA2iD,GAAA,eAAAh3C,GAAA,cAAA+J,IAAAktC,EAAA,mBAAAltC,GAAAmtC,GAC1C,OAASR,EAAAlmF,EAAKoB,cAAAylF,EAAoBl7F,OAAAo6F,EAAA,EAAAp6F,CAAQ,GAAGm7F,EAAA,CAC7CjjD,UAAAkjD,EACAtpF,IAAAkpF,MAIAC,EAAArlF,YACAqlF,EAAA7lF,aAvBA,CACA7T,IAAA,OAuBeiN,EAAA,sCCxCf,IAAA4rF,EAAA58F,EAAA,IAAA68F,EAAA78F,EAAA,KAAA88F,EAAA98F,EAAA,GAAA+8F,EAAA/8F,EAAAqO,EAAAyuF,GAAAE,EAAAh9F,EAAA,KAAAi9F,EAAAj9F,EAAAqO,EAAA2uF,GAAAE,EAAAl9F,EAAA,KAAAm9F,EAAAn9F,EAAAqO,EAAA6uF,GAAAE,EAAAp9F,EAAA,KAMAoY,EAAA,CACArU,IAAOq5F,EAAA,EACP1iD,UAAauiD,EAAApmF,EAASpL,OACtB8xF,UAAaN,EAAApmF,EAASjU,OACtB46F,SAAYP,EAAApmF,EAASwB,UAAA,CAAY4kF,EAAApmF,EAASjU,OAASq6F,EAAApmF,EAASpL,OAASwxF,EAAApmF,EAASzS,QAM9Ey5F,EAAA,SAAA5pF,GACA,IAAAymC,EAAAzmC,EAAAymC,UACA6iD,EAAAtpF,EAAAspF,UACAC,EAAAvpF,EAAAupF,SACAE,EAAAzpF,EAAAlQ,IACA45F,EAAmBn7F,OAAAq6F,EAAA,EAAAr6F,CAA6ByR,EAAA,4CAEhD2pF,EAAgBp7F,OAAA46F,EAAA,EAAA56F,CAAgB26F,IAAUziD,EAAA,aAAA6iD,GAC1C,OAASR,EAAAlmF,EAAKoB,cAAAylF,EAAoBl7F,OAAAo6F,EAAA,EAAAp6F,CAAQ,GAAGm7F,EAAA,CAC7CjjD,UAAAkjD,EACAtpF,IAAAkpF,MAIAK,EAAAzlF,YACAylF,EAAAjmF,aAnBA,CACA7T,IAAA,OAmBeiN,EAAA,uBCJf/P,EAAAC,QAJA,SAAAC,GACA,aAAAA,GAAA,iBAAAA,wBCzBA,IAAA28F,EAAmB99F,EAAQ,MAC3B+9F,EAAe/9F,EAAQ,MAgBvBiB,EAAAC,QALA,SAAA0B,EAAA2C,GACA,IAAApE,EAAA48F,EAAAn7F,EAAA2C,GACA,OAAAu4F,EAAA38F,UAAA8D,sBCgBAhE,EAAAC,QALA,SAAAC,GACA,IAAAgL,SAAAhL,EACA,aAAAA,IAAA,UAAAgL,GAAA,YAAAA,yBC3BA,IAAApE,EAAa/H,EAAQ,KACrBg+F,EAAgBh+F,EAAQ,MACxBi+F,EAAqBj+F,EAAQ,MAI7Bk+F,EAAA,gBACAC,EAAA,qBAGAtzF,EAAA9C,IAAA+C,iBAAA7F,EAiBAhE,EAAAC,QARA,SAAAC,GACA,aAAAA,OACA8D,IAAA9D,EAAAg9F,EAAAD,EAGArzF,QAAArI,OAAArB,GAAA68F,EAAA78F,GAAA88F,EAAA98F,yBCxBA,IAIA4G,EAJW/H,EAAQ,KAInB+H,OACA9G,EAAAC,QAAA6G,uBCLA,IAAAE,EAAejI,EAAQ,KAIvBkI,EAAA,IAkBAjH,EAAAC,QATA,SAAAC,GACA,oBAAAA,GAAA8G,EAAA9G,GACA,OAAAA,EAGA,IAAA4D,EAAA5D,EAAA,GACA,WAAA4D,GAAA,EAAA5D,IAAA+G,EAAA,KAAAnD,wBCnBA,IAAAmB,EAAclG,EAAQ,KACtBqP,EAAYrP,EAAQ,KACpB0P,EAAmB1P,EAAQ,MAC3BmE,EAAenE,EAAQ,KAmBvBiB,EAAAC,QARA,SAAAC,EAAAyB,GACA,OAAAsD,EAAA/E,GACAA,EAGAkO,EAAAlO,EAAAyB,GAAA,CAAAzB,GAAAuO,EAAAvL,EAAAhD,0BCnBA,IAAAsC,EAAiBzD,EAAQ,KACzB2B,EAAmB3B,EAAQ,KAI3BgN,EAAA,kBAuBA/L,EAAAC,QAJA,SAAAC,GACA,uBAAAA,GAAAQ,EAAAR,IAAAsC,EAAAtC,IAAA6L,wBCzBA,IAAA3E,EAAmBrI,EAAQ,MA4B3BiB,EAAAC,QAJA,SAAAC,GACA,aAAAA,EAAA,GAAAkH,EAAAlH,yBCzBA,IAAAi9F,EAAqBp+F,EAAQ,MAC7Bq+F,EAAsBr+F,EAAQ,MAC9Bs+F,EAAmBt+F,EAAQ,MAC3Bu+F,EAAmBv+F,EAAQ,MAC3Bw+F,EAAmBx+F,EAAQ,MAU3B,SAAAD,EAAAQ,GACA,IAAA2B,GAAA,EACAC,EAAA,MAAA5B,EAAA,EAAAA,EAAA4B,OAGA,IAFA1B,KAAAI,UAEAqB,EAAAC,GAAA,CACA,IAAA4J,EAAAxL,EAAA2B,GACAzB,KAAAO,IAAA+K,EAAA,GAAAA,EAAA,KAKAhM,EAAAa,UAAAC,MAAAu9F,EACAr+F,EAAAa,UAAA,OAAAy9F,EACAt+F,EAAAa,UAAAE,IAAAw9F,EACAv+F,EAAAa,UAAAG,IAAAw9F,EACAx+F,EAAAa,UAAAI,IAAAw9F,EACAv9F,EAAAC,QAAAnB,uBC/BA,IAAAsM,EAASrM,EAAQ,MAuBjBiB,EAAAC,QAZA,SAAAc,EAAAuD,GAGA,IAFA,IAAApD,EAAAH,EAAAG,OAEAA,KACA,GAAAkK,EAAArK,EAAAG,GAAA,GAAAoD,GACA,OAAApD,EAIA,+BCpBA,IAIA6J,EAJgBhM,EAAQ,IAIxBsH,CAAA9E,OAAA,UACAvB,EAAAC,QAAA8K,uBCLA,IAAAyyF,EAAgBz+F,EAAQ,MAgBxBiB,EAAAC,QALA,SAAAsK,EAAAjG,GACA,IAAA/E,EAAAgL,EAAA9K,SACA,OAAA+9F,EAAAl5F,GAAA/E,EAAA,iBAAA+E,EAAA,iBAAA/E,EAAAgL,0BCbA,IAAAkzF,EAAoB1+F,EAAQ,MAC5B2+F,EAAe3+F,EAAQ,MACvBw8F,EAAkBx8F,EAAQ,KAmC1BiB,EAAAC,QAJA,SAAA0B,GACA,OAAA45F,EAAA55F,GAAA87F,EAAA97F,GAAA+7F,EAAA/7F,yBClCA,IAAA8L,EAAe1O,EAAQ,MACvB+J,EAAU/J,EAAQ,KAClB2O,EAAc3O,EAAQ,MACtB4O,EAAU5O,EAAQ,MAClBqH,EAAcrH,EAAQ,MACtByD,EAAiBzD,EAAQ,KACzBoK,EAAepK,EAAQ,MAYvB4+F,EAAAx0F,EAAAsE,GACAmwF,EAAAz0F,EAAAL,GACA+0F,EAAA10F,EAAAuE,GACAowF,EAAA30F,EAAAwE,GACAowF,EAAA50F,EAAA/C,GASAuB,EAAAnF,GAEAiL,GAlBA,qBAkBA9F,EAAA,IAAA8F,EAAA,IAAAuwF,YAAA,MAAAl1F,GAvBA,gBAuBAnB,EAAA,IAAAmB,IAAA4E,GArBA,oBAqBA/F,EAAA+F,EAAA4rB,YAAA3rB,GApBA,gBAoBAhG,EAAA,IAAAgG,IAAAvH,GAnBA,oBAmBAuB,EAAA,IAAAvB,MACAuB,EAAA,SAAAzH,GACA,IAAA4D,EAAAtB,EAAAtC,GACA+9F,EAzBA,mBAyBAn6F,EAAA5D,EAAA+M,iBAAAjJ,EACAk6F,EAAAD,EAAA90F,EAAA80F,GAAA,GAEA,GAAAC,EACA,OAAAA,GACA,KAAAP,EACA,MA3BA,oBA6BA,KAAAC,EACA,MAnCA,eAqCA,KAAAC,EACA,MApCA,mBAsCA,KAAAC,EACA,MAtCA,eAwCA,KAAAC,EACA,MAxCA,mBA4CA,OAAAj6F,IAIA9D,EAAAC,QAAA0H,uBC9DA,IAAAw2F,EAAsBp/F,EAAQ,MAC9B2B,EAAmB3B,EAAQ,KAI3BuK,EAAA/H,OAAA5B,UAGA6F,EAAA8D,EAAA9D,eAGAlE,EAAAgI,EAAAhI,qBAoBA+D,EAAA84F,EAAA,WACA,OAAA7uF,UADA,IAEC6uF,EAAA,SAAAj+F,GACD,OAAAQ,EAAAR,IAAAsF,EAAA3D,KAAA3B,EAAA,YAAAoB,EAAAO,KAAA3B,EAAA,WAEAF,EAAAC,QAAAoF,wBCpCA,SAAArF,GAAA,IAAA07F,EAAW38F,EAAQ,KACnBq/F,EAAgBr/F,EAAQ,MAIxBgD,EAA4C9B,MAAA+B,UAAA/B,EAG5CgC,EAAAF,GAAA,iBAAA/B,SAAAgC,UAAAhC,EAMAq+F,EAHAp8F,KAAAhC,UAAA8B,EAGA25F,EAAA2C,YAAAr6F,EAsBAsB,GAnBA+4F,IAAA/4F,cAAAtB,IAmBAo6F,EACAp+F,EAAAC,QAAAqF,4CCpCA,IAAA87D,EAAA,iBAGAk9B,EAAA,mBAgBAt+F,EAAAC,QANA,SAAAC,EAAAgB,GACA,IAAAgK,SAAAhL,EAEA,SADAgB,EAAA,MAAAA,EAAAkgE,EAAAlgE,KACA,UAAAgK,GAAA,UAAAA,GAAAozF,EAAA50F,KAAAxJ,QAAA,GAAAA,EAAA,MAAAA,EAAAgB,wBCjBA,IAAA+H,EAAiBlK,EAAQ,MACzBuO,EAAevO,EAAQ,KAgCvBiB,EAAAC,QAJA,SAAAC,GACA,aAAAA,GAAAoN,EAAApN,EAAAgB,UAAA+H,EAAA/I,yBC9BA,IAAAuP,EAAe1Q,EAAQ,KACvBsP,EAAYtP,EAAQ,KAuBpBiB,EAAAC,QAZA,SAAA0B,EAAA4F,GAKA,IAHA,IAAAtG,EAAA,EACAC,GAFAqG,EAAAkI,EAAAlI,EAAA5F,IAEAT,OAEA,MAAAS,GAAAV,EAAAC,GACAS,IAAA0M,EAAA9G,EAAAtG,OAGA,OAAAA,MAAAC,EAAAS,OAAAqC,sBCrBAhE,EAAAC,QAAA,SAAAD,GAsBA,OArBAA,EAAAu+F,kBACAv+F,EAAAm4E,UAAA,aAEAn4E,EAAAw+F,MAAA,GAEAx+F,EAAAy+F,WAAAz+F,EAAAy+F,SAAA,IACAl9F,OAAA+E,eAAAtG,EAAA,UACAwG,YAAA,EACA3G,IAAA,WACA,OAAAG,EAAA6a,KAGAtZ,OAAA+E,eAAAtG,EAAA,MACAwG,YAAA,EACA3G,IAAA,WACA,OAAAG,EAAAmR,KAGAnR,EAAAu+F,gBAAA,GAGAv+F,wBCtBA,IAKA8I,EALgB/J,EAAQ,IAKxBsH,CAJWtH,EAAQ,KAInB,OACAiB,EAAAC,QAAA6I,uBCNA,IAAA41F,EAAoB3/F,EAAQ,MAC5B4/F,EAAqB5/F,EAAQ,MAC7B6/F,EAAkB7/F,EAAQ,MAC1B8/F,EAAkB9/F,EAAQ,MAC1B+/F,EAAkB//F,EAAQ,MAU1B,SAAAyF,EAAAlF,GACA,IAAA2B,GAAA,EACAC,EAAA,MAAA5B,EAAA,EAAAA,EAAA4B,OAGA,IAFA1B,KAAAI,UAEAqB,EAAAC,GAAA,CACA,IAAA4J,EAAAxL,EAAA2B,GACAzB,KAAAO,IAAA+K,EAAA,GAAAA,EAAA,KAKAtG,EAAA7E,UAAAC,MAAA8+F,EACAl6F,EAAA7E,UAAA,OAAAg/F,EACAn6F,EAAA7E,UAAAE,IAAA++F,EACAp6F,EAAA7E,UAAAG,IAAA++F,EACAr6F,EAAA7E,UAAAI,IAAA++F,EACA9+F,EAAAC,QAAAuE,qBC9BA,IAAA48D,EAAA,iBAgCAphE,EAAAC,QAJA,SAAAC,GACA,uBAAAA,MAAA,GAAAA,EAAA,MAAAA,GAAAkhE,sBCjBAphE,EAAAC,QANA,SAAAkD,GACA,gBAAAjD,GACA,OAAAiD,EAAAjD,wBCRA,IAAAoJ,EAAA/H,OAAA5B,UAeAK,EAAAC,QANA,SAAAC,GACA,IAAA+9F,EAAA/9F,KAAA+M,YAEA,OAAA/M,KADA,mBAAA+9F,KAAAt+F,WAAA2J,yBCZA,IAAAuG,EAAc9Q,EAAQ,KAiCtBiB,EAAAC,QALA,SAAA0B,EAAA4F,EAAA2oB,GACA,IAAApsB,EAAA,MAAAnC,OAAAqC,EAAA6L,EAAAlO,EAAA4F,GACA,YAAAvD,IAAAF,EAAAosB,EAAApsB,wBC9BA,IAAAmB,EAAclG,EAAQ,KACtBiI,EAAejI,EAAQ,KAIvBggG,EAAA,mDACAC,EAAA,QAwBAh/F,EAAAC,QAdA,SAAAC,EAAAyB,GACA,GAAAsD,EAAA/E,GACA,SAGA,IAAAgL,SAAAhL,EAEA,kBAAAgL,GAAA,UAAAA,GAAA,WAAAA,GAAA,MAAAhL,IAAA8G,EAAA9G,KAIA8+F,EAAAt1F,KAAAxJ,KAAA6+F,EAAAr1F,KAAAxJ,IAAA,MAAAyB,GAAAzB,KAAAqB,OAAAI,uBCNA3B,EAAAC,QAZA,SAAAc,EAAAsM,GAKA,IAJA,IAAApM,GAAA,EACAC,EAAA,MAAAH,EAAA,EAAAA,EAAAG,OACA4C,EAAA8E,MAAA1H,KAEAD,EAAAC,GACA4C,EAAA7C,GAAAoM,EAAAtM,EAAAE,KAAAF,GAGA,OAAA+C,sBCEA9D,EAAAC,QAJA,SAAAC,GACA,OAAAA","file":"static/js/5.9b173d86.chunk.js","sourcesContent":["var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n} // Add methods to `Stack`.\n\n\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\nmodule.exports = Stack;","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || value !== value && other !== other;\n}\n\nmodule.exports = eq;","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n/* Node.js helper references. */\n\n\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\n\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\nmodule.exports = isTypedArray;","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\n\n\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n\n  if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {\n    return value !== value && other !== other;\n  }\n\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n\n  return array;\n}\n\nmodule.exports = arrayPush;","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\n\nvar getSymbols = !nativeGetSymbols ? stubArray : function (object) {\n  if (object == null) {\n    return [];\n  }\n\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function (symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\nmodule.exports = getSymbols;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Detect free variable `process` from Node.js. */\n\nvar freeProcess = moduleExports && freeGlobal.process;\n/** Used to access faster Node.js helpers. */\n\nvar nodeUtil = function () {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    } // Legacy `process.binding('util')` for Node.js < 10.\n\n\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}();\n\nmodule.exports = nodeUtil;","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n/** `Object#toString` result references. */\n\n\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\n\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  } // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\n\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\nmodule.exports = freeGlobal;","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\n\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n\n    try {\n      return func + '';\n    } catch (e) {}\n  }\n\n  return '';\n}\n\nmodule.exports = toSource;","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\n\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(array);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var index = -1,\n      result = true,\n      seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;\n  stack.set(array, other);\n  stack.set(other, array); // Ignore non-index properties.\n\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);\n    }\n\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n\n      result = false;\n      break;\n    } // Recursively compare arrays (susceptible to call stack limits).\n\n\n    if (seen) {\n      if (!arraySome(other, function (othValue, othIndex) {\n        if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n          return seen.push(othIndex);\n        }\n      })) {\n        result = false;\n        break;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n      result = false;\n      break;\n    }\n  }\n\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;","var isObject = require('./isObject');\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\n\n\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function (object) {\n    if (object == null) {\n      return false;\n    }\n\n    return object[key] === srcValue && (srcValue !== undefined || key in Object(object));\n  };\n}\n\nmodule.exports = matchesStrictComparable;","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\n\n\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n  this.__data__ = new MapCache();\n\n  while (++index < length) {\n    this.add(values[index]);\n  }\n} // Add methods to `SetCache`.\n\n\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\nmodule.exports = SetCache;","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Uint8Array = root.Uint8Array;\nmodule.exports = Uint8Array;","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && ( // Safari 9 has enumerable `arguments.length` in strict mode.\n    key == 'length' || // Node.js 0.10 has enumerable non-index properties on buffers.\n    isBuff && (key == 'offset' || key == 'parent') || // PhantomJS 2 has enumerable non-index properties on typed arrays.\n    isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || // Skip index properties.\n    isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n\n  var result = [];\n\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = baseKeys;","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function (arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar WeakMap = getNative(root, 'WeakMap');\nmodule.exports = WeakMap;","var defineProperty = require('./_defineProperty');\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\n\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;","var getNative = require('./_getNative');\n\nvar defineProperty = function () {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}();\n\nmodule.exports = defineProperty;","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\n\n\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n\n  if (value == null) {\n    return identity;\n  }\n\n  if (typeof value == 'object') {\n    return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);\n  }\n\n  return property(value);\n}\n\nmodule.exports = baseIteratee;","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\n\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = baseToString;","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\n\n\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n\n    objIsArr = true;\n    objIsObj = false;\n  }\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack());\n    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n      stack || (stack = new Stack());\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n\n  if (!isSameTag) {\n    return false;\n  }\n\n  stack || (stack = new Stack());\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;","var assocIndexOf = require('./_assocIndexOf');\n/** Used for built-in method references. */\n\n\nvar arrayProto = Array.prototype;\n/** Built-in value references. */\n\nvar splice = arrayProto.splice;\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n\n  var lastIndex = data.length - 1;\n\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\n\n\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n\n  return this;\n}\n\nmodule.exports = listCacheSet;","var ListCache = require('./_ListCache');\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\n\n\nfunction stackClear() {\n  this.__data__ = new ListCache();\n  this.size = 0;\n}\n\nmodule.exports = stackClear;","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n/** Used as the size to enable large array optimizations. */\n\n\nvar LARGE_ARRAY_SIZE = 200;\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\n\nfunction stackSet(key, value) {\n  var data = this.__data__;\n\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n\n    if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n\n    data = this.__data__ = new MapCache(pairs);\n  }\n\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\n\n\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n/** Used to detect host constructors (Safari). */\n\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n/** Used for built-in method references. */\n\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Used to detect if a method is native. */\n\nvar reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\n\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;","var Symbol = require('./_Symbol');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\n\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = getRawTag;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\n\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;","var coreJsData = require('./_coreJsData');\n/** Used to detect methods masquerading as native. */\n\n\nvar maskSrcKey = function () {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? 'Symbol(src)_1.' + uid : '';\n}();\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\n\n\nfunction isMasked(func) {\n  return !!maskSrcKey && maskSrcKey in func;\n}\n\nmodule.exports = isMasked;","var root = require('./_root');\n/** Used to detect overreaching core-js shims. */\n\n\nvar coreJsData = root['__core-js_shared__'];\nmodule.exports = coreJsData;","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\n\n\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash(),\n    'map': new (Map || ListCache)(),\n    'string': new Hash()\n  };\n}\n\nmodule.exports = mapCacheClear;","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `Hash`.\n\n\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\nmodule.exports = Hash;","var nativeCreate = require('./_nativeCreate');\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\n\n\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\nfunction hashGet(key) {\n  var data = this.__data__;\n\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;","var nativeCreate = require('./_nativeCreate');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\n\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;","var getMapData = require('./_getMapData');\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\n\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;\n}\n\nmodule.exports = isKeyable;","var getMapData = require('./_getMapData');\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;","var getMapData = require('./_getMapData');\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;","var getMapData = require('./_getMapData');\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\n\n\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\n\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n\n  return this;\n}\n\nmodule.exports = setCacheAdd;","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = arraySome;","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/** `Object#toString` result references. */\n\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {\n        return false;\n      }\n\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == other + '';\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      } // Assume cyclic values are equal.\n\n\n      var stacked = stack.get(object);\n\n      if (stacked) {\n        return stacked == other;\n      }\n\n      bitmask |= COMPARE_UNORDERED_FLAG; // Recursively compare objects (susceptible to call stack limits).\n\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n\n  }\n\n  return false;\n}\n\nmodule.exports = equalByTag;","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n  map.forEach(function (value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n  set.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;","var getAllKeys = require('./_getAllKeys');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n\n  var index = objLength;\n\n  while (index--) {\n    var key = objProps[index];\n\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(object);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n  var skipCtor = isPartial;\n\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);\n    } // Recursively compare objects (susceptible to call stack limits).\n\n\n    if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {\n      result = false;\n      break;\n    }\n\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.\n\n    if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayFilter;","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n\n  return result;\n}\n\nmodule.exports = baseTimes;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]';\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\n\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n/** Used to identify `toStringTag` values of typed arrays. */\n\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\n\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;","var overArg = require('./_overArg');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeKeys = overArg(Object.keys, Object);\nmodule.exports = nativeKeys;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar DataView = getNative(root, 'DataView');\nmodule.exports = DataView;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Promise = getNative(root, 'Promise');\nmodule.exports = Promise;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Set = getNative(root, 'Set');\nmodule.exports = Set;","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\n\n\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n\n  return function (object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\n\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n\n  object = Object(object);\n\n  while (index--) {\n    var data = matchData[index];\n\n    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {\n      return false;\n    }\n  }\n\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack();\n\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n\n      if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = baseIsMatch;","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\n\n\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n\n  return result;\n}\n\nmodule.exports = getMatchData;","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\n\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n\n  return function (object) {\n    var objValue = get(object, path);\n    return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;","var memoizeCapped = require('./_memoizeCapped');\n/** Used to match property names within property paths. */\n\n\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n/** Used to match backslashes in property paths. */\n\nvar reEscapeChar = /\\\\(\\\\)?/g;\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\n\nvar stringToPath = memoizeCapped(function (string) {\n  var result = [];\n\n  if (string.charCodeAt(0) === 46\n  /* . */\n  ) {\n      result.push('');\n    }\n\n  string.replace(rePropName, function (match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);\n  });\n  return result;\n});\nmodule.exports = stringToPath;","var memoize = require('./memoize');\n/** Used as the maximum memoize cache size. */\n\n\nvar MAX_MEMOIZE_SIZE = 500;\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\n\nfunction memoizeCapped(func) {\n  var result = memoize(func, function (key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n\n    return key;\n  });\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;","var MapCache = require('./_MapCache');\n/** Error message constants. */\n\n\nvar FUNC_ERROR_TEXT = 'Expected a function';\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\n\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n\n  var memoized = function memoized() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n\n  memoized.cache = new (memoize.Cache || MapCache)();\n  return memoized;\n} // Expose `MapCache`.\n\n\nmemoize.Cache = MapCache;\nmodule.exports = memoize;","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\n\n\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n\n    object = object[key];\n  }\n\n  if (result || ++index != length) {\n    return result;\n  }\n\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\n\n\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function (object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;","var baseGet = require('./_baseGet');\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\n\n\nfunction basePropertyDeep(path) {\n  return function (object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.destroyChart();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.destroyChart();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    this.saveCurrentDatasets(); // to remove the dataset metadata from this chart when the chart is destroyed\n\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.getCurrentDatasets = function getCurrentDatasets() {\n    return this.chartInstance && this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n  };\n\n  ChartComponent.prototype.saveCurrentDatasets = function saveCurrentDatasets() {\n    var _this2 = this;\n\n    this.datasets = this.datasets || {};\n    var currentDatasets = this.getCurrentDatasets();\n    currentDatasets.forEach(function (d) {\n      _this2.datasets[_this2.props.datasetKeyProvider(d)] = d;\n    });\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this3 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.getCurrentDatasets();\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this3.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.destroyChart = function destroyChart() {\n    // Put all of the datasets that have existed in the chart back on the chart\n    // so that the metadata associated with this chart get destroyed.\n    // This allows the datasets to be used in another chart. This can happen,\n    // for example, in a tabbed UI where the chart gets created each time the\n    // tab gets switched to the chart and uses the same data).\n    this.saveCurrentDatasets();\n    var datasets = Object.values(this.datasets);\n    this.chartInstance.config.data.datasets = datasets;\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this5 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this5.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this7 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this7.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this9 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this9.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this11 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this11.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this13 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this13.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this15 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this15.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this17 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this17.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this19 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this19.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this21 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this21.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function () {\n    try {\n      return require('moment');\n    } catch (e) {}\n  }()) : typeof define === 'function' && define.amd ? define(['require'], function (require) {\n    return factory(function () {\n      try {\n        return require('moment');\n      } catch (e) {}\n    }());\n  }) : global.Chart = factory(global.moment);\n})(this, function (moment) {\n  'use strict';\n\n  moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n  /* MIT license */\n\n  var conversions = {\n    rgb2hsl: rgb2hsl,\n    rgb2hsv: rgb2hsv,\n    rgb2hwb: rgb2hwb,\n    rgb2cmyk: rgb2cmyk,\n    rgb2keyword: rgb2keyword,\n    rgb2xyz: rgb2xyz,\n    rgb2lab: rgb2lab,\n    rgb2lch: rgb2lch,\n    hsl2rgb: hsl2rgb,\n    hsl2hsv: hsl2hsv,\n    hsl2hwb: hsl2hwb,\n    hsl2cmyk: hsl2cmyk,\n    hsl2keyword: hsl2keyword,\n    hsv2rgb: hsv2rgb,\n    hsv2hsl: hsv2hsl,\n    hsv2hwb: hsv2hwb,\n    hsv2cmyk: hsv2cmyk,\n    hsv2keyword: hsv2keyword,\n    hwb2rgb: hwb2rgb,\n    hwb2hsl: hwb2hsl,\n    hwb2hsv: hwb2hsv,\n    hwb2cmyk: hwb2cmyk,\n    hwb2keyword: hwb2keyword,\n    cmyk2rgb: cmyk2rgb,\n    cmyk2hsl: cmyk2hsl,\n    cmyk2hsv: cmyk2hsv,\n    cmyk2hwb: cmyk2hwb,\n    cmyk2keyword: cmyk2keyword,\n    keyword2rgb: keyword2rgb,\n    keyword2hsl: keyword2hsl,\n    keyword2hsv: keyword2hsv,\n    keyword2hwb: keyword2hwb,\n    keyword2cmyk: keyword2cmyk,\n    keyword2lab: keyword2lab,\n    keyword2xyz: keyword2xyz,\n    xyz2rgb: xyz2rgb,\n    xyz2lab: xyz2lab,\n    xyz2lch: xyz2lch,\n    lab2xyz: lab2xyz,\n    lab2rgb: lab2rgb,\n    lab2lch: lab2lch,\n    lch2lab: lch2lab,\n    lch2xyz: lch2xyz,\n    lch2rgb: lch2rgb\n  };\n\n  function rgb2hsl(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        l;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    l = (min + max) / 2;\n    if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n    return [h, s * 100, l * 100];\n  }\n\n  function rgb2hsv(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        v;\n    if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    v = max / 255 * 1000 / 10;\n    return [h, s, v];\n  }\n\n  function rgb2hwb(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        h = rgb2hsl(rgb)[0],\n        w = 1 / 255 * Math.min(r, Math.min(g, b)),\n        b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n    return [h, w * 100, b * 100];\n  }\n\n  function rgb2cmyk(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        c,\n        m,\n        y,\n        k;\n    k = Math.min(1 - r, 1 - g, 1 - b);\n    c = (1 - r - k) / (1 - k) || 0;\n    m = (1 - g - k) / (1 - k) || 0;\n    y = (1 - b - k) / (1 - k) || 0;\n    return [c * 100, m * 100, y * 100, k * 100];\n  }\n\n  function rgb2keyword(rgb) {\n    return reverseKeywords[JSON.stringify(rgb)];\n  }\n\n  function rgb2xyz(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255; // assume sRGB\n\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n    var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n    var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n    return [x * 100, y * 100, z * 100];\n  }\n\n  function rgb2lab(rgb) {\n    var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function rgb2lch(args) {\n    return lab2lch(rgb2lab(args));\n  }\n\n  function hsl2rgb(hsl) {\n    var h = hsl[0] / 360,\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        t1,\n        t2,\n        t3,\n        rgb,\n        val;\n\n    if (s == 0) {\n      val = l * 255;\n      return [val, val, val];\n    }\n\n    if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n    t1 = 2 * l - t2;\n    rgb = [0, 0, 0];\n\n    for (var i = 0; i < 3; i++) {\n      t3 = h + 1 / 3 * -(i - 1);\n      t3 < 0 && t3++;\n      t3 > 1 && t3--;\n      if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n      rgb[i] = val * 255;\n    }\n\n    return rgb;\n  }\n\n  function hsl2hsv(hsl) {\n    var h = hsl[0],\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        sv,\n        v;\n\n    if (l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n    }\n\n    l *= 2;\n    s *= l <= 1 ? l : 2 - l;\n    v = (l + s) / 2;\n    sv = 2 * s / (l + s);\n    return [h, sv * 100, v * 100];\n  }\n\n  function hsl2hwb(args) {\n    return rgb2hwb(hsl2rgb(args));\n  }\n\n  function hsl2cmyk(args) {\n    return rgb2cmyk(hsl2rgb(args));\n  }\n\n  function hsl2keyword(args) {\n    return rgb2keyword(hsl2rgb(args));\n  }\n\n  function hsv2rgb(hsv) {\n    var h = hsv[0] / 60,\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        hi = Math.floor(h) % 6;\n    var f = h - Math.floor(h),\n        p = 255 * v * (1 - s),\n        q = 255 * v * (1 - s * f),\n        t = 255 * v * (1 - s * (1 - f)),\n        v = 255 * v;\n\n    switch (hi) {\n      case 0:\n        return [v, t, p];\n\n      case 1:\n        return [q, v, p];\n\n      case 2:\n        return [p, v, t];\n\n      case 3:\n        return [p, q, v];\n\n      case 4:\n        return [t, p, v];\n\n      case 5:\n        return [v, p, q];\n    }\n  }\n\n  function hsv2hsl(hsv) {\n    var h = hsv[0],\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        sl,\n        l;\n    l = (2 - s) * v;\n    sl = s * v;\n    sl /= l <= 1 ? l : 2 - l;\n    sl = sl || 0;\n    l /= 2;\n    return [h, sl * 100, l * 100];\n  }\n\n  function hsv2hwb(args) {\n    return rgb2hwb(hsv2rgb(args));\n  }\n\n  function hsv2cmyk(args) {\n    return rgb2cmyk(hsv2rgb(args));\n  }\n\n  function hsv2keyword(args) {\n    return rgb2keyword(hsv2rgb(args));\n  } // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\n  function hwb2rgb(hwb) {\n    var h = hwb[0] / 360,\n        wh = hwb[1] / 100,\n        bl = hwb[2] / 100,\n        ratio = wh + bl,\n        i,\n        v,\n        f,\n        n; // wh + bl cant be > 1\n\n    if (ratio > 1) {\n      wh /= ratio;\n      bl /= ratio;\n    }\n\n    i = Math.floor(6 * h);\n    v = 1 - bl;\n    f = 6 * h - i;\n\n    if ((i & 0x01) != 0) {\n      f = 1 - f;\n    }\n\n    n = wh + f * (v - wh); // linear interpolation\n\n    switch (i) {\n      default:\n      case 6:\n      case 0:\n        r = v;\n        g = n;\n        b = wh;\n        break;\n\n      case 1:\n        r = n;\n        g = v;\n        b = wh;\n        break;\n\n      case 2:\n        r = wh;\n        g = v;\n        b = n;\n        break;\n\n      case 3:\n        r = wh;\n        g = n;\n        b = v;\n        break;\n\n      case 4:\n        r = n;\n        g = wh;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = wh;\n        b = n;\n        break;\n    }\n\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function hwb2hsl(args) {\n    return rgb2hsl(hwb2rgb(args));\n  }\n\n  function hwb2hsv(args) {\n    return rgb2hsv(hwb2rgb(args));\n  }\n\n  function hwb2cmyk(args) {\n    return rgb2cmyk(hwb2rgb(args));\n  }\n\n  function hwb2keyword(args) {\n    return rgb2keyword(hwb2rgb(args));\n  }\n\n  function cmyk2rgb(cmyk) {\n    var c = cmyk[0] / 100,\n        m = cmyk[1] / 100,\n        y = cmyk[2] / 100,\n        k = cmyk[3] / 100,\n        r,\n        g,\n        b;\n    r = 1 - Math.min(1, c * (1 - k) + k);\n    g = 1 - Math.min(1, m * (1 - k) + k);\n    b = 1 - Math.min(1, y * (1 - k) + k);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function cmyk2hsl(args) {\n    return rgb2hsl(cmyk2rgb(args));\n  }\n\n  function cmyk2hsv(args) {\n    return rgb2hsv(cmyk2rgb(args));\n  }\n\n  function cmyk2hwb(args) {\n    return rgb2hwb(cmyk2rgb(args));\n  }\n\n  function cmyk2keyword(args) {\n    return rgb2keyword(cmyk2rgb(args));\n  }\n\n  function xyz2rgb(xyz) {\n    var x = xyz[0] / 100,\n        y = xyz[1] / 100,\n        z = xyz[2] / 100,\n        r,\n        g,\n        b;\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n    r = Math.min(Math.max(0, r), 1);\n    g = Math.min(Math.max(0, g), 1);\n    b = Math.min(Math.max(0, b), 1);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function xyz2lab(xyz) {\n    var x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function xyz2lch(args) {\n    return lab2lch(xyz2lab(args));\n  }\n\n  function lab2xyz(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        x,\n        y,\n        z,\n        y2;\n\n    if (l <= 8) {\n      y = l * 100 / 903.3;\n      y2 = 7.787 * (y / 100) + 16 / 116;\n    } else {\n      y = 100 * Math.pow((l + 16) / 116, 3);\n      y2 = Math.pow(y / 100, 1 / 3);\n    }\n\n    x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n    z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n    return [x, y, z];\n  }\n\n  function lab2lch(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        hr,\n        h,\n        c;\n    hr = Math.atan2(b, a);\n    h = hr * 360 / 2 / Math.PI;\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    c = Math.sqrt(a * a + b * b);\n    return [l, c, h];\n  }\n\n  function lab2rgb(args) {\n    return xyz2rgb(lab2xyz(args));\n  }\n\n  function lch2lab(lch) {\n    var l = lch[0],\n        c = lch[1],\n        h = lch[2],\n        a,\n        b,\n        hr;\n    hr = h / 360 * 2 * Math.PI;\n    a = c * Math.cos(hr);\n    b = c * Math.sin(hr);\n    return [l, a, b];\n  }\n\n  function lch2xyz(args) {\n    return lab2xyz(lch2lab(args));\n  }\n\n  function lch2rgb(args) {\n    return lab2rgb(lch2lab(args));\n  }\n\n  function keyword2rgb(keyword) {\n    return cssKeywords[keyword];\n  }\n\n  function keyword2hsl(args) {\n    return rgb2hsl(keyword2rgb(args));\n  }\n\n  function keyword2hsv(args) {\n    return rgb2hsv(keyword2rgb(args));\n  }\n\n  function keyword2hwb(args) {\n    return rgb2hwb(keyword2rgb(args));\n  }\n\n  function keyword2cmyk(args) {\n    return rgb2cmyk(keyword2rgb(args));\n  }\n\n  function keyword2lab(args) {\n    return rgb2lab(keyword2rgb(args));\n  }\n\n  function keyword2xyz(args) {\n    return rgb2xyz(keyword2rgb(args));\n  }\n\n  var cssKeywords = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50]\n  };\n  var reverseKeywords = {};\n\n  for (var key in cssKeywords) {\n    reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n  }\n\n  var convert = function convert() {\n    return new Converter();\n  };\n\n  for (var func in conversions) {\n    // export Raw versions\n    convert[func + \"Raw\"] = function (func) {\n      // accept array or plain args\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        return conversions[func](arg);\n      };\n    }(func);\n\n    var pair = /(\\w+)2(\\w+)/.exec(func),\n        from = pair[1],\n        to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n    convert[from] = convert[from] || {};\n\n    convert[from][to] = convert[func] = function (func) {\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        var val = conversions[func](arg);\n        if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n        for (var i = 0; i < val.length; i++) {\n          val[i] = Math.round(val[i]);\n        }\n\n        return val;\n      };\n    }(func);\n  }\n  /* Converter does lazy conversion and caching */\n\n\n  var Converter = function Converter() {\n    this.convs = {};\n  };\n  /* Either get the values for a space or\n    set the values for a space, depending on args */\n\n\n  Converter.prototype.routeSpace = function (space, args) {\n    var values = args[0];\n\n    if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);\n    }\n\n    return this.setValues(space, values);\n  };\n  /* Set the values for a space, invalidating cache */\n\n\n  Converter.prototype.setValues = function (space, values) {\n    this.space = space;\n    this.convs = {};\n    this.convs[space] = values;\n    return this;\n  };\n  /* Get the values for a space. If there's already\n    a conversion for the space, fetch it, otherwise\n    compute it */\n\n\n  Converter.prototype.getValues = function (space) {\n    var vals = this.convs[space];\n\n    if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n      this.convs[space] = vals;\n    }\n\n    return vals;\n  };\n\n  [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n    Converter.prototype[space] = function (vals) {\n      return this.routeSpace(space, arguments);\n    };\n  });\n  var colorConvert = convert;\n  var colorName = {\n    \"aliceblue\": [240, 248, 255],\n    \"antiquewhite\": [250, 235, 215],\n    \"aqua\": [0, 255, 255],\n    \"aquamarine\": [127, 255, 212],\n    \"azure\": [240, 255, 255],\n    \"beige\": [245, 245, 220],\n    \"bisque\": [255, 228, 196],\n    \"black\": [0, 0, 0],\n    \"blanchedalmond\": [255, 235, 205],\n    \"blue\": [0, 0, 255],\n    \"blueviolet\": [138, 43, 226],\n    \"brown\": [165, 42, 42],\n    \"burlywood\": [222, 184, 135],\n    \"cadetblue\": [95, 158, 160],\n    \"chartreuse\": [127, 255, 0],\n    \"chocolate\": [210, 105, 30],\n    \"coral\": [255, 127, 80],\n    \"cornflowerblue\": [100, 149, 237],\n    \"cornsilk\": [255, 248, 220],\n    \"crimson\": [220, 20, 60],\n    \"cyan\": [0, 255, 255],\n    \"darkblue\": [0, 0, 139],\n    \"darkcyan\": [0, 139, 139],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"darkgray\": [169, 169, 169],\n    \"darkgreen\": [0, 100, 0],\n    \"darkgrey\": [169, 169, 169],\n    \"darkkhaki\": [189, 183, 107],\n    \"darkmagenta\": [139, 0, 139],\n    \"darkolivegreen\": [85, 107, 47],\n    \"darkorange\": [255, 140, 0],\n    \"darkorchid\": [153, 50, 204],\n    \"darkred\": [139, 0, 0],\n    \"darksalmon\": [233, 150, 122],\n    \"darkseagreen\": [143, 188, 143],\n    \"darkslateblue\": [72, 61, 139],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"darkturquoise\": [0, 206, 209],\n    \"darkviolet\": [148, 0, 211],\n    \"deeppink\": [255, 20, 147],\n    \"deepskyblue\": [0, 191, 255],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"dodgerblue\": [30, 144, 255],\n    \"firebrick\": [178, 34, 34],\n    \"floralwhite\": [255, 250, 240],\n    \"forestgreen\": [34, 139, 34],\n    \"fuchsia\": [255, 0, 255],\n    \"gainsboro\": [220, 220, 220],\n    \"ghostwhite\": [248, 248, 255],\n    \"gold\": [255, 215, 0],\n    \"goldenrod\": [218, 165, 32],\n    \"gray\": [128, 128, 128],\n    \"green\": [0, 128, 0],\n    \"greenyellow\": [173, 255, 47],\n    \"grey\": [128, 128, 128],\n    \"honeydew\": [240, 255, 240],\n    \"hotpink\": [255, 105, 180],\n    \"indianred\": [205, 92, 92],\n    \"indigo\": [75, 0, 130],\n    \"ivory\": [255, 255, 240],\n    \"khaki\": [240, 230, 140],\n    \"lavender\": [230, 230, 250],\n    \"lavenderblush\": [255, 240, 245],\n    \"lawngreen\": [124, 252, 0],\n    \"lemonchiffon\": [255, 250, 205],\n    \"lightblue\": [173, 216, 230],\n    \"lightcoral\": [240, 128, 128],\n    \"lightcyan\": [224, 255, 255],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"lightgray\": [211, 211, 211],\n    \"lightgreen\": [144, 238, 144],\n    \"lightgrey\": [211, 211, 211],\n    \"lightpink\": [255, 182, 193],\n    \"lightsalmon\": [255, 160, 122],\n    \"lightseagreen\": [32, 178, 170],\n    \"lightskyblue\": [135, 206, 250],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"lightsteelblue\": [176, 196, 222],\n    \"lightyellow\": [255, 255, 224],\n    \"lime\": [0, 255, 0],\n    \"limegreen\": [50, 205, 50],\n    \"linen\": [250, 240, 230],\n    \"magenta\": [255, 0, 255],\n    \"maroon\": [128, 0, 0],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"mediumblue\": [0, 0, 205],\n    \"mediumorchid\": [186, 85, 211],\n    \"mediumpurple\": [147, 112, 219],\n    \"mediumseagreen\": [60, 179, 113],\n    \"mediumslateblue\": [123, 104, 238],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"mediumturquoise\": [72, 209, 204],\n    \"mediumvioletred\": [199, 21, 133],\n    \"midnightblue\": [25, 25, 112],\n    \"mintcream\": [245, 255, 250],\n    \"mistyrose\": [255, 228, 225],\n    \"moccasin\": [255, 228, 181],\n    \"navajowhite\": [255, 222, 173],\n    \"navy\": [0, 0, 128],\n    \"oldlace\": [253, 245, 230],\n    \"olive\": [128, 128, 0],\n    \"olivedrab\": [107, 142, 35],\n    \"orange\": [255, 165, 0],\n    \"orangered\": [255, 69, 0],\n    \"orchid\": [218, 112, 214],\n    \"palegoldenrod\": [238, 232, 170],\n    \"palegreen\": [152, 251, 152],\n    \"paleturquoise\": [175, 238, 238],\n    \"palevioletred\": [219, 112, 147],\n    \"papayawhip\": [255, 239, 213],\n    \"peachpuff\": [255, 218, 185],\n    \"peru\": [205, 133, 63],\n    \"pink\": [255, 192, 203],\n    \"plum\": [221, 160, 221],\n    \"powderblue\": [176, 224, 230],\n    \"purple\": [128, 0, 128],\n    \"rebeccapurple\": [102, 51, 153],\n    \"red\": [255, 0, 0],\n    \"rosybrown\": [188, 143, 143],\n    \"royalblue\": [65, 105, 225],\n    \"saddlebrown\": [139, 69, 19],\n    \"salmon\": [250, 128, 114],\n    \"sandybrown\": [244, 164, 96],\n    \"seagreen\": [46, 139, 87],\n    \"seashell\": [255, 245, 238],\n    \"sienna\": [160, 82, 45],\n    \"silver\": [192, 192, 192],\n    \"skyblue\": [135, 206, 235],\n    \"slateblue\": [106, 90, 205],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"snow\": [255, 250, 250],\n    \"springgreen\": [0, 255, 127],\n    \"steelblue\": [70, 130, 180],\n    \"tan\": [210, 180, 140],\n    \"teal\": [0, 128, 128],\n    \"thistle\": [216, 191, 216],\n    \"tomato\": [255, 99, 71],\n    \"turquoise\": [64, 224, 208],\n    \"violet\": [238, 130, 238],\n    \"wheat\": [245, 222, 179],\n    \"white\": [255, 255, 255],\n    \"whitesmoke\": [245, 245, 245],\n    \"yellow\": [255, 255, 0],\n    \"yellowgreen\": [154, 205, 50]\n  };\n  /* MIT license */\n\n  var colorString = {\n    getRgba: getRgba,\n    getHsla: getHsla,\n    getRgb: getRgb,\n    getHsl: getHsl,\n    getHwb: getHwb,\n    getAlpha: getAlpha,\n    hexString: hexString,\n    rgbString: rgbString,\n    rgbaString: rgbaString,\n    percentString: percentString,\n    percentaString: percentaString,\n    hslString: hslString,\n    hslaString: hslaString,\n    hwbString: hwbString,\n    keyword: keyword\n  };\n\n  function getRgba(string) {\n    if (!string) {\n      return;\n    }\n\n    var abbr = /^#([a-fA-F0-9]{3,4})$/i,\n        hex = /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n        rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        keyword = /(\\w+)/;\n    var rgb = [0, 0, 0],\n        a = 1,\n        match = string.match(abbr),\n        hexAlpha = \"\";\n\n    if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i + 1]);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n        return [0, 0, 0, 0];\n      }\n\n      rgb = colorName[match[1]];\n\n      if (!rgb) {\n        return;\n      }\n    }\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n    }\n\n    if (!a && a != 0) {\n      a = 1;\n    } else {\n      a = scale(a, 0, 1);\n    }\n\n    rgb[3] = a;\n    return rgb;\n  }\n\n  function getHsla(string) {\n    if (!string) {\n      return;\n    }\n\n    var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hsl);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n    }\n  }\n\n  function getHwb(string) {\n    if (!string) {\n      return;\n    }\n\n    var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hwb);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n    }\n  }\n\n  function getRgb(string) {\n    var rgba = getRgba(string);\n    return rgba && rgba.slice(0, 3);\n  }\n\n  function getHsl(string) {\n    var hsla = getHsla(string);\n    return hsla && hsla.slice(0, 3);\n  }\n\n  function getAlpha(string) {\n    var vals = getRgba(string);\n\n    if (vals) {\n      return vals[3];\n    } else if (vals = getHsla(string)) {\n      return vals[3];\n    } else if (vals = getHwb(string)) {\n      return vals[3];\n    }\n  } // generators\n\n\n  function hexString(rgba, a) {\n    var a = a !== undefined && rgba.length === 3 ? a : rgba[3];\n    return \"#\" + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (a >= 0 && a < 1 ? hexDouble(Math.round(a * 255)) : \"\");\n  }\n\n  function rgbString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return rgbaString(rgba, alpha);\n    }\n\n    return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n  }\n\n  function rgbaString(rgba, alpha) {\n    if (alpha === undefined) {\n      alpha = rgba[3] !== undefined ? rgba[3] : 1;\n    }\n\n    return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n  }\n\n  function percentString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return percentaString(rgba, alpha);\n    }\n\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n  }\n\n  function percentaString(rgba, alpha) {\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n  }\n\n  function hslString(hsla, alpha) {\n    if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n      return hslaString(hsla, alpha);\n    }\n\n    return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n  }\n\n  function hslaString(hsla, alpha) {\n    if (alpha === undefined) {\n      alpha = hsla[3] !== undefined ? hsla[3] : 1;\n    }\n\n    return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n  } // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n  // (hwb have alpha optional & 1 is default value)\n\n\n  function hwbString(hwb, alpha) {\n    if (alpha === undefined) {\n      alpha = hwb[3] !== undefined ? hwb[3] : 1;\n    }\n\n    return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n  }\n\n  function keyword(rgb) {\n    return reverseNames[rgb.slice(0, 3)];\n  } // helpers\n\n\n  function scale(num, min, max) {\n    return Math.min(Math.max(min, num), max);\n  }\n\n  function hexDouble(num) {\n    var str = num.toString(16).toUpperCase();\n    return str.length < 2 ? \"0\" + str : str;\n  } //create a list of reverse color names\n\n\n  var reverseNames = {};\n\n  for (var name in colorName) {\n    reverseNames[colorName[name]] = name;\n  }\n  /* MIT license */\n\n\n  var Color = function Color(obj) {\n    if (obj instanceof Color) {\n      return obj;\n    }\n\n    if (!(this instanceof Color)) {\n      return new Color(obj);\n    }\n\n    this.valid = false;\n    this.values = {\n      rgb: [0, 0, 0],\n      hsl: [0, 0, 0],\n      hsv: [0, 0, 0],\n      hwb: [0, 0, 0],\n      cmyk: [0, 0, 0, 0],\n      alpha: 1\n    }; // parse Color() argument\n\n    var vals;\n\n    if (typeof obj === 'string') {\n      vals = colorString.getRgba(obj);\n\n      if (vals) {\n        this.setValues('rgb', vals);\n      } else if (vals = colorString.getHsla(obj)) {\n        this.setValues('hsl', vals);\n      } else if (vals = colorString.getHwb(obj)) {\n        this.setValues('hwb', vals);\n      }\n    } else if (typeof obj === 'object') {\n      vals = obj;\n\n      if (vals.r !== undefined || vals.red !== undefined) {\n        this.setValues('rgb', vals);\n      } else if (vals.l !== undefined || vals.lightness !== undefined) {\n        this.setValues('hsl', vals);\n      } else if (vals.v !== undefined || vals.value !== undefined) {\n        this.setValues('hsv', vals);\n      } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n        this.setValues('hwb', vals);\n      } else if (vals.c !== undefined || vals.cyan !== undefined) {\n        this.setValues('cmyk', vals);\n      }\n    }\n  };\n\n  Color.prototype = {\n    isValid: function isValid() {\n      return this.valid;\n    },\n    rgb: function rgb() {\n      return this.setSpace('rgb', arguments);\n    },\n    hsl: function hsl() {\n      return this.setSpace('hsl', arguments);\n    },\n    hsv: function hsv() {\n      return this.setSpace('hsv', arguments);\n    },\n    hwb: function hwb() {\n      return this.setSpace('hwb', arguments);\n    },\n    cmyk: function cmyk() {\n      return this.setSpace('cmyk', arguments);\n    },\n    rgbArray: function rgbArray() {\n      return this.values.rgb;\n    },\n    hslArray: function hslArray() {\n      return this.values.hsl;\n    },\n    hsvArray: function hsvArray() {\n      return this.values.hsv;\n    },\n    hwbArray: function hwbArray() {\n      var values = this.values;\n\n      if (values.alpha !== 1) {\n        return values.hwb.concat([values.alpha]);\n      }\n\n      return values.hwb;\n    },\n    cmykArray: function cmykArray() {\n      return this.values.cmyk;\n    },\n    rgbaArray: function rgbaArray() {\n      var values = this.values;\n      return values.rgb.concat([values.alpha]);\n    },\n    hslaArray: function hslaArray() {\n      var values = this.values;\n      return values.hsl.concat([values.alpha]);\n    },\n    alpha: function alpha(val) {\n      if (val === undefined) {\n        return this.values.alpha;\n      }\n\n      this.setValues('alpha', val);\n      return this;\n    },\n    red: function red(val) {\n      return this.setChannel('rgb', 0, val);\n    },\n    green: function green(val) {\n      return this.setChannel('rgb', 1, val);\n    },\n    blue: function blue(val) {\n      return this.setChannel('rgb', 2, val);\n    },\n    hue: function hue(val) {\n      if (val) {\n        val %= 360;\n        val = val < 0 ? 360 + val : val;\n      }\n\n      return this.setChannel('hsl', 0, val);\n    },\n    saturation: function saturation(val) {\n      return this.setChannel('hsl', 1, val);\n    },\n    lightness: function lightness(val) {\n      return this.setChannel('hsl', 2, val);\n    },\n    saturationv: function saturationv(val) {\n      return this.setChannel('hsv', 1, val);\n    },\n    whiteness: function whiteness(val) {\n      return this.setChannel('hwb', 1, val);\n    },\n    blackness: function blackness(val) {\n      return this.setChannel('hwb', 2, val);\n    },\n    value: function value(val) {\n      return this.setChannel('hsv', 2, val);\n    },\n    cyan: function cyan(val) {\n      return this.setChannel('cmyk', 0, val);\n    },\n    magenta: function magenta(val) {\n      return this.setChannel('cmyk', 1, val);\n    },\n    yellow: function yellow(val) {\n      return this.setChannel('cmyk', 2, val);\n    },\n    black: function black(val) {\n      return this.setChannel('cmyk', 3, val);\n    },\n    hexString: function hexString() {\n      return colorString.hexString(this.values.rgb);\n    },\n    rgbString: function rgbString() {\n      return colorString.rgbString(this.values.rgb, this.values.alpha);\n    },\n    rgbaString: function rgbaString() {\n      return colorString.rgbaString(this.values.rgb, this.values.alpha);\n    },\n    percentString: function percentString() {\n      return colorString.percentString(this.values.rgb, this.values.alpha);\n    },\n    hslString: function hslString() {\n      return colorString.hslString(this.values.hsl, this.values.alpha);\n    },\n    hslaString: function hslaString() {\n      return colorString.hslaString(this.values.hsl, this.values.alpha);\n    },\n    hwbString: function hwbString() {\n      return colorString.hwbString(this.values.hwb, this.values.alpha);\n    },\n    keyword: function keyword() {\n      return colorString.keyword(this.values.rgb, this.values.alpha);\n    },\n    rgbNumber: function rgbNumber() {\n      var rgb = this.values.rgb;\n      return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n    },\n    luminosity: function luminosity() {\n      // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n      var rgb = this.values.rgb;\n      var lum = [];\n\n      for (var i = 0; i < rgb.length; i++) {\n        var chan = rgb[i] / 255;\n        lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n      }\n\n      return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n    },\n    contrast: function contrast(color2) {\n      // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n      var lum1 = this.luminosity();\n      var lum2 = color2.luminosity();\n\n      if (lum1 > lum2) {\n        return (lum1 + 0.05) / (lum2 + 0.05);\n      }\n\n      return (lum2 + 0.05) / (lum1 + 0.05);\n    },\n    level: function level(color2) {\n      var contrastRatio = this.contrast(color2);\n\n      if (contrastRatio >= 7.1) {\n        return 'AAA';\n      }\n\n      return contrastRatio >= 4.5 ? 'AA' : '';\n    },\n    dark: function dark() {\n      // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n      var rgb = this.values.rgb;\n      var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n      return yiq < 128;\n    },\n    light: function light() {\n      return !this.dark();\n    },\n    negate: function negate() {\n      var rgb = [];\n\n      for (var i = 0; i < 3; i++) {\n        rgb[i] = 255 - this.values.rgb[i];\n      }\n\n      this.setValues('rgb', rgb);\n      return this;\n    },\n    lighten: function lighten(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] += hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    darken: function darken(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] -= hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    saturate: function saturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] += hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    desaturate: function desaturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] -= hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    whiten: function whiten(ratio) {\n      var hwb = this.values.hwb;\n      hwb[1] += hwb[1] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    blacken: function blacken(ratio) {\n      var hwb = this.values.hwb;\n      hwb[2] += hwb[2] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    greyscale: function greyscale() {\n      var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n      var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n      this.setValues('rgb', [val, val, val]);\n      return this;\n    },\n    clearer: function clearer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha - alpha * ratio);\n      return this;\n    },\n    opaquer: function opaquer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha + alpha * ratio);\n      return this;\n    },\n    rotate: function rotate(degrees) {\n      var hsl = this.values.hsl;\n      var hue = (hsl[0] + degrees) % 360;\n      hsl[0] = hue < 0 ? 360 + hue : hue;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n\n    /**\n     * Ported from sass implementation in C\n     * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n     */\n    mix: function mix(mixinColor, weight) {\n      var color1 = this;\n      var color2 = mixinColor;\n      var p = weight === undefined ? 0.5 : weight;\n      var w = 2 * p - 1;\n      var a = color1.alpha() - color2.alpha();\n      var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      var w2 = 1 - w1;\n      return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n    },\n    toJSON: function toJSON() {\n      return this.rgb();\n    },\n    clone: function clone() {\n      // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n      // making the final build way to big to embed in Chart.js. So let's do it manually,\n      // assuming that values to clone are 1 dimension arrays containing only numbers,\n      // except 'alpha' which is a number.\n      var result = new Color();\n      var source = this.values;\n      var target = result.values;\n      var value, type;\n\n      for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n          value = source[prop];\n          type = {}.toString.call(value);\n\n          if (type === '[object Array]') {\n            target[prop] = value.slice(0);\n          } else if (type === '[object Number]') {\n            target[prop] = value;\n          } else {\n            console.error('unexpected color value:', value);\n          }\n        }\n      }\n\n      return result;\n    }\n  };\n  Color.prototype.spaces = {\n    rgb: ['red', 'green', 'blue'],\n    hsl: ['hue', 'saturation', 'lightness'],\n    hsv: ['hue', 'saturation', 'value'],\n    hwb: ['hue', 'whiteness', 'blackness'],\n    cmyk: ['cyan', 'magenta', 'yellow', 'black']\n  };\n  Color.prototype.maxes = {\n    rgb: [255, 255, 255],\n    hsl: [360, 100, 100],\n    hsv: [360, 100, 100],\n    hwb: [360, 100, 100],\n    cmyk: [100, 100, 100, 100]\n  };\n\n  Color.prototype.getValues = function (space) {\n    var values = this.values;\n    var vals = {};\n\n    for (var i = 0; i < space.length; i++) {\n      vals[space.charAt(i)] = values[space][i];\n    }\n\n    if (values.alpha !== 1) {\n      vals.a = values.alpha;\n    } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n    return vals;\n  };\n\n  Color.prototype.setValues = function (space, vals) {\n    var values = this.values;\n    var spaces = this.spaces;\n    var maxes = this.maxes;\n    var alpha = 1;\n    var i;\n    this.valid = true;\n\n    if (space === 'alpha') {\n      alpha = vals;\n    } else if (vals.length) {\n      // [10, 10, 10]\n      values[space] = vals.slice(0, space.length);\n      alpha = vals[space.length];\n    } else if (vals[space.charAt(0)] !== undefined) {\n      // {r: 10, g: 10, b: 10}\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[space.charAt(i)];\n      }\n\n      alpha = vals.a;\n    } else if (vals[spaces[space][0]] !== undefined) {\n      // {red: 10, green: 10, blue: 10}\n      var chans = spaces[space];\n\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[chans[i]];\n      }\n\n      alpha = vals.alpha;\n    }\n\n    values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n    if (space === 'alpha') {\n      return false;\n    }\n\n    var capped; // cap values of the space prior converting all values\n\n    for (i = 0; i < space.length; i++) {\n      capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n      values[space][i] = Math.round(capped);\n    } // convert to all the other color spaces\n\n\n    for (var sname in spaces) {\n      if (sname !== space) {\n        values[sname] = colorConvert[space][sname](values[space]);\n      }\n    }\n\n    return true;\n  };\n\n  Color.prototype.setSpace = function (space, args) {\n    var vals = args[0];\n\n    if (vals === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof vals === 'number') {\n      vals = Array.prototype.slice.call(args);\n    }\n\n    this.setValues(space, vals);\n    return this;\n  };\n\n  Color.prototype.setChannel = function (space, index, val) {\n    var svalues = this.values[space];\n\n    if (val === undefined) {\n      // color.red()\n      return svalues[index];\n    } else if (val === svalues[index]) {\n      // color.red(color.red())\n      return this;\n    } // color.red(100)\n\n\n    svalues[index] = val;\n    this.setValues(space, svalues);\n    return this;\n  };\n\n  if (typeof window !== 'undefined') {\n    window.Color = Color;\n  }\n\n  var chartjsColor = Color;\n  /**\n   * @namespace Chart.helpers\n   */\n\n  var helpers = {\n    /**\n     * An empty function that can be used, for example, for optional callback.\n     */\n    noop: function noop() {},\n\n    /**\n     * Returns a unique id, sequentially generated from a global variable.\n     * @returns {number}\n     * @function\n     */\n    uid: function () {\n      var id = 0;\n      return function () {\n        return id++;\n      };\n    }(),\n\n    /**\n     * Returns true if `value` is neither null nor undefined, else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isNullOrUndef: function isNullOrUndef(value) {\n      return value === null || typeof value === 'undefined';\n    },\n\n    /**\n     * Returns true if `value` is an array (including typed arrays), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @function\n     */\n    isArray: function isArray(value) {\n      if (Array.isArray && Array.isArray(value)) {\n        return true;\n      }\n\n      var type = Object.prototype.toString.call(value);\n\n      if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns true if `value` is an object (excluding null), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isObject: function isObject(value) {\n      return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n    },\n\n    /**\n     * Returns true if `value` is a finite number, else returns false\n     * @param {*} value  - The value to test.\n     * @returns {boolean}\n     */\n    isFinite: function (_isFinite) {\n      function isFinite(_x) {\n        return _isFinite.apply(this, arguments);\n      }\n\n      isFinite.toString = function () {\n        return _isFinite.toString();\n      };\n\n      return isFinite;\n    }(function (value) {\n      return (typeof value === 'number' || value instanceof Number) && isFinite(value);\n    }),\n\n    /**\n     * Returns `value` if defined, else returns `defaultValue`.\n     * @param {*} value - The value to return if defined.\n     * @param {*} defaultValue - The value to return if `value` is undefined.\n     * @returns {*}\n     */\n    valueOrDefault: function valueOrDefault(value, defaultValue) {\n      return typeof value === 'undefined' ? defaultValue : value;\n    },\n\n    /**\n     * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n     * @param {Array} value - The array to lookup for value at `index`.\n     * @param {number} index - The index in `value` to lookup for value.\n     * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n     * @returns {*}\n     */\n    valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n      return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n    },\n\n    /**\n     * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n     * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n     * @param {function} fn - The function to call.\n     * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @returns {*}\n     */\n    callback: function callback(fn, args, thisArg) {\n      if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n      }\n    },\n\n    /**\n     * Note(SB) for performance sake, this method should only be used when loopable type\n     * is unknown or in none intensive code (not called often and small loopable). Else\n     * it's preferable to use a regular for() loop and save extra function calls.\n     * @param {object|Array} loopable - The object or array to be iterated.\n     * @param {function} fn - The function to call for each item.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n     */\n    each: function each(loopable, fn, thisArg, reverse) {\n      var i, len, keys;\n\n      if (helpers.isArray(loopable)) {\n        len = loopable.length;\n\n        if (reverse) {\n          for (i = len - 1; i >= 0; i--) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        } else {\n          for (i = 0; i < len; i++) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        }\n      } else if (helpers.isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n      }\n    },\n\n    /**\n     * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n     * @see https://stackoverflow.com/a/14853974\n     * @param {Array} a0 - The array to compare\n     * @param {Array} a1 - The array to compare\n     * @returns {boolean}\n     */\n    arrayEquals: function arrayEquals(a0, a1) {\n      var i, ilen, v0, v1;\n\n      if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n      }\n\n      for (i = 0, ilen = a0.length; i < ilen; ++i) {\n        v0 = a0[i];\n        v1 = a1[i];\n\n        if (v0 instanceof Array && v1 instanceof Array) {\n          if (!helpers.arrayEquals(v0, v1)) {\n            return false;\n          }\n        } else if (v0 !== v1) {\n          // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns a deep copy of `source` without keeping references on objects and arrays.\n     * @param {*} source - The value to clone.\n     * @returns {*}\n     */\n    clone: function clone(source) {\n      if (helpers.isArray(source)) {\n        return source.map(helpers.clone);\n      }\n\n      if (helpers.isObject(source)) {\n        var target = {};\n        var keys = Object.keys(source);\n        var klen = keys.length;\n        var k = 0;\n\n        for (; k < klen; ++k) {\n          target[keys[k]] = helpers.clone(source[keys[k]]);\n        }\n\n        return target;\n      }\n\n      return source;\n    },\n\n    /**\n     * The default merger when Chart.helpers.merge is called without merger option.\n     * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n     * @private\n     */\n    _merger: function _merger(key, target, source, options) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.merge(tval, sval, options);\n      } else {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Merges source[key] in target[key] only if target[key] is undefined.\n     * @private\n     */\n    _mergerIf: function _mergerIf(key, target, source) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.mergeIf(tval, sval);\n      } else if (!target.hasOwnProperty(key)) {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` with the given `options`.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @param {object} [options] - Merging options:\n     * @param {function} [options.merger] - The merge method (key, target, source, options)\n     * @returns {object} The `target` object.\n     */\n    merge: function merge(target, source, options) {\n      var sources = helpers.isArray(source) ? source : [source];\n      var ilen = sources.length;\n      var merge, i, keys, klen, k;\n\n      if (!helpers.isObject(target)) {\n        return target;\n      }\n\n      options = options || {};\n      merge = options.merger || helpers._merger;\n\n      for (i = 0; i < ilen; ++i) {\n        source = sources[i];\n\n        if (!helpers.isObject(source)) {\n          continue;\n        }\n\n        keys = Object.keys(source);\n\n        for (k = 0, klen = keys.length; k < klen; ++k) {\n          merge(keys[k], target, source, options);\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @returns {object} The `target` object.\n     */\n    mergeIf: function mergeIf(target, source) {\n      return helpers.merge(target, source, {\n        merger: helpers._mergerIf\n      });\n    },\n\n    /**\n     * Applies the contents of two or more objects together into the first object.\n     * @param {object} target - The target object in which all objects are merged into.\n     * @param {object} arg1 - Object containing additional properties to merge in target.\n     * @param {object} argN - Additional objects containing properties to merge in target.\n     * @returns {object} The `target` object.\n     */\n    extend: function extend(target) {\n      var setFn = function setFn(value, key) {\n        target[key] = value;\n      };\n\n      for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n        helpers.each(arguments[i], setFn);\n      }\n\n      return target;\n    },\n\n    /**\n     * Basic javascript inheritance based on the model created in Backbone.js\n     */\n    inherits: function inherits(extensions) {\n      var me = this;\n      var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n        return me.apply(this, arguments);\n      };\n\n      var Surrogate = function Surrogate() {\n        this.constructor = ChartElement;\n      };\n\n      Surrogate.prototype = me.prototype;\n      ChartElement.prototype = new Surrogate();\n      ChartElement.extend = helpers.inherits;\n\n      if (extensions) {\n        helpers.extend(ChartElement.prototype, extensions);\n      }\n\n      ChartElement.__super__ = me.prototype;\n      return ChartElement;\n    }\n  };\n  var helpers_core = helpers; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.callback instead.\n   * @function Chart.helpers.callCallback\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.callCallback = helpers.callback;\n  /**\n   * Provided for backward compatibility, use Array.prototype.indexOf instead.\n   * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n   * @function Chart.helpers.indexOf\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.indexOf = function (array, item, fromIndex) {\n    return Array.prototype.indexOf.call(array, item, fromIndex);\n  };\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n   * @function Chart.helpers.getValueOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  helpers.getValueOrDefault = helpers.valueOrDefault;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n   * @function Chart.helpers.getValueAtIndexOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n  /**\n   * Easing functions adapted from Robert Penner's easing equations.\n   * @namespace Chart.helpers.easingEffects\n   * @see http://www.robertpenner.com/easing/\n   */\n\n  var effects = {\n    linear: function linear(t) {\n      return t;\n    },\n    easeInQuad: function easeInQuad(t) {\n      return t * t;\n    },\n    easeOutQuad: function easeOutQuad(t) {\n      return -t * (t - 2);\n    },\n    easeInOutQuad: function easeInOutQuad(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t;\n      }\n\n      return -0.5 * (--t * (t - 2) - 1);\n    },\n    easeInCubic: function easeInCubic(t) {\n      return t * t * t;\n    },\n    easeOutCubic: function easeOutCubic(t) {\n      return (t = t - 1) * t * t + 1;\n    },\n    easeInOutCubic: function easeInOutCubic(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t + 2);\n    },\n    easeInQuart: function easeInQuart(t) {\n      return t * t * t * t;\n    },\n    easeOutQuart: function easeOutQuart(t) {\n      return -((t = t - 1) * t * t * t - 1);\n    },\n    easeInOutQuart: function easeInOutQuart(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t;\n      }\n\n      return -0.5 * ((t -= 2) * t * t * t - 2);\n    },\n    easeInQuint: function easeInQuint(t) {\n      return t * t * t * t * t;\n    },\n    easeOutQuint: function easeOutQuint(t) {\n      return (t = t - 1) * t * t * t * t + 1;\n    },\n    easeInOutQuint: function easeInOutQuint(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t * t * t + 2);\n    },\n    easeInSine: function easeInSine(t) {\n      return -Math.cos(t * (Math.PI / 2)) + 1;\n    },\n    easeOutSine: function easeOutSine(t) {\n      return Math.sin(t * (Math.PI / 2));\n    },\n    easeInOutSine: function easeInOutSine(t) {\n      return -0.5 * (Math.cos(Math.PI * t) - 1);\n    },\n    easeInExpo: function easeInExpo(t) {\n      return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n    },\n    easeOutExpo: function easeOutExpo(t) {\n      return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n    },\n    easeInOutExpo: function easeInOutExpo(t) {\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * Math.pow(2, 10 * (t - 1));\n      }\n\n      return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n    },\n    easeInCirc: function easeInCirc(t) {\n      if (t >= 1) {\n        return t;\n      }\n\n      return -(Math.sqrt(1 - t * t) - 1);\n    },\n    easeOutCirc: function easeOutCirc(t) {\n      return Math.sqrt(1 - (t = t - 1) * t);\n    },\n    easeInOutCirc: function easeInOutCirc(t) {\n      if ((t /= 0.5) < 1) {\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n      }\n\n      return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n    },\n    easeInElastic: function easeInElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    },\n    easeOutElastic: function easeOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n    },\n    easeInOutElastic: function easeInOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if ((t /= 0.5) === 2) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.45;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      if (t < 1) {\n        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n      }\n\n      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n    },\n    easeInBack: function easeInBack(t) {\n      var s = 1.70158;\n      return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack: function easeOutBack(t) {\n      var s = 1.70158;\n      return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack: function easeInOutBack(t) {\n      var s = 1.70158;\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n      }\n\n      return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: function easeInBounce(t) {\n      return 1 - effects.easeOutBounce(1 - t);\n    },\n    easeOutBounce: function easeOutBounce(t) {\n      if (t < 1 / 2.75) {\n        return 7.5625 * t * t;\n      }\n\n      if (t < 2 / 2.75) {\n        return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n      }\n\n      if (t < 2.5 / 2.75) {\n        return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n      }\n\n      return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n    },\n    easeInOutBounce: function easeInOutBounce(t) {\n      if (t < 0.5) {\n        return effects.easeInBounce(t * 2) * 0.5;\n      }\n\n      return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n    }\n  };\n  var helpers_easing = {\n    effects: effects\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n   * @function Chart.helpers.easingEffects\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.easingEffects = effects;\n  var PI = Math.PI;\n  var RAD_PER_DEG = PI / 180;\n  var DOUBLE_PI = PI * 2;\n  var HALF_PI = PI / 2;\n  var QUARTER_PI = PI / 4;\n  var TWO_THIRDS_PI = PI * 2 / 3;\n  /**\n   * @namespace Chart.helpers.canvas\n   */\n\n  var exports$1 = {\n    /**\n     * Clears the entire canvas associated to the given `chart`.\n     * @param {Chart} chart - The chart for which to clear the canvas.\n     */\n    clear: function clear(chart) {\n      chart.ctx.clearRect(0, 0, chart.width, chart.height);\n    },\n\n    /**\n     * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n     * given size (width, height) and the same `radius` for all corners.\n     * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n     * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n     * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n     * @param {number} width - The rectangle's width.\n     * @param {number} height - The rectangle's height.\n     * @param {number} radius - The rounded amount (in pixels) for the four corners.\n     * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n     */\n    roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n      if (radius) {\n        var r = Math.min(radius, height / 2, width / 2);\n        var left = x + r;\n        var top = y + r;\n        var right = x + width - r;\n        var bottom = y + height - r;\n        ctx.moveTo(x, top);\n\n        if (left < right && top < bottom) {\n          ctx.arc(left, top, r, -PI, -HALF_PI);\n          ctx.arc(right, top, r, -HALF_PI, 0);\n          ctx.arc(right, bottom, r, 0, HALF_PI);\n          ctx.arc(left, bottom, r, HALF_PI, PI);\n        } else if (left < right) {\n          ctx.moveTo(left, y);\n          ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n          ctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n        } else if (top < bottom) {\n          ctx.arc(left, top, r, -PI, 0);\n          ctx.arc(left, bottom, r, 0, PI);\n        } else {\n          ctx.arc(left, top, r, -PI, PI);\n        }\n\n        ctx.closePath();\n        ctx.moveTo(x, y);\n      } else {\n        ctx.rect(x, y, width, height);\n      }\n    },\n    drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n      var type, xOffset, yOffset, size, cornerRadius;\n      var rad = (rotation || 0) * RAD_PER_DEG;\n\n      if (style && typeof style === 'object') {\n        type = style.toString();\n\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n          ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n          return;\n        }\n      }\n\n      if (isNaN(radius) || radius <= 0) {\n        return;\n      }\n\n      ctx.beginPath();\n\n      switch (style) {\n        // Default includes circle\n        default:\n          ctx.arc(x, y, radius, 0, DOUBLE_PI);\n          ctx.closePath();\n          break;\n\n        case 'triangle':\n          ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          ctx.closePath();\n          break;\n\n        case 'rectRounded':\n          // NOTE: the rounded rect implementation changed to use `arc` instead of\n          // `quadraticCurveTo` since it generates better results when rect is\n          // almost a circle. 0.516 (instead of 0.5) produces results with visually\n          // closer proportion to the previous impl and it is inscribed in the\n          // circle with `radius`. For more details, see the following PRs:\n          // https://github.com/chartjs/Chart.js/issues/5597\n          // https://github.com/chartjs/Chart.js/issues/5858\n          cornerRadius = radius * 0.516;\n          size = radius - cornerRadius;\n          xOffset = Math.cos(rad + QUARTER_PI) * size;\n          yOffset = Math.sin(rad + QUARTER_PI) * size;\n          ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n          ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n          ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n          ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n          ctx.closePath();\n          break;\n\n        case 'rect':\n          if (!rotation) {\n            size = Math.SQRT1_2 * radius;\n            ctx.rect(x - size, y - size, 2 * size, 2 * size);\n            break;\n          }\n\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'rectRot':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          ctx.closePath();\n          break;\n\n        case 'crossRot':\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'cross':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'star':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          rad += QUARTER_PI;\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'line':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          break;\n\n        case 'dash':\n          ctx.moveTo(x, y);\n          ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n          break;\n      }\n\n      ctx.fill();\n      ctx.stroke();\n    },\n\n    /**\n     * Returns true if the point is inside the rectangle\n     * @param {object} point - The point to test\n     * @param {object} area - The rectangle\n     * @returns {boolean}\n     * @private\n     */\n    _isPointInArea: function _isPointInArea(point, area) {\n      var epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n      return point.x > area.left - epsilon && point.x < area.right + epsilon && point.y > area.top - epsilon && point.y < area.bottom + epsilon;\n    },\n    clipArea: function clipArea(ctx, area) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n      ctx.clip();\n    },\n    unclipArea: function unclipArea(ctx) {\n      ctx.restore();\n    },\n    lineTo: function lineTo(ctx, previous, target, flip) {\n      var stepped = target.steppedLine;\n\n      if (stepped) {\n        if (stepped === 'middle') {\n          var midpoint = (previous.x + target.x) / 2.0;\n          ctx.lineTo(midpoint, flip ? target.y : previous.y);\n          ctx.lineTo(midpoint, flip ? previous.y : target.y);\n        } else if (stepped === 'after' && !flip || stepped !== 'after' && flip) {\n          ctx.lineTo(previous.x, target.y);\n        } else {\n          ctx.lineTo(target.x, previous.y);\n        }\n\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      if (!target.tension) {\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n    }\n  };\n  var helpers_canvas = exports$1; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n   * @namespace Chart.helpers.clear\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.clear = exports$1.clear;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n   * @namespace Chart.helpers.drawRoundedRectangle\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.drawRoundedRectangle = function (ctx) {\n    ctx.beginPath();\n    exports$1.roundedRect.apply(exports$1, arguments);\n  };\n\n  var defaults = {\n    /**\n     * @private\n     */\n    _set: function _set(scope, values) {\n      return helpers_core.merge(this[scope] || (this[scope] = {}), values);\n    }\n  };\n\n  defaults._set('global', {\n    defaultColor: 'rgba(0,0,0,0.1)',\n    defaultFontColor: '#666',\n    defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    defaultFontSize: 12,\n    defaultFontStyle: 'normal',\n    defaultLineHeight: 1.2,\n    showLines: true\n  });\n\n  var core_defaults = defaults;\n  var valueOrDefault = helpers_core.valueOrDefault;\n  /**\n   * Converts the given font object into a CSS font string.\n   * @param {object} font - A font object.\n   * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n   * @private\n   */\n\n  function toFontString(font) {\n    if (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n      return null;\n    }\n\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n  }\n  /**\n   * @alias Chart.helpers.options\n   * @namespace\n   */\n\n\n  var helpers_options = {\n    /**\n     * Converts the given line height `value` in pixels for a specific font `size`.\n     * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n     * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n     * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n     * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n     * @since 2.7.0\n     */\n    toLineHeight: function toLineHeight(value, size) {\n      var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n      if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n      }\n\n      value = +matches[2];\n\n      switch (matches[3]) {\n        case 'px':\n          return value;\n\n        case '%':\n          value /= 100;\n          break;\n\n        default:\n          break;\n      }\n\n      return size * value;\n    },\n\n    /**\n     * Converts the given value into a padding object with pre-computed width/height.\n     * @param {number|object} value - If a number, set the value to all TRBL component,\n     *  else, if and object, use defined properties and sets undefined ones to 0.\n     * @returns {object} The padding values (top, right, bottom, left, width, height)\n     * @since 2.7.0\n     */\n    toPadding: function toPadding(value) {\n      var t, r, b, l;\n\n      if (helpers_core.isObject(value)) {\n        t = +value.top || 0;\n        r = +value.right || 0;\n        b = +value.bottom || 0;\n        l = +value.left || 0;\n      } else {\n        t = r = b = l = +value || 0;\n      }\n\n      return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        height: t + b,\n        width: l + r\n      };\n    },\n\n    /**\n     * Parses font options and returns the font object.\n     * @param {object} options - A object that contains font options to be parsed.\n     * @return {object} The font object.\n     * @todo Support font.* options and renamed to toFont().\n     * @private\n     */\n    _parseFont: function _parseFont(options) {\n      var globalDefaults = core_defaults.global;\n      var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n      var font = {\n        family: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n        lineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n        size: size,\n        style: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n        weight: null,\n        string: ''\n      };\n      font.string = toFontString(font);\n      return font;\n    },\n\n    /**\n     * Evaluates the given `inputs` sequentially and returns the first defined value.\n     * @param {Array} inputs - An array of values, falling back to the last value.\n     * @param {object} [context] - If defined and the current value is a function, the value\n     * is called with `context` as first argument and the result becomes the new input.\n     * @param {number} [index] - If defined and the current value is an array, the value\n     * at `index` become the new input.\n     * @since 2.7.0\n     */\n    resolve: function resolve(inputs, context, index) {\n      var i, ilen, value;\n\n      for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n        value = inputs[i];\n\n        if (value === undefined) {\n          continue;\n        }\n\n        if (context !== undefined && typeof value === 'function') {\n          value = value(context);\n        }\n\n        if (index !== undefined && helpers_core.isArray(value)) {\n          value = value[index];\n        }\n\n        if (value !== undefined) {\n          return value;\n        }\n      }\n    }\n  };\n  var helpers$1 = helpers_core;\n  var easing = helpers_easing;\n  var canvas = helpers_canvas;\n  var options = helpers_options;\n  helpers$1.easing = easing;\n  helpers$1.canvas = canvas;\n  helpers$1.options = options;\n\n  function interpolate(start, view, model, ease) {\n    var keys = Object.keys(model);\n    var i, ilen, key, actual, origin, target, type, c0, c1;\n\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      key = keys[i];\n      target = model[key]; // if a value is added to the model after pivot() has been called, the view\n      // doesn't contain it, so let's initialize the view to the target value.\n\n      if (!view.hasOwnProperty(key)) {\n        view[key] = target;\n      }\n\n      actual = view[key];\n\n      if (actual === target || key[0] === '_') {\n        continue;\n      }\n\n      if (!start.hasOwnProperty(key)) {\n        start[key] = actual;\n      }\n\n      origin = start[key];\n      type = typeof target;\n\n      if (type === typeof origin) {\n        if (type === 'string') {\n          c0 = chartjsColor(origin);\n\n          if (c0.valid) {\n            c1 = chartjsColor(target);\n\n            if (c1.valid) {\n              view[key] = c1.mix(c0, ease).rgbString();\n              continue;\n            }\n          }\n        } else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n          view[key] = origin + (target - origin) * ease;\n          continue;\n        }\n      }\n\n      view[key] = target;\n    }\n  }\n\n  var Element = function Element(configuration) {\n    helpers$1.extend(this, configuration);\n    this.initialize.apply(this, arguments);\n  };\n\n  helpers$1.extend(Element.prototype, {\n    initialize: function initialize() {\n      this.hidden = false;\n    },\n    pivot: function pivot() {\n      var me = this;\n\n      if (!me._view) {\n        me._view = helpers$1.clone(me._model);\n      }\n\n      me._start = {};\n      return me;\n    },\n    transition: function transition(ease) {\n      var me = this;\n      var model = me._model;\n      var start = me._start;\n      var view = me._view; // No animation -> No Transition\n\n      if (!model || ease === 1) {\n        me._view = model;\n        me._start = null;\n        return me;\n      }\n\n      if (!view) {\n        view = me._view = {};\n      }\n\n      if (!start) {\n        start = me._start = {};\n      }\n\n      interpolate(start, view, model, ease);\n      return me;\n    },\n    tooltipPosition: function tooltipPosition() {\n      return {\n        x: this._model.x,\n        y: this._model.y\n      };\n    },\n    hasValue: function hasValue() {\n      return helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n    }\n  });\n  Element.extend = helpers$1.inherits;\n  var core_element = Element;\n  var exports$2 = core_element.extend({\n    chart: null,\n    // the animation associated chart instance\n    currentStep: 0,\n    // the current animation step\n    numSteps: 60,\n    // default number of steps\n    easing: '',\n    // the easing to use for this animation\n    render: null,\n    // render function used by the animation service\n    onAnimationProgress: null,\n    // user specified callback to fire on each step of the animation\n    onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n  });\n  var core_animation = exports$2; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.Animation instead\n   * @prop Chart.Animation#animationObject\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'animationObject', {\n    get: function get() {\n      return this;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart.Animation#chart instead\n   * @prop Chart.Animation#chartInstance\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'chartInstance', {\n    get: function get() {\n      return this.chart;\n    },\n    set: function set(value) {\n      this.chart = value;\n    }\n  });\n\n  core_defaults._set('global', {\n    animation: {\n      duration: 1000,\n      easing: 'easeOutQuart',\n      onProgress: helpers$1.noop,\n      onComplete: helpers$1.noop\n    }\n  });\n\n  var core_animations = {\n    animations: [],\n    request: null,\n\n    /**\n     * @param {Chart} chart - The chart to animate.\n     * @param {Chart.Animation} animation - The animation that we will animate.\n     * @param {number} duration - The animation duration in ms.\n     * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n     */\n    addAnimation: function addAnimation(chart, animation, duration, lazy) {\n      var animations = this.animations;\n      var i, ilen;\n      animation.chart = chart;\n      animation.startTime = Date.now();\n      animation.duration = duration;\n\n      if (!lazy) {\n        chart.animating = true;\n      }\n\n      for (i = 0, ilen = animations.length; i < ilen; ++i) {\n        if (animations[i].chart === chart) {\n          animations[i] = animation;\n          return;\n        }\n      }\n\n      animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n      if (animations.length === 1) {\n        this.requestAnimationFrame();\n      }\n    },\n    cancelAnimation: function cancelAnimation(chart) {\n      var index = helpers$1.findIndex(this.animations, function (animation) {\n        return animation.chart === chart;\n      });\n\n      if (index !== -1) {\n        this.animations.splice(index, 1);\n        chart.animating = false;\n      }\n    },\n    requestAnimationFrame: function requestAnimationFrame() {\n      var me = this;\n\n      if (me.request === null) {\n        // Skip animation frame requests until the active one is executed.\n        // This can happen when processing mouse events, e.g. 'mousemove'\n        // and 'mouseout' events will trigger multiple renders.\n        me.request = helpers$1.requestAnimFrame.call(window, function () {\n          me.request = null;\n          me.startDigest();\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    startDigest: function startDigest() {\n      var me = this;\n      me.advance(); // Do we have more stuff to animate?\n\n      if (me.animations.length > 0) {\n        me.requestAnimationFrame();\n      }\n    },\n\n    /**\n     * @private\n     */\n    advance: function advance() {\n      var animations = this.animations;\n      var animation, chart, numSteps, nextStep;\n      var i = 0; // 1 animation per chart, so we are looping charts here\n\n      while (i < animations.length) {\n        animation = animations[i];\n        chart = animation.chart;\n        numSteps = animation.numSteps; // Make sure that currentStep starts at 1\n        // https://github.com/chartjs/Chart.js/issues/6104\n\n        nextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n        animation.currentStep = Math.min(nextStep, numSteps);\n        helpers$1.callback(animation.render, [chart, animation], chart);\n        helpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n        if (animation.currentStep >= numSteps) {\n          helpers$1.callback(animation.onAnimationComplete, [animation], chart);\n          chart.animating = false;\n          animations.splice(i, 1);\n        } else {\n          ++i;\n        }\n      }\n    }\n  };\n  var resolve = helpers$1.options.resolve;\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers$1.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  var DatasetController = function DatasetController(chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers$1.extend(DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getValueScale: function _getValueScale() {\n      return this.getScaleForId(this._getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScale: function _getIndexScale() {\n      return this.getScaleForId(this._getIndexScaleId());\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers$1.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers$1.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      var getHoverColor = helpers$1.getHoverColor;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n      model.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n      model.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      var count = arguments.length;\n      this.insertElements(this.getDataset().data.length - count, count);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  DatasetController.extend = helpers$1.inherits;\n  var core_datasetController = DatasetController;\n\n  core_defaults._set('global', {\n    elements: {\n      arc: {\n        backgroundColor: core_defaults.global.defaultColor,\n        borderColor: '#fff',\n        borderWidth: 2,\n        borderAlign: 'center'\n      }\n    }\n  });\n\n  var element_arc = core_element.extend({\n    inLabelRange: function inLabelRange(mouseX) {\n      var vm = this._view;\n\n      if (vm) {\n        return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n      }\n\n      return false;\n    },\n    inRange: function inRange(chartX, chartY) {\n      var vm = this._view;\n\n      if (vm) {\n        var pointRelativePosition = helpers$1.getAngleFromPoint(vm, {\n          x: chartX,\n          y: chartY\n        });\n        var angle = pointRelativePosition.angle;\n        var distance = pointRelativePosition.distance; // Sanitise angle range\n\n        var startAngle = vm.startAngle;\n        var endAngle = vm.endAngle;\n\n        while (endAngle < startAngle) {\n          endAngle += 2.0 * Math.PI;\n        }\n\n        while (angle > endAngle) {\n          angle -= 2.0 * Math.PI;\n        }\n\n        while (angle < startAngle) {\n          angle += 2.0 * Math.PI;\n        } // Check if within the range of the open/close angle\n\n\n        var betweenAngles = angle >= startAngle && angle <= endAngle;\n        var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n        return betweenAngles && withinRadius;\n      }\n\n      return false;\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n      var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n      return {\n        x: vm.x + Math.cos(halfAngle) * halfRadius,\n        y: vm.y + Math.sin(halfAngle) * halfRadius\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n      var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n      return {\n        x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n        y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n      };\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var sA = vm.startAngle;\n      var eA = vm.endAngle;\n      var pixelMargin = vm.borderAlign === 'inner' ? 0.33 : 0;\n      var angleMargin;\n      ctx.save();\n      ctx.beginPath();\n      ctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n      ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n      ctx.closePath();\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fill();\n\n      if (vm.borderWidth) {\n        if (vm.borderAlign === 'inner') {\n          // Draw an inner border by cliping the arc and drawing a double-width border\n          // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n          ctx.beginPath();\n          angleMargin = pixelMargin / vm.outerRadius;\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\n          if (vm.innerRadius > pixelMargin) {\n            angleMargin = pixelMargin / vm.innerRadius;\n            ctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n          } else {\n            ctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n          }\n\n          ctx.closePath();\n          ctx.clip();\n          ctx.beginPath();\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n          ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n          ctx.closePath();\n          ctx.lineWidth = vm.borderWidth * 2;\n          ctx.lineJoin = 'round';\n        } else {\n          ctx.lineWidth = vm.borderWidth;\n          ctx.lineJoin = 'bevel';\n        }\n\n        ctx.strokeStyle = vm.borderColor;\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$1 = helpers$1.valueOrDefault;\n  var defaultColor = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      line: {\n        tension: 0.4,\n        backgroundColor: defaultColor,\n        borderWidth: 3,\n        borderColor: defaultColor,\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        capBezierPoints: true,\n        fill: true // do we fill in the area between the line and its base axis\n\n      }\n    }\n  });\n\n  var element_line = core_element.extend({\n    draw: function draw() {\n      var me = this;\n      var vm = me._view;\n      var ctx = me._chart.ctx;\n      var spanGaps = vm.spanGaps;\n\n      var points = me._children.slice(); // clone array\n\n\n      var globalDefaults = core_defaults.global;\n      var globalOptionLineElements = globalDefaults.elements.line;\n      var lastDrawnIndex = -1;\n      var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n      if (me._loop && points.length) {\n        points.push(points[0]);\n      }\n\n      ctx.save(); // Stroke Line Options\n\n      ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n      if (ctx.setLineDash) {\n        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n      }\n\n      ctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n      ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n      ctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n      ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n      ctx.beginPath();\n      lastDrawnIndex = -1;\n\n      for (index = 0; index < points.length; ++index) {\n        current = points[index];\n        previous = helpers$1.previousItem(points, index);\n        currentVM = current._view; // First point moves to it's starting position no matter what\n\n        if (index === 0) {\n          if (!currentVM.skip) {\n            ctx.moveTo(currentVM.x, currentVM.y);\n            lastDrawnIndex = index;\n          }\n        } else {\n          previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n          if (!currentVM.skip) {\n            if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n              // There was a gap and this is the first point after the gap\n              ctx.moveTo(currentVM.x, currentVM.y);\n            } else {\n              // Line to next point\n              helpers$1.canvas.lineTo(ctx, previous._view, current._view);\n            }\n\n            lastDrawnIndex = index;\n          }\n        }\n      }\n\n      ctx.stroke();\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$2 = helpers$1.valueOrDefault;\n  var defaultColor$1 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      point: {\n        radius: 3,\n        pointStyle: 'circle',\n        backgroundColor: defaultColor$1,\n        borderColor: defaultColor$1,\n        borderWidth: 1,\n        // Hover\n        hitRadius: 1,\n        hoverRadius: 4,\n        hoverBorderWidth: 1\n      }\n    }\n  });\n\n  function xRange(mouseX) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n  }\n\n  function yRange(mouseY) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n  }\n\n  var element_point = core_element.extend({\n    inRange: function inRange(mouseX, mouseY) {\n      var vm = this._view;\n      return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n    },\n    inLabelRange: xRange,\n    inXRange: xRange,\n    inYRange: yRange,\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    },\n    getArea: function getArea() {\n      return Math.PI * Math.pow(this._view.radius, 2);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y,\n        padding: vm.radius + vm.borderWidth\n      };\n    },\n    draw: function draw(chartArea) {\n      var vm = this._view;\n      var ctx = this._chart.ctx;\n      var pointStyle = vm.pointStyle;\n      var rotation = vm.rotation;\n      var radius = vm.radius;\n      var x = vm.x;\n      var y = vm.y;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n      if (vm.skip) {\n        return;\n      } // Clipping for Points.\n\n\n      if (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n        ctx.strokeStyle = vm.borderColor || defaultColor;\n        ctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n        ctx.fillStyle = vm.backgroundColor || defaultColor;\n        helpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n      }\n    }\n  });\n  var defaultColor$2 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      rectangle: {\n        backgroundColor: defaultColor$2,\n        borderColor: defaultColor$2,\n        borderSkipped: 'bottom',\n        borderWidth: 0\n      }\n    }\n  });\n\n  function isVertical(vm) {\n    return vm && vm.width !== undefined;\n  }\n  /**\n   * Helper function to get the bounds of the bar regardless of the orientation\n   * @param bar {Chart.Element.Rectangle} the bar\n   * @return {Bounds} bounds of the bar\n   * @private\n   */\n\n\n  function getBarBounds(vm) {\n    var x1, x2, y1, y2, half;\n\n    if (isVertical(vm)) {\n      half = vm.width / 2;\n      x1 = vm.x - half;\n      x2 = vm.x + half;\n      y1 = Math.min(vm.y, vm.base);\n      y2 = Math.max(vm.y, vm.base);\n    } else {\n      half = vm.height / 2;\n      x1 = Math.min(vm.x, vm.base);\n      x2 = Math.max(vm.x, vm.base);\n      y1 = vm.y - half;\n      y2 = vm.y + half;\n    }\n\n    return {\n      left: x1,\n      top: y1,\n      right: x2,\n      bottom: y2\n    };\n  }\n\n  function swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n  }\n\n  function parseBorderSkipped(vm) {\n    var edge = vm.borderSkipped;\n    var res = {};\n\n    if (!edge) {\n      return res;\n    }\n\n    if (vm.horizontal) {\n      if (vm.base > vm.x) {\n        edge = swap(edge, 'left', 'right');\n      }\n    } else if (vm.base < vm.y) {\n      edge = swap(edge, 'bottom', 'top');\n    }\n\n    res[edge] = true;\n    return res;\n  }\n\n  function parseBorderWidth(vm, maxW, maxH) {\n    var value = vm.borderWidth;\n    var skip = parseBorderSkipped(vm);\n    var t, r, b, l;\n\n    if (helpers$1.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      t: skip.top || t < 0 ? 0 : t > maxH ? maxH : t,\n      r: skip.right || r < 0 ? 0 : r > maxW ? maxW : r,\n      b: skip.bottom || b < 0 ? 0 : b > maxH ? maxH : b,\n      l: skip.left || l < 0 ? 0 : l > maxW ? maxW : l\n    };\n  }\n\n  function boundingRects(vm) {\n    var bounds = getBarBounds(vm);\n    var width = bounds.right - bounds.left;\n    var height = bounds.bottom - bounds.top;\n    var border = parseBorderWidth(vm, width / 2, height / 2);\n    return {\n      outer: {\n        x: bounds.left,\n        y: bounds.top,\n        w: width,\n        h: height\n      },\n      inner: {\n        x: bounds.left + border.l,\n        y: bounds.top + border.t,\n        w: width - border.l - border.r,\n        h: height - border.t - border.b\n      }\n    };\n  }\n\n  function _inRange(vm, x, y) {\n    var skipX = x === null;\n    var skipY = y === null;\n    var bounds = !vm || skipX && skipY ? false : getBarBounds(vm);\n    return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n  }\n\n  var element_rectangle = core_element.extend({\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var rects = boundingRects(vm);\n      var outer = rects.outer;\n      var inner = rects.inner;\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n      if (outer.w === inner.w && outer.h === inner.h) {\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(outer.x, outer.y, outer.w, outer.h);\n      ctx.clip();\n      ctx.fillStyle = vm.borderColor;\n      ctx.rect(inner.x, inner.y, inner.w, inner.h);\n      ctx.fill('evenodd');\n      ctx.restore();\n    },\n    height: function height() {\n      var vm = this._view;\n      return vm.base - vm.y;\n    },\n    inRange: function inRange(mouseX, mouseY) {\n      return _inRange(this._view, mouseX, mouseY);\n    },\n    inLabelRange: function inLabelRange(mouseX, mouseY) {\n      var vm = this._view;\n      return isVertical(vm) ? _inRange(vm, mouseX, null) : _inRange(vm, null, mouseY);\n    },\n    inXRange: function inXRange(mouseX) {\n      return _inRange(this._view, mouseX, null);\n    },\n    inYRange: function inYRange(mouseY) {\n      return _inRange(this._view, null, mouseY);\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var x, y;\n\n      if (isVertical(vm)) {\n        x = vm.x;\n        y = (vm.y + vm.base) / 2;\n      } else {\n        x = (vm.x + vm.base) / 2;\n        y = vm.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return isVertical(vm) ? vm.width * Math.abs(vm.y - vm.base) : vm.height * Math.abs(vm.x - vm.base);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    }\n  });\n  var elements = {};\n  var Arc = element_arc;\n  var Line = element_line;\n  var Point = element_point;\n  var Rectangle = element_rectangle;\n  elements.Arc = Arc;\n  elements.Line = Line;\n  elements.Point = Point;\n  elements.Rectangle = Rectangle;\n  var resolve$1 = helpers$1.options.resolve;\n\n  core_defaults._set('bar', {\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }],\n      yAxes: [{\n        type: 'linear'\n      }]\n    }\n  });\n  /**\n   * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n   * @private\n   */\n\n\n  function computeMinSampleSize(scale, pixels) {\n    var min = scale.isHorizontal() ? scale.width : scale.height;\n    var ticks = scale.getTicks();\n    var prev, curr, i, ilen;\n\n    for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n      min = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n    }\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      curr = scale.getPixelForTick(i);\n      min = i > 0 ? Math.min(min, curr - prev) : min;\n      prev = curr;\n    }\n\n    return min;\n  }\n  /**\n   * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n   * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n   * mode currently always generates bars equally sized (until we introduce scriptable options?).\n   * @private\n   */\n\n\n  function computeFitCategoryTraits(index, ruler, options) {\n    var thickness = options.barThickness;\n    var count = ruler.stackCount;\n    var curr = ruler.pixels[index];\n    var size, ratio;\n\n    if (helpers$1.isNullOrUndef(thickness)) {\n      size = ruler.min * options.categoryPercentage;\n      ratio = options.barPercentage;\n    } else {\n      // When bar thickness is enforced, category and bar percentages are ignored.\n      // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n      // and deprecate barPercentage since this value is ignored when thickness is absolute.\n      size = thickness * count;\n      ratio = 1;\n    }\n\n    return {\n      chunk: size / count,\n      ratio: ratio,\n      start: curr - size / 2\n    };\n  }\n  /**\n   * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n   * percentage options are 1), based on the previous and following categories. This mode\n   * generates bars with different widths when data are not evenly spaced.\n   * @private\n   */\n\n\n  function computeFlexCategoryTraits(index, ruler, options) {\n    var pixels = ruler.pixels;\n    var curr = pixels[index];\n    var prev = index > 0 ? pixels[index - 1] : null;\n    var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    var percent = options.categoryPercentage;\n    var start, size;\n\n    if (prev === null) {\n      // first data: its size is double based on the next point or,\n      // if it's also the last data, we use the scale size.\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n\n    if (next === null) {\n      // last data: its size is also double based on the previous point.\n      next = curr + curr - prev;\n    }\n\n    start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    size = Math.abs(next - prev) / 2 * percent;\n    return {\n      chunk: size / ruler.stackCount,\n      ratio: options.barPercentage,\n      start: start\n    };\n  }\n\n  var controller_bar = core_datasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      core_datasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      var options = me._resolveElementOptions(rectangle, index);\n\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderSkipped: options.borderSkipped,\n        borderWidth: options.borderWidth,\n        datasetLabel: dataset.label,\n        label: me.chart.data.labels[index]\n      };\n\n      me._updateElementGeometry(rectangle, index, reset);\n\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    _updateElementGeometry: function _updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n\n      var vscale = me._getValueScale();\n\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {number} [last] - The dataset index\n     * @returns {string[]} The list of stack IDs\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getIndexScale();\n\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {number} [datasetIndex] - The dataset index\n     * @param {string} [name] - The stack name to find\n     * @returns {number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n\n      var scale = me._getIndexScale();\n\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers$1.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n\n      var scale = me._getValueScale();\n\n      var isHorizontal = scale.isHorizontal();\n      var datasets = chart.data.datasets;\n      var value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n      var minBarLength = scale.options.minBarLength;\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller._getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = +scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = head - base;\n\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n        size = minBarLength;\n\n        if (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n          head = base - minBarLength;\n        } else {\n          head = base + minBarLength;\n        }\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers$1.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getValueScale();\n\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers$1.canvas.unclipArea(chart.ctx);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(rectangle, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = rectangle.custom || {};\n      var options = chart.options.elements.rectangle;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderSkipped', 'borderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$1([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    }\n  });\n  var valueOrDefault$3 = helpers$1.valueOrDefault;\n  var resolve$2 = helpers$1.options.resolve;\n\n  core_defaults._set('bubble', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        // bubble should probably use a linear scale by default\n        position: 'bottom',\n        id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n      }],\n      yAxes: [{\n        type: 'linear',\n        position: 'left',\n        id: 'y-axis-0'\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          // Title doesn't make sense for scatter since we format the data as a point\n          return '';\n        },\n        label: function label(item, data) {\n          var datasetLabel = data.datasets[item.datasetIndex].label || '';\n          var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n          return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n        }\n      }\n    }\n  });\n\n  var controller_bubble = core_datasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers$1.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$2([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve$2([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n  var resolve$3 = helpers$1.options.resolve;\n  var valueOrDefault$4 = helpers$1.valueOrDefault;\n\n  core_defaults._set('doughnut', {\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    hover: {\n      mode: 'single'\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc && arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n          if (meta.data[index]) {\n            meta.data[index].hidden = !meta.data[index].hidden;\n          }\n        }\n\n        chart.update();\n      }\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutoutPercentage: 50,\n    // The rotation of the chart, where the first data arc begins.\n    rotation: Math.PI * -0.5,\n    // The total circumference of the chart.\n    circumference: Math.PI * 2.0,\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem, data) {\n          var dataLabel = data.labels[tooltipItem.index];\n          var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n          if (helpers$1.isArray(dataLabel)) {\n            // show value on first line of multiline label\n            // need to clone because we are changing the value\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n      }\n    }\n  });\n\n  var controller_doughnut = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var availableWidth = chartArea.right - chartArea.left;\n      var availableHeight = chartArea.bottom - chartArea.top;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var arcs = meta.data;\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference;\n\n      var chartWeight = me._getRingWeight(me.index);\n\n      var i, ilen; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth();\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers$1.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n      if (!arcs) {\n        // Find the outmost visible dataset\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n\n            if (i !== me.index) {\n              controller = meta.controller;\n            }\n\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arc = arcs[i];\n        options = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\n        if (options.borderAlign !== 'inner') {\n          borderWidth = options.borderWidth;\n          hoverWidth = options.hoverBorderWidth;\n          max = borderWidth > max ? borderWidth : max;\n          max = hoverWidth > max ? hoverWidth : max;\n        }\n      }\n\n      return max;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$3([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n     * @private\n     */\n    _getRingWeightOffset: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    },\n\n    /**\n     * @private\n     */\n    _getRingWeight: function _getRingWeight(dataSetIndex) {\n      return Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n    },\n\n    /**\n     * Returns the sum of all visibile data set weights.  This value can be 0.\n     * @private\n     */\n    _getVisibleDatasetWeightTotal: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length);\n    }\n  });\n\n  core_defaults._set('horizontalBar', {\n    hover: {\n      mode: 'index',\n      axis: 'y'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        position: 'bottom'\n      }],\n      yAxes: [{\n        type: 'category',\n        position: 'left',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }]\n    },\n    elements: {\n      rectangle: {\n        borderSkipped: 'left'\n      }\n    },\n    tooltips: {\n      mode: 'index',\n      axis: 'y'\n    }\n  });\n\n  var controller_horizontalBar = controller_bar.extend({\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n  var valueOrDefault$5 = helpers$1.valueOrDefault;\n  var resolve$4 = helpers$1.options.resolve;\n  var isPointInArea = helpers$1.canvas._isPointInArea;\n\n  core_defaults._set('line', {\n    showLines: true,\n    spanGaps: false,\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        id: 'x-axis-0'\n      }],\n      yAxes: [{\n        type: 'linear',\n        id: 'y-axis-0'\n      }]\n    }\n  });\n\n  function lineEnabled(dataset, options) {\n    return valueOrDefault$5(dataset.showLine, options.showLines);\n  }\n\n  var controller_line = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.getScaleForId(meta.yAxisID);\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, me.chart.options);\n      var i, ilen; // Update Line\n\n      if (showLine) {\n        // Compatibility: If the properties are defined with only the old name, use those values\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = me._resolveLineOptions(line);\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var lineModel = meta.dataset._model;\n      var x, y;\n\n      var options = me._resolvePointOptions(point, index);\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n        steppedLine: lineModel ? lineModel.steppedLine : false,\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options;\n      var elementOptions = options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill', 'cubicInterpolationMode'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[key], elementOptions[key]]);\n      } // The default behavior of lines is to break at null values, according\n      // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n      // This option gives lines the ability to span gaps\n\n\n      values.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n      values.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n      values.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n      return values;\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var lineModel = meta.dataset._model;\n      var area = chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (lineModel.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (lineModel.cubicInterpolationMode === 'monotone') {\n        helpers$1.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i)._model, model, helpers$1.nextItem(points, i)._model, lineModel.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n\n          if (isPointInArea(model, area)) {\n            if (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n              model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n              model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n            }\n\n            if (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n              model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n              model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n            }\n          }\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers$1.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers$1.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n    }\n  });\n  var resolve$5 = helpers$1.options.resolve;\n\n  core_defaults._set('polarArea', {\n    scale: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      gridLines: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    // Boolean - Whether to animate the rotation of the chart\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    startAngle: -0.5 * Math.PI,\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i);\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n\n        chart.update();\n      }\n    },\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item, data) {\n          return data.labels[item.index] + ': ' + item.yLabel;\n        }\n      }\n    }\n  });\n\n  var controller_polarArea = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var arcs = meta.data;\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max(minSize / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      });\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers$1.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      var valueOrDefault = helpers$1.valueOrDefault;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$5([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return resolve$5([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n\n  core_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\n\n  core_defaults._set('pie', {\n    cutoutPercentage: 0\n  }); // Pie charts are Doughnut chart with different defaults\n\n\n  var controller_pie = controller_doughnut;\n  var valueOrDefault$6 = helpers$1.valueOrDefault;\n  var resolve$6 = helpers$1.options.resolve;\n\n  core_defaults._set('radar', {\n    scale: {\n      type: 'radialLinear'\n    },\n    elements: {\n      line: {\n        tension: 0 // no bezier in radar\n\n      }\n    }\n  });\n\n  var controller_radar = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.chart.scale;\n      var dataset = me.getDataset();\n      var i, ilen; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      } // Utility\n\n\n      line._scale = scale;\n      line._datasetIndex = me.index; // Data\n\n      line._children = points;\n      line._loop = true; // Model\n\n      line._model = me._resolveLineOptions(line);\n      line.pivot(); // Update Points\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      } // Update bezier control points\n\n\n      me.updateBezierControlPoints(); // Now pivot the point for animation\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n      var options = me._resolvePointOptions(point, index);\n\n      var lineModel = me.getMeta().dataset._model;\n\n      var x = reset ? scale.xCenter : pointPosition.x;\n      var y = reset ? scale.yCenter : pointPosition.y; // Utility\n\n      point._scale = scale;\n      point._options = options;\n      point._datasetIndex = me.index;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        // value not used in dataset scale, but we want a consistent API between scales\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[key], options[key]]);\n      }\n\n      values.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n      return values;\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints;\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        model = points[i]._model;\n        controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i, true)._model, model, helpers$1.nextItem(points, i, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n        model.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n        model.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n        model.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n      }\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n    }\n  });\n\n  core_defaults._set('scatter', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        id: 'x-axis-1',\n        // need an ID so datasets can reference the scale\n        type: 'linear',\n        // scatter should not use a category axis\n        position: 'bottom'\n      }],\n      yAxes: [{\n        id: 'y-axis-1',\n        type: 'linear',\n        position: 'left'\n      }]\n    },\n    showLines: false,\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return ''; // doesn't make sense for scatter since data are formatted as a point\n        },\n        label: function label(item) {\n          return '(' + item.xLabel + ', ' + item.yLabel + ')';\n        }\n      }\n    }\n  }); // Scatter charts use line controllers\n\n\n  var controller_scatter = controller_line; // NOTE export a map in which the key represents the controller type, not\n  // the class, and so must be CamelCase in order to be correctly retrieved\n  // by the controller in core.controller.js (`controllers[meta.type]`).\n\n  var controllers = {\n    bar: controller_bar,\n    bubble: controller_bubble,\n    doughnut: controller_doughnut,\n    horizontalBar: controller_horizontalBar,\n    line: controller_line,\n    polarArea: controller_polarArea,\n    pie: controller_pie,\n    radar: controller_radar,\n    scatter: controller_scatter\n  };\n  /**\n   * Helper function to get relative position for an event\n   * @param {Event|IEvent} event - The event to get the position for\n   * @param {Chart} chart - The chart\n   * @returns {object} the event position\n   */\n\n  function getRelativePosition(e, chart) {\n    if (e.native) {\n      return {\n        x: e.x,\n        y: e.y\n      };\n    }\n\n    return helpers$1.getRelativePosition(e, chart);\n  }\n  /**\n   * Helper function to traverse all of the visible elements in the chart\n   * @param {Chart} chart - the chart\n   * @param {function} handler - the callback to execute for each visible item\n   */\n\n\n  function parseVisibleItems(chart, handler) {\n    var datasets = chart.data.datasets;\n    var meta, i, j, ilen, jlen;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      if (!chart.isDatasetVisible(i)) {\n        continue;\n      }\n\n      meta = chart.getDatasetMeta(i);\n\n      for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n        var element = meta.data[j];\n\n        if (!element._view.skip) {\n          handler(element);\n        }\n      }\n    }\n  }\n  /**\n   * Helper function to get the items that intersect the event position\n   * @param {ChartElement[]} items - elements to filter\n   * @param {object} position - the point to be nearest to\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getIntersectItems(chart, position) {\n    var elements = [];\n    parseVisibleItems(chart, function (element) {\n      if (element.inRange(position.x, position.y)) {\n        elements.push(element);\n      }\n    });\n    return elements;\n  }\n  /**\n   * Helper function to get the items nearest to the event position considering all visible items in teh chart\n   * @param {Chart} chart - the chart to look at elements from\n   * @param {object} position - the point to be nearest to\n   * @param {boolean} intersect - if true, only consider items that intersect the position\n   * @param {function} distanceMetric - function to provide the distance between points\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getNearestItems(chart, position, intersect, distanceMetric) {\n    var minDistance = Number.POSITIVE_INFINITY;\n    var nearestItems = [];\n    parseVisibleItems(chart, function (element) {\n      if (intersect && !element.inRange(position.x, position.y)) {\n        return;\n      }\n\n      var center = element.getCenterPoint();\n      var distance = distanceMetric(position, center);\n\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n    });\n    return nearestItems;\n  }\n  /**\n   * Get a distance metric function for two points based on the\n   * axis mode setting\n   * @param {string} axis - the axis mode. x|y|xy\n   */\n\n\n  function getDistanceMetricForAxis(axis) {\n    var useX = axis.indexOf('x') !== -1;\n    var useY = axis.indexOf('y') !== -1;\n    return function (pt1, pt2) {\n      var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n      var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n  }\n\n  function indexMode(chart, e, options) {\n    var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n    options.axis = options.axis || 'x';\n    var distanceMetric = getDistanceMetricForAxis(options.axis);\n    var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n    var elements = [];\n\n    if (!items.length) {\n      return [];\n    }\n\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      if (chart.isDatasetVisible(datasetIndex)) {\n        var meta = chart.getDatasetMeta(datasetIndex);\n        var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n        if (element && !element._view.skip) {\n          elements.push(element);\n        }\n      }\n    });\n    return elements;\n  }\n  /**\n   * @interface IInteractionOptions\n   */\n\n  /**\n   * If true, only consider items that intersect the point\n   * @name IInterfaceOptions#boolean\n   * @type Boolean\n   */\n\n  /**\n   * Contains interaction related functions\n   * @namespace Chart.Interaction\n   */\n\n\n  var core_interaction = {\n    // Helper function for different modes\n    modes: {\n      single: function single(chart, e) {\n        var position = getRelativePosition(e, chart);\n        var elements = [];\n        parseVisibleItems(chart, function (element) {\n          if (element.inRange(position.x, position.y)) {\n            elements.push(element);\n            return elements;\n          }\n        });\n        return elements.slice(0, 1);\n      },\n\n      /**\n       * @function Chart.Interaction.modes.label\n       * @deprecated since version 2.4.0\n       * @todo remove at version 3\n       * @private\n       */\n      label: indexMode,\n\n      /**\n       * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n       * @function Chart.Interaction.modes.index\n       * @since v2.4.0\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      index: indexMode,\n\n      /**\n       * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect is false, we find the nearest item and return the items in that dataset\n       * @function Chart.Interaction.modes.dataset\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      dataset: function dataset(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n        if (items.length > 0) {\n          items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n        }\n\n        return items;\n      },\n\n      /**\n       * @function Chart.Interaction.modes.x-axis\n       * @deprecated since version 2.4.0. Use index mode and intersect == true\n       * @todo remove at version 3\n       * @private\n       */\n      'x-axis': function xAxis(chart, e) {\n        return indexMode(chart, e, {\n          intersect: false\n        });\n      },\n\n      /**\n       * Point mode returns all elements that hit test based on the event position\n       * of the event\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      point: function point(chart, e) {\n        var position = getRelativePosition(e, chart);\n        return getIntersectItems(chart, position);\n      },\n\n      /**\n       * nearest mode returns the element closest to the point\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      nearest: function nearest(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        return getNearestItems(chart, position, options.intersect, distanceMetric);\n      },\n\n      /**\n       * x mode returns the elements that hit-test at the current x coordinate\n       * @function Chart.Interaction.modes.x\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      x: function x(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inXRange(position.x)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      },\n\n      /**\n       * y mode returns the elements that hit-test at the current y coordinate\n       * @function Chart.Interaction.modes.y\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      y: function y(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inYRange(position.y)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      }\n    }\n  };\n\n  function filterByPosition(array, position) {\n    return helpers$1.where(array, function (v) {\n      return v.position === position;\n    });\n  }\n\n  function sortByWeight(array, reverse) {\n    array.forEach(function (v, i) {\n      v._tmpIndex_ = i;\n      return v;\n    });\n    array.sort(function (a, b) {\n      var v0 = reverse ? b : a;\n      var v1 = reverse ? a : b;\n      return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n    });\n    array.forEach(function (v) {\n      delete v._tmpIndex_;\n    });\n  }\n\n  function findMaxPadding(boxes) {\n    var top = 0;\n    var left = 0;\n    var bottom = 0;\n    var right = 0;\n    helpers$1.each(boxes, function (box) {\n      if (box.getPadding) {\n        var boxPadding = box.getPadding();\n        top = Math.max(top, boxPadding.top);\n        left = Math.max(left, boxPadding.left);\n        bottom = Math.max(bottom, boxPadding.bottom);\n        right = Math.max(right, boxPadding.right);\n      }\n    });\n    return {\n      top: top,\n      left: left,\n      bottom: bottom,\n      right: right\n    };\n  }\n\n  function addSizeByPosition(boxes, size) {\n    helpers$1.each(boxes, function (box) {\n      size[box.position] += box.isHorizontal() ? box.height : box.width;\n    });\n  }\n\n  core_defaults._set('global', {\n    layout: {\n      padding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    }\n  });\n  /**\n   * @interface ILayoutItem\n   * @prop {string} position - The position of the item in the chart layout. Possible values are\n   * 'left', 'top', 'right', 'bottom', and 'chartArea'\n   * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n   * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n   * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n   * @prop {function} update - Takes two parameters: width and height. Returns size of item\n   * @prop {function} getPadding -  Returns an object with padding on the edges\n   * @prop {number} width - Width of item. Must be valid after update()\n   * @prop {number} height - Height of item. Must be valid after update()\n   * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n   */\n  // The layout service is very self explanatory.  It's responsible for the layout within a chart.\n  // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n  // It is this service's responsibility of carrying out that layout.\n\n\n  var core_layouts = {\n    defaults: {},\n\n    /**\n     * Register a box to a chart.\n     * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n     * @param {Chart} chart - the chart to use\n     * @param {ILayoutItem} item - the item to add to be layed out\n     */\n    addBox: function addBox(chart, item) {\n      if (!chart.boxes) {\n        chart.boxes = [];\n      } // initialize item with default values\n\n\n      item.fullWidth = item.fullWidth || false;\n      item.position = item.position || 'top';\n      item.weight = item.weight || 0;\n      chart.boxes.push(item);\n    },\n\n    /**\n     * Remove a layoutItem from a chart\n     * @param {Chart} chart - the chart to remove the box from\n     * @param {ILayoutItem} layoutItem - the item to remove from the layout\n     */\n    removeBox: function removeBox(chart, layoutItem) {\n      var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n      if (index !== -1) {\n        chart.boxes.splice(index, 1);\n      }\n    },\n\n    /**\n     * Sets (or updates) options on the given `item`.\n     * @param {Chart} chart - the chart in which the item lives (or will be added to)\n     * @param {ILayoutItem} item - the item to configure with the given options\n     * @param {object} options - the new item options.\n     */\n    configure: function configure(chart, item, options) {\n      var props = ['fullWidth', 'position', 'weight'];\n      var ilen = props.length;\n      var i = 0;\n      var prop;\n\n      for (; i < ilen; ++i) {\n        prop = props[i];\n\n        if (options.hasOwnProperty(prop)) {\n          item[prop] = options[prop];\n        }\n      }\n    },\n\n    /**\n     * Fits boxes of the given chart into the given size by having each box measure itself\n     * then running a fitting algorithm\n     * @param {Chart} chart - the chart\n     * @param {number} width - the width to fit into\n     * @param {number} height - the height to fit into\n     */\n    update: function update(chart, width, height) {\n      if (!chart) {\n        return;\n      }\n\n      var layoutOptions = chart.options.layout || {};\n      var padding = helpers$1.options.toPadding(layoutOptions.padding);\n      var leftPadding = padding.left;\n      var rightPadding = padding.right;\n      var topPadding = padding.top;\n      var bottomPadding = padding.bottom;\n      var leftBoxes = filterByPosition(chart.boxes, 'left');\n      var rightBoxes = filterByPosition(chart.boxes, 'right');\n      var topBoxes = filterByPosition(chart.boxes, 'top');\n      var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n      var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n      sortByWeight(leftBoxes, true);\n      sortByWeight(rightBoxes, false);\n      sortByWeight(topBoxes, true);\n      sortByWeight(bottomBoxes, false);\n      var verticalBoxes = leftBoxes.concat(rightBoxes);\n      var horizontalBoxes = topBoxes.concat(bottomBoxes);\n      var outerBoxes = verticalBoxes.concat(horizontalBoxes); // Essentially we now have any number of boxes on each of the 4 sides.\n      // Our canvas looks like the following.\n      // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n      // B1 is the bottom axis\n      // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n      // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n      // an error will be thrown.\n      //\n      // |----------------------------------------------------|\n      // |                  T1 (Full Width)                   |\n      // |----------------------------------------------------|\n      // |    |    |                 T2                  |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    | C1 |                           | C2 |    |\n      // |    |    |----|                           |----|    |\n      // |    |    |                                     |    |\n      // | L1 | L2 |           ChartArea (C0)            | R1 |\n      // |    |    |                                     |    |\n      // |    |    |----|                           |----|    |\n      // |    |    | C3 |                           | C4 |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    |                 B1                  |    |\n      // |----------------------------------------------------|\n      // |                  B2 (Full Width)                   |\n      // |----------------------------------------------------|\n      //\n      // What we do to find the best sizing, we do the following\n      // 1. Determine the minimum size of the chart area.\n      // 2. Split the remaining width equally between each vertical axis\n      // 3. Split the remaining height equally between each horizontal axis\n      // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n      // 5. Adjust the sizes of each axis based on it's minimum reported size.\n      // 6. Refit each axis\n      // 7. Position each axis in the final location\n      // 8. Tell the chart the final location of the chart area\n      // 9. Tell any axes that overlay the chart area the positions of the chart area\n      // Step 1\n\n      var chartWidth = width - leftPadding - rightPadding;\n      var chartHeight = height - topPadding - bottomPadding;\n      var chartAreaWidth = chartWidth / 2; // min 50%\n      // Step 2\n\n      var verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length; // Step 3\n      // TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n      // var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n      // Step 4\n\n      var maxChartAreaWidth = chartWidth;\n      var maxChartAreaHeight = chartHeight;\n      var outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      var minBoxSizes = [];\n      var maxPadding;\n\n      function getMinimumBoxSize(box) {\n        var minSize;\n        var isHorizontal = box.isHorizontal();\n\n        if (isHorizontal) {\n          minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n          maxChartAreaHeight -= minSize.height;\n        } else {\n          minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n          maxChartAreaWidth -= minSize.width;\n        }\n\n        minBoxSizes.push({\n          horizontal: isHorizontal,\n          width: minSize.width,\n          box: box\n        });\n      }\n\n      helpers$1.each(outerBoxes, getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n      maxPadding = findMaxPadding(outerBoxes); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n      // be if the axes are drawn at their minimum sizes.\n      // Steps 5 & 6\n      // Function to fit a box\n\n      function fitBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minBox) {\n          return minBox.box === box;\n        });\n\n        if (minBoxSize) {\n          if (minBoxSize.horizontal) {\n            var scaleMargin = {\n              left: Math.max(outerBoxSizes.left, maxPadding.left),\n              right: Math.max(outerBoxSizes.right, maxPadding.right),\n              top: 0,\n              bottom: 0\n            }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n            // on the margin. Sometimes they need to increase in size slightly\n\n            box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n          } else {\n            box.update(minBoxSize.width, maxChartAreaHeight);\n          }\n        }\n      } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n      helpers$1.each(verticalBoxes, fitBox);\n      addSizeByPosition(verticalBoxes, outerBoxSizes); // Set the Left and Right margins for the horizontal boxes\n\n      helpers$1.each(horizontalBoxes, fitBox);\n      addSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n      function finalFitVerticalBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minSize) {\n          return minSize.box === box;\n        });\n        var scaleMargin = {\n          left: 0,\n          right: 0,\n          top: outerBoxSizes.top,\n          bottom: outerBoxSizes.bottom\n        };\n\n        if (minBoxSize) {\n          box.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n        }\n      } // Let the left layout know the final margin\n\n\n      helpers$1.each(verticalBoxes, finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n      outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      addSizeByPosition(outerBoxes, outerBoxSizes); // We may be adding some padding to account for rotated x axis labels\n\n      var leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n      outerBoxSizes.left += leftPaddingAddition;\n      outerBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n      var topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n      outerBoxSizes.top += topPaddingAddition;\n      outerBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n      // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n      // without calling `fit` again\n\n      var newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n      var newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n      if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n        helpers$1.each(verticalBoxes, function (box) {\n          box.height = newMaxChartAreaHeight;\n        });\n        helpers$1.each(horizontalBoxes, function (box) {\n          if (!box.fullWidth) {\n            box.width = newMaxChartAreaWidth;\n          }\n        });\n        maxChartAreaHeight = newMaxChartAreaHeight;\n        maxChartAreaWidth = newMaxChartAreaWidth;\n      } // Step 7 - Position the boxes\n\n\n      var left = leftPadding + leftPaddingAddition;\n      var top = topPadding + topPaddingAddition;\n\n      function placeBox(box) {\n        if (box.isHorizontal()) {\n          box.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n          box.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n          box.top = top;\n          box.bottom = top + box.height; // Move to next point\n\n          top = box.bottom;\n        } else {\n          box.left = left;\n          box.right = left + box.width;\n          box.top = outerBoxSizes.top;\n          box.bottom = outerBoxSizes.top + maxChartAreaHeight; // Move to next point\n\n          left = box.right;\n        }\n      }\n\n      helpers$1.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n      left += maxChartAreaWidth;\n      top += maxChartAreaHeight;\n      helpers$1.each(rightBoxes, placeBox);\n      helpers$1.each(bottomBoxes, placeBox); // Step 8\n\n      chart.chartArea = {\n        left: outerBoxSizes.left,\n        top: outerBoxSizes.top,\n        right: outerBoxSizes.left + maxChartAreaWidth,\n        bottom: outerBoxSizes.top + maxChartAreaHeight\n      }; // Step 9\n\n      helpers$1.each(chartAreaBoxes, function (box) {\n        box.left = chart.chartArea.left;\n        box.top = chart.chartArea.top;\n        box.right = chart.chartArea.right;\n        box.bottom = chart.chartArea.bottom;\n        box.update(maxChartAreaWidth, maxChartAreaHeight);\n      });\n    }\n  };\n  /**\n   * Platform fallback implementation (minimal).\n   * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n   */\n\n  var platform_basic = {\n    acquireContext: function acquireContext(item) {\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      }\n\n      return item && item.getContext('2d') || null;\n    }\n  };\n  var platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n  var platform_dom$1 =\n  /*#__PURE__*/\n  Object.freeze({\n    default: platform_dom\n  });\n\n  function getCjsExportFromNamespace(n) {\n    return n && n.default || n;\n  }\n\n  var stylesheet = getCjsExportFromNamespace(platform_dom$1);\n  var EXPANDO_KEY = '$chartjs';\n  var CSS_PREFIX = 'chartjs-';\n  var CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\n  var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\n  var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\n  var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n  /**\n   * DOM event types -> Chart.js event types.\n   * Note: only events with different types are mapped.\n   * @see https://developer.mozilla.org/en-US/docs/Web/Events\n   */\n\n  var EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n  };\n  /**\n   * The \"used\" size is the final value of a dimension property after all calculations have\n   * been performed. This method uses the computed style of `element` but returns undefined\n   * if the computed style is not expressed in pixels. That can happen in some cases where\n   * `element` has a size relative to its parent and this last one is not yet displayed,\n   * for example because of `display: none` on a parent node.\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n   * @returns {number} Size in pixels or undefined if unknown.\n   */\n\n  function readUsedSize(element, property) {\n    var value = helpers$1.getStyle(element, property);\n    var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? Number(matches[1]) : undefined;\n  }\n  /**\n   * Initializes the canvas style and render size without modifying the canvas display size,\n   * since responsiveness is handled by the controller.resize() method. The config is used\n   * to determine the aspect ratio to apply in case no explicit height has been specified.\n   */\n\n\n  function initCanvas(canvas, config) {\n    var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n    // returns null or '' if no explicit value has been set to the canvas attribute.\n\n    var renderHeight = canvas.getAttribute('height');\n    var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n    canvas[EXPANDO_KEY] = {\n      initial: {\n        height: renderHeight,\n        width: renderWidth,\n        style: {\n          display: style.display,\n          height: style.height,\n          width: style.width\n        }\n      }\n    }; // Force canvas to display as block to avoid extra space caused by inline\n    // elements, which would interfere with the responsive resize process.\n    // https://github.com/chartjs/Chart.js/issues/2538\n\n    style.display = style.display || 'block';\n\n    if (renderWidth === null || renderWidth === '') {\n      var displayWidth = readUsedSize(canvas, 'width');\n\n      if (displayWidth !== undefined) {\n        canvas.width = displayWidth;\n      }\n    }\n\n    if (renderHeight === null || renderHeight === '') {\n      if (canvas.style.height === '') {\n        // If no explicit render height and style height, let's apply the aspect ratio,\n        // which one can be specified by the user but also by charts as default option\n        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n        canvas.height = canvas.width / (config.options.aspectRatio || 2);\n      } else {\n        var displayHeight = readUsedSize(canvas, 'height');\n\n        if (displayWidth !== undefined) {\n          canvas.height = displayHeight;\n        }\n      }\n    }\n\n    return canvas;\n  }\n  /**\n   * Detects support for options object argument in addEventListener.\n   * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n   * @private\n   */\n\n\n  var supportsEventListenerOptions = function () {\n    var supports = false;\n\n    try {\n      var options = Object.defineProperty({}, 'passive', {\n        // eslint-disable-next-line getter-return\n        get: function get() {\n          supports = true;\n        }\n      });\n      window.addEventListener('e', null, options);\n    } catch (e) {// continue regardless of error\n    }\n\n    return supports;\n  }(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n  // https://github.com/chartjs/Chart.js/issues/4287\n\n\n  var eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n  } : false;\n\n  function addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n\n  function removeListener(node, type, listener) {\n    node.removeEventListener(type, listener, eventListenerOptions);\n  }\n\n  function createEvent(type, chart, x, y, nativeEvent) {\n    return {\n      type: type,\n      chart: chart,\n      native: nativeEvent || null,\n      x: x !== undefined ? x : null,\n      y: y !== undefined ? y : null\n    };\n  }\n\n  function fromNativeEvent(event, chart) {\n    var type = EVENT_TYPES[event.type] || event.type;\n    var pos = helpers$1.getRelativePosition(event, chart);\n    return createEvent(type, chart, pos.x, pos.y, event);\n  }\n\n  function throttled(fn, thisArg) {\n    var ticking = false;\n    var args = [];\n    return function () {\n      args = Array.prototype.slice.call(arguments);\n      thisArg = thisArg || this;\n\n      if (!ticking) {\n        ticking = true;\n        helpers$1.requestAnimFrame.call(window, function () {\n          ticking = false;\n          fn.apply(thisArg, args);\n        });\n      }\n    };\n  }\n\n  function createDiv(cls) {\n    var el = document.createElement('div');\n    el.className = cls || '';\n    return el;\n  } // Implementation based on https://github.com/marcj/css-element-queries\n\n\n  function createResizer(handler) {\n    var maxSize = 1000000; // NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n    // https://github.com/chartjs/Chart.js/issues/5902\n\n    var resizer = createDiv(CSS_SIZE_MONITOR);\n    var expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n    var shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n    expand.appendChild(createDiv());\n    shrink.appendChild(createDiv());\n    resizer.appendChild(expand);\n    resizer.appendChild(shrink);\n\n    resizer._reset = function () {\n      expand.scrollLeft = maxSize;\n      expand.scrollTop = maxSize;\n      shrink.scrollLeft = maxSize;\n      shrink.scrollTop = maxSize;\n    };\n\n    var onScroll = function onScroll() {\n      resizer._reset();\n\n      handler();\n    };\n\n    addListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n    addListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n    return resizer;\n  } // https://davidwalsh.name/detect-node-insertion\n\n\n  function watchForRender(node, handler) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n    var proxy = expando.renderProxy = function (e) {\n      if (e.animationName === CSS_RENDER_ANIMATION) {\n        handler();\n      }\n    };\n\n    helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n      addListener(node, type, proxy);\n    }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n    // is removed then added back immediately (same animation frame?). Accessing the\n    // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n    // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n    // https://github.com/chartjs/Chart.js/issues/4737\n\n    expando.reflow = !!node.offsetParent;\n    node.classList.add(CSS_RENDER_MONITOR);\n  }\n\n  function unwatchForRender(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var proxy = expando.renderProxy;\n\n    if (proxy) {\n      helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n        removeListener(node, type, proxy);\n      });\n      delete expando.renderProxy;\n    }\n\n    node.classList.remove(CSS_RENDER_MONITOR);\n  }\n\n  function addResizeListener(node, listener, chart) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n    var resizer = expando.resizer = createResizer(throttled(function () {\n      if (expando.resizer) {\n        var container = chart.options.maintainAspectRatio && node.parentNode;\n        var w = container ? container.clientWidth : 0;\n        listener(createEvent('resize', chart));\n\n        if (container && container.clientWidth < w && chart.canvas) {\n          // If the container size shrank during chart resize, let's assume\n          // scrollbar appeared. So we resize again with the scrollbar visible -\n          // effectively making chart smaller and the scrollbar hidden again.\n          // Because we are inside `throttled`, and currently `ticking`, scroll\n          // events are ignored during this whole 2 resize process.\n          // If we assumed wrong and something else happened, we are resizing\n          // twice in a frame (potential performance issue)\n          listener(createEvent('resize', chart));\n        }\n      }\n    })); // The resizer needs to be attached to the node parent, so we first need to be\n    // sure that `node` is attached to the DOM before injecting the resizer element.\n\n    watchForRender(node, function () {\n      if (expando.resizer) {\n        var container = node.parentNode;\n\n        if (container && container !== resizer.parentNode) {\n          container.insertBefore(resizer, container.firstChild);\n        } // The container size might have changed, let's reset the resizer state.\n\n\n        resizer._reset();\n      }\n    });\n  }\n\n  function removeResizeListener(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var resizer = expando.resizer;\n    delete expando.resizer;\n    unwatchForRender(node);\n\n    if (resizer && resizer.parentNode) {\n      resizer.parentNode.removeChild(resizer);\n    }\n  }\n\n  function injectCSS(platform, css) {\n    // https://stackoverflow.com/q/3922139\n    var style = platform._style || document.createElement('style');\n\n    if (!platform._style) {\n      platform._style = style;\n      css = '/* Chart.js */\\n' + css;\n      style.setAttribute('type', 'text/css');\n      document.getElementsByTagName('head')[0].appendChild(style);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n\n  var platform_dom$2 = {\n    /**\n     * When `true`, prevents the automatic injection of the stylesheet required to\n     * correctly detect when the chart is added to the DOM and then resized. This\n     * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n     * to be manually imported to make this library compatible with any CSP.\n     * See https://github.com/chartjs/Chart.js/issues/5208\n     */\n    disableCSSInjection: false,\n\n    /**\n     * This property holds whether this platform is enabled for the current environment.\n     * Currently used by platform.js to select the proper implementation.\n     * @private\n     */\n    _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n    /**\n     * @private\n     */\n    _ensureLoaded: function _ensureLoaded() {\n      if (this._loaded) {\n        return;\n      }\n\n      this._loaded = true; // https://github.com/chartjs/Chart.js/issues/5208\n\n      if (!this.disableCSSInjection) {\n        injectCSS(this, stylesheet);\n      }\n    },\n    acquireContext: function acquireContext(item, config) {\n      if (typeof item === 'string') {\n        item = document.getElementById(item);\n      } else if (item.length) {\n        // Support for array based queries (such as jQuery)\n        item = item[0];\n      }\n\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n      // method, for example: https://github.com/kkapsner/CanvasBlocker\n      // https://github.com/chartjs/Chart.js/issues/2807\n\n\n      var context = item && item.getContext && item.getContext('2d'); // Load platform resources on first chart creation, to make possible to change\n      // platform options after importing the library (e.g. `disableCSSInjection`).\n\n      this._ensureLoaded(); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n      // inside an iframe or when running in a protected environment. We could guess the\n      // types from their toString() value but let's keep things flexible and assume it's\n      // a sufficient condition if the item has a context2D which has item as `canvas`.\n      // https://github.com/chartjs/Chart.js/issues/3887\n      // https://github.com/chartjs/Chart.js/issues/4102\n      // https://github.com/chartjs/Chart.js/issues/4152\n\n\n      if (context && context.canvas === item) {\n        initCanvas(item, config);\n        return context;\n      }\n\n      return null;\n    },\n    releaseContext: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (helpers$1.isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      helpers$1.each(initial.style || {}, function (value, key) {\n        canvas.style[key] = value;\n      }); // The canvas render size might have been changed (and thus the state stack discarded),\n      // we can't use save() and restore() to restore the initial state. So make sure that at\n      // least the canvas context is reset to the default state by setting the canvas width.\n      // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n      // eslint-disable-next-line no-self-assign\n\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n    },\n    addEventListener: function addEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        addResizeListener(canvas, listener, chart);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n      var proxies = expando.proxies || (expando.proxies = {});\n\n      var proxy = proxies[chart.id + '_' + type] = function (event) {\n        listener(fromNativeEvent(event, chart));\n      };\n\n      addListener(canvas, type, proxy);\n    },\n    removeEventListener: function removeEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        removeResizeListener(canvas);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || {};\n      var proxies = expando.proxies || {};\n      var proxy = proxies[chart.id + '_' + type];\n\n      if (!proxy) {\n        return;\n      }\n\n      removeListener(canvas, type, proxy);\n    }\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use EventTarget.addEventListener instead.\n   * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   * @function Chart.helpers.addEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.addEvent = addListener;\n  /**\n   * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n   * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n   * @function Chart.helpers.removeEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.removeEvent = removeListener; // @TODO Make possible to select another platform at build time.\n\n  var implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n  /**\n   * @namespace Chart.platform\n   * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n   * @since 2.4.0\n   */\n\n  var platform = helpers$1.extend({\n    /**\n     * @since 2.7.0\n     */\n    initialize: function initialize() {},\n\n    /**\n     * Called at chart construction time, returns a context2d instance implementing\n     * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n     * @param {*} item - The native item from which to acquire context (platform specific)\n     * @param {object} options - The chart options\n     * @returns {CanvasRenderingContext2D} context2d instance\n     */\n    acquireContext: function acquireContext() {},\n\n    /**\n     * Called at chart destruction time, releases any resources associated to the context\n     * previously returned by the acquireContext() method.\n     * @param {CanvasRenderingContext2D} context - The context2d instance\n     * @returns {boolean} true if the method succeeded, else false\n     */\n    releaseContext: function releaseContext() {},\n\n    /**\n     * Registers the specified listener on the given chart.\n     * @param {Chart} chart - Chart from which to listen for event\n     * @param {string} type - The ({@link IEvent}) type to listen for\n     * @param {function} listener - Receives a notification (an object that implements\n     * the {@link IEvent} interface) when an event of the specified type occurs.\n     */\n    addEventListener: function addEventListener() {},\n\n    /**\n     * Removes the specified listener previously registered with addEventListener.\n     * @param {Chart} chart - Chart from which to remove the listener\n     * @param {string} type - The ({@link IEvent}) type to remove\n     * @param {function} listener - The listener function to remove from the event target.\n     */\n    removeEventListener: function removeEventListener() {}\n  }, implementation);\n\n  core_defaults._set('global', {\n    plugins: {}\n  });\n  /**\n   * The plugin service singleton\n   * @namespace Chart.plugins\n   * @since 2.1.0\n   */\n\n\n  var core_plugins = {\n    /**\n     * Globally registered plugins.\n     * @private\n     */\n    _plugins: [],\n\n    /**\n     * This identifier is used to invalidate the descriptors cache attached to each chart\n     * when a global plugin is registered or unregistered. In this case, the cache ID is\n     * incremented and descriptors are regenerated during following API calls.\n     * @private\n     */\n    _cacheId: 0,\n\n    /**\n     * Registers the given plugin(s) if not already registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    register: function register(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        if (p.indexOf(plugin) === -1) {\n          p.push(plugin);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Unregisters the given plugin(s) only if registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    unregister: function unregister(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        var idx = p.indexOf(plugin);\n\n        if (idx !== -1) {\n          p.splice(idx, 1);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Remove all registered plugins.\n     * @since 2.1.5\n     */\n    clear: function clear() {\n      this._plugins = [];\n      this._cacheId++;\n    },\n\n    /**\n     * Returns the number of registered plugins?\n     * @returns {number}\n     * @since 2.1.5\n     */\n    count: function count() {\n      return this._plugins.length;\n    },\n\n    /**\n     * Returns all registered plugin instances.\n     * @returns {IPlugin[]} array of plugin objects.\n     * @since 2.1.5\n     */\n    getAll: function getAll() {\n      return this._plugins;\n    },\n\n    /**\n     * Calls enabled plugins for `chart` on the specified hook and with the given args.\n     * This method immediately returns as soon as a plugin explicitly returns false. The\n     * returned value can be used, for instance, to interrupt the current action.\n     * @param {Chart} chart - The chart instance for which plugins should be called.\n     * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n     * @param {Array} [args] - Extra arguments to apply to the hook call.\n     * @returns {boolean} false if any of the plugins return false, else returns true.\n     */\n    notify: function notify(chart, hook, args) {\n      var descriptors = this.descriptors(chart);\n      var ilen = descriptors.length;\n      var i, descriptor, plugin, params, method;\n\n      for (i = 0; i < ilen; ++i) {\n        descriptor = descriptors[i];\n        plugin = descriptor.plugin;\n        method = plugin[hook];\n\n        if (typeof method === 'function') {\n          params = [chart].concat(args || []);\n          params.push(descriptor.options);\n\n          if (method.apply(plugin, params) === false) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns descriptors of enabled plugins for the given chart.\n     * @returns {object[]} [{ plugin, options }]\n     * @private\n     */\n    descriptors: function descriptors(chart) {\n      var cache = chart.$plugins || (chart.$plugins = {});\n\n      if (cache.id === this._cacheId) {\n        return cache.descriptors;\n      }\n\n      var plugins = [];\n      var descriptors = [];\n      var config = chart && chart.config || {};\n      var options = config.options && config.options.plugins || {};\n\n      this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n        var idx = plugins.indexOf(plugin);\n\n        if (idx !== -1) {\n          return;\n        }\n\n        var id = plugin.id;\n        var opts = options[id];\n\n        if (opts === false) {\n          return;\n        }\n\n        if (opts === true) {\n          opts = helpers$1.clone(core_defaults.global.plugins[id]);\n        }\n\n        plugins.push(plugin);\n        descriptors.push({\n          plugin: plugin,\n          options: opts || {}\n        });\n      });\n\n      cache.descriptors = descriptors;\n      cache.id = this._cacheId;\n      return descriptors;\n    },\n\n    /**\n     * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n     * but in some cases, this reference can be changed by the user when updating options.\n     * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n     * @private\n     */\n    _invalidate: function _invalidate(chart) {\n      delete chart.$plugins;\n    }\n  };\n  var core_scaleService = {\n    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n    // use the new chart options to grab the correct scale\n    constructors: {},\n    // Use a registration function so that we can move to an ES6 map when we no longer need to support\n    // old browsers\n    // Scale config defaults\n    defaults: {},\n    registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n      this.constructors[type] = scaleConstructor;\n      this.defaults[type] = helpers$1.clone(scaleDefaults);\n    },\n    getScaleConstructor: function getScaleConstructor(type) {\n      return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n    },\n    getScaleDefaults: function getScaleDefaults(type) {\n      // Return the scale defaults merged with the global settings so that we always use the latest ones\n      return this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n    },\n    updateScaleDefaults: function updateScaleDefaults(type, additions) {\n      var me = this;\n\n      if (me.defaults.hasOwnProperty(type)) {\n        me.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n      }\n    },\n    addScalesToLayout: function addScalesToLayout(chart) {\n      // Adds each scale to the chart.boxes array to be sized accordingly\n      helpers$1.each(chart.scales, function (scale) {\n        // Set ILayoutItem parameters for backwards compatibility\n        scale.fullWidth = scale.options.fullWidth;\n        scale.position = scale.options.position;\n        scale.weight = scale.options.weight;\n        core_layouts.addBox(chart, scale);\n      });\n    }\n  };\n  var valueOrDefault$7 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    tooltips: {\n      enabled: true,\n      custom: null,\n      mode: 'nearest',\n      position: 'average',\n      intersect: true,\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      titleFontStyle: 'bold',\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleFontColor: '#fff',\n      titleAlign: 'left',\n      bodySpacing: 2,\n      bodyFontColor: '#fff',\n      bodyAlign: 'left',\n      footerFontStyle: 'bold',\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFontColor: '#fff',\n      footerAlign: 'left',\n      yPadding: 6,\n      xPadding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      multiKeyBackground: '#fff',\n      displayColors: true,\n      borderColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      callbacks: {\n        // Args are: (tooltipItems, data)\n        beforeTitle: helpers$1.noop,\n        title: function title(tooltipItems, data) {\n          var title = '';\n          var labels = data.labels;\n          var labelCount = labels ? labels.length : 0;\n\n          if (tooltipItems.length > 0) {\n            var item = tooltipItems[0];\n\n            if (item.label) {\n              title = item.label;\n            } else if (item.xLabel) {\n              title = item.xLabel;\n            } else if (labelCount > 0 && item.index < labelCount) {\n              title = labels[item.index];\n            }\n          }\n\n          return title;\n        },\n        afterTitle: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeBody: helpers$1.noop,\n        // Args are: (tooltipItem, data)\n        beforeLabel: helpers$1.noop,\n        label: function label(tooltipItem, data) {\n          var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n          if (label) {\n            label += ': ';\n          }\n\n          if (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n            label += tooltipItem.value;\n          } else {\n            label += tooltipItem.yLabel;\n          }\n\n          return label;\n        },\n        labelColor: function labelColor(tooltipItem, chart) {\n          var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n          var activeElement = meta.data[tooltipItem.index];\n          var view = activeElement._view;\n          return {\n            borderColor: view.borderColor,\n            backgroundColor: view.backgroundColor\n          };\n        },\n        labelTextColor: function labelTextColor() {\n          return this._options.bodyFontColor;\n        },\n        afterLabel: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        afterBody: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeFooter: helpers$1.noop,\n        footer: helpers$1.noop,\n        afterFooter: helpers$1.noop\n      }\n    }\n  });\n\n  var positioners = {\n    /**\n     * Average mode places the tooltip at the average position of the elements shown\n     * @function Chart.Tooltip.positioners.average\n     * @param elements {ChartElement[]} the elements being displayed in the tooltip\n     * @returns {object} tooltip position\n     */\n    average: function average(elements) {\n      if (!elements.length) {\n        return false;\n      }\n\n      var i, len;\n      var x = 0;\n      var y = 0;\n      var count = 0;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n\n      return {\n        x: x / count,\n        y: y / count\n      };\n    },\n\n    /**\n     * Gets the tooltip position nearest of the item nearest to the event position\n     * @function Chart.Tooltip.positioners.nearest\n     * @param elements {Chart.Element[]} the tooltip elements\n     * @param eventPosition {object} the position of the event in canvas coordinates\n     * @returns {object} the tooltip position\n     */\n    nearest: function nearest(elements, eventPosition) {\n      var x = eventPosition.x;\n      var y = eventPosition.y;\n      var minDistance = Number.POSITIVE_INFINITY;\n      var i, len, nearestElement;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var center = el.getCenterPoint();\n          var d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n\n      if (nearestElement) {\n        var tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }; // Helper to push or concat based on if the 2nd parameter is an array or not\n\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (helpers$1.isArray(toPush)) {\n        // base = base.concat(toPush);\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n\n    return base;\n  }\n  /**\n   * Returns array of strings split by newline\n   * @param {string} value - The value to split by newline.\n   * @returns {string[]} value if newline present - Returned from String split() method\n   * @function\n   */\n\n\n  function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n      return str.split('\\n');\n    }\n\n    return str;\n  }\n  /**\n   * Private helper to create a tooltip item model\n   * @param element - the chart element (point, arc, bar) to create the tooltip item for\n   * @return new tooltip item\n   */\n\n\n  function createTooltipItem(element) {\n    var xScale = element._xScale;\n    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n    var index = element._index;\n    var datasetIndex = element._datasetIndex;\n\n    var controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\n    var indexScale = controller._getIndexScale();\n\n    var valueScale = controller._getValueScale();\n\n    return {\n      xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n      yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n      label: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n      value: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n      index: index,\n      datasetIndex: datasetIndex,\n      x: element._model.x,\n      y: element._model.y\n    };\n  }\n  /**\n   * Helper to get the reset model for the tooltip\n   * @param tooltipOpts {object} the tooltip options\n   */\n\n\n  function getBaseModel(tooltipOpts) {\n    var globalDefaults = core_defaults.global;\n    return {\n      // Positioning\n      xPadding: tooltipOpts.xPadding,\n      yPadding: tooltipOpts.yPadding,\n      xAlign: tooltipOpts.xAlign,\n      yAlign: tooltipOpts.yAlign,\n      // Body\n      bodyFontColor: tooltipOpts.bodyFontColor,\n      _bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n      _bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n      _bodyAlign: tooltipOpts.bodyAlign,\n      bodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n      bodySpacing: tooltipOpts.bodySpacing,\n      // Title\n      titleFontColor: tooltipOpts.titleFontColor,\n      _titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n      _titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n      titleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n      _titleAlign: tooltipOpts.titleAlign,\n      titleSpacing: tooltipOpts.titleSpacing,\n      titleMarginBottom: tooltipOpts.titleMarginBottom,\n      // Footer\n      footerFontColor: tooltipOpts.footerFontColor,\n      _footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n      _footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n      footerFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n      _footerAlign: tooltipOpts.footerAlign,\n      footerSpacing: tooltipOpts.footerSpacing,\n      footerMarginTop: tooltipOpts.footerMarginTop,\n      // Appearance\n      caretSize: tooltipOpts.caretSize,\n      cornerRadius: tooltipOpts.cornerRadius,\n      backgroundColor: tooltipOpts.backgroundColor,\n      opacity: 0,\n      legendColorBackground: tooltipOpts.multiKeyBackground,\n      displayColors: tooltipOpts.displayColors,\n      borderColor: tooltipOpts.borderColor,\n      borderWidth: tooltipOpts.borderWidth\n    };\n  }\n  /**\n   * Get the size of the tooltip\n   */\n\n\n  function getTooltipSize(tooltip, model) {\n    var ctx = tooltip._chart.ctx;\n    var height = model.yPadding * 2; // Tooltip Padding\n\n    var width = 0; // Count of all lines in the body\n\n    var body = model.body;\n    var combinedBodyLength = body.reduce(function (count, bodyItem) {\n      return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n    }, 0);\n    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n    var titleLineCount = model.title.length;\n    var footerLineCount = model.footer.length;\n    var titleFontSize = model.titleFontSize;\n    var bodyFontSize = model.bodyFontSize;\n    var footerFontSize = model.footerFontSize;\n    height += titleLineCount * titleFontSize; // Title Lines\n\n    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n    height += combinedBodyLength * bodyFontSize; // Body Lines\n\n    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n    height += footerLineCount * footerFontSize; // Footer Lines\n\n    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n    // Title width\n\n    var widthPadding = 0;\n\n    var maxLineWidth = function maxLineWidth(line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n\n    ctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n    helpers$1.each(model.title, maxLineWidth); // Body width\n\n    ctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n    helpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n    widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n    helpers$1.each(body, function (bodyItem) {\n      helpers$1.each(bodyItem.before, maxLineWidth);\n      helpers$1.each(bodyItem.lines, maxLineWidth);\n      helpers$1.each(bodyItem.after, maxLineWidth);\n    }); // Reset back to 0\n\n    widthPadding = 0; // Footer width\n\n    ctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n    helpers$1.each(model.footer, maxLineWidth); // Add padding\n\n    width += 2 * model.xPadding;\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Helper to get the alignment of a tooltip given the size\n   */\n\n\n  function determineAlignment(tooltip, size) {\n    var model = tooltip._model;\n    var chart = tooltip._chart;\n    var chartArea = tooltip._chart.chartArea;\n    var xAlign = 'center';\n    var yAlign = 'center';\n\n    if (model.y < size.height) {\n      yAlign = 'top';\n    } else if (model.y > chart.height - size.height) {\n      yAlign = 'bottom';\n    }\n\n    var lf, rf; // functions to determine left, right alignment\n\n    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n    var midX = (chartArea.left + chartArea.right) / 2;\n    var midY = (chartArea.top + chartArea.bottom) / 2;\n\n    if (yAlign === 'center') {\n      lf = function lf(x) {\n        return x <= midX;\n      };\n\n      rf = function rf(x) {\n        return x > midX;\n      };\n    } else {\n      lf = function lf(x) {\n        return x <= size.width / 2;\n      };\n\n      rf = function rf(x) {\n        return x >= chart.width - size.width / 2;\n      };\n    }\n\n    olf = function olf(x) {\n      return x + size.width + model.caretSize + model.caretPadding > chart.width;\n    };\n\n    orf = function orf(x) {\n      return x - size.width - model.caretSize - model.caretPadding < 0;\n    };\n\n    yf = function yf(y) {\n      return y <= midY ? 'top' : 'bottom';\n    };\n\n    if (lf(model.x)) {\n      xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n      if (olf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    } else if (rf(model.x)) {\n      xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n      if (orf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    }\n\n    var opts = tooltip._options;\n    return {\n      xAlign: opts.xAlign ? opts.xAlign : xAlign,\n      yAlign: opts.yAlign ? opts.yAlign : yAlign\n    };\n  }\n  /**\n   * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n   */\n\n\n  function getBackgroundPoint(vm, size, alignment, chart) {\n    // Background Position\n    var x = vm.x;\n    var y = vm.y;\n    var caretSize = vm.caretSize;\n    var caretPadding = vm.caretPadding;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = alignment.xAlign;\n    var yAlign = alignment.yAlign;\n    var paddingAndSize = caretSize + caretPadding;\n    var radiusAndPadding = cornerRadius + caretPadding;\n\n    if (xAlign === 'right') {\n      x -= size.width;\n    } else if (xAlign === 'center') {\n      x -= size.width / 2;\n\n      if (x + size.width > chart.width) {\n        x = chart.width - size.width;\n      }\n\n      if (x < 0) {\n        x = 0;\n      }\n    }\n\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= size.height + paddingAndSize;\n    } else {\n      y -= size.height / 2;\n    }\n\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= radiusAndPadding;\n    } else if (xAlign === 'right') {\n      x += radiusAndPadding;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  function getAlignedX(vm, align) {\n    return align === 'center' ? vm.x + vm.width / 2 : align === 'right' ? vm.x + vm.width - vm.xPadding : vm.x + vm.xPadding;\n  }\n  /**\n   * Helper to build before and after body lines\n   */\n\n\n  function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n  }\n\n  var exports$3 = core_element.extend({\n    initialize: function initialize() {\n      this._model = getBaseModel(this._options);\n      this._lastActive = [];\n    },\n    // Get the title\n    // Args are: (tooltipItem, data)\n    getTitle: function getTitle() {\n      var me = this;\n      var opts = me._options;\n      var callbacks = opts.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n      var title = callbacks.title.apply(me, arguments);\n      var afterTitle = callbacks.afterTitle.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    },\n    // Args are: (tooltipItem, data)\n    getBeforeBody: function getBeforeBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n    },\n    // Args are: (tooltipItem, data)\n    getBody: function getBody(tooltipItems, data) {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var bodyItems = [];\n      helpers$1.each(tooltipItems, function (tooltipItem) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n        pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n        pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    },\n    // Args are: (tooltipItem, data)\n    getAfterBody: function getAfterBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n    },\n    // Get the footer and beforeFooter and afterFooter lines\n    // Args are: (tooltipItem, data)\n    getFooter: function getFooter() {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n      var footer = callbacks.footer.apply(me, arguments);\n      var afterFooter = callbacks.afterFooter.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    },\n    update: function update(changed) {\n      var me = this;\n      var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n      // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n      // which breaks any animations.\n\n      var existingModel = me._model;\n      var model = me._model = getBaseModel(opts);\n      var active = me._active;\n      var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n      var alignment = {\n        xAlign: existingModel.xAlign,\n        yAlign: existingModel.yAlign\n      };\n      var backgroundPoint = {\n        x: existingModel.x,\n        y: existingModel.y\n      };\n      var tooltipSize = {\n        width: existingModel.width,\n        height: existingModel.height\n      };\n      var tooltipPosition = {\n        x: existingModel.caretX,\n        y: existingModel.caretY\n      };\n      var i, len;\n\n      if (active.length) {\n        model.opacity = 1;\n        var labelColors = [];\n        var labelTextColors = [];\n        tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n        var tooltipItems = [];\n\n        for (i = 0, len = active.length; i < len; ++i) {\n          tooltipItems.push(createTooltipItem(active[i]));\n        } // If the user provided a filter function, use it to modify the tooltip items\n\n\n        if (opts.filter) {\n          tooltipItems = tooltipItems.filter(function (a) {\n            return opts.filter(a, data);\n          });\n        } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n        if (opts.itemSort) {\n          tooltipItems = tooltipItems.sort(function (a, b) {\n            return opts.itemSort(a, b, data);\n          });\n        } // Determine colors for boxes\n\n\n        helpers$1.each(tooltipItems, function (tooltipItem) {\n          labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n          labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n        }); // Build the Text Lines\n\n        model.title = me.getTitle(tooltipItems, data);\n        model.beforeBody = me.getBeforeBody(tooltipItems, data);\n        model.body = me.getBody(tooltipItems, data);\n        model.afterBody = me.getAfterBody(tooltipItems, data);\n        model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n        model.x = tooltipPosition.x;\n        model.y = tooltipPosition.y;\n        model.caretPadding = opts.caretPadding;\n        model.labelColors = labelColors;\n        model.labelTextColors = labelTextColors; // data points\n\n        model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n        tooltipSize = getTooltipSize(this, model);\n        alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n        backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n      } else {\n        model.opacity = 0;\n      }\n\n      model.xAlign = alignment.xAlign;\n      model.yAlign = alignment.yAlign;\n      model.x = backgroundPoint.x;\n      model.y = backgroundPoint.y;\n      model.width = tooltipSize.width;\n      model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n      model.caretX = tooltipPosition.x;\n      model.caretY = tooltipPosition.y;\n      me._model = model;\n\n      if (changed && opts.custom) {\n        opts.custom.call(me, model);\n      }\n\n      return me;\n    },\n    drawCaret: function drawCaret(tooltipPoint, size) {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    },\n    getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n      var x1, x2, x3, y1, y2, y3;\n      var caretSize = vm.caretSize;\n      var cornerRadius = vm.cornerRadius;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var ptX = tooltipPoint.x;\n      var ptY = tooltipPoint.y;\n      var width = size.width;\n      var height = size.height;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          x3 = x1;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          x3 = x1;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          x2 = vm.caretX;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          y3 = y1;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          y3 = y1; // invert drawing order\n\n          var tmp = x3;\n          x3 = x1;\n          x1 = tmp;\n        }\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    },\n    drawTitle: function drawTitle(pt, vm, ctx) {\n      var title = vm.title;\n\n      if (title.length) {\n        pt.x = getAlignedX(vm, vm._titleAlign);\n        ctx.textAlign = vm._titleAlign;\n        ctx.textBaseline = 'top';\n        var titleFontSize = vm.titleFontSize;\n        var titleSpacing = vm.titleSpacing;\n        ctx.fillStyle = vm.titleFontColor;\n        ctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n        var i, len;\n\n        for (i = 0, len = title.length; i < len; ++i) {\n          ctx.fillText(title[i], pt.x, pt.y);\n          pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n          if (i + 1 === title.length) {\n            pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n          }\n        }\n      }\n    },\n    drawBody: function drawBody(pt, vm, ctx) {\n      var bodyFontSize = vm.bodyFontSize;\n      var bodySpacing = vm.bodySpacing;\n      var bodyAlign = vm._bodyAlign;\n      var body = vm.body;\n      var drawColorBoxes = vm.displayColors;\n      var labelColors = vm.labelColors;\n      var xLinePadding = 0;\n      var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n      var textColor;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'top';\n      ctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n      pt.x = getAlignedX(vm, bodyAlign); // Before Body\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, pt.x + xLinePadding, pt.y);\n        pt.y += bodyFontSize + bodySpacing;\n      }; // Before body lines\n\n\n      ctx.fillStyle = vm.bodyFontColor;\n      helpers$1.each(vm.beforeBody, fillLineOfText);\n      xLinePadding = drawColorBoxes && bodyAlign !== 'right' ? bodyAlign === 'center' ? bodyFontSize / 2 + 1 : bodyFontSize + 2 : 0; // Draw body lines now\n\n      helpers$1.each(body, function (bodyItem, i) {\n        textColor = vm.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        helpers$1.each(bodyItem.before, fillLineOfText);\n        helpers$1.each(bodyItem.lines, function (line) {\n          // Draw Legend-like boxes if needed\n          if (drawColorBoxes) {\n            // Fill a white rect so that colours merge nicely if the opacity is < 1\n            ctx.fillStyle = vm.legendColorBackground;\n            ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Border\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = labelColors[i].borderColor;\n            ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n            ctx.fillStyle = labelColors[i].backgroundColor;\n            ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n            ctx.fillStyle = textColor;\n          }\n\n          fillLineOfText(line);\n        });\n        helpers$1.each(bodyItem.after, fillLineOfText);\n      }); // Reset back to 0 for after body\n\n      xLinePadding = 0; // After body lines\n\n      helpers$1.each(vm.afterBody, fillLineOfText);\n      pt.y -= bodySpacing; // Remove last body spacing\n    },\n    drawFooter: function drawFooter(pt, vm, ctx) {\n      var footer = vm.footer;\n\n      if (footer.length) {\n        pt.x = getAlignedX(vm, vm._footerAlign);\n        pt.y += vm.footerMarginTop;\n        ctx.textAlign = vm._footerAlign;\n        ctx.textBaseline = 'top';\n        ctx.fillStyle = vm.footerFontColor;\n        ctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n        helpers$1.each(footer, function (line) {\n          ctx.fillText(line, pt.x, pt.y);\n          pt.y += vm.footerFontSize + vm.footerSpacing;\n        });\n      }\n    },\n    drawBackground: function drawBackground(pt, vm, ctx, tooltipSize) {\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.strokeStyle = vm.borderColor;\n      ctx.lineWidth = vm.borderWidth;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var x = pt.x;\n      var y = pt.y;\n      var width = tooltipSize.width;\n      var height = tooltipSize.height;\n      var radius = vm.cornerRadius;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (vm.borderWidth > 0) {\n        ctx.stroke();\n      }\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n\n      if (vm.opacity === 0) {\n        return;\n      }\n\n      var tooltipSize = {\n        width: vm.width,\n        height: vm.height\n      };\n      var pt = {\n        x: vm.x,\n        y: vm.y\n      }; // IE11/Edge does not like very small opacities, so snap to 0\n\n      var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n      var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n      if (this._options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity; // Draw Background\n\n        this.drawBackground(pt, vm, ctx, tooltipSize); // Draw Title, Body, and Footer\n\n        pt.y += vm.yPadding; // Titles\n\n        this.drawTitle(pt, vm, ctx); // Body\n\n        this.drawBody(pt, vm, ctx); // Footer\n\n        this.drawFooter(pt, vm, ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     * @returns {boolean} true if the tooltip changed\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me._options;\n      var changed = false;\n      me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n      if (e.type === 'mouseout') {\n        me._active = [];\n      } else {\n        me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n      } // Remember Last Actives\n\n\n      changed = !helpers$1.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n      if (changed) {\n        me._lastActive = me._active;\n\n        if (options.enabled || options.custom) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true);\n          me.pivot();\n        }\n      }\n\n      return changed;\n    }\n  });\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n\n  var positioners_1 = positioners;\n  var core_tooltip = exports$3;\n  core_tooltip.positioners = positioners_1;\n  var valueOrDefault$8 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    elements: {},\n    events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n    hover: {\n      onHover: null,\n      mode: 'nearest',\n      intersect: true,\n      animationDuration: 400\n    },\n    onClick: null,\n    maintainAspectRatio: true,\n    responsive: true,\n    responsiveAnimationDuration: 0\n  });\n  /**\n   * Recursively merge the given config objects representing the `scales` option\n   * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n   * returns a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeScaleConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers$1.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n  /**\n   * Recursively merge the given config objects as the root options by handling\n   * default scale options for the `scales` and `scale` properties, then returns\n   * a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = mergeScaleConfig(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use mergeConfig for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = mergeConfig(core_defaults.global, core_defaults[config.type], config.options || {});\n    return config;\n  }\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers$1.each(chart.scales, function (scale) {\n      core_layouts.removeBox(chart, scale);\n    });\n    newOptions = mergeConfig(core_defaults.global, core_defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  helpers$1.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers$1.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      core_plugins.notify(me, 'beforeInit');\n      helpers$1.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      core_plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers$1.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      core_animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers$1.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        core_plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (options.onResize) {\n          options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers$1.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers$1.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers$1.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers$1.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      core_scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      core_plugins._invalidate(me);\n\n      if (core_plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers$1.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      core_plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      core_layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      core_plugins.notify(me, 'afterScaleUpdate');\n      core_plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      core_plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      core_plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var animationOptions = me.options.animation;\n      var duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n      var lazy = config.lazy;\n\n      if (core_plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var onComplete = function onComplete(animation) {\n        core_plugins.notify(me, 'afterRender');\n        helpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && duration) {\n        var animation = new core_animation({\n          numSteps: duration / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers$1.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        core_animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new core_animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers$1.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers$1.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      core_plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      core_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      core_plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      core_plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n\n    /**\n     * Get the single element that was clicked on\n     * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n     */\n    getElementAtEvent: function getElementAtEvent(e) {\n      return core_interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return core_interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return core_interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = core_interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return core_interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers$1.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      core_plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new core_tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers$1.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers$1.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      core_plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers$1.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * NOTE(SB) We actually don't use this container anymore but we need to keep it\n   * for backward compatibility. Though, it can still be useful for plugins that\n   * would need to work on multiple charts?!\n   */\n\n  Chart.instances = {};\n  var core_controller = Chart; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.types = {};\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.configMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.configMerge = mergeConfig;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.scaleMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.scaleMerge = mergeScaleConfig;\n\n  var core_helpers = function core_helpers() {\n    // -- Basic js utility methods\n    helpers$1.where = function (collection, filterCallback) {\n      if (helpers$1.isArray(collection) && Array.prototype.filter) {\n        return collection.filter(filterCallback);\n      }\n\n      var filtered = [];\n      helpers$1.each(collection, function (item) {\n        if (filterCallback(item)) {\n          filtered.push(item);\n        }\n      });\n      return filtered;\n    };\n\n    helpers$1.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n      return array.findIndex(callback, scope);\n    } : function (array, callback, scope) {\n      scope = scope === undefined ? array : scope;\n\n      for (var i = 0, ilen = array.length; i < ilen; ++i) {\n        if (callback.call(scope, array[i], i, array)) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n\n    helpers$1.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to start of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = -1;\n      }\n\n      for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    };\n\n    helpers$1.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to end of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = arrayToSearch.length;\n      }\n\n      for (var i = startIndex - 1; i >= 0; i--) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    }; // -- Math methods\n\n\n    helpers$1.isNumber = function (n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    };\n\n    helpers$1.almostEquals = function (x, y, epsilon) {\n      return Math.abs(x - y) < epsilon;\n    };\n\n    helpers$1.almostWhole = function (x, epsilon) {\n      var rounded = Math.round(x);\n      return rounded - epsilon < x && rounded + epsilon > x;\n    };\n\n    helpers$1.max = function (array) {\n      return array.reduce(function (max, value) {\n        if (!isNaN(value)) {\n          return Math.max(max, value);\n        }\n\n        return max;\n      }, Number.NEGATIVE_INFINITY);\n    };\n\n    helpers$1.min = function (array) {\n      return array.reduce(function (min, value) {\n        if (!isNaN(value)) {\n          return Math.min(min, value);\n        }\n\n        return min;\n      }, Number.POSITIVE_INFINITY);\n    };\n\n    helpers$1.sign = Math.sign ? function (x) {\n      return Math.sign(x);\n    } : function (x) {\n      x = +x; // convert to a number\n\n      if (x === 0 || isNaN(x)) {\n        return x;\n      }\n\n      return x > 0 ? 1 : -1;\n    };\n    helpers$1.log10 = Math.log10 ? function (x) {\n      return Math.log10(x);\n    } : function (x) {\n      var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n      // Check for whole powers of 10,\n      // which due to floating point rounding error should be corrected.\n\n      var powerOf10 = Math.round(exponent);\n      var isPowerOf10 = x === Math.pow(10, powerOf10);\n      return isPowerOf10 ? powerOf10 : exponent;\n    };\n\n    helpers$1.toRadians = function (degrees) {\n      return degrees * (Math.PI / 180);\n    };\n\n    helpers$1.toDegrees = function (radians) {\n      return radians * (180 / Math.PI);\n    };\n    /**\n     * Returns the number of decimal places\n     * i.e. the number of digits after the decimal point, of the value of this Number.\n     * @param {number} x - A number.\n     * @returns {number} The number of decimal places.\n     * @private\n     */\n\n\n    helpers$1._decimalPlaces = function (x) {\n      if (!helpers$1.isFinite(x)) {\n        return;\n      }\n\n      var e = 1;\n      var p = 0;\n\n      while (Math.round(x * e) / e !== x) {\n        e *= 10;\n        p++;\n      }\n\n      return p;\n    }; // Gets the angle from vertical upright to the point about a centre.\n\n\n    helpers$1.getAngleFromPoint = function (centrePoint, anglePoint) {\n      var distanceFromXCenter = anglePoint.x - centrePoint.x;\n      var distanceFromYCenter = anglePoint.y - centrePoint.y;\n      var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n      var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n      if (angle < -0.5 * Math.PI) {\n        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n      }\n\n      return {\n        angle: angle,\n        distance: radialDistanceFromCenter\n      };\n    };\n\n    helpers$1.distanceBetweenPoints = function (pt1, pt2) {\n      return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**\n     * Provided for backward compatibility, not available anymore\n     * @function Chart.helpers.aliasPixel\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     */\n\n\n    helpers$1.aliasPixel = function (pixelWidth) {\n      return pixelWidth % 2 === 0 ? 0 : 0.5;\n    };\n    /**\n     * Returns the aligned pixel value to avoid anti-aliasing blur\n     * @param {Chart} chart - The chart instance.\n     * @param {number} pixel - A pixel value.\n     * @param {number} width - The width of the element.\n     * @returns {number} The aligned pixel value.\n     * @private\n     */\n\n\n    helpers$1._alignPixel = function (chart, pixel, width) {\n      var devicePixelRatio = chart.currentDevicePixelRatio;\n      var halfWidth = width / 2;\n      return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n    };\n\n    helpers$1.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n      // Props to Rob Spencer at scaled innovation for his post on splining between points\n      // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n      // This function must also respect \"skipped\" points\n      var previous = firstPoint.skip ? middlePoint : firstPoint;\n      var current = middlePoint;\n      var next = afterPoint.skip ? middlePoint : afterPoint;\n      var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n      var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n      var s01 = d01 / (d01 + d12);\n      var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n      s01 = isNaN(s01) ? 0 : s01;\n      s12 = isNaN(s12) ? 0 : s12;\n      var fa = t * s01; // scaling factor for triangle Ta\n\n      var fb = t * s12;\n      return {\n        previous: {\n          x: current.x - fa * (next.x - previous.x),\n          y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n          x: current.x + fb * (next.x - previous.x),\n          y: current.y + fb * (next.y - previous.y)\n        }\n      };\n    };\n\n    helpers$1.EPSILON = Number.EPSILON || 1e-14;\n\n    helpers$1.splineCurveMonotone = function (points) {\n      // This function calculates Bézier control points in a similar way than |splineCurve|,\n      // but preserves monotonicity of the provided data and ensures no local extremums are added\n      // between the dataset discrete points due to the interpolation.\n      // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n      var pointsWithTangents = (points || []).map(function (point) {\n        return {\n          model: point._model,\n          deltaK: 0,\n          mK: 0\n        };\n      }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n      var pointsLen = pointsWithTangents.length;\n      var i, pointBefore, pointCurrent, pointAfter;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointAfter && !pointAfter.model.skip) {\n          var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n          pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n        }\n\n        if (!pointBefore || pointBefore.model.skip) {\n          pointCurrent.mK = pointCurrent.deltaK;\n        } else if (!pointAfter || pointAfter.model.skip) {\n          pointCurrent.mK = pointBefore.deltaK;\n        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n          pointCurrent.mK = 0;\n        } else {\n          pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n        }\n      } // Adjust tangents to ensure monotonic properties\n\n\n      var alphaK, betaK, tauK, squaredMagnitude;\n\n      for (i = 0; i < pointsLen - 1; ++i) {\n        pointCurrent = pointsWithTangents[i];\n        pointAfter = pointsWithTangents[i + 1];\n\n        if (pointCurrent.model.skip || pointAfter.model.skip) {\n          continue;\n        }\n\n        if (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n          pointCurrent.mK = pointAfter.mK = 0;\n          continue;\n        }\n\n        alphaK = pointCurrent.mK / pointCurrent.deltaK;\n        betaK = pointAfter.mK / pointCurrent.deltaK;\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n        if (squaredMagnitude <= 9) {\n          continue;\n        }\n\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n      } // Compute control points\n\n\n      var deltaX;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointBefore && !pointBefore.model.skip) {\n          deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n          pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n          pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n        }\n\n        if (pointAfter && !pointAfter.model.skip) {\n          deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n          pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n          pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n        }\n      }\n    };\n\n    helpers$1.nextItem = function (collection, index, loop) {\n      if (loop) {\n        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n      }\n\n      return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n    };\n\n    helpers$1.previousItem = function (collection, index, loop) {\n      if (loop) {\n        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n      }\n\n      return index <= 0 ? collection[0] : collection[index - 1];\n    }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n    helpers$1.niceNum = function (range, round) {\n      var exponent = Math.floor(helpers$1.log10(range));\n      var fraction = range / Math.pow(10, exponent);\n      var niceFraction;\n\n      if (round) {\n        if (fraction < 1.5) {\n          niceFraction = 1;\n        } else if (fraction < 3) {\n          niceFraction = 2;\n        } else if (fraction < 7) {\n          niceFraction = 5;\n        } else {\n          niceFraction = 10;\n        }\n      } else if (fraction <= 1.0) {\n        niceFraction = 1;\n      } else if (fraction <= 2) {\n        niceFraction = 2;\n      } else if (fraction <= 5) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n\n      return niceFraction * Math.pow(10, exponent);\n    }; // Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n    helpers$1.requestAnimFrame = function () {\n      if (typeof window === 'undefined') {\n        return function (callback) {\n          callback();\n        };\n      }\n\n      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n        return window.setTimeout(callback, 1000 / 60);\n      };\n    }(); // -- DOM methods\n\n\n    helpers$1.getRelativePosition = function (evt, chart) {\n      var mouseX, mouseY;\n      var e = evt.originalEvent || evt;\n      var canvas = evt.target || evt.srcElement;\n      var boundingRect = canvas.getBoundingClientRect();\n      var touches = e.touches;\n\n      if (touches && touches.length > 0) {\n        mouseX = touches[0].clientX;\n        mouseY = touches[0].clientY;\n      } else {\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n      } // Scale mouse coordinates into canvas coordinates\n      // by following the pattern laid out by 'jerryj' in the comments of\n      // https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n      var paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n      var paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n      var paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n      var paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n      var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n      var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n      // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n      mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n      mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n      return {\n        x: mouseX,\n        y: mouseY\n      };\n    }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n    function parseMaxStyle(styleValue, node, parentProperty) {\n      var valueInPixels;\n\n      if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n\n        if (styleValue.indexOf('%') !== -1) {\n          // percentage * size in dimension\n          valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n      } else {\n        valueInPixels = styleValue;\n      }\n\n      return valueInPixels;\n    }\n    /**\n     * Returns if the given value contains an effective constraint.\n     * @private\n     */\n\n\n    function isConstrainedValue(value) {\n      return value !== undefined && value !== null && value !== 'none';\n    }\n    /**\n     * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n     * @param {HTMLElement} domNode - the node to check the constraint on\n     * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n     * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n     * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n     */\n\n\n    function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n      var view = document.defaultView;\n\n      var parentNode = helpers$1._getParentNode(domNode);\n\n      var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n      var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n      var hasCNode = isConstrainedValue(constrainedNode);\n      var hasCContainer = isConstrainedValue(constrainedContainer);\n      var infinity = Number.POSITIVE_INFINITY;\n\n      if (hasCNode || hasCContainer) {\n        return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n      }\n\n      return 'none';\n    } // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintWidth = function (domNode) {\n      return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n    }; // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintHeight = function (domNode) {\n      return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n    };\n    /**\n     * @private\n    \t */\n\n\n    helpers$1._calculatePadding = function (container, padding, parentDimension) {\n      padding = helpers$1.getStyle(container, padding);\n      return padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n    };\n    /**\n     * @private\n     */\n\n\n    helpers$1._getParentNode = function (domNode) {\n      var parent = domNode.parentNode;\n\n      if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n      }\n\n      return parent;\n    };\n\n    helpers$1.getMaximumWidth = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientWidth;\n      }\n\n      var clientWidth = container.clientWidth;\n\n      var paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\n      var paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n      var w = clientWidth - paddingLeft - paddingRight;\n      var cw = helpers$1.getConstraintWidth(domNode);\n      return isNaN(cw) ? w : Math.min(w, cw);\n    };\n\n    helpers$1.getMaximumHeight = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientHeight;\n      }\n\n      var clientHeight = container.clientHeight;\n\n      var paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\n      var paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n      var h = clientHeight - paddingTop - paddingBottom;\n      var ch = helpers$1.getConstraintHeight(domNode);\n      return isNaN(ch) ? h : Math.min(h, ch);\n    };\n\n    helpers$1.getStyle = function (el, property) {\n      return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n    };\n\n    helpers$1.retinaScale = function (chart, forceRatio) {\n      var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n      if (pixelRatio === 1) {\n        return;\n      }\n\n      var canvas = chart.canvas;\n      var height = chart.height;\n      var width = chart.width;\n      canvas.height = height * pixelRatio;\n      canvas.width = width * pixelRatio;\n      chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n      // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n      // See https://github.com/chartjs/Chart.js/issues/3575\n\n      if (!canvas.style.height && !canvas.style.width) {\n        canvas.style.height = height + 'px';\n        canvas.style.width = width + 'px';\n      }\n    }; // -- Canvas methods\n\n\n    helpers$1.fontString = function (pixelSize, fontStyle, fontFamily) {\n      return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n    };\n\n    helpers$1.longestText = function (ctx, font, arrayOfThings, cache) {\n      cache = cache || {};\n      var data = cache.data = cache.data || {};\n      var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n      if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n      }\n\n      ctx.font = font;\n      var longest = 0;\n      helpers$1.each(arrayOfThings, function (thing) {\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n          longest = helpers$1.measureText(ctx, data, gc, longest, thing);\n        } else if (helpers$1.isArray(thing)) {\n          // if it is an array lets measure each element\n          // to do maybe simplify this function a bit so we can do this more recursively?\n          helpers$1.each(thing, function (nestedThing) {\n            // Undefined strings and arrays should not be measured\n            if (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n              longest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n            }\n          });\n        }\n      });\n      var gcLen = gc.length / 2;\n\n      if (gcLen > arrayOfThings.length) {\n        for (var i = 0; i < gcLen; i++) {\n          delete data[gc[i]];\n        }\n\n        gc.splice(0, gcLen);\n      }\n\n      return longest;\n    };\n\n    helpers$1.measureText = function (ctx, data, gc, longest, string) {\n      var textWidth = data[string];\n\n      if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n      }\n\n      if (textWidth > longest) {\n        longest = textWidth;\n      }\n\n      return longest;\n    };\n\n    helpers$1.numberOfLabelLines = function (arrayOfThings) {\n      var numberOfLines = 1;\n      helpers$1.each(arrayOfThings, function (thing) {\n        if (helpers$1.isArray(thing)) {\n          if (thing.length > numberOfLines) {\n            numberOfLines = thing.length;\n          }\n        }\n      });\n      return numberOfLines;\n    };\n\n    helpers$1.color = !chartjsColor ? function (value) {\n      console.error('Color.js not found!');\n      return value;\n    } : function (value) {\n      /* global CanvasGradient */\n      if (value instanceof CanvasGradient) {\n        value = core_defaults.global.defaultColor;\n      }\n\n      return chartjsColor(value);\n    };\n\n    helpers$1.getHoverColor = function (colorValue) {\n      /* global CanvasPattern */\n      return colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient ? colorValue : helpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n    };\n  };\n\n  function _abstract() {\n    throw new Error('This method is not implemented: either no adapter can ' + 'be found or an incomplete integration was provided.');\n  }\n  /**\n   * Date adapter (current used by the time scale)\n   * @namespace Chart._adapters._date\n   * @memberof Chart._adapters\n   * @private\n   */\n\n  /**\n   * Currently supported unit string values.\n   * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n   * @memberof Chart._adapters._date\n   * @name Unit\n   */\n\n  /**\n   * @class\n   */\n\n\n  function DateAdapter(options) {\n    this.options = options || {};\n  }\n\n  helpers$1.extend(DateAdapter.prototype,\n  /** @lends DateAdapter */\n  {\n    /**\n     * Returns a map of time formats for the supported formatting units defined\n     * in Unit as well as 'datetime' representing a detailed date/time string.\n     * @returns {{string: string}}\n     */\n    formats: _abstract,\n\n    /**\n     * Parses the given `value` and return the associated timestamp.\n     * @param {any} value - the value to parse (usually comes from the data)\n     * @param {string} [format] - the expected data format\n     * @returns {(number|null)}\n     * @function\n     */\n    parse: _abstract,\n\n    /**\n     * Returns the formatted date in the specified `format` for a given `timestamp`.\n     * @param {number} timestamp - the timestamp to format\n     * @param {string} format - the date/time token\n     * @return {string}\n     * @function\n     */\n    format: _abstract,\n\n    /**\n     * Adds the specified `amount` of `unit` to the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {number} amount - the amount to add\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    add: _abstract,\n\n    /**\n     * Returns the number of `unit` between the given timestamps.\n     * @param {number} max - the input timestamp (reference)\n     * @param {number} min - the timestamp to substract\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    diff: _abstract,\n\n    /**\n     * Returns start of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n     * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n     * @function\n     */\n    startOf: _abstract,\n\n    /**\n     * Returns end of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @function\n     */\n    endOf: _abstract,\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility for scale.getValueForPixel(),\n     * this method should be overridden only by the moment adapter.\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(value) {\n      return value;\n    }\n  });\n\n  DateAdapter.override = function (members) {\n    helpers$1.extend(DateAdapter.prototype, members);\n  };\n\n  var _date = DateAdapter;\n  var core_adapters = {\n    _date: _date\n  };\n  /**\n   * Namespace to hold static tick generation functions\n   * @namespace Chart.Ticks\n   */\n\n  var core_ticks = {\n    /**\n     * Namespace to hold formatters for different types of ticks\n     * @namespace Chart.Ticks.formatters\n     */\n    formatters: {\n      /**\n       * Formatter for value labels\n       * @method Chart.Ticks.formatters.values\n       * @param value the value to display\n       * @return {string|string[]} the label to display\n       */\n      values: function values(value) {\n        return helpers$1.isArray(value) ? value : '' + value;\n      },\n\n      /**\n       * Formatter for linear numeric ticks\n       * @method Chart.Ticks.formatters.linear\n       * @param tickValue {number} the value to be formatted\n       * @param index {number} the position of the tickValue parameter in the ticks array\n       * @param ticks {number[]} the list of ticks being converted\n       * @return {string} string representation of the tickValue parameter\n       */\n      linear: function linear(tickValue, index, ticks) {\n        // If we have lots of ticks, don't use the ones\n        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n        if (Math.abs(delta) > 1) {\n          if (tickValue !== Math.floor(tickValue)) {\n            // not an integer\n            delta = tickValue - Math.floor(tickValue);\n          }\n        }\n\n        var logDelta = helpers$1.log10(Math.abs(delta));\n        var tickString = '';\n\n        if (tickValue !== 0) {\n          var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n          if (maxTick < 1e-4) {\n            // all ticks are small numbers; use scientific notation\n            var logTick = helpers$1.log10(Math.abs(tickValue));\n            tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n          } else {\n            var numDecimal = -1 * Math.floor(logDelta);\n            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n            tickString = tickValue.toFixed(numDecimal);\n          }\n        } else {\n          tickString = '0'; // never show decimal places for 0\n        }\n\n        return tickString;\n      },\n      logarithmic: function logarithmic(tickValue, index, ticks) {\n        var remain = tickValue / Math.pow(10, Math.floor(helpers$1.log10(tickValue)));\n\n        if (tickValue === 0) {\n          return '0';\n        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n          return tickValue.toExponential();\n        }\n\n        return '';\n      }\n    }\n  };\n  var valueOrDefault$9 = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\n  core_defaults._set('scale', {\n    display: true,\n    position: 'left',\n    offset: false,\n    // grid line settings\n    gridLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickMarkLength: 10,\n      zeroLineWidth: 1,\n      zeroLineColor: 'rgba(0,0,0,0.25)',\n      zeroLineBorderDash: [],\n      zeroLineBorderDashOffset: 0.0,\n      offsetGridLines: false,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    // scale label\n    scaleLabel: {\n      // display property\n      display: false,\n      // actual label\n      labelString: '',\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    // label settings\n    ticks: {\n      beginAtZero: false,\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      padding: 0,\n      reverse: false,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 0,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: core_ticks.formatters.values,\n      minor: {},\n      major: {}\n    }\n  });\n\n  function labelsFromTicks(ticks) {\n    var labels = [];\n    var i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      labels.push(ticks[i].label);\n    }\n\n    return labels;\n  }\n\n  function getPixelForGridLine(scale, index, offsetGridLines) {\n    var lineValue = scale.getPixelForTick(index);\n\n    if (offsetGridLines) {\n      if (scale.getTicks().length === 1) {\n        lineValue -= scale.isHorizontal() ? Math.max(lineValue - scale.left, scale.right - lineValue) : Math.max(lineValue - scale.top, scale.bottom - lineValue);\n      } else if (index === 0) {\n        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n      } else {\n        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n      }\n    }\n\n    return lineValue;\n  }\n\n  function computeTextSize(context, tick, font) {\n    return helpers$1.isArray(tick) ? helpers$1.longestText(context, font, tick) : context.measureText(tick).width;\n  }\n\n  var core_scale = core_element.extend({\n    /**\n     * Get the padding needed for the scale\n     * @method getPadding\n     * @private\n     * @returns {Padding} the necessary padding\n     */\n    getPadding: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    },\n\n    /**\n     * Returns the scale tick objects ({label, major})\n     * @since 2.7\n     */\n    getTicks: function getTicks() {\n      return this._ticks;\n    },\n    // These methods are ordered by lifecyle. Utilities then follow.\n    // Any function defined here is inherited by all scale types.\n    // Any function can be extended by the scale type\n    mergeTicksOptions: function mergeTicksOptions() {\n      var ticks = this.options.ticks;\n\n      if (ticks.minor === false) {\n        ticks.minor = {\n          display: false\n        };\n      }\n\n      if (ticks.major === false) {\n        ticks.major = {\n          display: false\n        };\n      }\n\n      for (var key in ticks) {\n        if (key !== 'major' && key !== 'minor') {\n          if (typeof ticks.minor[key] === 'undefined') {\n            ticks.minor[key] = ticks[key];\n          }\n\n          if (typeof ticks.major[key] === 'undefined') {\n            ticks.major[key] = ticks[key];\n          }\n        }\n      }\n    },\n    beforeUpdate: function beforeUpdate() {\n      helpers$1.callback(this.options.beforeUpdate, [this]);\n    },\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = helpers$1.extend({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me._maxLabelLines = 0;\n      me.longestLabelWidth = 0;\n      me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Data min/max\n\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n      // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n      // and must not be accessed directly from outside this class. `this.ticks` being\n      // around for long time and not marked as private, we can't change its structure\n      // without unexpected breaking changes. If you need to access the scale ticks,\n      // use scale.getTicks() instead.\n\n      me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n      // we still support no return (`this.ticks` internally set by calling this method).\n\n      ticks = me.buildTicks() || []; // Allow modification of ticks in callback.\n\n      ticks = me.afterBuildTicks(ticks) || ticks;\n      me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n      // COMPAT, we still support no return (`this.ticks` internally changed by calling\n      // this method and supposed to contain only string values).\n\n      labels = me.convertTicksToLabels(ticks) || me.ticks;\n      me.afterTickToLabelConversion();\n      me.ticks = labels; // BACKWARD COMPATIBILITY\n      // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n      // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        label = labels[i];\n        tick = ticks[i];\n\n        if (!tick) {\n          ticks.push(tick = {\n            label: label,\n            major: false\n          });\n        } else {\n          tick.label = label;\n        }\n      }\n\n      me._ticks = ticks; // Tick Rotation\n\n      me.beforeCalculateTickRotation();\n      me.calculateTickRotation();\n      me.afterCalculateTickRotation(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: function afterUpdate() {\n      helpers$1.callback(this.options.afterUpdate, [this]);\n    },\n    //\n    beforeSetDimensions: function beforeSetDimensions() {\n      helpers$1.callback(this.options.beforeSetDimensions, [this]);\n    },\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    },\n    afterSetDimensions: function afterSetDimensions() {\n      helpers$1.callback(this.options.afterSetDimensions, [this]);\n    },\n    // Data limits\n    beforeDataLimits: function beforeDataLimits() {\n      helpers$1.callback(this.options.beforeDataLimits, [this]);\n    },\n    determineDataLimits: helpers$1.noop,\n    afterDataLimits: function afterDataLimits() {\n      helpers$1.callback(this.options.afterDataLimits, [this]);\n    },\n    //\n    beforeBuildTicks: function beforeBuildTicks() {\n      helpers$1.callback(this.options.beforeBuildTicks, [this]);\n    },\n    buildTicks: helpers$1.noop,\n    afterBuildTicks: function afterBuildTicks(ticks) {\n      var me = this; // ticks is empty for old axis implementations here\n\n      if (helpers$1.isArray(ticks) && ticks.length) {\n        return helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n      } // Support old implementations (that modified `this.ticks` directly in buildTicks)\n\n\n      me.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n      return ticks;\n    },\n    beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n      helpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this; // Convert ticks to strings\n\n      var tickOpts = me.options.ticks;\n      me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n    },\n    afterTickToLabelConversion: function afterTickToLabelConversion() {\n      helpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n    },\n    //\n    beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n      helpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n    },\n    calculateTickRotation: function calculateTickRotation() {\n      var me = this;\n      var context = me.ctx;\n      var tickOpts = me.options.ticks;\n      var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n      // between x offsets between 0 and 1.\n\n      var tickFont = helpers$1.options._parseFont(tickOpts);\n\n      context.font = tickFont.string;\n      var labelRotation = tickOpts.minRotation || 0;\n\n      if (labels.length && me.options.display && me.isHorizontal()) {\n        var originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n        var labelWidth = originalLabelWidth;\n        var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n        var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n        while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n          var angleRadians = helpers$1.toRadians(labelRotation);\n          cosRotation = Math.cos(angleRadians);\n          sinRotation = Math.sin(angleRadians);\n\n          if (sinRotation * originalLabelWidth > me.maxHeight) {\n            // go back one step\n            labelRotation--;\n            break;\n          }\n\n          labelRotation++;\n          labelWidth = cosRotation * originalLabelWidth;\n        }\n      }\n\n      me.labelRotation = labelRotation;\n    },\n    afterCalculateTickRotation: function afterCalculateTickRotation() {\n      helpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n    },\n    //\n    beforeFit: function beforeFit() {\n      helpers$1.callback(this.options.beforeFit, [this]);\n    },\n    fit: function fit() {\n      var me = this; // Reset\n\n      var minSize = me.minSize = {\n        width: 0,\n        height: 0\n      };\n      var labels = labelsFromTicks(me._ticks);\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var scaleLabelOpts = opts.scaleLabel;\n      var gridLineOpts = opts.gridLines;\n\n      var display = me._isVisible();\n\n      var position = opts.position;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var tickFont = parseFont(tickOpts);\n      var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n      if (isHorizontal) {\n        // subtract the margins to line up with the chartArea if we are a full width scale\n        minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n      } else {\n        minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } // height\n\n\n      if (isHorizontal) {\n        minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } else {\n        minSize.height = me.maxHeight; // fill all the height\n      } // Are we showing a title for the scale?\n\n\n      if (scaleLabelOpts.display && display) {\n        var scaleLabelFont = parseFont(scaleLabelOpts);\n        var scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n        var deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n        if (isHorizontal) {\n          minSize.height += deltaHeight;\n        } else {\n          minSize.width += deltaHeight;\n        }\n      } // Don't bother fitting the ticks if we are not showing the labels\n\n\n      if (tickOpts.display && display) {\n        var largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n        var tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n        var lineSpace = tickFont.size * 0.5;\n        var tickPadding = me.options.ticks.padding; // Store max number of lines and widest label for _autoSkip\n\n        me._maxLabelLines = tallestLabelHeightInLines;\n        me.longestLabelWidth = largestTextWidth;\n\n        if (isHorizontal) {\n          var angleRadians = helpers$1.toRadians(me.labelRotation);\n          var cosRotation = Math.cos(angleRadians);\n          var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n          var labelHeight = sinRotation * largestTextWidth + tickFont.lineHeight * tallestLabelHeightInLines + lineSpace; // padding\n\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          me.ctx.font = tickFont.string;\n          var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n          var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n          var offsetLeft = me.getPixelForTick(0) - me.left;\n          var offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n          var paddingLeft, paddingRight; // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n          // which means that the right padding is dominated by the font height\n\n          if (me.labelRotation !== 0) {\n            paddingLeft = position === 'bottom' ? cosRotation * firstLabelWidth : cosRotation * lineSpace;\n            paddingRight = position === 'bottom' ? cosRotation * lineSpace : cosRotation * lastLabelWidth;\n          } else {\n            paddingLeft = firstLabelWidth / 2;\n            paddingRight = lastLabelWidth / 2;\n          }\n\n          me.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n        } else {\n          // A vertical axis is more constrained by the width. Labels are the\n          // dominant factor here, so get that length first and account for padding\n          if (tickOpts.mirror) {\n            largestTextWidth = 0;\n          } else {\n            // use lineSpace for consistency with horizontal axis\n            // tickPadding is not implemented for horizontal\n            largestTextWidth += tickPadding + lineSpace;\n          }\n\n          minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n          me.paddingTop = tickFont.size / 2;\n          me.paddingBottom = tickFont.size / 2;\n        }\n      }\n\n      me.handleMargins();\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n\n    /**\n     * Handle margins and padding interactions\n     * @private\n     */\n    handleMargins: function handleMargins() {\n      var me = this;\n\n      if (me.margins) {\n        me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n        me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n        me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n        me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n      }\n    },\n    afterFit: function afterFit() {\n      helpers$1.callback(this.options.afterFit, [this]);\n    },\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    isFullWidth: function isFullWidth() {\n      return this.options.fullWidth;\n    },\n    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n    getRightValue: function getRightValue(rawValue) {\n      // Null and undefined values first\n      if (helpers$1.isNullOrUndef(rawValue)) {\n        return NaN;\n      } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n      if ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n        return NaN;\n      } // If it is in fact an object, dive in one more level\n\n\n      if (rawValue) {\n        if (this.isHorizontal()) {\n          if (rawValue.x !== undefined) {\n            return this.getRightValue(rawValue.x);\n          }\n        } else if (rawValue.y !== undefined) {\n          return this.getRightValue(rawValue.y);\n        }\n      } // Value is good, return it\n\n\n      return rawValue;\n    },\n\n    /**\n     * Used to get the value to display in the tooltip for the data at the given index\n     * @param index\n     * @param datasetIndex\n     */\n    getLabelForIndex: helpers$1.noop,\n\n    /**\n     * Returns the location of the given data point. Value can either be an index or a numerical value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param value\n     * @param index\n     * @param datasetIndex\n     */\n    getPixelForValue: helpers$1.noop,\n\n    /**\n     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param pixel\n     */\n    getValueForPixel: helpers$1.noop,\n\n    /**\n     * Returns the location of the tick at the given index\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForTick: function getPixelForTick(index) {\n      var me = this;\n      var offset = me.options.offset;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n        var pixel = tickWidth * index + me.paddingLeft;\n\n        if (offset) {\n          pixel += tickWidth / 2;\n        }\n\n        var finalVal = me.left + pixel;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n      return me.top + index * (innerHeight / (me._ticks.length - 1));\n    },\n\n    /**\n     * Utility for getting the pixel location of a percentage of scale\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForDecimal: function getPixelForDecimal(decimal) {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var valueOffset = innerWidth * decimal + me.paddingLeft;\n        var finalVal = me.left + valueOffset;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      return me.top + decimal * me.height;\n    },\n\n    /**\n     * Returns the pixel for the minimum chart value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getBasePixel: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    },\n    getBaseValue: function getBaseValue() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    },\n\n    /**\n     * Returns a subset of ticks to be plotted to avoid overlapping labels.\n     * @private\n     */\n    _autoSkip: function _autoSkip(ticks) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor;\n      var tickCount = ticks.length;\n      var skipRatio = false;\n      var maxTicks = optionTicks.maxTicksLimit; // Total space needed to display all ticks. First and last ticks are\n      // drawn as their center at end of axis, so tickCount-1\n\n      var ticksLength = me._tickSize() * (tickCount - 1); // Axis length\n\n      var axisLength = isHorizontal ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.PaddingBottom);\n      var result = [];\n      var i, tick;\n\n      if (ticksLength > axisLength) {\n        skipRatio = 1 + Math.floor(ticksLength / axisLength);\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n      }\n\n      for (i = 0; i < tickCount; i++) {\n        tick = ticks[i];\n\n        if (skipRatio > 1 && i % skipRatio > 0) {\n          // leave tick in place but make sure it's not displayed (#4635)\n          delete tick.label;\n        }\n\n        result.push(tick);\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _tickSize: function _tickSize() {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor; // Calculate space needed by label in axis direction.\n\n      var rot = helpers$1.toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = me.longestLabelWidth + padding || 0;\n\n      var tickFont = helpers$1.options._parseFont(optionTicks);\n\n      var h = me._maxLabelLines * tickFont.lineHeight + padding || 0; // Calculate space needed for 1 tick in axis direction.\n\n      return isHorizontal ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    },\n\n    /**\n     * @private\n     */\n    _isVisible: function _isVisible() {\n      var me = this;\n      var chart = me.chart;\n      var display = me.options.display;\n      var i, ilen, meta;\n\n      if (display !== 'auto') {\n        return !!display;\n      } // When 'auto', the scale is visible if at least one associated dataset is visible.\n\n\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n\n          if (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Actually draw the scale on the canvas\n     * @param {object} chartArea - the area of the chart to draw full grid lines on\n     */\n    draw: function draw(chartArea) {\n      var me = this;\n      var options = me.options;\n\n      if (!me._isVisible()) {\n        return;\n      }\n\n      var chart = me.chart;\n      var context = me.ctx;\n      var globalDefaults = core_defaults.global;\n      var defaultFontColor = globalDefaults.defaultFontColor;\n      var optionTicks = options.ticks.minor;\n      var optionMajorTicks = options.ticks.major || optionTicks;\n      var gridLines = options.gridLines;\n      var scaleLabel = options.scaleLabel;\n      var position = options.position;\n      var isRotated = me.labelRotation !== 0;\n      var isMirrored = optionTicks.mirror;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n      var tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n      var tickFont = parseFont(optionTicks);\n      var lineHeight = tickFont.lineHeight;\n      var majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n      var majorTickFont = parseFont(optionMajorTicks);\n      var tickPadding = optionTicks.padding;\n      var labelOffset = optionTicks.labelOffset;\n      var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n      var scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n      var scaleLabelFont = parseFont(scaleLabel);\n      var scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n      var labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n      var itemsToDraw = [];\n      var axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n      var alignPixel = helpers$1._alignPixel;\n      var borderValue, tickStart, tickEnd;\n\n      if (position === 'top') {\n        borderValue = alignPixel(chart, me.bottom, axisWidth);\n        tickStart = me.bottom - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else if (position === 'bottom') {\n        borderValue = alignPixel(chart, me.top, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignPixel(chart, me.right, axisWidth);\n        tickStart = me.right - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else {\n        borderValue = alignPixel(chart, me.left, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.left + tl;\n      }\n\n      var epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n      helpers$1.each(ticks, function (tick, index) {\n        // autoskipper skipped this tick (#4635)\n        if (helpers$1.isNullOrUndef(tick.label)) {\n          return;\n        }\n\n        var label = tick.label;\n        var lineWidth, lineColor, borderDash, borderDashOffset;\n\n        if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n          // Draw the first index specially\n          lineWidth = gridLines.zeroLineWidth;\n          lineColor = gridLines.zeroLineColor;\n          borderDash = gridLines.zeroLineBorderDash || [];\n          borderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n        } else {\n          lineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n          lineColor = valueAtIndexOrDefault(gridLines.color, index);\n          borderDash = gridLines.borderDash || [];\n          borderDashOffset = gridLines.borderDashOffset || 0.0;\n        } // Common properties\n\n\n        var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n        var labelCount = helpers$1.isArray(label) ? label.length : 1;\n        var lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n        if (isHorizontal) {\n          var labelYOffset = tl + tickPadding;\n\n          if (lineValue < me.left - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n          ty1 = tickStart;\n          ty2 = tickEnd;\n          labelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n          if (position === 'top') {\n            y1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n            y2 = chartArea.bottom;\n            textOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'left';\n            labelY = me.bottom - labelYOffset;\n          } else {\n            y1 = chartArea.top;\n            y2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n            textOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'right';\n            labelY = me.top + labelYOffset;\n          }\n        } else {\n          var labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n          if (lineValue < me.top - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tickStart;\n          tx2 = tickEnd;\n          ty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n          labelY = me.getPixelForTick(index) + labelOffset;\n          textOffset = (1 - labelCount) * lineHeight / 2;\n\n          if (position === 'left') {\n            x1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n            x2 = chartArea.right;\n            textAlign = isMirrored ? 'left' : 'right';\n            labelX = me.right - labelXOffset;\n          } else {\n            x1 = chartArea.left;\n            x2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n            textAlign = isMirrored ? 'right' : 'left';\n            labelX = me.left + labelXOffset;\n          }\n        }\n\n        itemsToDraw.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          labelX: labelX,\n          labelY: labelY,\n          glWidth: lineWidth,\n          glColor: lineColor,\n          glBorderDash: borderDash,\n          glBorderDashOffset: borderDashOffset,\n          rotation: -1 * labelRotationRadians,\n          label: label,\n          major: tick.major,\n          textOffset: textOffset,\n          textAlign: textAlign\n        });\n      }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n      helpers$1.each(itemsToDraw, function (itemToDraw) {\n        var glWidth = itemToDraw.glWidth;\n        var glColor = itemToDraw.glColor;\n\n        if (gridLines.display && glWidth && glColor) {\n          context.save();\n          context.lineWidth = glWidth;\n          context.strokeStyle = glColor;\n\n          if (context.setLineDash) {\n            context.setLineDash(itemToDraw.glBorderDash);\n            context.lineDashOffset = itemToDraw.glBorderDashOffset;\n          }\n\n          context.beginPath();\n\n          if (gridLines.drawTicks) {\n            context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n            context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n          }\n\n          if (gridLines.drawOnChartArea) {\n            context.moveTo(itemToDraw.x1, itemToDraw.y1);\n            context.lineTo(itemToDraw.x2, itemToDraw.y2);\n          }\n\n          context.stroke();\n          context.restore();\n        }\n\n        if (optionTicks.display) {\n          // Make sure we draw text in the correct color and font\n          context.save();\n          context.translate(itemToDraw.labelX, itemToDraw.labelY);\n          context.rotate(itemToDraw.rotation);\n          context.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n          context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n          context.textBaseline = 'middle';\n          context.textAlign = itemToDraw.textAlign;\n          var label = itemToDraw.label;\n          var y = itemToDraw.textOffset;\n\n          if (helpers$1.isArray(label)) {\n            for (var i = 0; i < label.length; ++i) {\n              // We just make sure the multiline element is a string here..\n              context.fillText('' + label[i], 0, y);\n              y += lineHeight;\n            }\n          } else {\n            context.fillText(label, 0, y);\n          }\n\n          context.restore();\n        }\n      });\n\n      if (scaleLabel.display) {\n        // Draw the scale label\n        var scaleLabelX;\n        var scaleLabelY;\n        var rotation = 0;\n        var halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n        if (isHorizontal) {\n          scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n          scaleLabelY = position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n        } else {\n          var isLeft = position === 'left';\n          scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n          scaleLabelY = me.top + (me.bottom - me.top) / 2;\n          rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n        }\n\n        context.save();\n        context.translate(scaleLabelX, scaleLabelY);\n        context.rotate(rotation);\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n        context.font = scaleLabelFont.string;\n        context.fillText(scaleLabel.labelString, 0, 0);\n        context.restore();\n      }\n\n      if (axisWidth) {\n        // Draw the line at the edge of the axis\n        var firstLineWidth = axisWidth;\n        var lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n        var x1, x2, y1, y2;\n\n        if (isHorizontal) {\n          x1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n          x2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n          y1 = y2 = borderValue;\n        } else {\n          y1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n          y2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n          x1 = x2 = borderValue;\n        }\n\n        context.lineWidth = axisWidth;\n        context.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n      }\n    }\n  });\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var scale_category = core_scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n\n      if (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n        return me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + widthOffset;\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + heightOffset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults = defaultConfig;\n  scale_category._defaults = _defaults;\n  var noop = helpers$1.noop;\n  var isNullOrUndef = helpers$1.isNullOrUndef;\n  /**\n   * Generate a set of linear ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks(generationOptions, dataRange) {\n    var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n    // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n    // for details.\n\n    var MIN_SPACING = 1e-14;\n    var stepSize = generationOptions.stepSize;\n    var unit = stepSize || 1;\n    var maxNumSpaces = generationOptions.maxTicks - 1;\n    var min = generationOptions.min;\n    var max = generationOptions.max;\n    var precision = generationOptions.precision;\n    var rmin = dataRange.min;\n    var rmax = dataRange.max;\n    var spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n    var factor, niceMin, niceMax, numSpaces; // Beyond MIN_SPACING floating point numbers being to lose precision\n    // such that we can't do the math necessary to generate ticks\n\n    if (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n      return [rmin, rmax];\n    }\n\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n    if (numSpaces > maxNumSpaces) {\n      // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n      spacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n    }\n\n    if (stepSize || isNullOrUndef(precision)) {\n      // If a precision is not specified, calculate factor based on spacing\n      factor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n    } else {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n    if (stepSize) {\n      // If very close to our whole number, use it.\n      if (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n        niceMin = min;\n      }\n\n      if (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n        niceMax = max;\n      }\n    }\n\n    numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n    if (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    ticks.push(isNullOrUndef(min) ? niceMin : min);\n\n    for (var j = 1; j < numSpaces; ++j) {\n      ticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n    }\n\n    ticks.push(isNullOrUndef(max) ? niceMax : max);\n    return ticks;\n  }\n\n  var scale_linearbase = core_scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers$1.sign(me.min);\n        var maxSign = helpers$1.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var stepSize = tickOpts.stepSize;\n      var maxTicksLimit = tickOpts.maxTicksLimit;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me._computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    },\n    _computeTickLimit: function _computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    },\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      core_scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n  var defaultConfig$1 = {\n    position: 'left',\n    ticks: {\n      callback: core_ticks.formatters.linear\n    }\n  };\n  var scale_linear = scale_linearbase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers$1.min(values);\n          var maxVal = helpers$1.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      var me = this;\n      var tickFont;\n\n      if (me.isHorizontal()) {\n        return Math.ceil(me.width / 40);\n      }\n\n      tickFont = helpers$1.options._parseFont(me.options.ticks);\n      return Math.ceil(me.height / tickFont.lineHeight);\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$1 = defaultConfig$1;\n  scale_linear._defaults = _defaults$1;\n  var valueOrDefault$a = helpers$1.valueOrDefault;\n  /**\n   * Generate a set of logarithmic ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks$1(generationOptions, dataRange) {\n    var ticks = [];\n    var tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n    var endExp = Math.floor(helpers$1.log10(dataRange.max));\n    var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    var exp, significand;\n\n    if (tickVal === 0) {\n      exp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n      significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n      ticks.push(tickVal);\n      tickVal = significand * Math.pow(10, exp);\n    } else {\n      exp = Math.floor(helpers$1.log10(tickVal));\n      significand = Math.floor(tickVal / Math.pow(10, exp));\n    }\n\n    var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n    do {\n      ticks.push(tickVal);\n      ++significand;\n\n      if (significand === 10) {\n        significand = 1;\n        ++exp;\n        precision = exp >= 0 ? 1 : precision;\n      }\n\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n    var lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n    ticks.push(lastTick);\n    return ticks;\n  }\n\n  var defaultConfig$2 = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: core_ticks.formatters.logarithmic\n    }\n  }; // TODO(v3): change this to positiveOrDefault\n\n  function nonNegativeOrDefault(value, defaultValue) {\n    return helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n  }\n\n  var scale_logarithmic = core_scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers$1.min(valuesForType);\n            var maxVal = helpers$1.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = nonNegativeOrDefault(tickOpts.min, me.min);\n      me.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: nonNegativeOrDefault(tickOpts.min),\n        max: nonNegativeOrDefault(tickOpts.max)\n      };\n      var ticks = me.ticks = generateTicks$1(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      core_scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {number} value - The minimum not zero value.\n     * @return {number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers$1.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$2 = defaultConfig$2;\n  scale_logarithmic._defaults = _defaults$2;\n  var valueOrDefault$b = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\n  var resolve$7 = helpers$1.options.resolve;\n  var defaultConfig$3 = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: core_ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getTickBackdropHeight(opts) {\n    var tickOpts = opts.ticks;\n\n    if (tickOpts.display && opts.display) {\n      return valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n    }\n\n    return 0;\n  }\n\n  function measureLabelSize(ctx, lineHeight, label) {\n    if (helpers$1.isArray(label)) {\n      return {\n        w: helpers$1.longestText(ctx, ctx.font, label),\n        h: label.length * lineHeight\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: lineHeight\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    // Right, this is really confusing and there is a lot of maths going on here\n    // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n    //\n    // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n    //\n    // Solution:\n    //\n    // We assume the radius of the polygon is half the size of the canvas at first\n    // at each index we check if the text overlaps.\n    //\n    // Where it does, we store that angle and that index.\n    //\n    // After finding the largest index and angle we calculate how much we need to remove\n    // from the shape radius to move the point inwards by that x.\n    //\n    // We average the left and right distances to get the maximum shape radius that can fit in the box\n    // along with labels.\n    //\n    // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n    // on each side, removing that from the size, halving it and adding the left x protrusion width.\n    //\n    // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n    // and position it in the most space efficient manner\n    //\n    // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n    var plFont = helpers$1.options._parseFont(scale.options.pointLabels); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n\n    var furthestLimits = {\n      l: 0,\n      r: scale.width,\n      t: 0,\n      b: scale.height - scale.paddingTop\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.string;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n      textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers$1.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, lineHeight) {\n    var y = position.y + lineHeight / 2;\n    var i, ilen;\n\n    if (helpers$1.isArray(text)) {\n      for (i = 0, ilen = text.length; i < ilen; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += lineHeight;\n      }\n    } else {\n      ctx.fillText(text, position.x, y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var gridLineOpts = opts.gridLines;\n    var pointLabelOpts = opts.pointLabels;\n    var lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n    var lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n    var tickBackdropHeight = getTickBackdropHeight(opts);\n    ctx.save();\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = lineColor;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n      ctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n    }\n\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n    ctx.font = plFont.string;\n    ctx.textBaseline = 'middle';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display && lineWidth && lineColor) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra pixels out for some label spacing\n        var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers$1.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n      }\n    }\n\n    ctx.restore();\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    var circular = gridLineOpts.circular;\n    var valueCount = getValueCount(scale);\n    var lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n    var lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n    var pointPosition;\n\n    if (!circular && !valueCount || !lineColor || !lineWidth) {\n      return;\n    }\n\n    ctx.save();\n    ctx.strokeStyle = lineColor;\n    ctx.lineWidth = lineWidth;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(gridLineOpts.borderDash || []);\n      ctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n    }\n\n    ctx.beginPath();\n\n    if (circular) {\n      // Draw circular arcs between the points\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n    } else {\n      // Draw straight lines connecting each index\n      pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  function numberOrZero(param) {\n    return helpers$1.isNumber(param) ? param : 0;\n  }\n\n  var scale_radialLinear = scale_linearbase.extend({\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers$1.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers$1.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      scale_linearbase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0);\n\n        var tickFont = helpers$1.options._parseFont(tickOpts);\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n\n        helpers$1.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n              ctx.font = tickFont.string;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFont.size + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n      }\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$3 = defaultConfig$3;\n  scale_radialLinear._defaults = _defaults$3;\n  var valueOrDefault$c = helpers$1.valueOrDefault; // Integer constants are from the ES6 spec.\n\n  var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\n  var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n  var INTERVALS = {\n    millisecond: {\n      common: true,\n      size: 1,\n      steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n    },\n    second: {\n      common: true,\n      size: 1000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    minute: {\n      common: true,\n      size: 60000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    hour: {\n      common: true,\n      size: 3600000,\n      steps: [1, 2, 3, 6, 12]\n    },\n    day: {\n      common: true,\n      size: 86400000,\n      steps: [1, 2, 5]\n    },\n    week: {\n      common: false,\n      size: 604800000,\n      steps: [1, 2, 3, 4]\n    },\n    month: {\n      common: true,\n      size: 2.628e9,\n      steps: [1, 2, 3]\n    },\n    quarter: {\n      common: false,\n      size: 7.884e9,\n      steps: [1, 2, 3, 4]\n    },\n    year: {\n      common: true,\n      size: 3.154e10\n    }\n  };\n  var UNITS = Object.keys(INTERVALS);\n\n  function sorter(a, b) {\n    return a - b;\n  }\n\n  function arrayUnique(items) {\n    var hash = {};\n    var out = [];\n    var i, ilen, item;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n\n      if (!hash[item]) {\n        hash[item] = true;\n        out.push(item);\n      }\n    }\n\n    return out;\n  }\n  /**\n   * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n   * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n   * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n   * extremity (left + width or top + height). Note that it would be more optimized to directly\n   * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n   * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n   *\n   * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n   * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n   * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n   * If 'series', timestamps will be positioned at the same distance from each other. In this\n   * case, only timestamps that break the time linearity are registered, meaning that in the\n   * best case, all timestamps are linear, the table contains only min and max.\n   */\n\n\n  function buildLookupTable(timestamps, min, max, distribution) {\n    if (distribution === 'linear' || !timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    var table = [];\n    var items = [min];\n    var i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n\n    items.push(max);\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i]; // only add points that breaks the scale linearity\n\n      if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  } // @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\n  function lookup(table, key, value) {\n    var lo = 0;\n    var hi = table.length - 1;\n    var mid, i0, i1;\n\n    while (lo >= 0 && lo <= hi) {\n      mid = lo + hi >> 1;\n      i0 = table[mid - 1] || null;\n      i1 = table[mid];\n\n      if (!i0) {\n        // given value is outside table (before first item)\n        return {\n          lo: null,\n          hi: i1\n        };\n      } else if (i1[key] < value) {\n        lo = mid + 1;\n      } else if (i0[key] > value) {\n        hi = mid - 1;\n      } else {\n        return {\n          lo: i0,\n          hi: i1\n        };\n      }\n    } // given value is outside table (after last item)\n\n\n    return {\n      lo: i1,\n      hi: null\n    };\n  }\n  /**\n   * Linearly interpolates the given source `value` using the table items `skey` values and\n   * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n   * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n   * index [0, 1] or [n - 1, n] are used for the interpolation.\n   */\n\n\n  function interpolate$1(table, skey, sval, tkey) {\n    var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n    var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n    var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n    var span = next[skey] - prev[skey];\n    var ratio = span ? (sval - prev[skey]) / span : 0;\n    var offset = (next[tkey] - prev[tkey]) * ratio;\n    return prev[tkey] + offset;\n  }\n\n  function toTimestamp(scale, input) {\n    var adapter = scale._adapter;\n    var options = scale.options.time;\n    var parser = options.parser;\n    var format = parser || options.format;\n    var value = input;\n\n    if (typeof parser === 'function') {\n      value = parser(value);\n    } // Only parse if its not a timestamp already\n\n\n    if (!helpers$1.isFinite(value)) {\n      value = typeof format === 'string' ? adapter.parse(value, format) : adapter.parse(value);\n    }\n\n    if (value !== null) {\n      return +value;\n    } // Labels are in an incompatible format and no `parser` has been provided.\n    // The user might still use the deprecated `format` option for parsing.\n\n\n    if (!parser && typeof format === 'function') {\n      value = format(input); // `format` could return something else than a timestamp, if so, parse it\n\n      if (!helpers$1.isFinite(value)) {\n        value = adapter.parse(value);\n      }\n    }\n\n    return value;\n  }\n\n  function parse(scale, input) {\n    if (helpers$1.isNullOrUndef(input)) {\n      return null;\n    }\n\n    var options = scale.options.time;\n    var value = toTimestamp(scale, scale.getRightValue(input));\n\n    if (value === null) {\n      return value;\n    }\n\n    if (options.round) {\n      value = +scale._adapter.startOf(value, options.round);\n    }\n\n    return value;\n  }\n  /**\n   * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n   * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n   */\n\n\n  function determineStepSize(min, max, unit, capacity) {\n    var range = max - min;\n    var interval = INTERVALS[unit];\n    var milliseconds = interval.size;\n    var steps = interval.steps;\n    var i, ilen, factor;\n\n    if (!steps) {\n      return Math.ceil(range / (capacity * milliseconds));\n    }\n\n    for (i = 0, ilen = steps.length; i < ilen; ++i) {\n      factor = steps[i];\n\n      if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n        break;\n      }\n    }\n\n    return factor;\n  }\n  /**\n   * Figures out what unit results in an appropriate number of auto-generated ticks\n   */\n\n\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    var ilen = UNITS.length;\n    var i, interval, factor;\n\n    for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n      interval = INTERVALS[UNITS[i]];\n      factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n        return UNITS[i];\n      }\n    }\n\n    return UNITS[ilen - 1];\n  }\n  /**\n   * Figures out what unit to format a set of ticks with\n   */\n\n\n  function determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n    var ilen = UNITS.length;\n    var i, unit;\n\n    for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n      unit = UNITS[i];\n\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n        return unit;\n      }\n    }\n\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n  }\n\n  function determineMajorUnit(unit) {\n    for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n      if (INTERVALS[UNITS[i]].common) {\n        return UNITS[i];\n      }\n    }\n  }\n  /**\n   * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n   * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n   * Important: this method can return ticks outside the min and max range, it's the\n   * responsibility of the calling code to clamp values if needed.\n   */\n\n\n  function generate(scale, min, max, capacity) {\n    var adapter = scale._adapter;\n    var options = scale.options;\n    var timeOpts = options.time;\n    var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n    var major = determineMajorUnit(minor);\n    var stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n    var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    var majorTicksEnabled = options.ticks.major.enabled;\n    var interval = INTERVALS[minor];\n    var first = min;\n    var last = max;\n    var ticks = [];\n    var time;\n\n    if (!stepSize) {\n      stepSize = determineStepSize(min, max, minor, capacity);\n    } // For 'week' unit, handle the first day of week option\n\n\n    if (weekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n      last = +adapter.startOf(last, 'isoWeek', weekday);\n    } // Align first/last ticks on unit\n\n\n    first = +adapter.startOf(first, weekday ? 'day' : minor);\n    last = +adapter.startOf(last, weekday ? 'day' : minor); // Make sure that the last tick include max\n\n    if (last < max) {\n      last = +adapter.add(last, 1, minor);\n    }\n\n    time = first;\n\n    if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n      // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n      // we first aligned time on the previous `major` unit then add the number of full\n      // stepSize there is between first and the previous major time.\n      time = +adapter.startOf(time, major);\n      time = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n    }\n\n    for (; time < last; time = +adapter.add(time, stepSize, minor)) {\n      ticks.push(+time);\n    }\n\n    ticks.push(+time);\n    return ticks;\n  }\n  /**\n   * Returns the start and end offsets from edges in the form of {start, end}\n   * where each value is a relative width to the scale and ranges between 0 and 1.\n   * They add extra margins on the both sides by scaling down the original scale.\n   * Offsets are added when the `offset` option is true.\n   */\n\n\n  function computeOffsets(table, ticks, min, max, options) {\n    var start = 0;\n    var end = 0;\n    var first, last;\n\n    if (options.offset && ticks.length) {\n      if (!options.time.min) {\n        first = interpolate$1(table, 'time', ticks[0], 'pos');\n\n        if (ticks.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n        }\n      }\n\n      if (!options.time.max) {\n        last = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\n        if (ticks.length === 1) {\n          end = last;\n        } else {\n          end = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n        }\n      }\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  }\n\n  function ticksFromTimestamps(scale, values, majorUnit) {\n    var ticks = [];\n    var i, ilen, value, major;\n\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n      value = values[i];\n      major = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n      ticks.push({\n        value: value,\n        major: major\n      });\n    }\n\n    return ticks;\n  }\n\n  var defaultConfig$4 = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var scale_time = core_scale.extend({\n    initialize: function initialize() {\n      this.mergeTicksOptions();\n      core_scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options;\n      var time = options.time || (options.time = {});\n      var adapter = me._adapter = new core_adapters._date(options.adapters.date); // DEPRECATIONS: output a message only one time per update\n\n      if (time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      } // Backward compatibility: before introducing adapter, `displayFormats` was\n      // supposed to contain *all* unit/string pairs but this can't be resolved\n      // when loading the scale (adapters are loaded afterward), so let's populate\n      // missing formats on update\n\n\n      helpers$1.mergeIf(time.displayFormats, adapter.formats());\n      return core_scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp;\n      var dataLabels = chart.data.labels || []; // Convert labels to timestamps\n\n      for (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n        labels.push(parse(me, dataLabels[i]));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers$1.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(me, data[j]);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            for (j = 0, jlen = labels.length; j < jlen; ++j) {\n              timestamps.push(labels[j]);\n            }\n\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n      max = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n      if (options.ticks.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var adapter = me._adapter;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers$1.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var adapter = me._adapter;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = +adapter.startOf(time, majorUnit);\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var isReverse = me.options.ticks.reverse;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n      var pos = interpolate$1(me._table, 'time', time, 'pos');\n      var offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n      return isReverse ? start - offset : start + offset;\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(me, value);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n      var time = interpolate$1(me._table, 'pos', pos, 'time'); // DEPRECATION, we should return time directly\n\n      return me._adapter._create(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers$1.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this; // pick the longest format (milliseconds) for guestimation\n\n      var format = me.options.time.displayFormats.millisecond;\n      var exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$4 = defaultConfig$4;\n  scale_time._defaults = _defaults$4;\n  var scales = {\n    category: scale_category,\n    linear: scale_linear,\n    logarithmic: scale_logarithmic,\n    radialLinear: scale_radialLinear,\n    time: scale_time\n  };\n  var FORMATS = {\n    datetime: 'MMM D, YYYY, h:mm:ss a',\n    millisecond: 'h:mm:ss.SSS a',\n    second: 'h:mm:ss a',\n    minute: 'h:mm a',\n    hour: 'hA',\n    day: 'MMM D',\n    week: 'll',\n    month: 'MMM YYYY',\n    quarter: '[Q]Q - YYYY',\n    year: 'YYYY'\n  };\n\n  core_adapters._date.override(typeof moment === 'function' ? {\n    _id: 'moment',\n    // DEBUG ONLY\n    formats: function formats() {\n      return FORMATS;\n    },\n    parse: function parse(value, format) {\n      if (typeof value === 'string' && typeof format === 'string') {\n        value = moment(value, format);\n      } else if (!(value instanceof moment)) {\n        value = moment(value);\n      }\n\n      return value.isValid() ? value.valueOf() : null;\n    },\n    format: function format(time, _format) {\n      return moment(time).format(_format);\n    },\n    add: function add(time, amount, unit) {\n      return moment(time).add(amount, unit).valueOf();\n    },\n    diff: function diff(max, min, unit) {\n      return moment.duration(moment(max).diff(moment(min))).as(unit);\n    },\n    startOf: function startOf(time, unit, weekday) {\n      time = moment(time);\n\n      if (unit === 'isoWeek') {\n        return time.isoWeekday(weekday).valueOf();\n      }\n\n      return time.startOf(unit).valueOf();\n    },\n    endOf: function endOf(time, unit) {\n      return moment(time).endOf(unit).valueOf();\n    },\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility with scale.getValueForPixel().\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(time) {\n      return moment(time);\n    }\n  } : {});\n\n  core_defaults._set('global', {\n    plugins: {\n      filler: {\n        propagate: true\n      }\n    }\n  });\n\n  var mappers = {\n    dataset: function dataset(source) {\n      var index = source.fill;\n      var chart = source.chart;\n      var meta = chart.getDatasetMeta(index);\n      var visible = meta && chart.isDatasetVisible(index);\n      var points = visible && meta.dataset._children || [];\n      var length = points.length || 0;\n      return !length ? null : function (point, i) {\n        return i < length && points[i]._view || null;\n      };\n    },\n    boundary: function boundary(source) {\n      var boundary = source.boundary;\n      var x = boundary ? boundary.x : null;\n      var y = boundary ? boundary.y : null;\n      return function (point) {\n        return {\n          x: x === null ? point.x : x,\n          y: y === null ? point.y : y\n        };\n      };\n    }\n  }; // @todo if (fill[0] === '#')\n\n  function decodeFill(el, index, count) {\n    var model = el._model || {};\n    var fill = model.fill;\n    var target;\n\n    if (fill === undefined) {\n      fill = !!model.backgroundColor;\n    }\n\n    if (fill === false || fill === null) {\n      return false;\n    }\n\n    if (fill === true) {\n      return 'origin';\n    }\n\n    target = parseFloat(fill, 10);\n\n    if (isFinite(target) && Math.floor(target) === target) {\n      if (fill[0] === '-' || fill[0] === '+') {\n        target = index + target;\n      }\n\n      if (target === index || target < 0 || target >= count) {\n        return false;\n      }\n\n      return target;\n    }\n\n    switch (fill) {\n      // compatibility\n      case 'bottom':\n        return 'start';\n\n      case 'top':\n        return 'end';\n\n      case 'zero':\n        return 'origin';\n      // supported boundaries\n\n      case 'origin':\n      case 'start':\n      case 'end':\n        return fill;\n      // invalid fill values\n\n      default:\n        return false;\n    }\n  }\n\n  function computeBoundary(source) {\n    var model = source.el._model || {};\n    var scale = source.el._scale || {};\n    var fill = source.fill;\n    var target = null;\n    var horizontal;\n\n    if (isFinite(fill)) {\n      return null;\n    } // Backward compatibility: until v3, we still need to support boundary values set on\n    // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n    // controllers might still use it (e.g. the Smith chart).\n\n\n    if (fill === 'start') {\n      target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n    } else if (fill === 'end') {\n      target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n    } else if (model.scaleZero !== undefined) {\n      target = model.scaleZero;\n    } else if (scale.getBasePosition) {\n      target = scale.getBasePosition();\n    } else if (scale.getBasePixel) {\n      target = scale.getBasePixel();\n    }\n\n    if (target !== undefined && target !== null) {\n      if (target.x !== undefined && target.y !== undefined) {\n        return target;\n      }\n\n      if (helpers$1.isFinite(target)) {\n        horizontal = scale.isHorizontal();\n        return {\n          x: horizontal ? target : null,\n          y: horizontal ? null : target\n        };\n      }\n    }\n\n    return null;\n  }\n\n  function resolveTarget(sources, index, propagate) {\n    var source = sources[index];\n    var fill = source.fill;\n    var visited = [index];\n    var target;\n\n    if (!propagate) {\n      return fill;\n    }\n\n    while (fill !== false && visited.indexOf(fill) === -1) {\n      if (!isFinite(fill)) {\n        return fill;\n      }\n\n      target = sources[fill];\n\n      if (!target) {\n        return false;\n      }\n\n      if (target.visible) {\n        return fill;\n      }\n\n      visited.push(fill);\n      fill = target.fill;\n    }\n\n    return false;\n  }\n\n  function createMapper(source) {\n    var fill = source.fill;\n    var type = 'dataset';\n\n    if (fill === false) {\n      return null;\n    }\n\n    if (!isFinite(fill)) {\n      type = 'boundary';\n    }\n\n    return mappers[type](source);\n  }\n\n  function isDrawable(point) {\n    return point && !point.skip;\n  }\n\n  function drawArea(ctx, curve0, curve1, len0, len1) {\n    var i;\n\n    if (!len0 || !len1) {\n      return;\n    } // building first area curve (normal)\n\n\n    ctx.moveTo(curve0[0].x, curve0[0].y);\n\n    for (i = 1; i < len0; ++i) {\n      helpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n    } // joining the two area curves\n\n\n    ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n    for (i = len1 - 1; i > 0; --i) {\n      helpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n    }\n  }\n\n  function doFill(ctx, points, mapper, view, color, loop) {\n    var count = points.length;\n    var span = view.spanGaps;\n    var curve0 = [];\n    var curve1 = [];\n    var len0 = 0;\n    var len1 = 0;\n    var i, ilen, index, p0, p1, d0, d1;\n    ctx.beginPath();\n\n    for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n      index = i % count;\n      p0 = points[index]._view;\n      p1 = mapper(p0, index, view);\n      d0 = isDrawable(p0);\n      d1 = isDrawable(p1);\n\n      if (d0 && d1) {\n        len0 = curve0.push(p0);\n        len1 = curve1.push(p1);\n      } else if (len0 && len1) {\n        if (!span) {\n          drawArea(ctx, curve0, curve1, len0, len1);\n          len0 = len1 = 0;\n          curve0 = [];\n          curve1 = [];\n        } else {\n          if (d0) {\n            curve0.push(p0);\n          }\n\n          if (d1) {\n            curve1.push(p1);\n          }\n        }\n      }\n    }\n\n    drawArea(ctx, curve0, curve1, len0, len1);\n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n  }\n\n  var plugin_filler = {\n    id: 'filler',\n    afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n      var count = (chart.data.datasets || []).length;\n      var propagate = options.propagate;\n      var sources = [];\n      var meta, i, el, source;\n\n      for (i = 0; i < count; ++i) {\n        meta = chart.getDatasetMeta(i);\n        el = meta.dataset;\n        source = null;\n\n        if (el && el._model && el instanceof elements.Line) {\n          source = {\n            visible: chart.isDatasetVisible(i),\n            fill: decodeFill(el, i, count),\n            chart: chart,\n            el: el\n          };\n        }\n\n        meta.$filler = source;\n        sources.push(source);\n      }\n\n      for (i = 0; i < count; ++i) {\n        source = sources[i];\n\n        if (!source) {\n          continue;\n        }\n\n        source.fill = resolveTarget(sources, i, propagate);\n        source.boundary = computeBoundary(source);\n        source.mapper = createMapper(source);\n      }\n    },\n    beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n      var meta = args.meta.$filler;\n\n      if (!meta) {\n        return;\n      }\n\n      var ctx = chart.ctx;\n      var el = meta.el;\n      var view = el._view;\n      var points = el._children || [];\n      var mapper = meta.mapper;\n      var color = view.backgroundColor || core_defaults.global.defaultColor;\n\n      if (mapper && color && points.length) {\n        helpers$1.canvas.clipArea(ctx, chart.chartArea);\n        doFill(ctx, points, mapper, view, color, el._loop);\n        helpers$1.canvas.unclipArea(ctx);\n      }\n    }\n  };\n  var noop$1 = helpers$1.noop;\n  var valueOrDefault$d = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    legend: {\n      display: true,\n      position: 'top',\n      fullWidth: true,\n      reverse: false,\n      weight: 1000,\n      // a callback that will handle\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.datasetIndex;\n        var ci = this.chart;\n        var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n        ci.update();\n      },\n      onHover: null,\n      onLeave: null,\n      labels: {\n        boxWidth: 40,\n        padding: 10,\n        // Generates labels shown in the legend\n        // Valid properties to return:\n        // text : text to display\n        // fillStyle : fill of coloured box\n        // strokeStyle: stroke of coloured box\n        // hidden : if this legend item refers to a hidden item\n        // lineCap : cap style for line\n        // lineDash\n        // lineDashOffset :\n        // lineJoin :\n        // lineWidth :\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          return helpers$1.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n            return {\n              text: dataset.label,\n              fillStyle: !helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n              hidden: !chart.isDatasetVisible(i),\n              lineCap: dataset.borderCapStyle,\n              lineDash: dataset.borderDash,\n              lineDashOffset: dataset.borderDashOffset,\n              lineJoin: dataset.borderJoinStyle,\n              lineWidth: dataset.borderWidth,\n              strokeStyle: dataset.borderColor,\n              pointStyle: dataset.pointStyle,\n              // Below is extra data used for toggling the datasets\n              datasetIndex: i\n            };\n          }, this) : [];\n        }\n      }\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n\n      for (var i = 0; i < chart.data.datasets.length; i++) {\n        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n        if (chart.data.datasets[i].label) {\n          text.push(chart.data.datasets[i].label);\n        }\n\n        text.push('</li>');\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    }\n  });\n  /**\n   * Helper function to get the box width based on the usePointStyle option\n   * @param {object} labelopts - the label options on the legend\n   * @param {number} fontSize - the label font size\n   * @return {number} width of the color box area\n   */\n\n\n  function getBoxWidth(labelOpts, fontSize) {\n    return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ? fontSize : labelOpts.boxWidth;\n  }\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Legend = core_element.extend({\n    initialize: function initialize(config) {\n      helpers$1.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n      this.legendHitBoxes = [];\n      /**\n      \t * @private\n      \t */\n\n      this._hoveredItem = null; // Are we in doughnut mode which has a different data type\n\n      this.doughnutMode = false;\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    // Any function defined here is inherited by all legend types.\n    // Any function can be extended by the legend type\n    beforeUpdate: noop$1,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$1,\n    //\n    beforeSetDimensions: noop$1,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$1,\n    //\n    beforeBuildLabels: noop$1,\n    buildLabels: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n\n      me.legendItems = legendItems;\n    },\n    afterBuildLabels: noop$1,\n    //\n    beforeFit: noop$1,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var display = opts.display;\n      var ctx = me.ctx;\n\n      var labelFont = helpers$1.options._parseFont(labelOpts);\n\n      var fontSize = labelFont.size; // Reset hit boxes\n\n      var hitboxes = me.legendHitBoxes = [];\n      var minSize = me.minSize;\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = display ? 10 : 0;\n      } else {\n        minSize.width = display ? 10 : 0;\n        minSize.height = me.maxHeight; // fill all the height\n      } // Increase sizes here\n\n\n      if (display) {\n        ctx.font = labelFont.string;\n\n        if (isHorizontal) {\n          // Labels\n          // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n          var lineWidths = me.lineWidths = [0];\n          var totalHeight = 0;\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n            if (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n              totalHeight += fontSize + labelOpts.padding;\n              lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n            } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: width,\n              height: fontSize\n            };\n            lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n          });\n          minSize.height += totalHeight;\n        } else {\n          var vPadding = labelOpts.padding;\n          var columnWidths = me.columnWidths = [];\n          var totalWidth = labelOpts.padding;\n          var currentColWidth = 0;\n          var currentColHeight = 0;\n          var itemHeight = fontSize + vPadding;\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n            if (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n              totalWidth += currentColWidth + labelOpts.padding;\n              columnWidths.push(currentColWidth); // previous column width\n\n              currentColWidth = 0;\n              currentColHeight = 0;\n            } // Get max width\n\n\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: itemWidth,\n              height: fontSize\n            };\n          });\n          totalWidth += currentColWidth;\n          columnWidths.push(currentColWidth);\n          minSize.width += totalWidth;\n        }\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$1,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    // Actually draw the legend on the canvas\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor;\n      var lineDefault = globalDefaults.elements.line;\n      var legendWidth = me.width;\n      var lineWidths = me.lineWidths;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\n        var labelFont = helpers$1.options._parseFont(labelOpts);\n\n        var fontSize = labelFont.size;\n        var cursor; // Canvas setup\n\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.strokeStyle = fontColor; // for strikethrough effect\n\n        ctx.fillStyle = fontColor; // render in correct colour\n\n        ctx.font = labelFont.string;\n        var boxWidth = getBoxWidth(labelOpts, fontSize);\n        var hitboxes = me.legendHitBoxes; // current position\n\n        var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n          if (isNaN(boxWidth) || boxWidth <= 0) {\n            return;\n          } // Set the ctx for the box\n\n\n          ctx.save();\n          var lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n          ctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n          ctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n          ctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n          ctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n          if (ctx.setLineDash) {\n            // IE 9 and 10 do not support line dash\n            ctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n          }\n\n          if (opts.labels && opts.labels.usePointStyle) {\n            // Recalculate x and y for drawPoint() because its expecting\n            // x and y to be center of figure (instead of top left)\n            var radius = boxWidth * Math.SQRT2 / 2;\n            var centerX = x + boxWidth / 2;\n            var centerY = y + fontSize / 2; // Draw pointStyle as legend symbol\n\n            helpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n          } else {\n            // Draw box as legend symbol\n            if (lineWidth !== 0) {\n              ctx.strokeRect(x, y, boxWidth, fontSize);\n            }\n\n            ctx.fillRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.restore();\n        };\n\n        var fillText = function fillText(x, y, legendItem, textWidth) {\n          var halfFontSize = fontSize / 2;\n          var xLeft = boxWidth + halfFontSize + x;\n          var yMiddle = y + halfFontSize;\n          ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n          if (legendItem.hidden) {\n            // Strikethrough the text if hidden\n            ctx.beginPath();\n            ctx.lineWidth = 2;\n            ctx.moveTo(xLeft, yMiddle);\n            ctx.lineTo(xLeft + textWidth, yMiddle);\n            ctx.stroke();\n          }\n        }; // Horizontal\n\n\n        var isHorizontal = me.isHorizontal();\n\n        if (isHorizontal) {\n          cursor = {\n            x: me.left + (legendWidth - lineWidths[0]) / 2 + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        } else {\n          cursor = {\n            x: me.left + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        }\n\n        var itemHeight = fontSize + labelOpts.padding;\n        helpers$1.each(me.legendItems, function (legendItem, i) {\n          var textWidth = ctx.measureText(legendItem.text).width;\n          var width = boxWidth + fontSize / 2 + textWidth;\n          var x = cursor.x;\n          var y = cursor.y; // Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n          // instead of me.right and me.bottom because me.width and me.height\n          // may have been changed since me.minSize was calculated\n\n          if (isHorizontal) {\n            if (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n              y = cursor.y += itemHeight;\n              cursor.line++;\n              x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2 + labelOpts.padding;\n            }\n          } else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n            x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n            y = cursor.y = me.top + labelOpts.padding;\n            cursor.line++;\n          }\n\n          drawLegendBox(x, y, legendItem);\n          hitboxes[i].left = x;\n          hitboxes[i].top = y; // Fill the actual label\n\n          fillText(x, y, legendItem, textWidth);\n\n          if (isHorizontal) {\n            cursor.x += width + labelOpts.padding;\n          } else {\n            cursor.y += itemHeight;\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getLegendItemAt: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        // See if we are touching one of the dataset boxes\n        lh = me.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            // Touching an element\n            return me.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n      var type = e.type === 'mouseup' ? 'click' : e.type;\n      var hoveredItem;\n\n      if (type === 'mousemove') {\n        if (!opts.onHover && !opts.onLeave) {\n          return;\n        }\n      } else if (type === 'click') {\n        if (!opts.onClick) {\n          return;\n        }\n      } else {\n        return;\n      } // Chart event already has relative position in it\n\n\n      hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n      if (type === 'click') {\n        if (hoveredItem && opts.onClick) {\n          // use e.native for backwards compatibility\n          opts.onClick.call(me, e.native, hoveredItem);\n        }\n      } else {\n        if (opts.onLeave && hoveredItem !== me._hoveredItem) {\n          if (me._hoveredItem) {\n            opts.onLeave.call(me, e.native, me._hoveredItem);\n          }\n\n          me._hoveredItem = hoveredItem;\n        }\n\n        if (opts.onHover && hoveredItem) {\n          // use e.native for backwards compatibility\n          opts.onHover.call(me, e.native, hoveredItem);\n        }\n      }\n    }\n  });\n\n  function createNewLegendAndAttach(chart, legendOpts) {\n    var legend = new Legend({\n      ctx: chart.ctx,\n      options: legendOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, legend, legendOpts);\n    core_layouts.addBox(chart, legend);\n    chart.legend = legend;\n  }\n\n  var plugin_legend = {\n    id: 'legend',\n\n    /**\n     * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n     * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Legend,\n    beforeInit: function beforeInit(chart) {\n      var legendOpts = chart.options.legend;\n\n      if (legendOpts) {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var legendOpts = chart.options.legend;\n      var legend = chart.legend;\n\n      if (legendOpts) {\n        helpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n        if (legend) {\n          core_layouts.configure(chart, legend, legendOpts);\n          legend.options = legendOpts;\n        } else {\n          createNewLegendAndAttach(chart, legendOpts);\n        }\n      } else if (legend) {\n        core_layouts.removeBox(chart, legend);\n        delete chart.legend;\n      }\n    },\n    afterEvent: function afterEvent(chart, e) {\n      var legend = chart.legend;\n\n      if (legend) {\n        legend.handleEvent(e);\n      }\n    }\n  };\n  var noop$2 = helpers$1.noop;\n\n  core_defaults._set('global', {\n    title: {\n      display: false,\n      fontStyle: 'bold',\n      fullWidth: true,\n      padding: 10,\n      position: 'top',\n      text: '',\n      weight: 2000 // by default greater than legend (1000) to be above\n\n    }\n  });\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Title = core_element.extend({\n    initialize: function initialize(config) {\n      var me = this;\n      helpers$1.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n      me.legendHitBoxes = [];\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    beforeUpdate: noop$2,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$2,\n    //\n    beforeSetDimensions: noop$2,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$2,\n    //\n    beforeBuildLabels: noop$2,\n    buildLabels: noop$2,\n    afterBuildLabels: noop$2,\n    //\n    beforeFit: noop$2,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var display = opts.display;\n      var minSize = me.minSize;\n      var lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\n      var fontOpts = helpers$1.options._parseFont(opts);\n\n      var textSize = display ? lineCount * fontOpts.lineHeight + opts.padding * 2 : 0;\n\n      if (me.isHorizontal()) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = textSize;\n      } else {\n        minSize.width = textSize;\n        minSize.height = me.maxHeight; // fill all the height\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$2,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    },\n    // Actually draw the title block on the canvas\n    draw: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n\n      if (opts.display) {\n        var fontOpts = helpers$1.options._parseFont(opts);\n\n        var lineHeight = fontOpts.lineHeight;\n        var offset = lineHeight / 2 + opts.padding;\n        var rotation = 0;\n        var top = me.top;\n        var left = me.left;\n        var bottom = me.bottom;\n        var right = me.right;\n        var maxWidth, titleX, titleY;\n        ctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\n        ctx.font = fontOpts.string; // Horizontal\n\n        if (me.isHorizontal()) {\n          titleX = left + (right - left) / 2; // midpoint of the width\n\n          titleY = top + offset;\n          maxWidth = right - left;\n        } else {\n          titleX = opts.position === 'left' ? left + offset : right - offset;\n          titleY = top + (bottom - top) / 2;\n          maxWidth = bottom - top;\n          rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n        }\n\n        ctx.save();\n        ctx.translate(titleX, titleY);\n        ctx.rotate(rotation);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        var text = opts.text;\n\n        if (helpers$1.isArray(text)) {\n          var y = 0;\n\n          for (var i = 0; i < text.length; ++i) {\n            ctx.fillText(text[i], 0, y, maxWidth);\n            y += lineHeight;\n          }\n        } else {\n          ctx.fillText(text, 0, 0, maxWidth);\n        }\n\n        ctx.restore();\n      }\n    }\n  });\n\n  function createNewTitleBlockAndAttach(chart, titleOpts) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: titleOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, title, titleOpts);\n    core_layouts.addBox(chart, title);\n    chart.titleBlock = title;\n  }\n\n  var plugin_title = {\n    id: 'title',\n\n    /**\n     * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n     * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Title,\n    beforeInit: function beforeInit(chart) {\n      var titleOpts = chart.options.title;\n\n      if (titleOpts) {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var titleOpts = chart.options.title;\n      var titleBlock = chart.titleBlock;\n\n      if (titleOpts) {\n        helpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n        if (titleBlock) {\n          core_layouts.configure(chart, titleBlock, titleOpts);\n          titleBlock.options = titleOpts;\n        } else {\n          createNewTitleBlockAndAttach(chart, titleOpts);\n        }\n      } else if (titleBlock) {\n        core_layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n      }\n    }\n  };\n  var plugins = {};\n  var filler = plugin_filler;\n  var legend = plugin_legend;\n  var title = plugin_title;\n  plugins.filler = filler;\n  plugins.legend = legend;\n  plugins.title = title;\n  /**\n   * @namespace Chart\n   */\n\n  core_controller.helpers = helpers$1; // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\n  core_helpers(core_controller);\n  core_controller._adapters = core_adapters;\n  core_controller.Animation = core_animation;\n  core_controller.animationService = core_animations;\n  core_controller.controllers = controllers;\n  core_controller.DatasetController = core_datasetController;\n  core_controller.defaults = core_defaults;\n  core_controller.Element = core_element;\n  core_controller.elements = elements;\n  core_controller.Interaction = core_interaction;\n  core_controller.layouts = core_layouts;\n  core_controller.platform = platform;\n  core_controller.plugins = core_plugins;\n  core_controller.Scale = core_scale;\n  core_controller.scaleService = core_scaleService;\n  core_controller.Ticks = core_ticks;\n  core_controller.Tooltip = core_tooltip; // Register built-in scales\n\n  core_controller.helpers.each(scales, function (scale, type) {\n    core_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n  }); // Load to register built-in adapters (as side effects)\n  // Loading built-in plugins\n\n  for (var k in plugins) {\n    if (plugins.hasOwnProperty(k)) {\n      core_controller.plugins.register(plugins[k]);\n    }\n  }\n\n  core_controller.platform.initialize();\n  var src = core_controller;\n\n  if (typeof window !== 'undefined') {\n    window.Chart = core_controller;\n  } // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Chart\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  core_controller.Chart = core_controller;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Legend\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Legend = plugins.legend._element;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Title\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Title = plugins.title._element;\n  /**\n   * Provided for backward compatibility, use Chart.plugins instead\n   * @namespace Chart.pluginService\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.pluginService = core_controller.plugins;\n  /**\n   * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n   * effect, instead simply create/register plugins via plain JavaScript objects.\n   * @interface Chart.PluginBase\n   * @deprecated since version 2.5.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.PluginBase = core_controller.Element.extend({});\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas instead.\n   * @namespace Chart.canvasHelpers\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.canvasHelpers = core_controller.helpers.canvas;\n  /**\n   * Provided for backward compatibility, use Chart.layouts instead.\n   * @namespace Chart.layoutService\n   * @deprecated since version 2.7.3\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.layoutService = core_controller.layouts;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.LinearScaleBase\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.LinearScaleBase = scale_linearbase;\n  /**\n   * Provided for backward compatibility, instead we should create a new Chart\n   * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   */\n\n  core_controller.helpers.each(['Bar', 'Bubble', 'Doughnut', 'Line', 'PolarArea', 'Radar', 'Scatter'], function (klass) {\n    core_controller[klass] = function (ctx, cfg) {\n      return new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n        type: klass.charAt(0).toLowerCase() + klass.slice(1)\n      }));\n    };\n  });\n  return src;\n});","//! moment.js\n;\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.moment = factory();\n})(this, function () {\n  'use strict';\n\n  var hookCallback;\n\n  function hooks() {\n    return hookCallback.apply(null, arguments);\n  } // This is done to register the method called with moment()\n  // without creating circular dependencies.\n\n\n  function setHookCallback(callback) {\n    hookCallback = callback;\n  }\n\n  function isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n  }\n\n  function isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n  }\n\n  function isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n      return Object.getOwnPropertyNames(obj).length === 0;\n    } else {\n      var k;\n\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  function isUndefined(input) {\n    return input === void 0;\n  }\n\n  function isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n  }\n\n  function isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n  }\n\n  function map(arr, fn) {\n    var res = [],\n        i;\n\n    for (i = 0; i < arr.length; ++i) {\n      res.push(fn(arr[i], i));\n    }\n\n    return res;\n  }\n\n  function hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n  }\n\n  function extend(a, b) {\n    for (var i in b) {\n      if (hasOwnProp(b, i)) {\n        a[i] = b[i];\n      }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n      a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n      a.valueOf = b.valueOf;\n    }\n\n    return a;\n  }\n\n  function createUTC(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n  }\n\n  function defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n      empty: false,\n      unusedTokens: [],\n      unusedInput: [],\n      overflow: -2,\n      charsLeftOver: 0,\n      nullInput: false,\n      invalidMonth: null,\n      invalidFormat: false,\n      userInvalidated: false,\n      iso: false,\n      parsedDateParts: [],\n      meridiem: null,\n      rfc2822: false,\n      weekdayMismatch: false\n    };\n  }\n\n  function getParsingFlags(m) {\n    if (m._pf == null) {\n      m._pf = defaultParsingFlags();\n    }\n\n    return m._pf;\n  }\n\n  var some;\n\n  if (Array.prototype.some) {\n    some = Array.prototype.some;\n  } else {\n    some = function some(fun) {\n      var t = Object(this);\n      var len = t.length >>> 0;\n\n      for (var i = 0; i < len; i++) {\n        if (i in t && fun.call(this, t[i], i, t)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  }\n\n  function isValid(m) {\n    if (m._isValid == null) {\n      var flags = getParsingFlags(m);\n      var parsedParts = some.call(flags.parsedDateParts, function (i) {\n        return i != null;\n      });\n      var isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n\n      if (m._strict) {\n        isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n      }\n\n      if (Object.isFrozen == null || !Object.isFrozen(m)) {\n        m._isValid = isNowValid;\n      } else {\n        return isNowValid;\n      }\n    }\n\n    return m._isValid;\n  }\n\n  function createInvalid(flags) {\n    var m = createUTC(NaN);\n\n    if (flags != null) {\n      extend(getParsingFlags(m), flags);\n    } else {\n      getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n  } // Plugins that add properties should also add the key here (null value),\n  // so we can properly clone ourselves.\n\n\n  var momentProperties = hooks.momentProperties = [];\n\n  function copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n      to._isAMomentObject = from._isAMomentObject;\n    }\n\n    if (!isUndefined(from._i)) {\n      to._i = from._i;\n    }\n\n    if (!isUndefined(from._f)) {\n      to._f = from._f;\n    }\n\n    if (!isUndefined(from._l)) {\n      to._l = from._l;\n    }\n\n    if (!isUndefined(from._strict)) {\n      to._strict = from._strict;\n    }\n\n    if (!isUndefined(from._tzm)) {\n      to._tzm = from._tzm;\n    }\n\n    if (!isUndefined(from._isUTC)) {\n      to._isUTC = from._isUTC;\n    }\n\n    if (!isUndefined(from._offset)) {\n      to._offset = from._offset;\n    }\n\n    if (!isUndefined(from._pf)) {\n      to._pf = getParsingFlags(from);\n    }\n\n    if (!isUndefined(from._locale)) {\n      to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n      for (i = 0; i < momentProperties.length; i++) {\n        prop = momentProperties[i];\n        val = from[prop];\n\n        if (!isUndefined(val)) {\n          to[prop] = val;\n        }\n      }\n    }\n\n    return to;\n  }\n\n  var updateInProgress = false; // Moment prototype object\n\n  function Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\n    if (!this.isValid()) {\n      this._d = new Date(NaN);\n    } // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n\n\n    if (updateInProgress === false) {\n      updateInProgress = true;\n      hooks.updateOffset(this);\n      updateInProgress = false;\n    }\n  }\n\n  function isMoment(obj) {\n    return obj instanceof Moment || obj != null && obj._isAMomentObject != null;\n  }\n\n  function absFloor(number) {\n    if (number < 0) {\n      // -0 -> 0\n      return Math.ceil(number) || 0;\n    } else {\n      return Math.floor(number);\n    }\n  }\n\n  function toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n      value = absFloor(coercedNumber);\n    }\n\n    return value;\n  } // compare two arrays, return the number of differences\n\n\n  function compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n\n    for (i = 0; i < len; i++) {\n      if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n        diffs++;\n      }\n    }\n\n    return diffs + lengthDiff;\n  }\n\n  function warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n      console.warn('Deprecation warning: ' + msg);\n    }\n  }\n\n  function deprecate(msg, fn) {\n    var firstTime = true;\n    return extend(function () {\n      if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(null, msg);\n      }\n\n      if (firstTime) {\n        var args = [];\n        var arg;\n\n        for (var i = 0; i < arguments.length; i++) {\n          arg = '';\n\n          if (typeof arguments[i] === 'object') {\n            arg += '\\n[' + i + '] ';\n\n            for (var key in arguments[0]) {\n              arg += key + ': ' + arguments[0][key] + ', ';\n            }\n\n            arg = arg.slice(0, -2); // Remove trailing comma and space\n          } else {\n            arg = arguments[i];\n          }\n\n          args.push(arg);\n        }\n\n        warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + new Error().stack);\n        firstTime = false;\n      }\n\n      return fn.apply(this, arguments);\n    }, fn);\n  }\n\n  var deprecations = {};\n\n  function deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n      hooks.deprecationHandler(name, msg);\n    }\n\n    if (!deprecations[name]) {\n      warn(msg);\n      deprecations[name] = true;\n    }\n  }\n\n  hooks.suppressDeprecationWarnings = false;\n  hooks.deprecationHandler = null;\n\n  function isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n  }\n\n  function set(config) {\n    var prop, i;\n\n    for (i in config) {\n      prop = config[i];\n\n      if (isFunction(prop)) {\n        this[i] = prop;\n      } else {\n        this['_' + i] = prop;\n      }\n    }\n\n    this._config = config; // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n\n    this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\\d{1,2}/.source);\n  }\n\n  function mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig),\n        prop;\n\n    for (prop in childConfig) {\n      if (hasOwnProp(childConfig, prop)) {\n        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n          res[prop] = {};\n          extend(res[prop], parentConfig[prop]);\n          extend(res[prop], childConfig[prop]);\n        } else if (childConfig[prop] != null) {\n          res[prop] = childConfig[prop];\n        } else {\n          delete res[prop];\n        }\n      }\n    }\n\n    for (prop in parentConfig) {\n      if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {\n        // make sure changes to properties don't modify parent config\n        res[prop] = extend({}, res[prop]);\n      }\n    }\n\n    return res;\n  }\n\n  function Locale(config) {\n    if (config != null) {\n      this.set(config);\n    }\n  }\n\n  var keys;\n\n  if (Object.keys) {\n    keys = Object.keys;\n  } else {\n    keys = function keys(obj) {\n      var i,\n          res = [];\n\n      for (i in obj) {\n        if (hasOwnProp(obj, i)) {\n          res.push(i);\n        }\n      }\n\n      return res;\n    };\n  }\n\n  var defaultCalendar = {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  };\n\n  function calendar(key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n  }\n\n  var defaultLongDateFormat = {\n    LTS: 'h:mm:ss A',\n    LT: 'h:mm A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A'\n  };\n\n  function longDateFormat(key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n      return val.slice(1);\n    });\n    return this._longDateFormat[key];\n  }\n\n  var defaultInvalidDate = 'Invalid date';\n\n  function invalidDate() {\n    return this._invalidDate;\n  }\n\n  var defaultOrdinal = '%d';\n  var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n  function ordinal(number) {\n    return this._ordinal.replace('%d', number);\n  }\n\n  var defaultRelativeTime = {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  };\n\n  function relativeTime(number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\n  }\n\n  function pastFuture(diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n\n  var aliases = {};\n\n  function addUnitAlias(unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n  }\n\n  function normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n  }\n\n  function normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n      if (hasOwnProp(inputObject, prop)) {\n        normalizedProp = normalizeUnits(prop);\n\n        if (normalizedProp) {\n          normalizedInput[normalizedProp] = inputObject[prop];\n        }\n      }\n    }\n\n    return normalizedInput;\n  }\n\n  var priorities = {};\n\n  function addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n  }\n\n  function getPrioritizedUnits(unitsObj) {\n    var units = [];\n\n    for (var u in unitsObj) {\n      units.push({\n        unit: u,\n        priority: priorities[u]\n      });\n    }\n\n    units.sort(function (a, b) {\n      return a.priority - b.priority;\n    });\n    return units;\n  }\n\n  function zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? forceSign ? '+' : '' : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n  }\n\n  var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n  var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n  var formatFunctions = {};\n  var formatTokenFunctions = {}; // token:    'M'\n  // padded:   ['MM', 2]\n  // ordinal:  'Mo'\n  // callback: function () { this.month() + 1 }\n\n  function addFormatToken(token, padded, ordinal, callback) {\n    var func = callback;\n\n    if (typeof callback === 'string') {\n      func = function func() {\n        return this[callback]();\n      };\n    }\n\n    if (token) {\n      formatTokenFunctions[token] = func;\n    }\n\n    if (padded) {\n      formatTokenFunctions[padded[0]] = function () {\n        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n      };\n    }\n\n    if (ordinal) {\n      formatTokenFunctions[ordinal] = function () {\n        return this.localeData().ordinal(func.apply(this, arguments), token);\n      };\n    }\n  }\n\n  function removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n      return input.replace(/^\\[|\\]$/g, '');\n    }\n\n    return input.replace(/\\\\/g, '');\n  }\n\n  function makeFormatFunction(format) {\n    var array = format.match(formattingTokens),\n        i,\n        length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n      if (formatTokenFunctions[array[i]]) {\n        array[i] = formatTokenFunctions[array[i]];\n      } else {\n        array[i] = removeFormattingTokens(array[i]);\n      }\n    }\n\n    return function (mom) {\n      var output = '',\n          i;\n\n      for (i = 0; i < length; i++) {\n        output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n      }\n\n      return output;\n    };\n  } // format date using native date object\n\n\n  function formatMoment(m, format) {\n    if (!m.isValid()) {\n      return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n    return formatFunctions[format](m);\n  }\n\n  function expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n      return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n\n    while (i >= 0 && localFormattingTokens.test(format)) {\n      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n      localFormattingTokens.lastIndex = 0;\n      i -= 1;\n    }\n\n    return format;\n  }\n\n  var match1 = /\\d/; //       0 - 9\n\n  var match2 = /\\d\\d/; //      00 - 99\n\n  var match3 = /\\d{3}/; //     000 - 999\n\n  var match4 = /\\d{4}/; //    0000 - 9999\n\n  var match6 = /[+-]?\\d{6}/; // -999999 - 999999\n\n  var match1to2 = /\\d\\d?/; //       0 - 99\n\n  var match3to4 = /\\d\\d\\d\\d?/; //     999 - 9999\n\n  var match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\n  var match1to3 = /\\d{1,3}/; //       0 - 999\n\n  var match1to4 = /\\d{1,4}/; //       0 - 9999\n\n  var match1to6 = /[+-]?\\d{1,6}/; // -999999 - 999999\n\n  var matchUnsigned = /\\d+/; //       0 - inf\n\n  var matchSigned = /[+-]?\\d+/; //    -inf - inf\n\n  var matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\n  var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n  var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n  // any word (or two) characters or numbers including two/three word month in arabic.\n  // includes scottish gaelic two word and hyphenated months\n\n  var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n  var regexes = {};\n\n  function addRegexToken(token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n      return isStrict && strictRegex ? strictRegex : regex;\n    };\n  }\n\n  function getParseRegexForToken(token, config) {\n    if (!hasOwnProp(regexes, token)) {\n      return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n  } // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\n\n  function unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n      return p1 || p2 || p3 || p4;\n    }));\n  }\n\n  function regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n\n  var tokens = {};\n\n  function addParseToken(token, callback) {\n    var i,\n        func = callback;\n\n    if (typeof token === 'string') {\n      token = [token];\n    }\n\n    if (isNumber(callback)) {\n      func = function func(input, array) {\n        array[callback] = toInt(input);\n      };\n    }\n\n    for (i = 0; i < token.length; i++) {\n      tokens[token[i]] = func;\n    }\n  }\n\n  function addWeekParseToken(token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n      config._w = config._w || {};\n      callback(input, config._w, config, token);\n    });\n  }\n\n  function addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n      tokens[token](input, config._a, config, token);\n    }\n  }\n\n  var YEAR = 0;\n  var MONTH = 1;\n  var DATE = 2;\n  var HOUR = 3;\n  var MINUTE = 4;\n  var SECOND = 5;\n  var MILLISECOND = 6;\n  var WEEK = 7;\n  var WEEKDAY = 8; // FORMATTING\n\n  addFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n  });\n  addFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n  });\n  addFormatToken(0, ['YYYY', 4], 0, 'year');\n  addFormatToken(0, ['YYYYY', 5], 0, 'year');\n  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year'); // ALIASES\n\n  addUnitAlias('year', 'y'); // PRIORITIES\n\n  addUnitPriority('year', 1); // PARSING\n\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n  });\n  addParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n  });\n  addParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n  }); // HELPERS\n\n  function daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n  }\n\n  function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  } // HOOKS\n\n\n  hooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n  }; // MOMENTS\n\n\n  var getSetYear = makeGetSet('FullYear', true);\n\n  function getIsLeapYear() {\n    return isLeapYear(this.year());\n  }\n\n  function makeGetSet(unit, keepTime) {\n    return function (value) {\n      if (value != null) {\n        set$1(this, unit, value);\n        hooks.updateOffset(this, keepTime);\n        return this;\n      } else {\n        return get(this, unit);\n      }\n    };\n  }\n\n  function get(mom, unit) {\n    return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n  }\n\n  function set$1(mom, unit, value) {\n    if (mom.isValid() && !isNaN(value)) {\n      if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n      } else {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n      }\n    }\n  } // MOMENTS\n\n\n  function stringGet(units) {\n    units = normalizeUnits(units);\n\n    if (isFunction(this[units])) {\n      return this[units]();\n    }\n\n    return this;\n  }\n\n  function stringSet(units, value) {\n    if (typeof units === 'object') {\n      units = normalizeObjectUnits(units);\n      var prioritized = getPrioritizedUnits(units);\n\n      for (var i = 0; i < prioritized.length; i++) {\n        this[prioritized[i].unit](units[prioritized[i].unit]);\n      }\n    } else {\n      units = normalizeUnits(units);\n\n      if (isFunction(this[units])) {\n        return this[units](value);\n      }\n    }\n\n    return this;\n  }\n\n  function mod(n, x) {\n    return (n % x + x) % x;\n  }\n\n  var indexOf;\n\n  if (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n  } else {\n    indexOf = function indexOf(o) {\n      // I know\n      var i;\n\n      for (i = 0; i < this.length; ++i) {\n        if (this[i] === o) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n  }\n\n  function daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n      return NaN;\n    }\n\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n  } // FORMATTING\n\n\n  addFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n  });\n  addFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n  });\n  addFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n  }); // ALIASES\n\n  addUnitAlias('month', 'M'); // PRIORITY\n\n  addUnitPriority('month', 8); // PARSING\n\n  addRegexToken('M', match1to2);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM', function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n  addParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n  });\n  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.\n\n\n    if (month != null) {\n      array[MONTH] = month;\n    } else {\n      getParsingFlags(config).invalidMonth = input;\n    }\n  }); // LOCALES\n\n  var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n  var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n\n  function localeMonths(m, format) {\n    if (!m) {\n      return isArray(this._months) ? this._months : this._months['standalone'];\n    }\n\n    return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n\n  function localeMonthsShort(m, format) {\n    if (!m) {\n      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];\n    }\n\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  function handleStrictParse(monthName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = monthName.toLocaleLowerCase();\n\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n\n      for (i = 0; i < 12; ++i) {\n        mom = createUTC([2000, i]);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeMonthsParse(monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n      return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    } // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n\n      if (strict && !this._longMonthsParse[i]) {\n        this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n        this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n      }\n\n      if (!strict && !this._monthsParse[i]) {\n        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function setMonth(mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n      // No op\n      return mom;\n    }\n\n    if (typeof value === 'string') {\n      if (/^\\d+$/.test(value)) {\n        value = toInt(value);\n      } else {\n        value = mom.localeData().monthsParse(value); // TODO: Another silent failure?\n\n        if (!isNumber(value)) {\n          return mom;\n        }\n      }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\n    return mom;\n  }\n\n  function getSetMonth(value) {\n    if (value != null) {\n      setMonth(this, value);\n      hooks.updateOffset(this, true);\n      return this;\n    } else {\n      return get(this, 'Month');\n    }\n  }\n\n  function getDaysInMonth() {\n    return daysInMonth(this.year(), this.month());\n  }\n\n  var defaultMonthsShortRegex = matchWord;\n\n  function monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      } else {\n        return this._monthsShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsShortRegex')) {\n        this._monthsShortRegex = defaultMonthsShortRegex;\n      }\n\n      return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n  }\n\n  var defaultMonthsRegex = matchWord;\n\n  function monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      } else {\n        return this._monthsRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this._monthsRegex = defaultMonthsRegex;\n      }\n\n      return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n    }\n  }\n\n  function computeMonthsParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom;\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      shortPieces.push(this.monthsShort(mom, ''));\n      longPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.monthsShort(mom, ''));\n    } // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n  }\n\n  function createDate(y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date; // the date constructor remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      date = new Date(y + 400, m, d, h, M, s, ms);\n\n      if (isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n      }\n    } else {\n      date = new Date(y, m, d, h, M, s, ms);\n    }\n\n    return date;\n  }\n\n  function createUTCDate(y) {\n    var date; // the Date.UTC function remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      var args = Array.prototype.slice.call(arguments); // preserve leap years using a full 400 year cycle, then reset\n\n      args[0] = y + 400;\n      date = new Date(Date.UTC.apply(null, args));\n\n      if (isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n      }\n    } else {\n      date = new Date(Date.UTC.apply(null, arguments));\n    }\n\n    return date;\n  } // start-of-first-week - start-of-year\n\n\n  function firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n    fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n  } // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\n\n  function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear,\n        resDayOfYear;\n\n    if (dayOfYear <= 0) {\n      resYear = year - 1;\n      resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n      resYear = year + 1;\n      resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n      resYear = year;\n      resDayOfYear = dayOfYear;\n    }\n\n    return {\n      year: resYear,\n      dayOfYear: resDayOfYear\n    };\n  }\n\n  function weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek,\n        resYear;\n\n    if (week < 1) {\n      resYear = mom.year() - 1;\n      resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n      resWeek = week - weeksInYear(mom.year(), dow, doy);\n      resYear = mom.year() + 1;\n    } else {\n      resYear = mom.year();\n      resWeek = week;\n    }\n\n    return {\n      week: resWeek,\n      year: resYear\n    };\n  }\n\n  function weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n  } // FORMATTING\n\n\n  addFormatToken('w', ['ww', 2], 'wo', 'week');\n  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek'); // ALIASES\n\n  addUnitAlias('week', 'w');\n  addUnitAlias('isoWeek', 'W'); // PRIORITIES\n\n  addUnitPriority('week', 5);\n  addUnitPriority('isoWeek', 5); // PARSING\n\n  addRegexToken('w', match1to2);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2);\n  addRegexToken('WW', match1to2, match2);\n  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n  }); // HELPERS\n  // LOCALES\n\n  function localeWeek(mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n  }\n\n  var defaultLocaleWeek = {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n  };\n\n  function localeFirstDayOfWeek() {\n    return this._week.dow;\n  }\n\n  function localeFirstDayOfYear() {\n    return this._week.doy;\n  } // MOMENTS\n\n\n  function getSetWeek(input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  }\n\n  function getSetISOWeek(input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('d', 0, 'do', 'day');\n  addFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n  });\n  addFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n  });\n  addFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n  });\n  addFormatToken('e', 0, 0, 'weekday');\n  addFormatToken('E', 0, 0, 'isoWeekday'); // ALIASES\n\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E'); // PRIORITY\n\n  addUnitPriority('day', 11);\n  addUnitPriority('weekday', 11);\n  addUnitPriority('isoWeekday', 11); // PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n  addRegexToken('dd', function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n  addRegexToken('ddd', function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd', function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n  });\n  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict); // if we didn't get a weekday name, mark the date as invalid\n\n\n    if (weekday != null) {\n      week.d = weekday;\n    } else {\n      getParsingFlags(config).invalidWeekday = input;\n    }\n  });\n  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n  }); // HELPERS\n\n  function parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n      return input;\n    }\n\n    if (!isNaN(input)) {\n      return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n\n    if (typeof input === 'number') {\n      return input;\n    }\n\n    return null;\n  }\n\n  function parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n      return locale.weekdaysParse(input) % 7 || 7;\n    }\n\n    return isNaN(input) ? null : input;\n  } // LOCALES\n\n\n  function shiftWeekdays(ws, n) {\n    return ws.slice(n, 7).concat(ws.slice(0, n));\n  }\n\n  var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n\n  function localeWeekdays(m, format) {\n    var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m && m !== true && this._weekdays.isFormat.test(format) ? 'format' : 'standalone'];\n    return m === true ? shiftWeekdays(weekdays, this._week.dow) : m ? weekdays[m.day()] : weekdays;\n  }\n\n  var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n\n  function localeWeekdaysShort(m) {\n    return m === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n  }\n\n  var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n\n  function localeWeekdaysMin(m) {\n    return m === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n  }\n\n  function handleStrictParse$1(weekdayName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = weekdayName.toLocaleLowerCase();\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n\n      for (i = 0; i < 7; ++i) {\n        mom = createUTC([2000, 1]).day(i);\n        this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeWeekdaysParse(weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n      return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n      }\n\n      if (!this._weekdaysParse[i]) {\n        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function getSetDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\n    if (input != null) {\n      input = parseWeekday(input, this.localeData());\n      return this.add(input - day, 'd');\n    } else {\n      return day;\n    }\n  }\n\n  function getSetLocaleDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n  }\n\n  function getSetISODayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    } // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n\n    if (input != null) {\n      var weekday = parseIsoWeekday(input, this.localeData());\n      return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n      return this.day() || 7;\n    }\n  }\n\n  var defaultWeekdaysRegex = matchWord;\n\n  function weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = defaultWeekdaysRegex;\n      }\n\n      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }\n\n  var defaultWeekdaysShortRegex = matchWord;\n\n  function weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n      }\n\n      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n\n  var defaultWeekdaysMinRegex = matchWord;\n\n  function weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n      }\n\n      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n\n  function computeWeekdaysParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var minPieces = [],\n        shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom,\n        minp,\n        shortp,\n        longp;\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n      minp = this.weekdaysMin(mom, '');\n      shortp = this.weekdaysShort(mom, '');\n      longp = this.weekdays(mom, '');\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    } // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 7; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n  } // FORMATTING\n\n\n  function hFormat() {\n    return this.hours() % 12 || 12;\n  }\n\n  function kFormat() {\n    return this.hours() || 24;\n  }\n\n  addFormatToken('H', ['HH', 2], 0, 'hour');\n  addFormatToken('h', ['hh', 2], 0, hFormat);\n  addFormatToken('k', ['kk', 2], 0, kFormat);\n  addFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n  addFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n\n  function meridiem(token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n  }\n\n  meridiem('a', true);\n  meridiem('A', false); // ALIASES\n\n  addUnitAlias('hour', 'h'); // PRIORITY\n\n  addUnitPriority('hour', 13); // PARSING\n\n  function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }\n\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2);\n  addRegexToken('h', match1to2);\n  addRegexToken('k', match1to2);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n  });\n  addParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n  });\n  addParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n  });\n  addParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n  }); // LOCALES\n\n  function localeIsPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return (input + '').toLowerCase().charAt(0) === 'p';\n  }\n\n  var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\n  function localeMeridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    } else {\n      return isLower ? 'am' : 'AM';\n    }\n  } // MOMENTS\n  // Setting the hour should keep the time, because the user explicitly\n  // specified which hour they want. So trying to maintain the same hour (in\n  // a new timezone) makes sense. Adding/subtracting hours does not follow\n  // this rule.\n\n\n  var getSetHour = makeGetSet('Hours', true);\n  var baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n    week: defaultLocaleWeek,\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n    meridiemParse: defaultLocaleMeridiemParse\n  }; // internal storage for locale config files\n\n  var locales = {};\n  var localeFamilies = {};\n  var globalLocale;\n\n  function normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n  } // pick the locale from the array\n  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\n\n  function chooseLocale(names) {\n    var i = 0,\n        j,\n        next,\n        locale,\n        split;\n\n    while (i < names.length) {\n      split = normalizeLocale(names[i]).split('-');\n      j = split.length;\n      next = normalizeLocale(names[i + 1]);\n      next = next ? next.split('-') : null;\n\n      while (j > 0) {\n        locale = loadLocale(split.slice(0, j).join('-'));\n\n        if (locale) {\n          return locale;\n        }\n\n        if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n          //the next array item is better than a shallower substring of this one\n          break;\n        }\n\n        j--;\n      }\n\n      i++;\n    }\n\n    return globalLocale;\n  }\n\n  function loadLocale(name) {\n    var oldLocale = null; // TODO: Find a better way to register and load all the locales in Node\n\n    if (!locales[name] && typeof module !== 'undefined' && module && module.exports) {\n      try {\n        oldLocale = globalLocale._abbr;\n        var aliasedRequire = require;\n        aliasedRequire('./locale/' + name);\n        getSetGlobalLocale(oldLocale);\n      } catch (e) {}\n    }\n\n    return locales[name];\n  } // This function will load locale and then set the global locale.  If\n  // no arguments are passed in, it will simply return the current global\n  // locale key.\n\n\n  function getSetGlobalLocale(key, values) {\n    var data;\n\n    if (key) {\n      if (isUndefined(values)) {\n        data = getLocale(key);\n      } else {\n        data = defineLocale(key, values);\n      }\n\n      if (data) {\n        // moment.duration._locale = moment._locale = data;\n        globalLocale = data;\n      } else {\n        if (typeof console !== 'undefined' && console.warn) {\n          //warn user if arguments are passed but the locale could not be set\n          console.warn('Locale ' + key + ' not found. Did you forget to load it?');\n        }\n      }\n    }\n\n    return globalLocale._abbr;\n  }\n\n  function defineLocale(name, config) {\n    if (config !== null) {\n      var locale,\n          parentConfig = baseConfig;\n      config.abbr = name;\n\n      if (locales[name] != null) {\n        deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n        parentConfig = locales[name]._config;\n      } else if (config.parentLocale != null) {\n        if (locales[config.parentLocale] != null) {\n          parentConfig = locales[config.parentLocale]._config;\n        } else {\n          locale = loadLocale(config.parentLocale);\n\n          if (locale != null) {\n            parentConfig = locale._config;\n          } else {\n            if (!localeFamilies[config.parentLocale]) {\n              localeFamilies[config.parentLocale] = [];\n            }\n\n            localeFamilies[config.parentLocale].push({\n              name: name,\n              config: config\n            });\n            return null;\n          }\n        }\n      }\n\n      locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n      if (localeFamilies[name]) {\n        localeFamilies[name].forEach(function (x) {\n          defineLocale(x.name, x.config);\n        });\n      } // backwards compat for now: also set the locale\n      // make sure we set the locale AFTER all child locales have been\n      // created, so we won't end up with the child locale set.\n\n\n      getSetGlobalLocale(name);\n      return locales[name];\n    } else {\n      // useful for testing\n      delete locales[name];\n      return null;\n    }\n  }\n\n  function updateLocale(name, config) {\n    if (config != null) {\n      var locale,\n          tmpLocale,\n          parentConfig = baseConfig; // MERGE\n\n      tmpLocale = loadLocale(name);\n\n      if (tmpLocale != null) {\n        parentConfig = tmpLocale._config;\n      }\n\n      config = mergeConfigs(parentConfig, config);\n      locale = new Locale(config);\n      locale.parentLocale = locales[name];\n      locales[name] = locale; // backwards compat for now: also set the locale\n\n      getSetGlobalLocale(name);\n    } else {\n      // pass null for config to unupdate, useful for tests\n      if (locales[name] != null) {\n        if (locales[name].parentLocale != null) {\n          locales[name] = locales[name].parentLocale;\n        } else if (locales[name] != null) {\n          delete locales[name];\n        }\n      }\n    }\n\n    return locales[name];\n  } // returns locale data\n\n\n  function getLocale(key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n      key = key._locale._abbr;\n    }\n\n    if (!key) {\n      return globalLocale;\n    }\n\n    if (!isArray(key)) {\n      //short-circuit everything else\n      locale = loadLocale(key);\n\n      if (locale) {\n        return locale;\n      }\n\n      key = [key];\n    }\n\n    return chooseLocale(key);\n  }\n\n  function listLocales() {\n    return keys(locales);\n  }\n\n  function checkOverflow(m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n      overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n\n      if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n        overflow = DATE;\n      }\n\n      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n        overflow = WEEK;\n      }\n\n      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n        overflow = WEEKDAY;\n      }\n\n      getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n  } // Pick the first defined of two or three arguments.\n\n\n  function defaults(a, b, c) {\n    if (a != null) {\n      return a;\n    }\n\n    if (b != null) {\n      return b;\n    }\n\n    return c;\n  }\n\n  function currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n\n    if (config._useUTC) {\n      return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n  } // convert an array to a date.\n  // the array should mirror the parameters below\n  // note: all values past the year are optional and will default to the lowest possible value.\n  // [year, month, day , hour, minute, second, millisecond]\n\n\n  function configFromArray(config) {\n    var i,\n        date,\n        input = [],\n        currentDate,\n        expectedWeekday,\n        yearToUse;\n\n    if (config._d) {\n      return;\n    }\n\n    currentDate = currentDateArray(config); //compute day of the year from weeks and weekdays\n\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n      dayOfYearFromWeekInfo(config);\n    } //if the day of the year is set, figure out what it is\n\n\n    if (config._dayOfYear != null) {\n      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n      if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n        getParsingFlags(config)._overflowDayOfYear = true;\n      }\n\n      date = createUTCDate(yearToUse, 0, config._dayOfYear);\n      config._a[MONTH] = date.getUTCMonth();\n      config._a[DATE] = date.getUTCDate();\n    } // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n\n\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n      config._a[i] = input[i] = currentDate[i];\n    } // Zero out whatever was not defaulted, including time\n\n\n    for (; i < 7; i++) {\n      config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n    } // Check for 24:00:00.000\n\n\n    if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n      config._nextDay = true;\n      config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay(); // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n\n    if (config._tzm != null) {\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n      config._a[HOUR] = 24;\n    } // check for mismatching day of week\n\n\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n      getParsingFlags(config).weekdayMismatch = true;\n    }\n  }\n\n  function dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n    w = config._w;\n\n    if (w.GG != null || w.W != null || w.E != null) {\n      dow = 1;\n      doy = 4; // TODO: We need to take the current isoWeekYear, but that depends on\n      // how we interpret now (local, utc, fixed offset). So create\n      // a now version of current config (take local/utc/offset flags, and\n      // create now).\n\n      weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n      week = defaults(w.W, 1);\n      weekday = defaults(w.E, 1);\n\n      if (weekday < 1 || weekday > 7) {\n        weekdayOverflow = true;\n      }\n    } else {\n      dow = config._locale._week.dow;\n      doy = config._locale._week.doy;\n      var curWeek = weekOfYear(createLocal(), dow, doy);\n      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year); // Default to current week.\n\n      week = defaults(w.w, curWeek.week);\n\n      if (w.d != null) {\n        // weekday -- low day numbers are considered next week\n        weekday = w.d;\n\n        if (weekday < 0 || weekday > 6) {\n          weekdayOverflow = true;\n        }\n      } else if (w.e != null) {\n        // local weekday -- counting starts from beginning of week\n        weekday = w.e + dow;\n\n        if (w.e < 0 || w.e > 6) {\n          weekdayOverflow = true;\n        }\n      } else {\n        // default to beginning of week\n        weekday = dow;\n      }\n    }\n\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n      getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n      getParsingFlags(config)._overflowWeekday = true;\n    } else {\n      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n      config._a[YEAR] = temp.year;\n      config._dayOfYear = temp.dayOfYear;\n    }\n  } // iso 8601 regex\n  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\n\n  var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n  var isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/], ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/], ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/], ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false], ['YYYY-DDD', /\\d{4}-\\d{3}/], ['YYYY-MM', /\\d{4}-\\d\\d/, false], ['YYYYYYMMDD', /[+-]\\d{10}/], ['YYYYMMDD', /\\d{8}/], // YYYYMM is NOT allowed by the standard\n  ['GGGG[W]WWE', /\\d{4}W\\d{3}/], ['GGGG[W]WW', /\\d{4}W\\d{2}/, false], ['YYYYDDD', /\\d{7}/]]; // iso time formats and regexes\n\n  var isoTimes = [['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/], ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /\\d\\d:\\d\\d/], ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/], ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/], ['HHmmss', /\\d\\d\\d\\d\\d\\d/], ['HHmm', /\\d\\d\\d\\d/], ['HH', /\\d\\d/]];\n  var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i; // date from iso format\n\n  function configFromISO(config) {\n    var i,\n        l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime,\n        dateFormat,\n        timeFormat,\n        tzFormat;\n\n    if (match) {\n      getParsingFlags(config).iso = true;\n\n      for (i = 0, l = isoDates.length; i < l; i++) {\n        if (isoDates[i][1].exec(match[1])) {\n          dateFormat = isoDates[i][0];\n          allowTime = isoDates[i][2] !== false;\n          break;\n        }\n      }\n\n      if (dateFormat == null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[3]) {\n        for (i = 0, l = isoTimes.length; i < l; i++) {\n          if (isoTimes[i][1].exec(match[3])) {\n            // match[2] should be 'T' or space\n            timeFormat = (match[2] || ' ') + isoTimes[i][0];\n            break;\n          }\n        }\n\n        if (timeFormat == null) {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      if (!allowTime && timeFormat != null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[4]) {\n        if (tzRegex.exec(match[4])) {\n          tzFormat = 'Z';\n        } else {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n      configFromStringAndFormat(config);\n    } else {\n      config._isValid = false;\n    }\n  } // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n\n\n  var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n  function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\n\n    if (secondStr) {\n      result.push(parseInt(secondStr, 10));\n    }\n\n    return result;\n  }\n\n  function untruncateYear(yearStr) {\n    var year = parseInt(yearStr, 10);\n\n    if (year <= 49) {\n      return 2000 + year;\n    } else if (year <= 999) {\n      return 1900 + year;\n    }\n\n    return year;\n  }\n\n  function preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n  }\n\n  function checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n      // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n      var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n          weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n\n      if (weekdayProvided !== weekdayActual) {\n        getParsingFlags(config).weekdayMismatch = true;\n        config._isValid = false;\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  var obsOffsets = {\n    UT: 0,\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n  };\n\n  function calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n      return obsOffsets[obsOffset];\n    } else if (militaryOffset) {\n      // the only allowed military tz is Z\n      return 0;\n    } else {\n      var hm = parseInt(numOffset, 10);\n      var m = hm % 100,\n          h = (hm - m) / 100;\n      return h * 60 + m;\n    }\n  } // date and time from ref 2822 format\n\n\n  function configFromRFC2822(config) {\n    var match = rfc2822.exec(preprocessRFC2822(config._i));\n\n    if (match) {\n      var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n\n      if (!checkWeekday(match[1], parsedArray, config)) {\n        return;\n      }\n\n      config._a = parsedArray;\n      config._tzm = calculateOffset(match[8], match[9], match[10]);\n      config._d = createUTCDate.apply(null, config._a);\n\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n      getParsingFlags(config).rfc2822 = true;\n    } else {\n      config._isValid = false;\n    }\n  } // date from iso format or fallback\n\n\n  function configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n      config._d = new Date(+matched[1]);\n      return;\n    }\n\n    configFromISO(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n\n    configFromRFC2822(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    } // Final attempt, use Input Fallback\n\n\n    hooks.createFromInputFallback(config);\n  }\n\n  hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged and will be removed in an upcoming major release. Please refer to ' + 'http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {\n    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n  }); // constant that refers to the ISO standard\n\n  hooks.ISO_8601 = function () {}; // constant that refers to the RFC 2822 form\n\n\n  hooks.RFC_2822 = function () {}; // date from string and format string\n\n\n  function configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n      configFromISO(config);\n      return;\n    }\n\n    if (config._f === hooks.RFC_2822) {\n      configFromRFC2822(config);\n      return;\n    }\n\n    config._a = [];\n    getParsingFlags(config).empty = true; // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\n    var string = '' + config._i,\n        i,\n        parsedInput,\n        tokens,\n        token,\n        skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0]; // console.log('token', token, 'parsedInput', parsedInput,\n      //         'regex', getParseRegexForToken(token, config));\n\n      if (parsedInput) {\n        skipped = string.substr(0, string.indexOf(parsedInput));\n\n        if (skipped.length > 0) {\n          getParsingFlags(config).unusedInput.push(skipped);\n        }\n\n        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n        totalParsedInputLength += parsedInput.length;\n      } // don't parse if it's not a known token\n\n\n      if (formatTokenFunctions[token]) {\n        if (parsedInput) {\n          getParsingFlags(config).empty = false;\n        } else {\n          getParsingFlags(config).unusedTokens.push(token);\n        }\n\n        addTimeToArrayFromToken(token, parsedInput, config);\n      } else if (config._strict && !parsedInput) {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n    } // add remaining unparsed input length to the string\n\n\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n\n    if (string.length > 0) {\n      getParsingFlags(config).unusedInput.push(string);\n    } // clear _12h flag if hour is <= 12\n\n\n    if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n      getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem; // handle meridiem\n\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n    configFromArray(config);\n    checkOverflow(config);\n  }\n\n  function meridiemFixWrap(locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n      // nothing to do\n      return hour;\n    }\n\n    if (locale.meridiemHour != null) {\n      return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n      // Fallback\n      isPm = locale.isPM(meridiem);\n\n      if (isPm && hour < 12) {\n        hour += 12;\n      }\n\n      if (!isPm && hour === 12) {\n        hour = 0;\n      }\n\n      return hour;\n    } else {\n      // this is not supposed to happen\n      return hour;\n    }\n  } // date from string and array of format strings\n\n\n  function configFromStringAndArray(config) {\n    var tempConfig, bestMoment, scoreToBeat, i, currentScore;\n\n    if (config._f.length === 0) {\n      getParsingFlags(config).invalidFormat = true;\n      config._d = new Date(NaN);\n      return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n      currentScore = 0;\n      tempConfig = copyConfig({}, config);\n\n      if (config._useUTC != null) {\n        tempConfig._useUTC = config._useUTC;\n      }\n\n      tempConfig._f = config._f[i];\n      configFromStringAndFormat(tempConfig);\n\n      if (!isValid(tempConfig)) {\n        continue;\n      } // if there is any input that was not parsed add a penalty for that format\n\n\n      currentScore += getParsingFlags(tempConfig).charsLeftOver; //or tokens\n\n      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n      getParsingFlags(tempConfig).score = currentScore;\n\n      if (scoreToBeat == null || currentScore < scoreToBeat) {\n        scoreToBeat = currentScore;\n        bestMoment = tempConfig;\n      }\n    }\n\n    extend(config, bestMoment || tempConfig);\n  }\n\n  function configFromObject(config) {\n    if (config._d) {\n      return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n      return obj && parseInt(obj, 10);\n    });\n    configFromArray(config);\n  }\n\n  function createFromConfig(config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n\n    if (res._nextDay) {\n      // Adding is smart enough around DST\n      res.add(1, 'd');\n      res._nextDay = undefined;\n    }\n\n    return res;\n  }\n\n  function prepareConfig(config) {\n    var input = config._i,\n        format = config._f;\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || format === undefined && input === '') {\n      return createInvalid({\n        nullInput: true\n      });\n    }\n\n    if (typeof input === 'string') {\n      config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n      return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n      config._d = input;\n    } else if (isArray(format)) {\n      configFromStringAndArray(config);\n    } else if (format) {\n      configFromStringAndFormat(config);\n    } else {\n      configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n      config._d = null;\n    }\n\n    return config;\n  }\n\n  function configFromInput(config) {\n    var input = config._i;\n\n    if (isUndefined(input)) {\n      config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n      config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n      configFromString(config);\n    } else if (isArray(input)) {\n      config._a = map(input.slice(0), function (obj) {\n        return parseInt(obj, 10);\n      });\n      configFromArray(config);\n    } else if (isObject(input)) {\n      configFromObject(config);\n    } else if (isNumber(input)) {\n      // from milliseconds\n      config._d = new Date(input);\n    } else {\n      hooks.createFromInputFallback(config);\n    }\n  }\n\n  function createLocalOrUTC(input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n      strict = locale;\n      locale = undefined;\n    }\n\n    if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {\n      input = undefined;\n    } // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n\n\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n    return createFromConfig(c);\n  }\n\n  function createLocal(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n  }\n\n  var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other < this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  });\n  var prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other > this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  }); // Pick a moment m from moments so that m[fn](other) is true for all\n  // other. This relies on the function fn to be transitive.\n  //\n  // moments should either be an array of moment objects or an array, whose\n  // first element is an array of moment objects.\n\n  function pickBy(fn, moments) {\n    var res, i;\n\n    if (moments.length === 1 && isArray(moments[0])) {\n      moments = moments[0];\n    }\n\n    if (!moments.length) {\n      return createLocal();\n    }\n\n    res = moments[0];\n\n    for (i = 1; i < moments.length; ++i) {\n      if (!moments[i].isValid() || moments[i][fn](res)) {\n        res = moments[i];\n      }\n    }\n\n    return res;\n  } // TODO: Use [].sort instead?\n\n\n  function min() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isBefore', args);\n  }\n\n  function max() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isAfter', args);\n  }\n\n  var now = function now() {\n    return Date.now ? Date.now() : +new Date();\n  };\n\n  var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n  function isDurationValid(m) {\n    for (var key in m) {\n      if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n        return false;\n      }\n    }\n\n    var unitHasDecimal = false;\n\n    for (var i = 0; i < ordering.length; ++i) {\n      if (m[ordering[i]]) {\n        if (unitHasDecimal) {\n          return false; // only allow non-integers for smallest unit\n        }\n\n        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n          unitHasDecimal = true;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  function isValid$1() {\n    return this._isValid;\n  }\n\n  function createInvalid$1() {\n    return createDuration(NaN);\n  }\n\n  function Duration(duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n    this._isValid = isDurationValid(normalizedInput); // representation for dateAddRemove\n\n    this._milliseconds = +milliseconds + seconds * 1e3 + // 1000\n    minutes * 6e4 + // 1000 * 60\n    hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n\n    this._days = +days + weeks * 7; // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n\n    this._months = +months + quarters * 3 + years * 12;\n    this._data = {};\n    this._locale = getLocale();\n\n    this._bubble();\n  }\n\n  function isDuration(obj) {\n    return obj instanceof Duration;\n  }\n\n  function absRound(number) {\n    if (number < 0) {\n      return Math.round(-1 * number) * -1;\n    } else {\n      return Math.round(number);\n    }\n  } // FORMATTING\n\n\n  function offset(token, separator) {\n    addFormatToken(token, 0, 0, function () {\n      var offset = this.utcOffset();\n      var sign = '+';\n\n      if (offset < 0) {\n        offset = -offset;\n        sign = '-';\n      }\n\n      return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n    });\n  }\n\n  offset('Z', ':');\n  offset('ZZ', ''); // PARSING\n\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n  }); // HELPERS\n  // timezone chunker\n  // '+10:00' > ['10',  '00']\n  // '-1530'  > ['-15', '30']\n\n  var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n  function offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n      return null;\n    }\n\n    var chunk = matches[matches.length - 1] || [];\n    var parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n    return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n  } // Return a moment from input, that is local/utc/zone equivalent to model.\n\n\n  function cloneWithOffset(input, model) {\n    var res, diff;\n\n    if (model._isUTC) {\n      res = model.clone();\n      diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf(); // Use low-level api, because this fn is low-level api.\n\n      res._d.setTime(res._d.valueOf() + diff);\n\n      hooks.updateOffset(res, false);\n      return res;\n    } else {\n      return createLocal(input).local();\n    }\n  }\n\n  function getDateOffset(m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n  } // HOOKS\n  // This function will be called whenever a moment is mutated.\n  // It is intended to keep the offset in sync with the timezone.\n\n\n  hooks.updateOffset = function () {}; // MOMENTS\n  // keepLocalTime = true means only change the timezone, without\n  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n  // +0200, so we adjust the time as needed, to be valid.\n  //\n  // Keeping the time actually adds/subtracts (one hour)\n  // from the actual represented time. That is why we call updateOffset\n  // a second time. In case it wants us to change the offset again\n  // _changeInProgress == true case, then we have to adjust, because\n  // there is no such time in the given timezone.\n\n\n  function getSetOffset(input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    if (input != null) {\n      if (typeof input === 'string') {\n        input = offsetFromString(matchShortOffset, input);\n\n        if (input === null) {\n          return this;\n        }\n      } else if (Math.abs(input) < 16 && !keepMinutes) {\n        input = input * 60;\n      }\n\n      if (!this._isUTC && keepLocalTime) {\n        localAdjust = getDateOffset(this);\n      }\n\n      this._offset = input;\n      this._isUTC = true;\n\n      if (localAdjust != null) {\n        this.add(localAdjust, 'm');\n      }\n\n      if (offset !== input) {\n        if (!keepLocalTime || this._changeInProgress) {\n          addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n        } else if (!this._changeInProgress) {\n          this._changeInProgress = true;\n          hooks.updateOffset(this, true);\n          this._changeInProgress = null;\n        }\n      }\n\n      return this;\n    } else {\n      return this._isUTC ? offset : getDateOffset(this);\n    }\n  }\n\n  function getSetZone(input, keepLocalTime) {\n    if (input != null) {\n      if (typeof input !== 'string') {\n        input = -input;\n      }\n\n      this.utcOffset(input, keepLocalTime);\n      return this;\n    } else {\n      return -this.utcOffset();\n    }\n  }\n\n  function setOffsetToUTC(keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n  }\n\n  function setOffsetToLocal(keepLocalTime) {\n    if (this._isUTC) {\n      this.utcOffset(0, keepLocalTime);\n      this._isUTC = false;\n\n      if (keepLocalTime) {\n        this.subtract(getDateOffset(this), 'm');\n      }\n    }\n\n    return this;\n  }\n\n  function setOffsetToParsedOffset() {\n    if (this._tzm != null) {\n      this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n      var tZone = offsetFromString(matchOffset, this._i);\n\n      if (tZone != null) {\n        this.utcOffset(tZone);\n      } else {\n        this.utcOffset(0, true);\n      }\n    }\n\n    return this;\n  }\n\n  function hasAlignedHourOffset(input) {\n    if (!this.isValid()) {\n      return false;\n    }\n\n    input = input ? createLocal(input).utcOffset() : 0;\n    return (this.utcOffset() - input) % 60 === 0;\n  }\n\n  function isDaylightSavingTime() {\n    return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();\n  }\n\n  function isDaylightSavingTimeShifted() {\n    if (!isUndefined(this._isDSTShifted)) {\n      return this._isDSTShifted;\n    }\n\n    var c = {};\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n      var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n      this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n    } else {\n      this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n  }\n\n  function isLocal() {\n    return this.isValid() ? !this._isUTC : false;\n  }\n\n  function isUtcOffset() {\n    return this.isValid() ? this._isUTC : false;\n  }\n\n  function isUtc() {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n  } // ASP.NET json date format regex\n\n\n  var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/; // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n  // and further modified to allow for strings containing both week and day\n\n  var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n  function createDuration(input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n    match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n      duration = {\n        ms: input._milliseconds,\n        d: input._days,\n        M: input._months\n      };\n    } else if (isNumber(input)) {\n      duration = {};\n\n      if (key) {\n        duration[key] = input;\n      } else {\n        duration.milliseconds = input;\n      }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: 0,\n        d: toInt(match[DATE]) * sign,\n        h: toInt(match[HOUR]) * sign,\n        m: toInt(match[MINUTE]) * sign,\n        s: toInt(match[SECOND]) * sign,\n        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n\n      };\n    } else if (!!(match = isoRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: parseIso(match[2], sign),\n        M: parseIso(match[3], sign),\n        w: parseIso(match[4], sign),\n        d: parseIso(match[5], sign),\n        h: parseIso(match[6], sign),\n        m: parseIso(match[7], sign),\n        s: parseIso(match[8], sign)\n      };\n    } else if (duration == null) {\n      // checks for null or undefined\n      duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n      diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n      duration = {};\n      duration.ms = diffRes.milliseconds;\n      duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n      ret._locale = input._locale;\n    }\n\n    return ret;\n  }\n\n  createDuration.fn = Duration.prototype;\n  createDuration.invalid = createInvalid$1;\n\n  function parseIso(inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.')); // apply sign while we're at it\n\n    return (isNaN(res) ? 0 : res) * sign;\n  }\n\n  function positiveMomentsDifference(base, other) {\n    var res = {};\n    res.months = other.month() - base.month() + (other.year() - base.year()) * 12;\n\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n      --res.months;\n    }\n\n    res.milliseconds = +other - +base.clone().add(res.months, 'M');\n    return res;\n  }\n\n  function momentsDifference(base, other) {\n    var res;\n\n    if (!(base.isValid() && other.isValid())) {\n      return {\n        milliseconds: 0,\n        months: 0\n      };\n    }\n\n    other = cloneWithOffset(other, base);\n\n    if (base.isBefore(other)) {\n      res = positiveMomentsDifference(base, other);\n    } else {\n      res = positiveMomentsDifference(other, base);\n      res.milliseconds = -res.milliseconds;\n      res.months = -res.months;\n    }\n\n    return res;\n  } // TODO: remove 'name' arg after deprecation is removed\n\n\n  function createAdder(direction, name) {\n    return function (val, period) {\n      var dur, tmp; //invert the arguments, but complain about it\n\n      if (period !== null && !isNaN(+period)) {\n        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n        tmp = val;\n        val = period;\n        period = tmp;\n      }\n\n      val = typeof val === 'string' ? +val : val;\n      dur = createDuration(val, period);\n      addSubtract(this, dur, direction);\n      return this;\n    };\n  }\n\n  function addSubtract(mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n      // No op\n      return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (months) {\n      setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n\n    if (days) {\n      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n\n    if (milliseconds) {\n      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n\n    if (updateOffset) {\n      hooks.updateOffset(mom, days || months);\n    }\n  }\n\n  var add = createAdder(1, 'add');\n  var subtract = createAdder(-1, 'subtract');\n\n  function getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';\n  }\n\n  function calendar$1(time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n  }\n\n  function clone() {\n    return new Moment(this);\n  }\n\n  function isAfter(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() > localInput.valueOf();\n    } else {\n      return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n  }\n\n  function isBefore(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() < localInput.valueOf();\n    } else {\n      return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n  }\n\n  function isBetween(from, to, units, inclusivity) {\n    var localFrom = isMoment(from) ? from : createLocal(from),\n        localTo = isMoment(to) ? to : createLocal(to);\n\n    if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n      return false;\n    }\n\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n  }\n\n  function isSame(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() === localInput.valueOf();\n    } else {\n      inputMs = localInput.valueOf();\n      return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n  }\n\n  function isSameOrAfter(input, units) {\n    return this.isSame(input, units) || this.isAfter(input, units);\n  }\n\n  function isSameOrBefore(input, units) {\n    return this.isSame(input, units) || this.isBefore(input, units);\n  }\n\n  function diff(input, units, asFloat) {\n    var that, zoneDelta, output;\n\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n      return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n    units = normalizeUnits(units);\n\n    switch (units) {\n      case 'year':\n        output = monthDiff(this, that) / 12;\n        break;\n\n      case 'month':\n        output = monthDiff(this, that);\n        break;\n\n      case 'quarter':\n        output = monthDiff(this, that) / 3;\n        break;\n\n      case 'second':\n        output = (this - that) / 1e3;\n        break;\n      // 1000\n\n      case 'minute':\n        output = (this - that) / 6e4;\n        break;\n      // 1000 * 60\n\n      case 'hour':\n        output = (this - that) / 36e5;\n        break;\n      // 1000 * 60 * 60\n\n      case 'day':\n        output = (this - that - zoneDelta) / 864e5;\n        break;\n      // 1000 * 60 * 60 * 24, negate dst\n\n      case 'week':\n        output = (this - that - zoneDelta) / 6048e5;\n        break;\n      // 1000 * 60 * 60 * 24 * 7, negate dst\n\n      default:\n        output = this - that;\n    }\n\n    return asFloat ? output : absFloor(output);\n  }\n\n  function monthDiff(a, b) {\n    // difference in months\n    var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n    anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2,\n        adjust;\n\n    if (b - anchor < 0) {\n      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor2 - anchor);\n    } //check for negative zero, return zero if negative zero\n\n\n    return -(wholeMonthDiff + adjust) || 0;\n  }\n\n  hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n  hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n  function toString() {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n  }\n\n  function toISOString(keepOffset) {\n    if (!this.isValid()) {\n      return null;\n    }\n\n    var utc = keepOffset !== true;\n    var m = utc ? this.clone().utc() : this;\n\n    if (m.year() < 0 || m.year() > 9999) {\n      return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    if (isFunction(Date.prototype.toISOString)) {\n      // native implementation is ~50x faster, use it when we can\n      if (utc) {\n        return this.toDate().toISOString();\n      } else {\n        return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n      }\n    }\n\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n  }\n  /**\n   * Return a human readable representation of a moment that can\n   * also be evaluated to get a new moment which is the same\n   *\n   * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n   */\n\n\n  function inspect() {\n    if (!this.isValid()) {\n      return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n\n    var func = 'moment';\n    var zone = '';\n\n    if (!this.isLocal()) {\n      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n      zone = 'Z';\n    }\n\n    var prefix = '[' + func + '(\"]';\n    var year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n    return this.format(prefix + year + datetime + suffix);\n  }\n\n  function format(inputString) {\n    if (!inputString) {\n      inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n  }\n\n  function from(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        to: this,\n        from: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function fromNow(withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n  }\n\n  function to(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        from: this,\n        to: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function toNow(withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n  } // If passed a locale key, it will set the locale for this\n  // instance.  Otherwise, it will return the locale configuration\n  // variables for this instance.\n\n\n  function locale(key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n      return this._locale._abbr;\n    } else {\n      newLocaleData = getLocale(key);\n\n      if (newLocaleData != null) {\n        this._locale = newLocaleData;\n      }\n\n      return this;\n    }\n  }\n\n  var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {\n    if (key === undefined) {\n      return this.localeData();\n    } else {\n      return this.locale(key);\n    }\n  });\n\n  function localeData() {\n    return this._locale;\n  }\n\n  var MS_PER_SECOND = 1000;\n  var MS_PER_MINUTE = 60 * MS_PER_SECOND;\n  var MS_PER_HOUR = 60 * MS_PER_MINUTE;\n  var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR; // actual modulo - handles negative numbers (for dates before 1970):\n\n  function mod$1(dividend, divisor) {\n    return (dividend % divisor + divisor) % divisor;\n  }\n\n  function localStartOfDate(y, m, d) {\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return new Date(y, m, d).valueOf();\n    }\n  }\n\n  function utcStartOfDate(y, m, d) {\n    // Date.UTC remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return Date.UTC(y, m, d);\n    }\n  }\n\n  function startOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year(), 0, 1);\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month(), 1);\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date());\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_MINUTE);\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_SECOND);\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function endOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year() + 1, 0, 1) - 1;\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function valueOf() {\n    return this._d.valueOf() - (this._offset || 0) * 60000;\n  }\n\n  function unix() {\n    return Math.floor(this.valueOf() / 1000);\n  }\n\n  function toDate() {\n    return new Date(this.valueOf());\n  }\n\n  function toArray() {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n  }\n\n  function toObject() {\n    var m = this;\n    return {\n      years: m.year(),\n      months: m.month(),\n      date: m.date(),\n      hours: m.hours(),\n      minutes: m.minutes(),\n      seconds: m.seconds(),\n      milliseconds: m.milliseconds()\n    };\n  }\n\n  function toJSON() {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n  }\n\n  function isValid$2() {\n    return isValid(this);\n  }\n\n  function parsingFlags() {\n    return extend({}, getParsingFlags(this));\n  }\n\n  function invalidAt() {\n    return getParsingFlags(this).overflow;\n  }\n\n  function creationData() {\n    return {\n      input: this._i,\n      format: this._f,\n      locale: this._locale,\n      isUTC: this._isUTC,\n      strict: this._strict\n    };\n  } // FORMATTING\n\n\n  addFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n  });\n  addFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n  });\n\n  function addWeekYearFormatToken(token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n  }\n\n  addWeekYearFormatToken('gggg', 'weekYear');\n  addWeekYearFormatToken('ggggg', 'weekYear');\n  addWeekYearFormatToken('GGGG', 'isoWeekYear');\n  addWeekYearFormatToken('GGGGG', 'isoWeekYear'); // ALIASES\n\n  addUnitAlias('weekYear', 'gg');\n  addUnitAlias('isoWeekYear', 'GG'); // PRIORITY\n\n  addUnitPriority('weekYear', 1);\n  addUnitPriority('isoWeekYear', 1); // PARSING\n\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n  });\n  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n  }); // MOMENTS\n\n  function getSetWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);\n  }\n\n  function getSetISOWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);\n  }\n\n  function getISOWeeksInYear() {\n    return weeksInYear(this.year(), 1, 4);\n  }\n\n  function getWeeksInYear() {\n    var weekInfo = this.localeData()._week;\n\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n  }\n\n  function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n\n    if (input == null) {\n      return weekOfYear(this, dow, doy).year;\n    } else {\n      weeksTarget = weeksInYear(input, dow, doy);\n\n      if (week > weeksTarget) {\n        week = weeksTarget;\n      }\n\n      return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n  }\n\n  function setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n  } // FORMATTING\n\n\n  addFormatToken('Q', 0, 'Qo', 'quarter'); // ALIASES\n\n  addUnitAlias('quarter', 'Q'); // PRIORITY\n\n  addUnitPriority('quarter', 7); // PARSING\n\n  addRegexToken('Q', match1);\n  addParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n  }); // MOMENTS\n\n  function getSetQuarter(input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n  } // FORMATTING\n\n\n  addFormatToken('D', ['DD', 2], 'Do', 'date'); // ALIASES\n\n  addUnitAlias('date', 'D'); // PRIORITY\n\n  addUnitPriority('date', 9); // PARSING\n\n  addRegexToken('D', match1to2);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;\n  });\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n  }); // MOMENTS\n\n  var getSetDayOfMonth = makeGetSet('Date', true); // FORMATTING\n\n  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'); // ALIASES\n\n  addUnitAlias('dayOfYear', 'DDD'); // PRIORITY\n\n  addUnitPriority('dayOfYear', 4); // PARSING\n\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n  }); // HELPERS\n  // MOMENTS\n\n  function getSetDayOfYear(input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('m', ['mm', 2], 0, 'minute'); // ALIASES\n\n  addUnitAlias('minute', 'm'); // PRIORITY\n\n  addUnitPriority('minute', 14); // PARSING\n\n  addRegexToken('m', match1to2);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE); // MOMENTS\n\n  var getSetMinute = makeGetSet('Minutes', false); // FORMATTING\n\n  addFormatToken('s', ['ss', 2], 0, 'second'); // ALIASES\n\n  addUnitAlias('second', 's'); // PRIORITY\n\n  addUnitPriority('second', 15); // PARSING\n\n  addRegexToken('s', match1to2);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND); // MOMENTS\n\n  var getSetSecond = makeGetSet('Seconds', false); // FORMATTING\n\n  addFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n  });\n  addFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n  });\n  addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n  addFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n  });\n  addFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n  });\n  addFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n  });\n  addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n  });\n  addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n  });\n  addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n  }); // ALIASES\n\n  addUnitAlias('millisecond', 'ms'); // PRIORITY\n\n  addUnitPriority('millisecond', 16); // PARSING\n\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n  var token;\n\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n\n  function parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n  }\n\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  } // MOMENTS\n\n\n  var getSetMillisecond = makeGetSet('Milliseconds', false); // FORMATTING\n\n  addFormatToken('z', 0, 0, 'zoneAbbr');\n  addFormatToken('zz', 0, 0, 'zoneName'); // MOMENTS\n\n  function getZoneAbbr() {\n    return this._isUTC ? 'UTC' : '';\n  }\n\n  function getZoneName() {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n  }\n\n  var proto = Moment.prototype;\n  proto.add = add;\n  proto.calendar = calendar$1;\n  proto.clone = clone;\n  proto.diff = diff;\n  proto.endOf = endOf;\n  proto.format = format;\n  proto.from = from;\n  proto.fromNow = fromNow;\n  proto.to = to;\n  proto.toNow = toNow;\n  proto.get = stringGet;\n  proto.invalidAt = invalidAt;\n  proto.isAfter = isAfter;\n  proto.isBefore = isBefore;\n  proto.isBetween = isBetween;\n  proto.isSame = isSame;\n  proto.isSameOrAfter = isSameOrAfter;\n  proto.isSameOrBefore = isSameOrBefore;\n  proto.isValid = isValid$2;\n  proto.lang = lang;\n  proto.locale = locale;\n  proto.localeData = localeData;\n  proto.max = prototypeMax;\n  proto.min = prototypeMin;\n  proto.parsingFlags = parsingFlags;\n  proto.set = stringSet;\n  proto.startOf = startOf;\n  proto.subtract = subtract;\n  proto.toArray = toArray;\n  proto.toObject = toObject;\n  proto.toDate = toDate;\n  proto.toISOString = toISOString;\n  proto.inspect = inspect;\n  proto.toJSON = toJSON;\n  proto.toString = toString;\n  proto.unix = unix;\n  proto.valueOf = valueOf;\n  proto.creationData = creationData;\n  proto.year = getSetYear;\n  proto.isLeapYear = getIsLeapYear;\n  proto.weekYear = getSetWeekYear;\n  proto.isoWeekYear = getSetISOWeekYear;\n  proto.quarter = proto.quarters = getSetQuarter;\n  proto.month = getSetMonth;\n  proto.daysInMonth = getDaysInMonth;\n  proto.week = proto.weeks = getSetWeek;\n  proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n  proto.weeksInYear = getWeeksInYear;\n  proto.isoWeeksInYear = getISOWeeksInYear;\n  proto.date = getSetDayOfMonth;\n  proto.day = proto.days = getSetDayOfWeek;\n  proto.weekday = getSetLocaleDayOfWeek;\n  proto.isoWeekday = getSetISODayOfWeek;\n  proto.dayOfYear = getSetDayOfYear;\n  proto.hour = proto.hours = getSetHour;\n  proto.minute = proto.minutes = getSetMinute;\n  proto.second = proto.seconds = getSetSecond;\n  proto.millisecond = proto.milliseconds = getSetMillisecond;\n  proto.utcOffset = getSetOffset;\n  proto.utc = setOffsetToUTC;\n  proto.local = setOffsetToLocal;\n  proto.parseZone = setOffsetToParsedOffset;\n  proto.hasAlignedHourOffset = hasAlignedHourOffset;\n  proto.isDST = isDaylightSavingTime;\n  proto.isLocal = isLocal;\n  proto.isUtcOffset = isUtcOffset;\n  proto.isUtc = isUtc;\n  proto.isUTC = isUtc;\n  proto.zoneAbbr = getZoneAbbr;\n  proto.zoneName = getZoneName;\n  proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n  proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n  proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n  proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n  proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n  function createUnix(input) {\n    return createLocal(input * 1000);\n  }\n\n  function createInZone() {\n    return createLocal.apply(null, arguments).parseZone();\n  }\n\n  function preParsePostFormat(string) {\n    return string;\n  }\n\n  var proto$1 = Locale.prototype;\n  proto$1.calendar = calendar;\n  proto$1.longDateFormat = longDateFormat;\n  proto$1.invalidDate = invalidDate;\n  proto$1.ordinal = ordinal;\n  proto$1.preparse = preParsePostFormat;\n  proto$1.postformat = preParsePostFormat;\n  proto$1.relativeTime = relativeTime;\n  proto$1.pastFuture = pastFuture;\n  proto$1.set = set;\n  proto$1.months = localeMonths;\n  proto$1.monthsShort = localeMonthsShort;\n  proto$1.monthsParse = localeMonthsParse;\n  proto$1.monthsRegex = monthsRegex;\n  proto$1.monthsShortRegex = monthsShortRegex;\n  proto$1.week = localeWeek;\n  proto$1.firstDayOfYear = localeFirstDayOfYear;\n  proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n  proto$1.weekdays = localeWeekdays;\n  proto$1.weekdaysMin = localeWeekdaysMin;\n  proto$1.weekdaysShort = localeWeekdaysShort;\n  proto$1.weekdaysParse = localeWeekdaysParse;\n  proto$1.weekdaysRegex = weekdaysRegex;\n  proto$1.weekdaysShortRegex = weekdaysShortRegex;\n  proto$1.weekdaysMinRegex = weekdaysMinRegex;\n  proto$1.isPM = localeIsPM;\n  proto$1.meridiem = localeMeridiem;\n\n  function get$1(format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n  }\n\n  function listMonthsImpl(format, index, field) {\n    if (isNumber(format)) {\n      index = format;\n      format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n      return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 12; i++) {\n      out[i] = get$1(format, i, field, 'month');\n    }\n\n    return out;\n  } // ()\n  // (5)\n  // (fmt, 5)\n  // (fmt)\n  // (true)\n  // (true, 5)\n  // (true, fmt, 5)\n  // (true, fmt)\n\n\n  function listWeekdaysImpl(localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    } else {\n      format = localeSorted;\n      index = format;\n      localeSorted = false;\n\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n      return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 7; i++) {\n      out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n\n    return out;\n  }\n\n  function listMonths(format, index) {\n    return listMonthsImpl(format, index, 'months');\n  }\n\n  function listMonthsShort(format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n  }\n\n  function listWeekdays(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n  }\n\n  function listWeekdaysShort(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n  }\n\n  function listWeekdaysMin(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n  }\n\n  getSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal: function ordinal(number) {\n      var b = number % 10,\n          output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    }\n  }); // Side effect imports\n\n  hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n  hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n  var mathAbs = Math.abs;\n\n  function abs() {\n    var data = this._data;\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.months = mathAbs(data.months);\n    data.years = mathAbs(data.years);\n    return this;\n  }\n\n  function addSubtract$1(duration, input, value, direction) {\n    var other = createDuration(input, value);\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days += direction * other._days;\n    duration._months += direction * other._months;\n    return duration._bubble();\n  } // supports only 2.0-style add(1, 's') or add(duration)\n\n\n  function add$1(input, value) {\n    return addSubtract$1(this, input, value, 1);\n  } // supports only 2.0-style subtract(1, 's') or subtract(duration)\n\n\n  function subtract$1(input, value) {\n    return addSubtract$1(this, input, value, -1);\n  }\n\n  function absCeil(number) {\n    if (number < 0) {\n      return Math.floor(number);\n    } else {\n      return Math.ceil(number);\n    }\n  }\n\n  function bubble() {\n    var milliseconds = this._milliseconds;\n    var days = this._days;\n    var months = this._months;\n    var data = this._data;\n    var seconds, minutes, hours, years, monthsFromDays; // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n\n    if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n      days = 0;\n      months = 0;\n    } // The following code bubbles up values, see the tests for\n    // examples of what that means.\n\n\n    data.milliseconds = milliseconds % 1000;\n    seconds = absFloor(milliseconds / 1000);\n    data.seconds = seconds % 60;\n    minutes = absFloor(seconds / 60);\n    data.minutes = minutes % 60;\n    hours = absFloor(minutes / 60);\n    data.hours = hours % 24;\n    days += absFloor(hours / 24); // convert days to months\n\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays)); // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12;\n    data.days = days;\n    data.months = months;\n    data.years = years;\n    return this;\n  }\n\n  function daysToMonths(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n  }\n\n  function monthsToDays(months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n  }\n\n  function as(units) {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'quarter' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n\n      switch (units) {\n        case 'month':\n          return months;\n\n        case 'quarter':\n          return months / 3;\n\n        case 'year':\n          return months / 12;\n      }\n    } else {\n      // handle milliseconds separately because of floating point math errors (issue #1867)\n      days = this._days + Math.round(monthsToDays(this._months));\n\n      switch (units) {\n        case 'week':\n          return days / 7 + milliseconds / 6048e5;\n\n        case 'day':\n          return days + milliseconds / 864e5;\n\n        case 'hour':\n          return days * 24 + milliseconds / 36e5;\n\n        case 'minute':\n          return days * 1440 + milliseconds / 6e4;\n\n        case 'second':\n          return days * 86400 + milliseconds / 1000;\n        // Math.floor prevents floating point math errors here\n\n        case 'millisecond':\n          return Math.floor(days * 864e5) + milliseconds;\n\n        default:\n          throw new Error('Unknown unit ' + units);\n      }\n    }\n  } // TODO: Use this.as('ms')?\n\n\n  function valueOf$1() {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n  }\n\n  function makeAs(alias) {\n    return function () {\n      return this.as(alias);\n    };\n  }\n\n  var asMilliseconds = makeAs('ms');\n  var asSeconds = makeAs('s');\n  var asMinutes = makeAs('m');\n  var asHours = makeAs('h');\n  var asDays = makeAs('d');\n  var asWeeks = makeAs('w');\n  var asMonths = makeAs('M');\n  var asQuarters = makeAs('Q');\n  var asYears = makeAs('y');\n\n  function clone$1() {\n    return createDuration(this);\n  }\n\n  function get$2(units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n  }\n\n  function makeGetter(name) {\n    return function () {\n      return this.isValid() ? this._data[name] : NaN;\n    };\n  }\n\n  var milliseconds = makeGetter('milliseconds');\n  var seconds = makeGetter('seconds');\n  var minutes = makeGetter('minutes');\n  var hours = makeGetter('hours');\n  var days = makeGetter('days');\n  var months = makeGetter('months');\n  var years = makeGetter('years');\n\n  function weeks() {\n    return absFloor(this.days() / 7);\n  }\n\n  var round = Math.round;\n  var thresholds = {\n    ss: 44,\n    // a few seconds to seconds\n    s: 45,\n    // seconds to minute\n    m: 45,\n    // minutes to hour\n    h: 22,\n    // hours to day\n    d: 26,\n    // days to month\n    M: 11 // months to year\n\n  }; // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\n  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n  }\n\n  function relativeTime$1(posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds = round(duration.as('s'));\n    var minutes = round(duration.as('m'));\n    var hours = round(duration.as('h'));\n    var days = round(duration.as('d'));\n    var months = round(duration.as('M'));\n    var years = round(duration.as('y'));\n    var a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days] || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n  } // This function allows you to set the rounding function for relative time strings\n\n\n  function getSetRelativeTimeRounding(roundingFunction) {\n    if (roundingFunction === undefined) {\n      return round;\n    }\n\n    if (typeof roundingFunction === 'function') {\n      round = roundingFunction;\n      return true;\n    }\n\n    return false;\n  } // This function allows you to set a threshold for relative time strings\n\n\n  function getSetRelativeTimeThreshold(threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n      return false;\n    }\n\n    if (limit === undefined) {\n      return thresholds[threshold];\n    }\n\n    thresholds[threshold] = limit;\n\n    if (threshold === 's') {\n      thresholds.ss = limit - 1;\n    }\n\n    return true;\n  }\n\n  function humanize(withSuffix) {\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n  }\n\n  var abs$1 = Math.abs;\n\n  function sign(x) {\n    return (x > 0) - (x < 0) || +x;\n  }\n\n  function toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days = abs$1(this._days);\n    var months = abs$1(this._months);\n    var minutes, hours, years; // 3600 seconds -> 60 minutes -> 1 hour\n\n    minutes = absFloor(seconds / 60);\n    hours = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60; // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12; // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    var total = this.asSeconds();\n\n    if (!total) {\n      // this is the same as C#'s (Noda) and python (isodate)...\n      // but not other JS (goog.date)\n      return 'P0D';\n    }\n\n    var totalSign = total < 0 ? '-' : '';\n    var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n    return totalSign + 'P' + (Y ? ymSign + Y + 'Y' : '') + (M ? ymSign + M + 'M' : '') + (D ? daysSign + D + 'D' : '') + (h || m || s ? 'T' : '') + (h ? hmsSign + h + 'H' : '') + (m ? hmsSign + m + 'M' : '') + (s ? hmsSign + s + 'S' : '');\n  }\n\n  var proto$2 = Duration.prototype;\n  proto$2.isValid = isValid$1;\n  proto$2.abs = abs;\n  proto$2.add = add$1;\n  proto$2.subtract = subtract$1;\n  proto$2.as = as;\n  proto$2.asMilliseconds = asMilliseconds;\n  proto$2.asSeconds = asSeconds;\n  proto$2.asMinutes = asMinutes;\n  proto$2.asHours = asHours;\n  proto$2.asDays = asDays;\n  proto$2.asWeeks = asWeeks;\n  proto$2.asMonths = asMonths;\n  proto$2.asQuarters = asQuarters;\n  proto$2.asYears = asYears;\n  proto$2.valueOf = valueOf$1;\n  proto$2._bubble = bubble;\n  proto$2.clone = clone$1;\n  proto$2.get = get$2;\n  proto$2.milliseconds = milliseconds;\n  proto$2.seconds = seconds;\n  proto$2.minutes = minutes;\n  proto$2.hours = hours;\n  proto$2.days = days;\n  proto$2.weeks = weeks;\n  proto$2.months = months;\n  proto$2.years = years;\n  proto$2.humanize = humanize;\n  proto$2.toISOString = toISOString$1;\n  proto$2.toString = toISOString$1;\n  proto$2.toJSON = toISOString$1;\n  proto$2.locale = locale;\n  proto$2.localeData = localeData;\n  proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n  proto$2.lang = lang; // Side effect imports\n  // FORMATTING\n\n  addFormatToken('X', 0, 0, 'unix');\n  addFormatToken('x', 0, 0, 'valueOf'); // PARSING\n\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n  addParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n  });\n  addParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n  }); // Side effect imports\n\n  hooks.version = '2.24.0';\n  setHookCallback(createLocal);\n  hooks.fn = proto;\n  hooks.min = min;\n  hooks.max = max;\n  hooks.now = now;\n  hooks.utc = createUTC;\n  hooks.unix = createUnix;\n  hooks.months = listMonths;\n  hooks.isDate = isDate;\n  hooks.locale = getSetGlobalLocale;\n  hooks.invalid = createInvalid;\n  hooks.duration = createDuration;\n  hooks.isMoment = isMoment;\n  hooks.weekdays = listWeekdays;\n  hooks.parseZone = createInZone;\n  hooks.localeData = getLocale;\n  hooks.isDuration = isDuration;\n  hooks.monthsShort = listMonthsShort;\n  hooks.weekdaysMin = listWeekdaysMin;\n  hooks.defineLocale = defineLocale;\n  hooks.updateLocale = updateLocale;\n  hooks.locales = listLocales;\n  hooks.weekdaysShort = listWeekdaysShort;\n  hooks.normalizeUnits = normalizeUnits;\n  hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n  hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n  hooks.calendarFormat = getCalendarFormat;\n  hooks.prototype = proto; // currently HTML5 input type only supports 24-hour formats\n\n  hooks.HTML5_FMT = {\n    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',\n    // <input type=\"datetime-local\" />\n    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',\n    // <input type=\"datetime-local\" step=\"1\" />\n    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',\n    // <input type=\"datetime-local\" step=\"0.001\" />\n    DATE: 'YYYY-MM-DD',\n    // <input type=\"date\" />\n    TIME: 'HH:mm',\n    // <input type=\"time\" />\n    TIME_SECONDS: 'HH:mm:ss',\n    // <input type=\"time\" step=\"1\" />\n    TIME_MS: 'HH:mm:ss.SSS',\n    // <input type=\"time\" step=\"0.001\" />\n    WEEK: 'GGGG-[W]WW',\n    // <input type=\"week\" />\n    MONTH: 'YYYY-MM' // <input type=\"month\" />\n\n  };\n  return hooks;\n});","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\n\n\nvar baseEach = createBaseEach(baseForOwn);\nmodule.exports = baseEach;","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;","var createBaseFor = require('./_createBaseFor');\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\n\n\nvar baseFor = createBaseFor();\nmodule.exports = baseFor;","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function (object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;","var isArrayLike = require('./isArrayLike');\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `self`. */\n\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\nmodule.exports = root;","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\nmodule.exports = isArray;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\n\n\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n/** `Object#toString` result references. */\n\n\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n\n  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n}\n\nmodule.exports = baseGetTag;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Symbol = root.Symbol;\nmodule.exports = Symbol;","var isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\n\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = toKey;","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\n\n\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar symbolTag = '[object Symbol]';\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;\n}\n\nmodule.exports = isSymbol;","var baseToString = require('./_baseToString');\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\n\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `ListCache`.\n\n\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\nmodule.exports = ListCache;","var eq = require('./eq');\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\n\n\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = assocIndexOf;","var getNative = require('./_getNative');\n/* Built-in method references that are verified to be native. */\n\n\nvar nativeCreate = getNative(Object, 'create');\nmodule.exports = nativeCreate;","var isKeyable = require('./_isKeyable');\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\n\n\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;\n}\n\nmodule.exports = getMapData;","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\n\n\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n/** `Object#toString` result references. */\n\n\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\nvar dataViewTag = '[object DataView]';\n/** Used to detect maps, sets, and weakmaps. */\n\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nvar getTag = baseGetTag; // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n\nif (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {\n  getTag = function getTag(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString:\n          return dataViewTag;\n\n        case mapCtorString:\n          return mapTag;\n\n        case promiseCtorString:\n          return promiseTag;\n\n        case setCtorString:\n          return setTag;\n\n        case weakMapCtorString:\n          return weakMapTag;\n      }\n    }\n\n    return result;\n  };\n}\n\nmodule.exports = getTag;","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\n\nvar isArguments = baseIsArguments(function () {\n  return arguments;\n}()) ? baseIsArguments : function (value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n};\nmodule.exports = isArguments;","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Built-in value references. */\n\nvar Buffer = moduleExports ? root.Buffer : undefined;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\n\nvar isBuffer = nativeIsBuffer || stubFalse;\nmodule.exports = isBuffer;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/** Used to detect unsigned integer values. */\n\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\n\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n}\n\nmodule.exports = isIndex;","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\n\n\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\n\n\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n\n  return index && index == length ? object : undefined;\n}\n\nmodule.exports = baseGet;","module.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Map = getNative(root, 'Map');\nmodule.exports = Map;","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `MapCache`.\n\n\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\nmodule.exports = MapCache;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\n\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function (value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\n\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;\n  return value === proto;\n}\n\nmodule.exports = isPrototype;","var baseGet = require('./_baseGet');\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\n\n\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used to match property names within property paths. */\n\n\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\n\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n\n  var type = typeof value;\n\n  if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {\n    return true;\n  }\n\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);\n}\n\nmodule.exports = isKey;","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n\n  return result;\n}\n\nmodule.exports = arrayMap;","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;"],"sourceRoot":""}