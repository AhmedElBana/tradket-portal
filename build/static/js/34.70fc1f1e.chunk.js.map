{"version":3,"sources":["containers/DefaultLayout/DefaultHeader.js","tools/Dependencies.js"],"names":["DefaultHeader","auth","logout","_this$props","this","props","children","Object","_Users_ahmedel_banna_Documents_projects_tradket_portal_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","Fragment","_coreui_react__WEBPACK_IMPORTED_MODULE_12__","className","display","mobile","reactstrap__WEBPACK_IMPORTED_MODULE_7__","navbar","reactstrap__WEBPACK_IMPORTED_MODULE_8__","nav","direction","reactstrap__WEBPACK_IMPORTED_MODULE_9__","dependencies","getUserData","name","toUpperCase","reactstrap__WEBPACK_IMPORTED_MODULE_10__","right","reactstrap__WEBPACK_IMPORTED_MODULE_11__","onClick","lougoutClick","Component","defaultProps","getCurrentLang","localStorage","lang","ids","fullBranches","id_name","map","branch","_id","names","id","push","JSON","parse","userData","currency","text","currencies","integration","integrations","type","types","status","bs_status","perm","input","format","parts","match","i","fmt","replace","part","Date","d","toString","date","nextDay","parseDate","setDate","getDate","nextDayMonth","getMonth","getFullYear","pad","input_date","slice","toLocaleString","bool","fullName","array","trim","split","length","amount","currencyName","numberWithCommas"],"mappings":"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","file":"static/js/34.70fc1f1e.chunk.js","sourcesContent":["import React, { Component } from 'react';\n// import { Link, NavLink } from 'react-router-dom';\nimport { Badge, UncontrolledDropdown, DropdownItem, DropdownMenu, DropdownToggle, Nav } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nimport { AppSidebarToggler } from '@coreui/react';\n// import logo from '../../assets/img/brand/logo.svg'\n// import sygnet from '../../assets/img/brand/sygnet.svg'\nimport {auth} from './../../tools/Auth';\nimport { dependencies } from '../../tools/Dependencies';\n\nconst propTypes = {\n  children: PropTypes.node,\n};\n\nconst defaultProps = {};\n\nclass DefaultHeader extends Component {\n  lougoutClick(){\n    auth.logout();\n  }\n  render() {\n\n    // eslint-disable-next-line\n    const { children, ...attributes } = this.props;\n\n    return (\n      <React.Fragment>\n        <AppSidebarToggler className=\"d-lg-none\" display=\"md\" mobile />\n        {/* <AppNavbarBrand\n          full={{ src: logo, width: 89, height: 25, alt: 'CoreUI Logo' }}\n          minimized={{ src: sygnet, width: 30, height: 30, alt: 'CoreUI Logo' }}\n        /> */}\n        <AppSidebarToggler className=\"d-md-down-none\" display=\"lg\" />\n\n        {/* <Nav className=\"d-md-down-none\" navbar>\n          <NavItem className=\"px-3\">\n            <NavLink to=\"/dashboard\" className=\"nav-link\" >Dashboard</NavLink>\n          </NavItem>\n          <NavItem className=\"px-3\">\n            <Link to=\"/users\" className=\"nav-link\">Users</Link>\n          </NavItem>\n          <NavItem className=\"px-3\">\n            <NavLink to=\"#\" className=\"nav-link\">Settings</NavLink>\n          </NavItem>\n        </Nav> */}\n        <Nav className=\"ml-auto\" navbar>\n          {/* <NavItem className=\"d-md-down-none\">\n            <NavLink to=\"#\" className=\"nav-link\"><i className=\"icon-bell\"></i><Badge pill color=\"danger\">5</Badge></NavLink>\n          </NavItem>\n          <NavItem className=\"d-md-down-none\">\n            <NavLink to=\"#\" className=\"nav-link\"><i className=\"icon-list\"></i></NavLink>\n          </NavItem>\n          <NavItem className=\"d-md-down-none\">\n            <NavLink to=\"#\" className=\"nav-link\"><i className=\"icon-location-pin\"></i></NavLink>\n          </NavItem> */}\n          <UncontrolledDropdown nav direction=\"down\">\n            <DropdownToggle nav>\n              {/* <img src={'../../assets/img/avatars/6.jpg'} className=\"img-avatar\" alt=\"admin@bootstrapmaster.com\" /> */}\n              <span className=\"userLogo\">\n                <span>{dependencies.getUserData().name}</span>\n                <span className=\"usrImgDev\"><span>{dependencies.getUserData().name[0].toUpperCase()}</span></span>\n              </span>\n            </DropdownToggle>\n            <DropdownMenu right>\n              {/* <DropdownItem header tag=\"div\" className=\"text-center\"><strong>Account</strong></DropdownItem>\n              <DropdownItem><i className=\"fa fa-bell-o\"></i> Updates<Badge color=\"info\">42</Badge></DropdownItem>\n              <DropdownItem><i className=\"fa fa-envelope-o\"></i> Messages<Badge color=\"success\">42</Badge></DropdownItem>\n              <DropdownItem><i className=\"fa fa-tasks\"></i> Tasks<Badge color=\"danger\">42</Badge></DropdownItem>\n              <DropdownItem><i className=\"fa fa-comments\"></i> Comments<Badge color=\"warning\">42</Badge></DropdownItem>\n              <DropdownItem header tag=\"div\" className=\"text-center\"><strong>Settings</strong></DropdownItem>\n              <DropdownItem><i className=\"fa fa-user\"></i> Profile</DropdownItem>\n              <DropdownItem><i className=\"fa fa-wrench\"></i> Settings</DropdownItem>\n              <DropdownItem><i className=\"fa fa-usd\"></i> Payments<Badge color=\"secondary\">42</Badge></DropdownItem>\n              <DropdownItem><i className=\"fa fa-file\"></i> Projects<Badge color=\"primary\">42</Badge></DropdownItem>\n              <DropdownItem divider />\n              <DropdownItem><i className=\"fa fa-shield\"></i> Lock Account</DropdownItem> */}\n              <DropdownItem  onClick={this.lougoutClick}><i className=\"fa fa-lock\"></i> Logout</DropdownItem>\n            </DropdownMenu>\n          </UncontrolledDropdown>\n        </Nav>\n        {/* <AppAsideToggler className=\"d-md-down-none\" /> */}\n        {/*<AppAsideToggler className=\"d-lg-none\" mobile />*/}\n      </React.Fragment>\n    );\n  }\n}\n\nDefaultHeader.propTypes = propTypes;\nDefaultHeader.defaultProps = defaultProps;\n\nexport default DefaultHeader;\n","import text from \"./Dependencies.json\";\nclass Dependencies {\n    branchesName(ids,fullBranches){\n        let id_name = {};\n        fullBranches.map((branch)=>{\n            id_name[branch._id] = branch\n        })\n        let names = [];\n        ids.map((id)=>{\n            names.push(id_name[id].name)\n        })\n        return names\n    }\n\n\n\n    getUserData(){\n        return JSON.parse(localStorage.userData)\n    }\n    currencyName(currency){\n        if(text[localStorage.lang].currencies[currency]){\n            return text[localStorage.lang].currencies[currency];\n        }else{\n            return currency;\n        }\n    }\n    integrationsName(integration){\n        if(text[localStorage.lang].integrations[integration]){\n            return text[localStorage.lang].integrations[integration];\n        }else{\n            return integration;\n        }\n    }\n    paymentTypeName(type){\n        if(text[localStorage.lang].types[type]){\n            return text[localStorage.lang].types[type];\n        }else{\n            return type;\n        }\n    }\n    statusName(status){\n        if(text[localStorage.lang].status[status]){\n            return text[localStorage.lang].status[status];\n        }else{\n            return status;\n        }\n    }\n    bsMerchantStatus(bs_status){\n        if(text[localStorage.lang].bs_status && text[localStorage.lang].bs_status[bs_status]){\n            return text[localStorage.lang].bs_status[bs_status];\n        }else{\n            return bs_status;\n        }\n    }\n    \n    permsName(perm){\n        return text[\"perms\"][perm]? text[\"perms\"][perm] : perm\n    }\n     \n\n    parseDate(input, format) {\n        format = format || 'yyyy-mm-dd'; // default format\n        var parts = input.match(/(\\d+)/g), \n            i = 0, fmt = {};\n        // extract date-part indexes from the format\n        format.replace(/(yyyy|dd|mm)/g, function(part) { fmt[part] = i++; });\n  \n        return new Date(parts[fmt['yyyy']], parts[fmt['mm']]-1, parts[fmt['dd']]);\n    }\n    pad(d) {\n        return (d < 10) ? '0' + d.toString() : d.toString();\n    }\n    getNextDayDate(date){\n        var nextDay = this.parseDate(date);\n        nextDay.setDate(nextDay.getDate() + 1);\n        var nextDayMonth = nextDay.getMonth() + 1;\n        return nextDay.getFullYear() + '-' + this.pad(nextDayMonth) + '-' + this.pad(nextDay.getDate());\n    }\n    ParseFullDate(input) {\n        let format = 'yyyy-mm-dd hh:mn:ss'; \n        var parts = input.match(/(\\d+)/g), \n            i = 0, fmt = {};\n        // extract date-part indexes from the format\n        format.replace(/(yyyy|dd|mm|hh|mn|ss)/g, function(part) { fmt[part] = i++; });\n        return new Date(parts[fmt['yyyy']], parts[fmt['mm']]-1, parts[fmt['dd']], parts[fmt['hh']], parts[fmt['mn']], parts[fmt['ss']] );\n    }\n    IeDateFormate( input_date ){\n        return input_date.slice(0, 19)\n    }\n    custom_date_format( input_date ){\n        // var d = this.ParseFullDate(input_date);\n        // var month = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n        // if( localStorage.lang == \"ar\" ){\n        //   month = ['يناير','فبراير','مارس','ابريل','مايو','يونيو','يوليو','أغسطس','سبتمبر','أكتوبر','نوفمبر','ديسمبر'];\n        // }\n        // var output_time = d.toLocaleTimeString().toLowerCase().replace(/([\\d]+:[\\d]+):[\\d]+(\\s\\w+)/g, \"$1$2\");\n        // if( localStorage.lang == \"ar\"){\n        //     output_time = output_time.replace(/am/g,\"صباحا\");\n        //     output_time = output_time.replace(/pm/g,\"مساءً\");\n        // }\n        // var output_date =  d.getDate() + ' - ' + month[d.getMonth()] + ' - ' + d.getFullYear() + ', ' + output_time;\n        \n        // //return d.toISOString().split('T')[0]\n        // return output_date\n        return new Date(input_date).toLocaleString(\"en-NZ\")\n    }\n    boolName(bool){\n        let str = bool;\n        if(localStorage.lang === \"ar\"){\n            if(bool == true || bool == \"true\"){\n                str = \"نعم\"\n            }else{\n                str = \"لا\"\n            }\n        }else{\n            if(bool == true || bool == \"true\"){\n                str = \"Yes\"\n            }else{\n                str = \"No\"\n            }\n        }\n        return str\n    }\n    isLiveName(bool){\n        let str = bool;\n        if(localStorage.lang === \"ar\"){\n            if(bool == true || bool == \"true\"){\n                str = \"نشط\"\n            }else{\n                str = \"اختبار\"\n            }\n        }else{\n            if(bool == true || bool == \"true\"){\n                str = \"Live\"\n            }else{\n                str = \"Test\"\n            }\n        }\n        return str\n    }\n    getLastName(fullName){\n        let str = fullName.trim()\n        let array = str.split(' ');\n        return array[array.length - 1];\n    }\n    getFirstName(fullName){\n        let str = fullName.trim()\n        let array = str.split(' ');\n        return array[0];\n    }\n    convertAmount(amount,currency){\n        if(amount === \"-\"){\n            amount = 0;\n        }\n        return (amount/1) + \" \" + this.currencyName(currency);\n    }\n    convertCentsAmountFull(amount,currency){\n        if(amount === \"-\"){\n            amount = 0;\n        }\n        if(currency === \"JOD\"){\n            return dependencies.numberWithCommas(amount/1000) + \" \" + this.currencyName(currency)\n        }else{\n            return dependencies.numberWithCommas(amount/100) + \" \" + this.currencyName(currency)\n        }\n    }\n    convertCentsAmountFullNoCurr(amount){\n        return dependencies.numberWithCommas(amount/100)\n    }\n    getCurrentLang =() =>{\n        if (localStorage.lang) {\n            return localStorage.lang\n        } else {\n            return \"en\"\n        }\n    }\n    convertCentsAmount(amount,currency){\n        if(currency === \"JOD\"){\n            return (amount/1000) + \" \" + this.currencyName(currency)\n        }else{\n            return (amount/100) + \" \" + this.currencyName(currency)\n        }\n    }\n    convertCentsAmountNoCurr(amount,currency){\n        if(currency === \"JOD\"){\n            return (amount/1000)\n        }else{\n            return (amount/100)\n        }\n    }\n\n}\n\nexport let dependencies = new Dependencies();\n"],"sourceRoot":""}