{"version":3,"sources":["tools/Auth.js","polyfill.js","App.js","serviceWorker.js","index.js"],"names":["auth","localStorage","removeItem","window","location","reload","token","userData","name","type","perms","CustomEvent","event","params","bubbles","cancelable","detail","undefined","evt","document","createEvent","initCustomEvent","prototype","Event","loading","react_default","a","createElement","className","DefaultLayout","React","lazy","Promise","all","__webpack_require__","e","then","bind","Website","Login","Register","Page404","Page500","App","react_router_dom","Suspense","fallback","react_router","exact","path","render","props","basename","component","isLoggedIn","Component","Boolean","hostname","match","ReactDOM","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b3f551a0.chunk.js","sourcesContent":["class Auth {\n    logout() {\n        localStorage.removeItem('token')\n        localStorage.removeItem('userData')\n\n        window.location.reload();\n    }\n\n    isLoggedIn() {\n        return !!localStorage.token || !!localStorage.userData;\n    }\n\n    getMerchantName(){\n        if (localStorage.name) {\n            return localStorage.name;\n        }\n        return null;\n    }\n    getMerchantType(){\n        if (localStorage.type) {\n            return localStorage.type;\n        }\n        return null;\n    }\n    getMerchantToken() {\n        if (localStorage.token) {\n            return localStorage.token;\n        }\n        return null;\n    }\n    getMerchantPerms(){\n        if (localStorage.perms) {\n            return localStorage.perms;\n        }\n        return null;\n    }\n}\n\nexport let auth = new Auth();\n","/*\n* required polyfills\n*/\nimport \"core-js\";\nimport 'core-js/features/set/map';\n\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\n// import 'core-js/es6/symbol'\n// import 'core-js/es6/object'\n// import 'core-js/es6/function'\n// import 'core-js/es6/parse-int'\n// import 'core-js/es6/parse-float'\n// import 'core-js/es6/number'\n// import 'core-js/es6/math'\n// import 'core-js/es6/string'\n// import 'core-js/es6/date'\n// import 'core-js/es6/array'\n// import 'core-js/es6/regexp'\n// import 'core-js/es6/map'\n// import 'core-js/es6/weak-map'\n// import 'core-js/es6/set'\n// import 'core-js/es7/object'\n\n/** IE10 and IE11 requires the following for the Reflect API. */\n// import 'core-js/es6/reflect'\n\n/** Evergreen browsers require these. **/\n// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.\n// import 'core-js/es7/reflect'\n\n// CustomEvent() constructor functionality in IE9, IE10, IE11\n(function () {\n\n  if ( typeof window.CustomEvent === \"function\" ) return false\n\n  function CustomEvent ( event, params ) {\n    params = params || { bubbles: false, cancelable: false, detail: undefined }\n    var evt = document.createEvent( 'CustomEvent' )\n    evt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail )\n    return evt\n  }\n\n  CustomEvent.prototype = window.Event.prototype\n\n  window.CustomEvent = CustomEvent\n})()\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n// import { renderRoutes } from 'react-router-config';\nimport {auth} from './tools/Auth';\nimport './App.scss';\n\nconst loading = () => <div className=\"animated fadeIn pt-3 text-center\">Loading...</div>;\n\n// Containers\nconst DefaultLayout = React.lazy(() => import('./containers/DefaultLayout'));\n\n// Pages\nconst Website = React.lazy(() => import('./views/Pages/Website'));\nconst Login = React.lazy(() => import('./views/Pages/Login'));\nconst Register = React.lazy(() => import('./views/Pages/Register'));\nconst Page404 = React.lazy(() => import('./views/Pages/Page404'));\nconst Page500 = React.lazy(() => import('./views/Pages/Page500'));\n\nclass App extends Component {\n\n  render() {\n    return (\n      <BrowserRouter>\n          <React.Suspense fallback={loading()}>\n            <Switch>\n            <Route exact path=\"/\" name=\"Website Page\" render={props => <Website {...props}/>} />\n              <BrowserRouter basename=\"/portal\">\n                <React.Suspense fallback={loading()}>\n                  <Switch>\n                    <Route exact path=\"/login\" name=\"Login Page\" component={!auth.isLoggedIn() ? Login :  DefaultLayout } />\n                    <Route exact path=\"/register\" name=\"Register Page\" render={props => <Register {...props}/>} />\n                    <Route exact path=\"/404\" name=\"Page 404\" render={props => <Page404 {...props}/>} />\n                    <Route exact path=\"/500\" name=\"Page 500\" render={props => <Page500 {...props}/>} />\n                    <Route path=\"/\" name=\"Home\" component={auth.isLoggedIn() ? DefaultLayout :  Login } />\n                  </Switch>\n                </React.Suspense>\n            </BrowserRouter>\n            \n            </Switch>\n          </React.Suspense>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'react-app-polyfill/ie9'; // For IE 9-11 support\nimport 'react-app-polyfill/stable';\n// import 'react-app-polyfill/ie11'; // For IE 11 support\nimport './polyfill'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}