{"version":3,"sources":["../node_modules/webpack/buildin/module.js","../node_modules/lodash/_Map.js","../node_modules/lodash/_MapCache.js","../node_modules/lodash/isArguments.js","../node_modules/lodash/isBuffer.js","../node_modules/lodash/_isIndex.js","../node_modules/lodash/isLength.js","../node_modules/lodash/isArrayLike.js","../node_modules/lodash/_getTag.js","../node_modules/lodash/_baseGet.js","../node_modules/lodash/_isKey.js","../node_modules/lodash/_baseIsEqual.js","../node_modules/lodash/_Stack.js","../node_modules/lodash/eq.js","../node_modules/lodash/isTypedArray.js","../node_modules/lodash/_baseUnary.js","../node_modules/lodash/_isPrototype.js","../node_modules/lodash/get.js","../node_modules/lodash/_arrayMap.js","../node_modules/lodash/identity.js","../node_modules/lodash/isFunction.js","../node_modules/lodash/_freeGlobal.js","../node_modules/lodash/_toSource.js","../node_modules/lodash/_equalArrays.js","../node_modules/lodash/_arrayPush.js","../node_modules/lodash/_getSymbols.js","../node_modules/lodash/_nodeUtil.js","../node_modules/lodash/_isStrictComparable.js","../node_modules/lodash/_matchesStrictComparable.js","../node_modules/lodash/_SetCache.js","../node_modules/lodash/_cacheHas.js","../node_modules/lodash/_Uint8Array.js","../node_modules/lodash/_getAllKeys.js","../node_modules/lodash/_baseGetAllKeys.js","../node_modules/lodash/stubArray.js","../node_modules/lodash/_arrayLikeKeys.js","../node_modules/lodash/_baseKeys.js","../node_modules/lodash/_overArg.js","../node_modules/lodash/_WeakMap.js","../node_modules/lodash/_baseAssignValue.js","../node_modules/lodash/_defineProperty.js","../node_modules/lodash/_baseIteratee.js","../node_modules/lodash/_baseToString.js","../node_modules/lodash/hasIn.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/lodash/_baseIsEqualDeep.js","../node_modules/lodash/_listCacheClear.js","../node_modules/lodash/_listCacheDelete.js","../node_modules/lodash/_listCacheGet.js","../node_modules/lodash/_listCacheHas.js","../node_modules/lodash/_listCacheSet.js","../node_modules/lodash/_stackClear.js","../node_modules/lodash/_stackDelete.js","../node_modules/lodash/_stackGet.js","../node_modules/lodash/_stackHas.js","../node_modules/lodash/_stackSet.js","../node_modules/lodash/_baseIsNative.js","../node_modules/lodash/_getRawTag.js","../node_modules/lodash/_objectToString.js","../node_modules/lodash/_isMasked.js","../node_modules/lodash/_coreJsData.js","../node_modules/lodash/_getValue.js","../node_modules/lodash/_mapCacheClear.js","../node_modules/lodash/_Hash.js","../node_modules/lodash/_hashClear.js","../node_modules/lodash/_hashDelete.js","../node_modules/lodash/_hashGet.js","../node_modules/lodash/_hashHas.js","../node_modules/lodash/_hashSet.js","../node_modules/lodash/_mapCacheDelete.js","../node_modules/lodash/_isKeyable.js","../node_modules/lodash/_mapCacheGet.js","../node_modules/lodash/_mapCacheHas.js","../node_modules/lodash/_mapCacheSet.js","../node_modules/lodash/_setCacheAdd.js","../node_modules/lodash/_setCacheHas.js","../node_modules/lodash/_arraySome.js","../node_modules/lodash/_equalByTag.js","../node_modules/lodash/_mapToArray.js","../node_modules/lodash/_setToArray.js","../node_modules/lodash/_equalObjects.js","../node_modules/lodash/_arrayFilter.js","../node_modules/lodash/_baseTimes.js","../node_modules/lodash/_baseIsArguments.js","../node_modules/lodash/stubFalse.js","../node_modules/lodash/_baseIsTypedArray.js","../node_modules/lodash/_nativeKeys.js","../node_modules/lodash/_DataView.js","../node_modules/lodash/_Promise.js","../node_modules/lodash/_Set.js","../node_modules/lodash/_baseMatches.js","../node_modules/lodash/_baseIsMatch.js","../node_modules/lodash/_getMatchData.js","../node_modules/lodash/_baseMatchesProperty.js","../node_modules/lodash/_stringToPath.js","../node_modules/lodash/_memoizeCapped.js","../node_modules/lodash/memoize.js","../node_modules/lodash/_baseHasIn.js","../node_modules/lodash/_hasPath.js","../node_modules/lodash/property.js","../node_modules/lodash/_baseProperty.js","../node_modules/lodash/_basePropertyDeep.js","../node_modules/chart.js/dist/Chart.js","../node_modules/moment/moment.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js","../node_modules/lodash/_baseEach.js","../node_modules/lodash/_baseForOwn.js","../node_modules/lodash/_baseFor.js","../node_modules/lodash/_createBaseFor.js","../node_modules/lodash/_createBaseEach.js","../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/lodash/_root.js","../node_modules/lodash/isArray.js","../node_modules/lodash/isObjectLike.js","../node_modules/lodash/_getNative.js","../node_modules/lodash/_baseGetTag.js","../node_modules/lodash/isObject.js","../node_modules/lodash/_Symbol.js","../node_modules/lodash/_toKey.js","../node_modules/lodash/_ListCache.js","../node_modules/lodash/_assocIndexOf.js","../node_modules/lodash/_nativeCreate.js","../node_modules/lodash/_getMapData.js","../node_modules/lodash/_castPath.js","../node_modules/lodash/isSymbol.js","../node_modules/lodash/keys.js","../node_modules/lodash/toString.js"],"names":["module","exports","webpackPolyfill","deprecate","paths","children","Object","defineProperty","enumerable","get","l","i","Map","__webpack_require__","getNative","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","MapCache","entries","index","length","this","clear","entry","set","prototype","has","baseIsArguments","isObjectLike","objectProto","hasOwnProperty","propertyIsEnumerable","isArguments","arguments","value","call","root","stubFalse","freeExports","nodeType","freeModule","Buffer","undefined","isBuffer","MAX_SAFE_INTEGER","reIsUint","type","test","isFunction","isLength","DataView","Promise","Set","WeakMap","baseGetTag","toSource","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","getTag","ArrayBuffer","resolve","result","Ctor","constructor","ctorString","castPath","toKey","object","path","isArray","isSymbol","reIsDeepProp","reIsPlainProp","baseIsEqualDeep","baseIsEqual","other","bitmask","customizer","stack","ListCache","stackClear","stackDelete","stackGet","stackHas","stackSet","Stack","data","__data__","size","baseIsTypedArray","baseUnary","nodeUtil","nodeIsTypedArray","isTypedArray","func","baseGet","defaultValue","array","iteratee","Array","isObject","asyncTag","funcTag","genTag","proxyTag","tag","global","freeGlobal","funcToString","Function","toString","e","SetCache","arraySome","cacheHas","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","equalFunc","isPartial","arrLength","othLength","stacked","seen","arrValue","othValue","compared","othIndex","push","values","offset","arrayFilter","stubArray","nativeGetSymbols","getOwnPropertySymbols","getSymbols","symbol","freeProcess","process","types","require","binding","key","srcValue","setCacheAdd","setCacheHas","add","cache","Uint8Array","baseGetAllKeys","keys","arrayPush","keysFunc","symbolsFunc","baseTimes","isIndex","inherited","isArr","isArg","isBuff","isType","skipIndexes","String","isPrototype","nativeKeys","transform","arg","configurable","writable","baseMatches","baseMatchesProperty","identity","property","Symbol","arrayMap","INFINITY","symbolProto","symbolToString","baseToString","baseHasIn","hasPath","d","__webpack_exports__","Doughnut","Pie","Line","Bar","Radar","Polar","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4___default","_extends","assign","target","source","_objectWithoutProperties","obj","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","NODE_ENV","PUBLIC_URL","ChartComponent","_React$Component","_temp","_this","_len","args","_key","apply","concat","handleOnClick","event","chartInstance","_this$props","props","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","onElementsClick","ref","element","componentWillMount","componentDidMount","renderChart","componentDidUpdate","redraw","destroyChart","updateChart","shouldComponentUpdate","nextProps","_props","options","plugins","legend","height","width","nextData","transformDataProp","shadowDataProp","componentWillUnmount","memoizeDataProps","datasets","map","saveCurrentDatasets","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","forEach","dataset","label","console","error","getCurrentDatasets","config","_this2","_this3","a","helpers","configMerge","currentDatasets","nextDatasets","currentDatasetsIndexed","next","current","splice","point","pid","otherProps","rest","update","_props2","node","defaultProps","destroy","render","_props3","id","createElement","onClick","Component","propTypes","oneOfType","isRequired","number","arrayOf","bool","propName","componentName","controllers","Error","display","position","_React$Component2","_this5","_ref","_React$Component3","_this7","_ref2","_React$Component4","_this9","_ref3","_React$Component5","_this11","_ref4","_React$Component6","HorizontalBar","_this13","_ref5","_React$Component7","_this15","_ref6","_React$Component8","_this17","_ref7","_React$Component9","Bubble","_this19","_ref8","_React$Component10","Scatter","_this21","_ref9","defaults","equalArrays","equalByTag","equalObjects","argsTag","arrayTag","objectTag","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","assocIndexOf","pop","LARGE_ARRAY_SIZE","pairs","isMasked","reIsHostCtor","funcProto","reIsNative","RegExp","replace","nativeObjectToString","symToStringTag","toStringTag","isOwn","unmasked","coreJsData","maskSrcKey","uid","exec","IE_PROTO","Hash","hash","string","hashClear","hashDelete","hashGet","hashHas","hashSet","nativeCreate","HASH_UNDEFINED","getMapData","predicate","eq","mapToArray","setToArray","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","symbolTag","arrayBufferTag","dataViewTag","symbolValueOf","valueOf","byteLength","byteOffset","buffer","name","message","convert","getAllKeys","objProps","objLength","skipCtor","objValue","objCtor","othCtor","resIndex","typedArrayTags","overArg","baseIsMatch","getMatchData","matchesStrictComparable","matchData","noCustomizer","isStrictComparable","hasIn","isKey","memoizeCapped","rePropName","reEscapeChar","stringToPath","charCodeAt","match","quote","subString","memoize","MAX_MEMOIZE_SIZE","FUNC_ERROR_TEXT","resolver","memoized","Cache","hasFunc","baseProperty","basePropertyDeep","moment","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","lab2lch","hsl2rgb","hsl2hsv","hsl","h","s","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","r","g","b","min","Math","max","delta","w","k","reverseKeywords","JSON","stringify","pow","x","y","z","xyz","t1","t2","t3","val","hi","floor","f","p","q","t","hwb","wh","bl","ratio","cmyk","c","m","lab","y2","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","Converter","slice","pair","from","to","round","convs","routeSpace","space","getValues","setValues","vals","fspace","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","hexAlpha","parseInt","parseFloat","scale","isNaN","num","str","toUpperCase","Color","valid","lightness","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","clone","prop","spaces","maxes","charAt","capped","chans","sname","svalues","window","chartjsColor","noop","isNullOrUndef","substr","isFinite","_isFinite","_x","Number","valueOrDefault","valueAtIndexOrDefault","callback","fn","thisArg","each","loopable","reverse","len","arrayEquals","a0","a1","ilen","v0","v1","klen","_merger","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","inherits","extensions","me","ChartElement","Surrogate","__super__","helpers_core","callCallback","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","chart","ctx","clearRect","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","matches","toPadding","_parseFont","globalDefaults","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","inputs","context","helpers$1","easing","canvas","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","ease","model","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","isNumber","core_element","exports$2","currentStep","numSteps","onAnimationProgress","onAnimationComplete","core_animation","animation","duration","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","Date","now","animating","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","_data","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","updateElement","buildOrUpdateElements","isExtensible","method","base","res","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","onDataShift","shift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","abs","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderWidth","maxW","maxH","edge","borderSkipped","horizontal","parseBorderSkipped","_inRange","skipX","skipY","bounds","rectangle","element_rectangle","rects","border","outer","inner","boundingRects","fillRect","Arc","Point","Rectangle","resolve$1","hover","mode","categoryPercentage","barPercentage","gridLines","offsetGridLines","controller_bar","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","labels","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","tooltips","callbacks","title","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","join","generateLabels","ds","arcOpts","bw","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","j","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","sort","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","stylesheet","freeze","default","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","getStyle","eventListenerOptions","supports","addEventListener","passive","addListener","removeListener","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","document","className","addResizeListener","expando","resizer","expand","shrink","appendChild","_reset","scrollLeft","scrollTop","onScroll","bind","createResizer","ticking","throttled","container","maintainAspectRatio","parentNode","clientWidth","proxy","renderProxy","animationName","reflow","offsetParent","classList","watchForRender","insertBefore","firstChild","removeResizeListener","remove","unwatchForRender","removeChild","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","injectCSS","acquireContext","getElementById","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","pos","fromNativeEvent","addEvent","removeEvent","implementation","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","split","createTooltipItem","indexScale","valueScale","getLabelForIndex","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","active","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","body","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","paddingAndSize","radiusAndPadding","getBackgroundPoint","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","resetElements","newOptions","updateConfig","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementsAtXAxis","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","_abstract","DateAdapter","Controller","scaleMerge","formats","parse","format","diff","startOf","endOf","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","color","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingRight","paddingBottom","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","sign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","ceil","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","unit","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","generateTicks","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","generateTicks$1","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","out","interpolate$1","table","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","input","adapter","_adapter","time","parser","determineMajorUnit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","milliseconds","determineStepSize","scale_time","adapters","date","warn","displayFormats","timestamp","timestamps","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","displayFormat","category","radialLinear","FORMATS","_id","_format","amount","as","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","p1","d0","d1","doFill","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","log","LOG10E","powerOf10","isPowerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","core_helpers","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","toLowerCase","factory","hookCallback","some","hooks","isUndefined","isDate","arr","hasOwnProp","createUTC","locale","strict","createLocalOrUTC","utc","getParsingFlags","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","_isValid","flags","parsedParts","isNowValid","_d","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","fun","momentProperties","copyConfig","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","updateInProgress","Moment","updateOffset","isMoment","absFloor","toInt","argumentForCoercion","coercedNumber","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","msg","suppressDeprecationWarnings","firstTime","deprecationHandler","deprecations","deprecateSimple","mergeConfigs","parentConfig","childConfig","Locale","aliases","addUnitAlias","shorthand","lowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","zeroFill","targetLength","forceSign","absNumber","zerosToFill","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","localeData","formatMoment","expandFormat","mom","output","makeFormatFunction","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","regexEscape","matched","p2","p3","p4","tokens","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","daysInYear","isLeapYear","parseTwoDigitYear","getSetYear","makeGetSet","keepTime","set$1","daysInMonth","modMonth","o","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","MONTHS_IN_FORMAT","defaultLocaleMonths","defaultLocaleMonthsShort","setMonth","dayOfMonth","getSetMonth","defaultMonthsShortRegex","defaultMonthsRegex","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","shiftWeekdays","ws","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minp","shortp","longp","minPieces","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","hh","dd","M","MM","yy","meridiemParse","locales","localeFamilies","normalizeLocale","loadLocale","oldLocale","_abbr","code","getSetGlobalLocale","getLocale","defineLocale","abbr","_config","parentLocale","names","chooseLocale","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","_useUTC","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","currentDateArray","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","_week","curWeek","gg","_dayOfYear","dayOfYearFromWeekInfo","_nextDay","ms","setFullYear","getDay","setUTCMinutes","getUTCMinutes","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","configFromStringAndFormat","untruncateYear","yearStr","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromRFC2822","parsedArray","monthStr","dayStr","hourStr","minuteStr","secondStr","extractFromRFC2822Strings","weekdayStr","parsedInput","weekdayProvided","weekdayActual","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","isPm","meridiemHour","meridiemFixWrap","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromStringAndArray","createFromInputFallback","configFromString","configFromObject","configFromInput","isUTC","getOwnPropertyNames","isObjectEmpty","createFromConfig","prototypeMin","prototypeMax","pickBy","moments","ordering","Duration","years","quarters","weeks","isoWeek","days","unitHasDecimal","isDurationValid","_milliseconds","_days","_months","_bubble","isDuration","absRound","separator","utcOffset","offsetFromString","chunkOffset","matcher","parts","cloneWithOffset","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","ret","diffRes","parseIso","isBefore","positiveMomentsDifference","momentsDifference","inp","isAfter","createAdder","direction","period","addSubtract","isAdding","invalid","subtract","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","addWeekYearFormatToken","getter","getSetWeekYearHelper","weeksTarget","dayOfYearData","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetSecond","parseMs","getSetMillisecond","proto","preParsePostFormat","sod","calendarFormat","asFloat","that","zoneDelta","startOfDate","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","u","getPrioritizedUnits","toArray","toObject","toDate","toISOString","keepOffset","inspect","zone","isLocal","prefix","suffix","unix","creationData","isoWeeks","weekInfo","isoWeeksInYear","parseWeekday","parseIsoWeekday","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","proto$1","get$1","field","setter","listMonthsImpl","listWeekdaysImpl","localeSorted","_calendar","_longDateFormat","formatUpper","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","isFormat","_monthsShort","monthName","_monthsParseExact","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","weekdayName","_weekdaysParseExact","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","makeGetter","thresholds","abs$1","toISOString$1","Y","D","totalSign","ymSign","daysSign","hmsSign","proto$2","monthsFromDays","withSuffix","posNegDuration","relativeTime$1","toIsoString","version","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","limit","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","baseAssignValue","keyBy","createAggregator","arrayAggregator","baseAggregator","baseIteratee","initializer","accumulator","baseEach","baseForOwn","createBaseEach","baseFor","createBaseFor","fromRight","iterable","isArrayLike","eachFunc","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","inverse","outline","cssModule","innerRef","Card","Tag","attributes","classes","CardBody","freeSelf","baseIsNative","getValue","getRawTag","objectToString","nullTag","undefinedTag","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","isKeyable","arrayLikeKeys","baseKeys"],"mappings":"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","file":"static/js/5.91fe681f.chunk.js","sourcesContent":["module.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Map = getNative(root, 'Map');\nmodule.exports = Map;","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `MapCache`.\n\n\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\nmodule.exports = MapCache;","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\n\nvar isArguments = baseIsArguments(function () {\n  return arguments;\n}()) ? baseIsArguments : function (value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n};\nmodule.exports = isArguments;","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Built-in value references. */\n\nvar Buffer = moduleExports ? root.Buffer : undefined;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\n\nvar isBuffer = nativeIsBuffer || stubFalse;\nmodule.exports = isBuffer;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/** Used to detect unsigned integer values. */\n\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\n\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n}\n\nmodule.exports = isIndex;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\n\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\n\n\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n/** `Object#toString` result references. */\n\n\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\nvar dataViewTag = '[object DataView]';\n/** Used to detect maps, sets, and weakmaps. */\n\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nvar getTag = baseGetTag; // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n\nif (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {\n  getTag = function getTag(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString:\n          return dataViewTag;\n\n        case mapCtorString:\n          return mapTag;\n\n        case promiseCtorString:\n          return promiseTag;\n\n        case setCtorString:\n          return setTag;\n\n        case weakMapCtorString:\n          return weakMapTag;\n      }\n    }\n\n    return result;\n  };\n}\n\nmodule.exports = getTag;","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\n\n\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n\n  return index && index == length ? object : undefined;\n}\n\nmodule.exports = baseGet;","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used to match property names within property paths. */\n\n\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\n\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n\n  var type = typeof value;\n\n  if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {\n    return true;\n  }\n\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);\n}\n\nmodule.exports = isKey;","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\n\n\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n\n  if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {\n    return value !== value && other !== other;\n  }\n\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n} // Add methods to `Stack`.\n\n\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\nmodule.exports = Stack;","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || value !== value && other !== other;\n}\n\nmodule.exports = eq;","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n/* Node.js helper references. */\n\n\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\n\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\nmodule.exports = isTypedArray;","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function (value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\n\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;\n  return value === proto;\n}\n\nmodule.exports = isPrototype;","var baseGet = require('./_baseGet');\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\n\n\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n\n  return result;\n}\n\nmodule.exports = arrayMap;","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n/** `Object#toString` result references. */\n\n\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\n\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  } // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\n\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\nmodule.exports = freeGlobal;","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\n\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n\n    try {\n      return func + '';\n    } catch (e) {}\n  }\n\n  return '';\n}\n\nmodule.exports = toSource;","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\n\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(array);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var index = -1,\n      result = true,\n      seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;\n  stack.set(array, other);\n  stack.set(other, array); // Ignore non-index properties.\n\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);\n    }\n\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n\n      result = false;\n      break;\n    } // Recursively compare arrays (susceptible to call stack limits).\n\n\n    if (seen) {\n      if (!arraySome(other, function (othValue, othIndex) {\n        if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n          return seen.push(othIndex);\n        }\n      })) {\n        result = false;\n        break;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n      result = false;\n      break;\n    }\n  }\n\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n\n  return array;\n}\n\nmodule.exports = arrayPush;","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\n\nvar getSymbols = !nativeGetSymbols ? stubArray : function (object) {\n  if (object == null) {\n    return [];\n  }\n\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function (symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\nmodule.exports = getSymbols;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Detect free variable `process` from Node.js. */\n\nvar freeProcess = moduleExports && freeGlobal.process;\n/** Used to access faster Node.js helpers. */\n\nvar nodeUtil = function () {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    } // Legacy `process.binding('util')` for Node.js < 10.\n\n\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}();\n\nmodule.exports = nodeUtil;","var isObject = require('./isObject');\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\n\n\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function (object) {\n    if (object == null) {\n      return false;\n    }\n\n    return object[key] === srcValue && (srcValue !== undefined || key in Object(object));\n  };\n}\n\nmodule.exports = matchesStrictComparable;","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\n\n\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n  this.__data__ = new MapCache();\n\n  while (++index < length) {\n    this.add(values[index]);\n  }\n} // Add methods to `SetCache`.\n\n\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\nmodule.exports = SetCache;","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Uint8Array = root.Uint8Array;\nmodule.exports = Uint8Array;","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && ( // Safari 9 has enumerable `arguments.length` in strict mode.\n    key == 'length' || // Node.js 0.10 has enumerable non-index properties on buffers.\n    isBuff && (key == 'offset' || key == 'parent') || // PhantomJS 2 has enumerable non-index properties on typed arrays.\n    isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || // Skip index properties.\n    isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n\n  var result = [];\n\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = baseKeys;","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function (arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar WeakMap = getNative(root, 'WeakMap');\nmodule.exports = WeakMap;","var defineProperty = require('./_defineProperty');\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\n\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;","var getNative = require('./_getNative');\n\nvar defineProperty = function () {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}();\n\nmodule.exports = defineProperty;","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\n\n\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n\n  if (value == null) {\n    return identity;\n  }\n\n  if (typeof value == 'object') {\n    return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);\n  }\n\n  return property(value);\n}\n\nmodule.exports = baseIteratee;","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\n\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = baseToString;","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\n\n\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.destroyChart();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.destroyChart();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    this.saveCurrentDatasets(); // to remove the dataset metadata from this chart when the chart is destroyed\n\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.getCurrentDatasets = function getCurrentDatasets() {\n    return this.chartInstance && this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n  };\n\n  ChartComponent.prototype.saveCurrentDatasets = function saveCurrentDatasets() {\n    var _this2 = this;\n\n    this.datasets = this.datasets || {};\n    var currentDatasets = this.getCurrentDatasets();\n    currentDatasets.forEach(function (d) {\n      _this2.datasets[_this2.props.datasetKeyProvider(d)] = d;\n    });\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this3 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.getCurrentDatasets();\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this3.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.destroyChart = function destroyChart() {\n    // Put all of the datasets that have existed in the chart back on the chart\n    // so that the metadata associated with this chart get destroyed.\n    // This allows the datasets to be used in another chart. This can happen,\n    // for example, in a tabbed UI where the chart gets created each time the\n    // tab gets switched to the chart and uses the same data).\n    this.saveCurrentDatasets();\n    var datasets = Object.values(this.datasets);\n    this.chartInstance.config.data.datasets = datasets;\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this5 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this5.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this7 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this7.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this9 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this9.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this11 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this11.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this13 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this13.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this15 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this15.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this17 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this17.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this19 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this19.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this21 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this21.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n\n    objIsArr = true;\n    objIsObj = false;\n  }\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack());\n    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n      stack || (stack = new Stack());\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n\n  if (!isSameTag) {\n    return false;\n  }\n\n  stack || (stack = new Stack());\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;","var assocIndexOf = require('./_assocIndexOf');\n/** Used for built-in method references. */\n\n\nvar arrayProto = Array.prototype;\n/** Built-in value references. */\n\nvar splice = arrayProto.splice;\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n\n  var lastIndex = data.length - 1;\n\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\n\n\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n\n  return this;\n}\n\nmodule.exports = listCacheSet;","var ListCache = require('./_ListCache');\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\n\n\nfunction stackClear() {\n  this.__data__ = new ListCache();\n  this.size = 0;\n}\n\nmodule.exports = stackClear;","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n/** Used as the size to enable large array optimizations. */\n\n\nvar LARGE_ARRAY_SIZE = 200;\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\n\nfunction stackSet(key, value) {\n  var data = this.__data__;\n\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n\n    if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n\n    data = this.__data__ = new MapCache(pairs);\n  }\n\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\n\n\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n/** Used to detect host constructors (Safari). */\n\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n/** Used for built-in method references. */\n\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Used to detect if a method is native. */\n\nvar reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\n\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;","var Symbol = require('./_Symbol');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\n\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = getRawTag;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\n\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;","var coreJsData = require('./_coreJsData');\n/** Used to detect methods masquerading as native. */\n\n\nvar maskSrcKey = function () {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? 'Symbol(src)_1.' + uid : '';\n}();\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\n\n\nfunction isMasked(func) {\n  return !!maskSrcKey && maskSrcKey in func;\n}\n\nmodule.exports = isMasked;","var root = require('./_root');\n/** Used to detect overreaching core-js shims. */\n\n\nvar coreJsData = root['__core-js_shared__'];\nmodule.exports = coreJsData;","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\n\n\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash(),\n    'map': new (Map || ListCache)(),\n    'string': new Hash()\n  };\n}\n\nmodule.exports = mapCacheClear;","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `Hash`.\n\n\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\nmodule.exports = Hash;","var nativeCreate = require('./_nativeCreate');\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\n\n\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\nfunction hashGet(key) {\n  var data = this.__data__;\n\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;","var nativeCreate = require('./_nativeCreate');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\n\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;","var getMapData = require('./_getMapData');\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\n\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;\n}\n\nmodule.exports = isKeyable;","var getMapData = require('./_getMapData');\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;","var getMapData = require('./_getMapData');\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;","var getMapData = require('./_getMapData');\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\n\n\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\n\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n\n  return this;\n}\n\nmodule.exports = setCacheAdd;","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = arraySome;","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/** `Object#toString` result references. */\n\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {\n        return false;\n      }\n\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == other + '';\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      } // Assume cyclic values are equal.\n\n\n      var stacked = stack.get(object);\n\n      if (stacked) {\n        return stacked == other;\n      }\n\n      bitmask |= COMPARE_UNORDERED_FLAG; // Recursively compare objects (susceptible to call stack limits).\n\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n\n  }\n\n  return false;\n}\n\nmodule.exports = equalByTag;","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n  map.forEach(function (value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n  set.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;","var getAllKeys = require('./_getAllKeys');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n\n  var index = objLength;\n\n  while (index--) {\n    var key = objProps[index];\n\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(object);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n  var skipCtor = isPartial;\n\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);\n    } // Recursively compare objects (susceptible to call stack limits).\n\n\n    if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {\n      result = false;\n      break;\n    }\n\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.\n\n    if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayFilter;","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n\n  return result;\n}\n\nmodule.exports = baseTimes;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]';\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\n\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n/** Used to identify `toStringTag` values of typed arrays. */\n\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\n\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;","var overArg = require('./_overArg');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeKeys = overArg(Object.keys, Object);\nmodule.exports = nativeKeys;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar DataView = getNative(root, 'DataView');\nmodule.exports = DataView;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Promise = getNative(root, 'Promise');\nmodule.exports = Promise;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Set = getNative(root, 'Set');\nmodule.exports = Set;","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\n\n\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n\n  return function (object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\n\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n\n  object = Object(object);\n\n  while (index--) {\n    var data = matchData[index];\n\n    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {\n      return false;\n    }\n  }\n\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack();\n\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n\n      if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = baseIsMatch;","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\n\n\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n\n  return result;\n}\n\nmodule.exports = getMatchData;","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\n\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n\n  return function (object) {\n    var objValue = get(object, path);\n    return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;","var memoizeCapped = require('./_memoizeCapped');\n/** Used to match property names within property paths. */\n\n\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n/** Used to match backslashes in property paths. */\n\nvar reEscapeChar = /\\\\(\\\\)?/g;\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\n\nvar stringToPath = memoizeCapped(function (string) {\n  var result = [];\n\n  if (string.charCodeAt(0) === 46\n  /* . */\n  ) {\n      result.push('');\n    }\n\n  string.replace(rePropName, function (match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);\n  });\n  return result;\n});\nmodule.exports = stringToPath;","var memoize = require('./memoize');\n/** Used as the maximum memoize cache size. */\n\n\nvar MAX_MEMOIZE_SIZE = 500;\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\n\nfunction memoizeCapped(func) {\n  var result = memoize(func, function (key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n\n    return key;\n  });\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;","var MapCache = require('./_MapCache');\n/** Error message constants. */\n\n\nvar FUNC_ERROR_TEXT = 'Expected a function';\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\n\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n\n  var memoized = function memoized() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n\n  memoized.cache = new (memoize.Cache || MapCache)();\n  return memoized;\n} // Expose `MapCache`.\n\n\nmemoize.Cache = MapCache;\nmodule.exports = memoize;","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\n\n\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n\n    object = object[key];\n  }\n\n  if (result || ++index != length) {\n    return result;\n  }\n\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\n\n\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function (object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;","var baseGet = require('./_baseGet');\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\n\n\nfunction basePropertyDeep(path) {\n  return function (object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function () {\n    try {\n      return require('moment');\n    } catch (e) {}\n  }()) : typeof define === 'function' && define.amd ? define(['require'], function (require) {\n    return factory(function () {\n      try {\n        return require('moment');\n      } catch (e) {}\n    }());\n  }) : global.Chart = factory(global.moment);\n})(this, function (moment) {\n  'use strict';\n\n  moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n  /* MIT license */\n\n  var conversions = {\n    rgb2hsl: rgb2hsl,\n    rgb2hsv: rgb2hsv,\n    rgb2hwb: rgb2hwb,\n    rgb2cmyk: rgb2cmyk,\n    rgb2keyword: rgb2keyword,\n    rgb2xyz: rgb2xyz,\n    rgb2lab: rgb2lab,\n    rgb2lch: rgb2lch,\n    hsl2rgb: hsl2rgb,\n    hsl2hsv: hsl2hsv,\n    hsl2hwb: hsl2hwb,\n    hsl2cmyk: hsl2cmyk,\n    hsl2keyword: hsl2keyword,\n    hsv2rgb: hsv2rgb,\n    hsv2hsl: hsv2hsl,\n    hsv2hwb: hsv2hwb,\n    hsv2cmyk: hsv2cmyk,\n    hsv2keyword: hsv2keyword,\n    hwb2rgb: hwb2rgb,\n    hwb2hsl: hwb2hsl,\n    hwb2hsv: hwb2hsv,\n    hwb2cmyk: hwb2cmyk,\n    hwb2keyword: hwb2keyword,\n    cmyk2rgb: cmyk2rgb,\n    cmyk2hsl: cmyk2hsl,\n    cmyk2hsv: cmyk2hsv,\n    cmyk2hwb: cmyk2hwb,\n    cmyk2keyword: cmyk2keyword,\n    keyword2rgb: keyword2rgb,\n    keyword2hsl: keyword2hsl,\n    keyword2hsv: keyword2hsv,\n    keyword2hwb: keyword2hwb,\n    keyword2cmyk: keyword2cmyk,\n    keyword2lab: keyword2lab,\n    keyword2xyz: keyword2xyz,\n    xyz2rgb: xyz2rgb,\n    xyz2lab: xyz2lab,\n    xyz2lch: xyz2lch,\n    lab2xyz: lab2xyz,\n    lab2rgb: lab2rgb,\n    lab2lch: lab2lch,\n    lch2lab: lch2lab,\n    lch2xyz: lch2xyz,\n    lch2rgb: lch2rgb\n  };\n\n  function rgb2hsl(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        l;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    l = (min + max) / 2;\n    if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n    return [h, s * 100, l * 100];\n  }\n\n  function rgb2hsv(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        v;\n    if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    v = max / 255 * 1000 / 10;\n    return [h, s, v];\n  }\n\n  function rgb2hwb(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        h = rgb2hsl(rgb)[0],\n        w = 1 / 255 * Math.min(r, Math.min(g, b)),\n        b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n    return [h, w * 100, b * 100];\n  }\n\n  function rgb2cmyk(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        c,\n        m,\n        y,\n        k;\n    k = Math.min(1 - r, 1 - g, 1 - b);\n    c = (1 - r - k) / (1 - k) || 0;\n    m = (1 - g - k) / (1 - k) || 0;\n    y = (1 - b - k) / (1 - k) || 0;\n    return [c * 100, m * 100, y * 100, k * 100];\n  }\n\n  function rgb2keyword(rgb) {\n    return reverseKeywords[JSON.stringify(rgb)];\n  }\n\n  function rgb2xyz(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255; // assume sRGB\n\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n    var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n    var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n    return [x * 100, y * 100, z * 100];\n  }\n\n  function rgb2lab(rgb) {\n    var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function rgb2lch(args) {\n    return lab2lch(rgb2lab(args));\n  }\n\n  function hsl2rgb(hsl) {\n    var h = hsl[0] / 360,\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        t1,\n        t2,\n        t3,\n        rgb,\n        val;\n\n    if (s == 0) {\n      val = l * 255;\n      return [val, val, val];\n    }\n\n    if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n    t1 = 2 * l - t2;\n    rgb = [0, 0, 0];\n\n    for (var i = 0; i < 3; i++) {\n      t3 = h + 1 / 3 * -(i - 1);\n      t3 < 0 && t3++;\n      t3 > 1 && t3--;\n      if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n      rgb[i] = val * 255;\n    }\n\n    return rgb;\n  }\n\n  function hsl2hsv(hsl) {\n    var h = hsl[0],\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        sv,\n        v;\n\n    if (l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n    }\n\n    l *= 2;\n    s *= l <= 1 ? l : 2 - l;\n    v = (l + s) / 2;\n    sv = 2 * s / (l + s);\n    return [h, sv * 100, v * 100];\n  }\n\n  function hsl2hwb(args) {\n    return rgb2hwb(hsl2rgb(args));\n  }\n\n  function hsl2cmyk(args) {\n    return rgb2cmyk(hsl2rgb(args));\n  }\n\n  function hsl2keyword(args) {\n    return rgb2keyword(hsl2rgb(args));\n  }\n\n  function hsv2rgb(hsv) {\n    var h = hsv[0] / 60,\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        hi = Math.floor(h) % 6;\n    var f = h - Math.floor(h),\n        p = 255 * v * (1 - s),\n        q = 255 * v * (1 - s * f),\n        t = 255 * v * (1 - s * (1 - f)),\n        v = 255 * v;\n\n    switch (hi) {\n      case 0:\n        return [v, t, p];\n\n      case 1:\n        return [q, v, p];\n\n      case 2:\n        return [p, v, t];\n\n      case 3:\n        return [p, q, v];\n\n      case 4:\n        return [t, p, v];\n\n      case 5:\n        return [v, p, q];\n    }\n  }\n\n  function hsv2hsl(hsv) {\n    var h = hsv[0],\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        sl,\n        l;\n    l = (2 - s) * v;\n    sl = s * v;\n    sl /= l <= 1 ? l : 2 - l;\n    sl = sl || 0;\n    l /= 2;\n    return [h, sl * 100, l * 100];\n  }\n\n  function hsv2hwb(args) {\n    return rgb2hwb(hsv2rgb(args));\n  }\n\n  function hsv2cmyk(args) {\n    return rgb2cmyk(hsv2rgb(args));\n  }\n\n  function hsv2keyword(args) {\n    return rgb2keyword(hsv2rgb(args));\n  } // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\n  function hwb2rgb(hwb) {\n    var h = hwb[0] / 360,\n        wh = hwb[1] / 100,\n        bl = hwb[2] / 100,\n        ratio = wh + bl,\n        i,\n        v,\n        f,\n        n; // wh + bl cant be > 1\n\n    if (ratio > 1) {\n      wh /= ratio;\n      bl /= ratio;\n    }\n\n    i = Math.floor(6 * h);\n    v = 1 - bl;\n    f = 6 * h - i;\n\n    if ((i & 0x01) != 0) {\n      f = 1 - f;\n    }\n\n    n = wh + f * (v - wh); // linear interpolation\n\n    switch (i) {\n      default:\n      case 6:\n      case 0:\n        r = v;\n        g = n;\n        b = wh;\n        break;\n\n      case 1:\n        r = n;\n        g = v;\n        b = wh;\n        break;\n\n      case 2:\n        r = wh;\n        g = v;\n        b = n;\n        break;\n\n      case 3:\n        r = wh;\n        g = n;\n        b = v;\n        break;\n\n      case 4:\n        r = n;\n        g = wh;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = wh;\n        b = n;\n        break;\n    }\n\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function hwb2hsl(args) {\n    return rgb2hsl(hwb2rgb(args));\n  }\n\n  function hwb2hsv(args) {\n    return rgb2hsv(hwb2rgb(args));\n  }\n\n  function hwb2cmyk(args) {\n    return rgb2cmyk(hwb2rgb(args));\n  }\n\n  function hwb2keyword(args) {\n    return rgb2keyword(hwb2rgb(args));\n  }\n\n  function cmyk2rgb(cmyk) {\n    var c = cmyk[0] / 100,\n        m = cmyk[1] / 100,\n        y = cmyk[2] / 100,\n        k = cmyk[3] / 100,\n        r,\n        g,\n        b;\n    r = 1 - Math.min(1, c * (1 - k) + k);\n    g = 1 - Math.min(1, m * (1 - k) + k);\n    b = 1 - Math.min(1, y * (1 - k) + k);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function cmyk2hsl(args) {\n    return rgb2hsl(cmyk2rgb(args));\n  }\n\n  function cmyk2hsv(args) {\n    return rgb2hsv(cmyk2rgb(args));\n  }\n\n  function cmyk2hwb(args) {\n    return rgb2hwb(cmyk2rgb(args));\n  }\n\n  function cmyk2keyword(args) {\n    return rgb2keyword(cmyk2rgb(args));\n  }\n\n  function xyz2rgb(xyz) {\n    var x = xyz[0] / 100,\n        y = xyz[1] / 100,\n        z = xyz[2] / 100,\n        r,\n        g,\n        b;\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n    r = Math.min(Math.max(0, r), 1);\n    g = Math.min(Math.max(0, g), 1);\n    b = Math.min(Math.max(0, b), 1);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function xyz2lab(xyz) {\n    var x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function xyz2lch(args) {\n    return lab2lch(xyz2lab(args));\n  }\n\n  function lab2xyz(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        x,\n        y,\n        z,\n        y2;\n\n    if (l <= 8) {\n      y = l * 100 / 903.3;\n      y2 = 7.787 * (y / 100) + 16 / 116;\n    } else {\n      y = 100 * Math.pow((l + 16) / 116, 3);\n      y2 = Math.pow(y / 100, 1 / 3);\n    }\n\n    x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n    z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n    return [x, y, z];\n  }\n\n  function lab2lch(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        hr,\n        h,\n        c;\n    hr = Math.atan2(b, a);\n    h = hr * 360 / 2 / Math.PI;\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    c = Math.sqrt(a * a + b * b);\n    return [l, c, h];\n  }\n\n  function lab2rgb(args) {\n    return xyz2rgb(lab2xyz(args));\n  }\n\n  function lch2lab(lch) {\n    var l = lch[0],\n        c = lch[1],\n        h = lch[2],\n        a,\n        b,\n        hr;\n    hr = h / 360 * 2 * Math.PI;\n    a = c * Math.cos(hr);\n    b = c * Math.sin(hr);\n    return [l, a, b];\n  }\n\n  function lch2xyz(args) {\n    return lab2xyz(lch2lab(args));\n  }\n\n  function lch2rgb(args) {\n    return lab2rgb(lch2lab(args));\n  }\n\n  function keyword2rgb(keyword) {\n    return cssKeywords[keyword];\n  }\n\n  function keyword2hsl(args) {\n    return rgb2hsl(keyword2rgb(args));\n  }\n\n  function keyword2hsv(args) {\n    return rgb2hsv(keyword2rgb(args));\n  }\n\n  function keyword2hwb(args) {\n    return rgb2hwb(keyword2rgb(args));\n  }\n\n  function keyword2cmyk(args) {\n    return rgb2cmyk(keyword2rgb(args));\n  }\n\n  function keyword2lab(args) {\n    return rgb2lab(keyword2rgb(args));\n  }\n\n  function keyword2xyz(args) {\n    return rgb2xyz(keyword2rgb(args));\n  }\n\n  var cssKeywords = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50]\n  };\n  var reverseKeywords = {};\n\n  for (var key in cssKeywords) {\n    reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n  }\n\n  var convert = function convert() {\n    return new Converter();\n  };\n\n  for (var func in conversions) {\n    // export Raw versions\n    convert[func + \"Raw\"] = function (func) {\n      // accept array or plain args\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        return conversions[func](arg);\n      };\n    }(func);\n\n    var pair = /(\\w+)2(\\w+)/.exec(func),\n        from = pair[1],\n        to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n    convert[from] = convert[from] || {};\n\n    convert[from][to] = convert[func] = function (func) {\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        var val = conversions[func](arg);\n        if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n        for (var i = 0; i < val.length; i++) {\n          val[i] = Math.round(val[i]);\n        }\n\n        return val;\n      };\n    }(func);\n  }\n  /* Converter does lazy conversion and caching */\n\n\n  var Converter = function Converter() {\n    this.convs = {};\n  };\n  /* Either get the values for a space or\n    set the values for a space, depending on args */\n\n\n  Converter.prototype.routeSpace = function (space, args) {\n    var values = args[0];\n\n    if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);\n    }\n\n    return this.setValues(space, values);\n  };\n  /* Set the values for a space, invalidating cache */\n\n\n  Converter.prototype.setValues = function (space, values) {\n    this.space = space;\n    this.convs = {};\n    this.convs[space] = values;\n    return this;\n  };\n  /* Get the values for a space. If there's already\n    a conversion for the space, fetch it, otherwise\n    compute it */\n\n\n  Converter.prototype.getValues = function (space) {\n    var vals = this.convs[space];\n\n    if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n      this.convs[space] = vals;\n    }\n\n    return vals;\n  };\n\n  [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n    Converter.prototype[space] = function (vals) {\n      return this.routeSpace(space, arguments);\n    };\n  });\n  var colorConvert = convert;\n  var colorName = {\n    \"aliceblue\": [240, 248, 255],\n    \"antiquewhite\": [250, 235, 215],\n    \"aqua\": [0, 255, 255],\n    \"aquamarine\": [127, 255, 212],\n    \"azure\": [240, 255, 255],\n    \"beige\": [245, 245, 220],\n    \"bisque\": [255, 228, 196],\n    \"black\": [0, 0, 0],\n    \"blanchedalmond\": [255, 235, 205],\n    \"blue\": [0, 0, 255],\n    \"blueviolet\": [138, 43, 226],\n    \"brown\": [165, 42, 42],\n    \"burlywood\": [222, 184, 135],\n    \"cadetblue\": [95, 158, 160],\n    \"chartreuse\": [127, 255, 0],\n    \"chocolate\": [210, 105, 30],\n    \"coral\": [255, 127, 80],\n    \"cornflowerblue\": [100, 149, 237],\n    \"cornsilk\": [255, 248, 220],\n    \"crimson\": [220, 20, 60],\n    \"cyan\": [0, 255, 255],\n    \"darkblue\": [0, 0, 139],\n    \"darkcyan\": [0, 139, 139],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"darkgray\": [169, 169, 169],\n    \"darkgreen\": [0, 100, 0],\n    \"darkgrey\": [169, 169, 169],\n    \"darkkhaki\": [189, 183, 107],\n    \"darkmagenta\": [139, 0, 139],\n    \"darkolivegreen\": [85, 107, 47],\n    \"darkorange\": [255, 140, 0],\n    \"darkorchid\": [153, 50, 204],\n    \"darkred\": [139, 0, 0],\n    \"darksalmon\": [233, 150, 122],\n    \"darkseagreen\": [143, 188, 143],\n    \"darkslateblue\": [72, 61, 139],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"darkturquoise\": [0, 206, 209],\n    \"darkviolet\": [148, 0, 211],\n    \"deeppink\": [255, 20, 147],\n    \"deepskyblue\": [0, 191, 255],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"dodgerblue\": [30, 144, 255],\n    \"firebrick\": [178, 34, 34],\n    \"floralwhite\": [255, 250, 240],\n    \"forestgreen\": [34, 139, 34],\n    \"fuchsia\": [255, 0, 255],\n    \"gainsboro\": [220, 220, 220],\n    \"ghostwhite\": [248, 248, 255],\n    \"gold\": [255, 215, 0],\n    \"goldenrod\": [218, 165, 32],\n    \"gray\": [128, 128, 128],\n    \"green\": [0, 128, 0],\n    \"greenyellow\": [173, 255, 47],\n    \"grey\": [128, 128, 128],\n    \"honeydew\": [240, 255, 240],\n    \"hotpink\": [255, 105, 180],\n    \"indianred\": [205, 92, 92],\n    \"indigo\": [75, 0, 130],\n    \"ivory\": [255, 255, 240],\n    \"khaki\": [240, 230, 140],\n    \"lavender\": [230, 230, 250],\n    \"lavenderblush\": [255, 240, 245],\n    \"lawngreen\": [124, 252, 0],\n    \"lemonchiffon\": [255, 250, 205],\n    \"lightblue\": [173, 216, 230],\n    \"lightcoral\": [240, 128, 128],\n    \"lightcyan\": [224, 255, 255],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"lightgray\": [211, 211, 211],\n    \"lightgreen\": [144, 238, 144],\n    \"lightgrey\": [211, 211, 211],\n    \"lightpink\": [255, 182, 193],\n    \"lightsalmon\": [255, 160, 122],\n    \"lightseagreen\": [32, 178, 170],\n    \"lightskyblue\": [135, 206, 250],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"lightsteelblue\": [176, 196, 222],\n    \"lightyellow\": [255, 255, 224],\n    \"lime\": [0, 255, 0],\n    \"limegreen\": [50, 205, 50],\n    \"linen\": [250, 240, 230],\n    \"magenta\": [255, 0, 255],\n    \"maroon\": [128, 0, 0],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"mediumblue\": [0, 0, 205],\n    \"mediumorchid\": [186, 85, 211],\n    \"mediumpurple\": [147, 112, 219],\n    \"mediumseagreen\": [60, 179, 113],\n    \"mediumslateblue\": [123, 104, 238],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"mediumturquoise\": [72, 209, 204],\n    \"mediumvioletred\": [199, 21, 133],\n    \"midnightblue\": [25, 25, 112],\n    \"mintcream\": [245, 255, 250],\n    \"mistyrose\": [255, 228, 225],\n    \"moccasin\": [255, 228, 181],\n    \"navajowhite\": [255, 222, 173],\n    \"navy\": [0, 0, 128],\n    \"oldlace\": [253, 245, 230],\n    \"olive\": [128, 128, 0],\n    \"olivedrab\": [107, 142, 35],\n    \"orange\": [255, 165, 0],\n    \"orangered\": [255, 69, 0],\n    \"orchid\": [218, 112, 214],\n    \"palegoldenrod\": [238, 232, 170],\n    \"palegreen\": [152, 251, 152],\n    \"paleturquoise\": [175, 238, 238],\n    \"palevioletred\": [219, 112, 147],\n    \"papayawhip\": [255, 239, 213],\n    \"peachpuff\": [255, 218, 185],\n    \"peru\": [205, 133, 63],\n    \"pink\": [255, 192, 203],\n    \"plum\": [221, 160, 221],\n    \"powderblue\": [176, 224, 230],\n    \"purple\": [128, 0, 128],\n    \"rebeccapurple\": [102, 51, 153],\n    \"red\": [255, 0, 0],\n    \"rosybrown\": [188, 143, 143],\n    \"royalblue\": [65, 105, 225],\n    \"saddlebrown\": [139, 69, 19],\n    \"salmon\": [250, 128, 114],\n    \"sandybrown\": [244, 164, 96],\n    \"seagreen\": [46, 139, 87],\n    \"seashell\": [255, 245, 238],\n    \"sienna\": [160, 82, 45],\n    \"silver\": [192, 192, 192],\n    \"skyblue\": [135, 206, 235],\n    \"slateblue\": [106, 90, 205],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"snow\": [255, 250, 250],\n    \"springgreen\": [0, 255, 127],\n    \"steelblue\": [70, 130, 180],\n    \"tan\": [210, 180, 140],\n    \"teal\": [0, 128, 128],\n    \"thistle\": [216, 191, 216],\n    \"tomato\": [255, 99, 71],\n    \"turquoise\": [64, 224, 208],\n    \"violet\": [238, 130, 238],\n    \"wheat\": [245, 222, 179],\n    \"white\": [255, 255, 255],\n    \"whitesmoke\": [245, 245, 245],\n    \"yellow\": [255, 255, 0],\n    \"yellowgreen\": [154, 205, 50]\n  };\n  /* MIT license */\n\n  var colorString = {\n    getRgba: getRgba,\n    getHsla: getHsla,\n    getRgb: getRgb,\n    getHsl: getHsl,\n    getHwb: getHwb,\n    getAlpha: getAlpha,\n    hexString: hexString,\n    rgbString: rgbString,\n    rgbaString: rgbaString,\n    percentString: percentString,\n    percentaString: percentaString,\n    hslString: hslString,\n    hslaString: hslaString,\n    hwbString: hwbString,\n    keyword: keyword\n  };\n\n  function getRgba(string) {\n    if (!string) {\n      return;\n    }\n\n    var abbr = /^#([a-fA-F0-9]{3,4})$/i,\n        hex = /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n        rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        keyword = /(\\w+)/;\n    var rgb = [0, 0, 0],\n        a = 1,\n        match = string.match(abbr),\n        hexAlpha = \"\";\n\n    if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i + 1]);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n        return [0, 0, 0, 0];\n      }\n\n      rgb = colorName[match[1]];\n\n      if (!rgb) {\n        return;\n      }\n    }\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n    }\n\n    if (!a && a != 0) {\n      a = 1;\n    } else {\n      a = scale(a, 0, 1);\n    }\n\n    rgb[3] = a;\n    return rgb;\n  }\n\n  function getHsla(string) {\n    if (!string) {\n      return;\n    }\n\n    var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hsl);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n    }\n  }\n\n  function getHwb(string) {\n    if (!string) {\n      return;\n    }\n\n    var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hwb);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n    }\n  }\n\n  function getRgb(string) {\n    var rgba = getRgba(string);\n    return rgba && rgba.slice(0, 3);\n  }\n\n  function getHsl(string) {\n    var hsla = getHsla(string);\n    return hsla && hsla.slice(0, 3);\n  }\n\n  function getAlpha(string) {\n    var vals = getRgba(string);\n\n    if (vals) {\n      return vals[3];\n    } else if (vals = getHsla(string)) {\n      return vals[3];\n    } else if (vals = getHwb(string)) {\n      return vals[3];\n    }\n  } // generators\n\n\n  function hexString(rgba, a) {\n    var a = a !== undefined && rgba.length === 3 ? a : rgba[3];\n    return \"#\" + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (a >= 0 && a < 1 ? hexDouble(Math.round(a * 255)) : \"\");\n  }\n\n  function rgbString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return rgbaString(rgba, alpha);\n    }\n\n    return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n  }\n\n  function rgbaString(rgba, alpha) {\n    if (alpha === undefined) {\n      alpha = rgba[3] !== undefined ? rgba[3] : 1;\n    }\n\n    return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n  }\n\n  function percentString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return percentaString(rgba, alpha);\n    }\n\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n  }\n\n  function percentaString(rgba, alpha) {\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n  }\n\n  function hslString(hsla, alpha) {\n    if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n      return hslaString(hsla, alpha);\n    }\n\n    return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n  }\n\n  function hslaString(hsla, alpha) {\n    if (alpha === undefined) {\n      alpha = hsla[3] !== undefined ? hsla[3] : 1;\n    }\n\n    return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n  } // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n  // (hwb have alpha optional & 1 is default value)\n\n\n  function hwbString(hwb, alpha) {\n    if (alpha === undefined) {\n      alpha = hwb[3] !== undefined ? hwb[3] : 1;\n    }\n\n    return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n  }\n\n  function keyword(rgb) {\n    return reverseNames[rgb.slice(0, 3)];\n  } // helpers\n\n\n  function scale(num, min, max) {\n    return Math.min(Math.max(min, num), max);\n  }\n\n  function hexDouble(num) {\n    var str = num.toString(16).toUpperCase();\n    return str.length < 2 ? \"0\" + str : str;\n  } //create a list of reverse color names\n\n\n  var reverseNames = {};\n\n  for (var name in colorName) {\n    reverseNames[colorName[name]] = name;\n  }\n  /* MIT license */\n\n\n  var Color = function Color(obj) {\n    if (obj instanceof Color) {\n      return obj;\n    }\n\n    if (!(this instanceof Color)) {\n      return new Color(obj);\n    }\n\n    this.valid = false;\n    this.values = {\n      rgb: [0, 0, 0],\n      hsl: [0, 0, 0],\n      hsv: [0, 0, 0],\n      hwb: [0, 0, 0],\n      cmyk: [0, 0, 0, 0],\n      alpha: 1\n    }; // parse Color() argument\n\n    var vals;\n\n    if (typeof obj === 'string') {\n      vals = colorString.getRgba(obj);\n\n      if (vals) {\n        this.setValues('rgb', vals);\n      } else if (vals = colorString.getHsla(obj)) {\n        this.setValues('hsl', vals);\n      } else if (vals = colorString.getHwb(obj)) {\n        this.setValues('hwb', vals);\n      }\n    } else if (typeof obj === 'object') {\n      vals = obj;\n\n      if (vals.r !== undefined || vals.red !== undefined) {\n        this.setValues('rgb', vals);\n      } else if (vals.l !== undefined || vals.lightness !== undefined) {\n        this.setValues('hsl', vals);\n      } else if (vals.v !== undefined || vals.value !== undefined) {\n        this.setValues('hsv', vals);\n      } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n        this.setValues('hwb', vals);\n      } else if (vals.c !== undefined || vals.cyan !== undefined) {\n        this.setValues('cmyk', vals);\n      }\n    }\n  };\n\n  Color.prototype = {\n    isValid: function isValid() {\n      return this.valid;\n    },\n    rgb: function rgb() {\n      return this.setSpace('rgb', arguments);\n    },\n    hsl: function hsl() {\n      return this.setSpace('hsl', arguments);\n    },\n    hsv: function hsv() {\n      return this.setSpace('hsv', arguments);\n    },\n    hwb: function hwb() {\n      return this.setSpace('hwb', arguments);\n    },\n    cmyk: function cmyk() {\n      return this.setSpace('cmyk', arguments);\n    },\n    rgbArray: function rgbArray() {\n      return this.values.rgb;\n    },\n    hslArray: function hslArray() {\n      return this.values.hsl;\n    },\n    hsvArray: function hsvArray() {\n      return this.values.hsv;\n    },\n    hwbArray: function hwbArray() {\n      var values = this.values;\n\n      if (values.alpha !== 1) {\n        return values.hwb.concat([values.alpha]);\n      }\n\n      return values.hwb;\n    },\n    cmykArray: function cmykArray() {\n      return this.values.cmyk;\n    },\n    rgbaArray: function rgbaArray() {\n      var values = this.values;\n      return values.rgb.concat([values.alpha]);\n    },\n    hslaArray: function hslaArray() {\n      var values = this.values;\n      return values.hsl.concat([values.alpha]);\n    },\n    alpha: function alpha(val) {\n      if (val === undefined) {\n        return this.values.alpha;\n      }\n\n      this.setValues('alpha', val);\n      return this;\n    },\n    red: function red(val) {\n      return this.setChannel('rgb', 0, val);\n    },\n    green: function green(val) {\n      return this.setChannel('rgb', 1, val);\n    },\n    blue: function blue(val) {\n      return this.setChannel('rgb', 2, val);\n    },\n    hue: function hue(val) {\n      if (val) {\n        val %= 360;\n        val = val < 0 ? 360 + val : val;\n      }\n\n      return this.setChannel('hsl', 0, val);\n    },\n    saturation: function saturation(val) {\n      return this.setChannel('hsl', 1, val);\n    },\n    lightness: function lightness(val) {\n      return this.setChannel('hsl', 2, val);\n    },\n    saturationv: function saturationv(val) {\n      return this.setChannel('hsv', 1, val);\n    },\n    whiteness: function whiteness(val) {\n      return this.setChannel('hwb', 1, val);\n    },\n    blackness: function blackness(val) {\n      return this.setChannel('hwb', 2, val);\n    },\n    value: function value(val) {\n      return this.setChannel('hsv', 2, val);\n    },\n    cyan: function cyan(val) {\n      return this.setChannel('cmyk', 0, val);\n    },\n    magenta: function magenta(val) {\n      return this.setChannel('cmyk', 1, val);\n    },\n    yellow: function yellow(val) {\n      return this.setChannel('cmyk', 2, val);\n    },\n    black: function black(val) {\n      return this.setChannel('cmyk', 3, val);\n    },\n    hexString: function hexString() {\n      return colorString.hexString(this.values.rgb);\n    },\n    rgbString: function rgbString() {\n      return colorString.rgbString(this.values.rgb, this.values.alpha);\n    },\n    rgbaString: function rgbaString() {\n      return colorString.rgbaString(this.values.rgb, this.values.alpha);\n    },\n    percentString: function percentString() {\n      return colorString.percentString(this.values.rgb, this.values.alpha);\n    },\n    hslString: function hslString() {\n      return colorString.hslString(this.values.hsl, this.values.alpha);\n    },\n    hslaString: function hslaString() {\n      return colorString.hslaString(this.values.hsl, this.values.alpha);\n    },\n    hwbString: function hwbString() {\n      return colorString.hwbString(this.values.hwb, this.values.alpha);\n    },\n    keyword: function keyword() {\n      return colorString.keyword(this.values.rgb, this.values.alpha);\n    },\n    rgbNumber: function rgbNumber() {\n      var rgb = this.values.rgb;\n      return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n    },\n    luminosity: function luminosity() {\n      // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n      var rgb = this.values.rgb;\n      var lum = [];\n\n      for (var i = 0; i < rgb.length; i++) {\n        var chan = rgb[i] / 255;\n        lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n      }\n\n      return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n    },\n    contrast: function contrast(color2) {\n      // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n      var lum1 = this.luminosity();\n      var lum2 = color2.luminosity();\n\n      if (lum1 > lum2) {\n        return (lum1 + 0.05) / (lum2 + 0.05);\n      }\n\n      return (lum2 + 0.05) / (lum1 + 0.05);\n    },\n    level: function level(color2) {\n      var contrastRatio = this.contrast(color2);\n\n      if (contrastRatio >= 7.1) {\n        return 'AAA';\n      }\n\n      return contrastRatio >= 4.5 ? 'AA' : '';\n    },\n    dark: function dark() {\n      // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n      var rgb = this.values.rgb;\n      var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n      return yiq < 128;\n    },\n    light: function light() {\n      return !this.dark();\n    },\n    negate: function negate() {\n      var rgb = [];\n\n      for (var i = 0; i < 3; i++) {\n        rgb[i] = 255 - this.values.rgb[i];\n      }\n\n      this.setValues('rgb', rgb);\n      return this;\n    },\n    lighten: function lighten(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] += hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    darken: function darken(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] -= hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    saturate: function saturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] += hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    desaturate: function desaturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] -= hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    whiten: function whiten(ratio) {\n      var hwb = this.values.hwb;\n      hwb[1] += hwb[1] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    blacken: function blacken(ratio) {\n      var hwb = this.values.hwb;\n      hwb[2] += hwb[2] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    greyscale: function greyscale() {\n      var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n      var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n      this.setValues('rgb', [val, val, val]);\n      return this;\n    },\n    clearer: function clearer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha - alpha * ratio);\n      return this;\n    },\n    opaquer: function opaquer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha + alpha * ratio);\n      return this;\n    },\n    rotate: function rotate(degrees) {\n      var hsl = this.values.hsl;\n      var hue = (hsl[0] + degrees) % 360;\n      hsl[0] = hue < 0 ? 360 + hue : hue;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n\n    /**\n     * Ported from sass implementation in C\n     * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n     */\n    mix: function mix(mixinColor, weight) {\n      var color1 = this;\n      var color2 = mixinColor;\n      var p = weight === undefined ? 0.5 : weight;\n      var w = 2 * p - 1;\n      var a = color1.alpha() - color2.alpha();\n      var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      var w2 = 1 - w1;\n      return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n    },\n    toJSON: function toJSON() {\n      return this.rgb();\n    },\n    clone: function clone() {\n      // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n      // making the final build way to big to embed in Chart.js. So let's do it manually,\n      // assuming that values to clone are 1 dimension arrays containing only numbers,\n      // except 'alpha' which is a number.\n      var result = new Color();\n      var source = this.values;\n      var target = result.values;\n      var value, type;\n\n      for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n          value = source[prop];\n          type = {}.toString.call(value);\n\n          if (type === '[object Array]') {\n            target[prop] = value.slice(0);\n          } else if (type === '[object Number]') {\n            target[prop] = value;\n          } else {\n            console.error('unexpected color value:', value);\n          }\n        }\n      }\n\n      return result;\n    }\n  };\n  Color.prototype.spaces = {\n    rgb: ['red', 'green', 'blue'],\n    hsl: ['hue', 'saturation', 'lightness'],\n    hsv: ['hue', 'saturation', 'value'],\n    hwb: ['hue', 'whiteness', 'blackness'],\n    cmyk: ['cyan', 'magenta', 'yellow', 'black']\n  };\n  Color.prototype.maxes = {\n    rgb: [255, 255, 255],\n    hsl: [360, 100, 100],\n    hsv: [360, 100, 100],\n    hwb: [360, 100, 100],\n    cmyk: [100, 100, 100, 100]\n  };\n\n  Color.prototype.getValues = function (space) {\n    var values = this.values;\n    var vals = {};\n\n    for (var i = 0; i < space.length; i++) {\n      vals[space.charAt(i)] = values[space][i];\n    }\n\n    if (values.alpha !== 1) {\n      vals.a = values.alpha;\n    } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n    return vals;\n  };\n\n  Color.prototype.setValues = function (space, vals) {\n    var values = this.values;\n    var spaces = this.spaces;\n    var maxes = this.maxes;\n    var alpha = 1;\n    var i;\n    this.valid = true;\n\n    if (space === 'alpha') {\n      alpha = vals;\n    } else if (vals.length) {\n      // [10, 10, 10]\n      values[space] = vals.slice(0, space.length);\n      alpha = vals[space.length];\n    } else if (vals[space.charAt(0)] !== undefined) {\n      // {r: 10, g: 10, b: 10}\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[space.charAt(i)];\n      }\n\n      alpha = vals.a;\n    } else if (vals[spaces[space][0]] !== undefined) {\n      // {red: 10, green: 10, blue: 10}\n      var chans = spaces[space];\n\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[chans[i]];\n      }\n\n      alpha = vals.alpha;\n    }\n\n    values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n    if (space === 'alpha') {\n      return false;\n    }\n\n    var capped; // cap values of the space prior converting all values\n\n    for (i = 0; i < space.length; i++) {\n      capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n      values[space][i] = Math.round(capped);\n    } // convert to all the other color spaces\n\n\n    for (var sname in spaces) {\n      if (sname !== space) {\n        values[sname] = colorConvert[space][sname](values[space]);\n      }\n    }\n\n    return true;\n  };\n\n  Color.prototype.setSpace = function (space, args) {\n    var vals = args[0];\n\n    if (vals === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof vals === 'number') {\n      vals = Array.prototype.slice.call(args);\n    }\n\n    this.setValues(space, vals);\n    return this;\n  };\n\n  Color.prototype.setChannel = function (space, index, val) {\n    var svalues = this.values[space];\n\n    if (val === undefined) {\n      // color.red()\n      return svalues[index];\n    } else if (val === svalues[index]) {\n      // color.red(color.red())\n      return this;\n    } // color.red(100)\n\n\n    svalues[index] = val;\n    this.setValues(space, svalues);\n    return this;\n  };\n\n  if (typeof window !== 'undefined') {\n    window.Color = Color;\n  }\n\n  var chartjsColor = Color;\n  /**\n   * @namespace Chart.helpers\n   */\n\n  var helpers = {\n    /**\n     * An empty function that can be used, for example, for optional callback.\n     */\n    noop: function noop() {},\n\n    /**\n     * Returns a unique id, sequentially generated from a global variable.\n     * @returns {number}\n     * @function\n     */\n    uid: function () {\n      var id = 0;\n      return function () {\n        return id++;\n      };\n    }(),\n\n    /**\n     * Returns true if `value` is neither null nor undefined, else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isNullOrUndef: function isNullOrUndef(value) {\n      return value === null || typeof value === 'undefined';\n    },\n\n    /**\n     * Returns true if `value` is an array (including typed arrays), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @function\n     */\n    isArray: function isArray(value) {\n      if (Array.isArray && Array.isArray(value)) {\n        return true;\n      }\n\n      var type = Object.prototype.toString.call(value);\n\n      if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns true if `value` is an object (excluding null), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isObject: function isObject(value) {\n      return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n    },\n\n    /**\n     * Returns true if `value` is a finite number, else returns false\n     * @param {*} value  - The value to test.\n     * @returns {boolean}\n     */\n    isFinite: function (_isFinite) {\n      function isFinite(_x) {\n        return _isFinite.apply(this, arguments);\n      }\n\n      isFinite.toString = function () {\n        return _isFinite.toString();\n      };\n\n      return isFinite;\n    }(function (value) {\n      return (typeof value === 'number' || value instanceof Number) && isFinite(value);\n    }),\n\n    /**\n     * Returns `value` if defined, else returns `defaultValue`.\n     * @param {*} value - The value to return if defined.\n     * @param {*} defaultValue - The value to return if `value` is undefined.\n     * @returns {*}\n     */\n    valueOrDefault: function valueOrDefault(value, defaultValue) {\n      return typeof value === 'undefined' ? defaultValue : value;\n    },\n\n    /**\n     * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n     * @param {Array} value - The array to lookup for value at `index`.\n     * @param {number} index - The index in `value` to lookup for value.\n     * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n     * @returns {*}\n     */\n    valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n      return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n    },\n\n    /**\n     * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n     * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n     * @param {function} fn - The function to call.\n     * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @returns {*}\n     */\n    callback: function callback(fn, args, thisArg) {\n      if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n      }\n    },\n\n    /**\n     * Note(SB) for performance sake, this method should only be used when loopable type\n     * is unknown or in none intensive code (not called often and small loopable). Else\n     * it's preferable to use a regular for() loop and save extra function calls.\n     * @param {object|Array} loopable - The object or array to be iterated.\n     * @param {function} fn - The function to call for each item.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n     */\n    each: function each(loopable, fn, thisArg, reverse) {\n      var i, len, keys;\n\n      if (helpers.isArray(loopable)) {\n        len = loopable.length;\n\n        if (reverse) {\n          for (i = len - 1; i >= 0; i--) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        } else {\n          for (i = 0; i < len; i++) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        }\n      } else if (helpers.isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n      }\n    },\n\n    /**\n     * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n     * @see https://stackoverflow.com/a/14853974\n     * @param {Array} a0 - The array to compare\n     * @param {Array} a1 - The array to compare\n     * @returns {boolean}\n     */\n    arrayEquals: function arrayEquals(a0, a1) {\n      var i, ilen, v0, v1;\n\n      if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n      }\n\n      for (i = 0, ilen = a0.length; i < ilen; ++i) {\n        v0 = a0[i];\n        v1 = a1[i];\n\n        if (v0 instanceof Array && v1 instanceof Array) {\n          if (!helpers.arrayEquals(v0, v1)) {\n            return false;\n          }\n        } else if (v0 !== v1) {\n          // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns a deep copy of `source` without keeping references on objects and arrays.\n     * @param {*} source - The value to clone.\n     * @returns {*}\n     */\n    clone: function clone(source) {\n      if (helpers.isArray(source)) {\n        return source.map(helpers.clone);\n      }\n\n      if (helpers.isObject(source)) {\n        var target = {};\n        var keys = Object.keys(source);\n        var klen = keys.length;\n        var k = 0;\n\n        for (; k < klen; ++k) {\n          target[keys[k]] = helpers.clone(source[keys[k]]);\n        }\n\n        return target;\n      }\n\n      return source;\n    },\n\n    /**\n     * The default merger when Chart.helpers.merge is called without merger option.\n     * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n     * @private\n     */\n    _merger: function _merger(key, target, source, options) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.merge(tval, sval, options);\n      } else {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Merges source[key] in target[key] only if target[key] is undefined.\n     * @private\n     */\n    _mergerIf: function _mergerIf(key, target, source) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.mergeIf(tval, sval);\n      } else if (!target.hasOwnProperty(key)) {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` with the given `options`.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @param {object} [options] - Merging options:\n     * @param {function} [options.merger] - The merge method (key, target, source, options)\n     * @returns {object} The `target` object.\n     */\n    merge: function merge(target, source, options) {\n      var sources = helpers.isArray(source) ? source : [source];\n      var ilen = sources.length;\n      var merge, i, keys, klen, k;\n\n      if (!helpers.isObject(target)) {\n        return target;\n      }\n\n      options = options || {};\n      merge = options.merger || helpers._merger;\n\n      for (i = 0; i < ilen; ++i) {\n        source = sources[i];\n\n        if (!helpers.isObject(source)) {\n          continue;\n        }\n\n        keys = Object.keys(source);\n\n        for (k = 0, klen = keys.length; k < klen; ++k) {\n          merge(keys[k], target, source, options);\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @returns {object} The `target` object.\n     */\n    mergeIf: function mergeIf(target, source) {\n      return helpers.merge(target, source, {\n        merger: helpers._mergerIf\n      });\n    },\n\n    /**\n     * Applies the contents of two or more objects together into the first object.\n     * @param {object} target - The target object in which all objects are merged into.\n     * @param {object} arg1 - Object containing additional properties to merge in target.\n     * @param {object} argN - Additional objects containing properties to merge in target.\n     * @returns {object} The `target` object.\n     */\n    extend: function extend(target) {\n      var setFn = function setFn(value, key) {\n        target[key] = value;\n      };\n\n      for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n        helpers.each(arguments[i], setFn);\n      }\n\n      return target;\n    },\n\n    /**\n     * Basic javascript inheritance based on the model created in Backbone.js\n     */\n    inherits: function inherits(extensions) {\n      var me = this;\n      var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n        return me.apply(this, arguments);\n      };\n\n      var Surrogate = function Surrogate() {\n        this.constructor = ChartElement;\n      };\n\n      Surrogate.prototype = me.prototype;\n      ChartElement.prototype = new Surrogate();\n      ChartElement.extend = helpers.inherits;\n\n      if (extensions) {\n        helpers.extend(ChartElement.prototype, extensions);\n      }\n\n      ChartElement.__super__ = me.prototype;\n      return ChartElement;\n    }\n  };\n  var helpers_core = helpers; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.callback instead.\n   * @function Chart.helpers.callCallback\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.callCallback = helpers.callback;\n  /**\n   * Provided for backward compatibility, use Array.prototype.indexOf instead.\n   * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n   * @function Chart.helpers.indexOf\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.indexOf = function (array, item, fromIndex) {\n    return Array.prototype.indexOf.call(array, item, fromIndex);\n  };\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n   * @function Chart.helpers.getValueOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  helpers.getValueOrDefault = helpers.valueOrDefault;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n   * @function Chart.helpers.getValueAtIndexOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n  /**\n   * Easing functions adapted from Robert Penner's easing equations.\n   * @namespace Chart.helpers.easingEffects\n   * @see http://www.robertpenner.com/easing/\n   */\n\n  var effects = {\n    linear: function linear(t) {\n      return t;\n    },\n    easeInQuad: function easeInQuad(t) {\n      return t * t;\n    },\n    easeOutQuad: function easeOutQuad(t) {\n      return -t * (t - 2);\n    },\n    easeInOutQuad: function easeInOutQuad(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t;\n      }\n\n      return -0.5 * (--t * (t - 2) - 1);\n    },\n    easeInCubic: function easeInCubic(t) {\n      return t * t * t;\n    },\n    easeOutCubic: function easeOutCubic(t) {\n      return (t = t - 1) * t * t + 1;\n    },\n    easeInOutCubic: function easeInOutCubic(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t + 2);\n    },\n    easeInQuart: function easeInQuart(t) {\n      return t * t * t * t;\n    },\n    easeOutQuart: function easeOutQuart(t) {\n      return -((t = t - 1) * t * t * t - 1);\n    },\n    easeInOutQuart: function easeInOutQuart(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t;\n      }\n\n      return -0.5 * ((t -= 2) * t * t * t - 2);\n    },\n    easeInQuint: function easeInQuint(t) {\n      return t * t * t * t * t;\n    },\n    easeOutQuint: function easeOutQuint(t) {\n      return (t = t - 1) * t * t * t * t + 1;\n    },\n    easeInOutQuint: function easeInOutQuint(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t * t * t + 2);\n    },\n    easeInSine: function easeInSine(t) {\n      return -Math.cos(t * (Math.PI / 2)) + 1;\n    },\n    easeOutSine: function easeOutSine(t) {\n      return Math.sin(t * (Math.PI / 2));\n    },\n    easeInOutSine: function easeInOutSine(t) {\n      return -0.5 * (Math.cos(Math.PI * t) - 1);\n    },\n    easeInExpo: function easeInExpo(t) {\n      return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n    },\n    easeOutExpo: function easeOutExpo(t) {\n      return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n    },\n    easeInOutExpo: function easeInOutExpo(t) {\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * Math.pow(2, 10 * (t - 1));\n      }\n\n      return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n    },\n    easeInCirc: function easeInCirc(t) {\n      if (t >= 1) {\n        return t;\n      }\n\n      return -(Math.sqrt(1 - t * t) - 1);\n    },\n    easeOutCirc: function easeOutCirc(t) {\n      return Math.sqrt(1 - (t = t - 1) * t);\n    },\n    easeInOutCirc: function easeInOutCirc(t) {\n      if ((t /= 0.5) < 1) {\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n      }\n\n      return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n    },\n    easeInElastic: function easeInElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    },\n    easeOutElastic: function easeOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n    },\n    easeInOutElastic: function easeInOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if ((t /= 0.5) === 2) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.45;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      if (t < 1) {\n        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n      }\n\n      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n    },\n    easeInBack: function easeInBack(t) {\n      var s = 1.70158;\n      return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack: function easeOutBack(t) {\n      var s = 1.70158;\n      return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack: function easeInOutBack(t) {\n      var s = 1.70158;\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n      }\n\n      return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: function easeInBounce(t) {\n      return 1 - effects.easeOutBounce(1 - t);\n    },\n    easeOutBounce: function easeOutBounce(t) {\n      if (t < 1 / 2.75) {\n        return 7.5625 * t * t;\n      }\n\n      if (t < 2 / 2.75) {\n        return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n      }\n\n      if (t < 2.5 / 2.75) {\n        return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n      }\n\n      return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n    },\n    easeInOutBounce: function easeInOutBounce(t) {\n      if (t < 0.5) {\n        return effects.easeInBounce(t * 2) * 0.5;\n      }\n\n      return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n    }\n  };\n  var helpers_easing = {\n    effects: effects\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n   * @function Chart.helpers.easingEffects\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.easingEffects = effects;\n  var PI = Math.PI;\n  var RAD_PER_DEG = PI / 180;\n  var DOUBLE_PI = PI * 2;\n  var HALF_PI = PI / 2;\n  var QUARTER_PI = PI / 4;\n  var TWO_THIRDS_PI = PI * 2 / 3;\n  /**\n   * @namespace Chart.helpers.canvas\n   */\n\n  var exports$1 = {\n    /**\n     * Clears the entire canvas associated to the given `chart`.\n     * @param {Chart} chart - The chart for which to clear the canvas.\n     */\n    clear: function clear(chart) {\n      chart.ctx.clearRect(0, 0, chart.width, chart.height);\n    },\n\n    /**\n     * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n     * given size (width, height) and the same `radius` for all corners.\n     * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n     * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n     * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n     * @param {number} width - The rectangle's width.\n     * @param {number} height - The rectangle's height.\n     * @param {number} radius - The rounded amount (in pixels) for the four corners.\n     * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n     */\n    roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n      if (radius) {\n        var r = Math.min(radius, height / 2, width / 2);\n        var left = x + r;\n        var top = y + r;\n        var right = x + width - r;\n        var bottom = y + height - r;\n        ctx.moveTo(x, top);\n\n        if (left < right && top < bottom) {\n          ctx.arc(left, top, r, -PI, -HALF_PI);\n          ctx.arc(right, top, r, -HALF_PI, 0);\n          ctx.arc(right, bottom, r, 0, HALF_PI);\n          ctx.arc(left, bottom, r, HALF_PI, PI);\n        } else if (left < right) {\n          ctx.moveTo(left, y);\n          ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n          ctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n        } else if (top < bottom) {\n          ctx.arc(left, top, r, -PI, 0);\n          ctx.arc(left, bottom, r, 0, PI);\n        } else {\n          ctx.arc(left, top, r, -PI, PI);\n        }\n\n        ctx.closePath();\n        ctx.moveTo(x, y);\n      } else {\n        ctx.rect(x, y, width, height);\n      }\n    },\n    drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n      var type, xOffset, yOffset, size, cornerRadius;\n      var rad = (rotation || 0) * RAD_PER_DEG;\n\n      if (style && typeof style === 'object') {\n        type = style.toString();\n\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n          ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n          return;\n        }\n      }\n\n      if (isNaN(radius) || radius <= 0) {\n        return;\n      }\n\n      ctx.beginPath();\n\n      switch (style) {\n        // Default includes circle\n        default:\n          ctx.arc(x, y, radius, 0, DOUBLE_PI);\n          ctx.closePath();\n          break;\n\n        case 'triangle':\n          ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          ctx.closePath();\n          break;\n\n        case 'rectRounded':\n          // NOTE: the rounded rect implementation changed to use `arc` instead of\n          // `quadraticCurveTo` since it generates better results when rect is\n          // almost a circle. 0.516 (instead of 0.5) produces results with visually\n          // closer proportion to the previous impl and it is inscribed in the\n          // circle with `radius`. For more details, see the following PRs:\n          // https://github.com/chartjs/Chart.js/issues/5597\n          // https://github.com/chartjs/Chart.js/issues/5858\n          cornerRadius = radius * 0.516;\n          size = radius - cornerRadius;\n          xOffset = Math.cos(rad + QUARTER_PI) * size;\n          yOffset = Math.sin(rad + QUARTER_PI) * size;\n          ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n          ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n          ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n          ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n          ctx.closePath();\n          break;\n\n        case 'rect':\n          if (!rotation) {\n            size = Math.SQRT1_2 * radius;\n            ctx.rect(x - size, y - size, 2 * size, 2 * size);\n            break;\n          }\n\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'rectRot':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          ctx.closePath();\n          break;\n\n        case 'crossRot':\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'cross':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'star':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          rad += QUARTER_PI;\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'line':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          break;\n\n        case 'dash':\n          ctx.moveTo(x, y);\n          ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n          break;\n      }\n\n      ctx.fill();\n      ctx.stroke();\n    },\n\n    /**\n     * Returns true if the point is inside the rectangle\n     * @param {object} point - The point to test\n     * @param {object} area - The rectangle\n     * @returns {boolean}\n     * @private\n     */\n    _isPointInArea: function _isPointInArea(point, area) {\n      var epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n      return point.x > area.left - epsilon && point.x < area.right + epsilon && point.y > area.top - epsilon && point.y < area.bottom + epsilon;\n    },\n    clipArea: function clipArea(ctx, area) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n      ctx.clip();\n    },\n    unclipArea: function unclipArea(ctx) {\n      ctx.restore();\n    },\n    lineTo: function lineTo(ctx, previous, target, flip) {\n      var stepped = target.steppedLine;\n\n      if (stepped) {\n        if (stepped === 'middle') {\n          var midpoint = (previous.x + target.x) / 2.0;\n          ctx.lineTo(midpoint, flip ? target.y : previous.y);\n          ctx.lineTo(midpoint, flip ? previous.y : target.y);\n        } else if (stepped === 'after' && !flip || stepped !== 'after' && flip) {\n          ctx.lineTo(previous.x, target.y);\n        } else {\n          ctx.lineTo(target.x, previous.y);\n        }\n\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      if (!target.tension) {\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n    }\n  };\n  var helpers_canvas = exports$1; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n   * @namespace Chart.helpers.clear\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.clear = exports$1.clear;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n   * @namespace Chart.helpers.drawRoundedRectangle\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.drawRoundedRectangle = function (ctx) {\n    ctx.beginPath();\n    exports$1.roundedRect.apply(exports$1, arguments);\n  };\n\n  var defaults = {\n    /**\n     * @private\n     */\n    _set: function _set(scope, values) {\n      return helpers_core.merge(this[scope] || (this[scope] = {}), values);\n    }\n  };\n\n  defaults._set('global', {\n    defaultColor: 'rgba(0,0,0,0.1)',\n    defaultFontColor: '#666',\n    defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    defaultFontSize: 12,\n    defaultFontStyle: 'normal',\n    defaultLineHeight: 1.2,\n    showLines: true\n  });\n\n  var core_defaults = defaults;\n  var valueOrDefault = helpers_core.valueOrDefault;\n  /**\n   * Converts the given font object into a CSS font string.\n   * @param {object} font - A font object.\n   * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n   * @private\n   */\n\n  function toFontString(font) {\n    if (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n      return null;\n    }\n\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n  }\n  /**\n   * @alias Chart.helpers.options\n   * @namespace\n   */\n\n\n  var helpers_options = {\n    /**\n     * Converts the given line height `value` in pixels for a specific font `size`.\n     * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n     * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n     * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n     * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n     * @since 2.7.0\n     */\n    toLineHeight: function toLineHeight(value, size) {\n      var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n      if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n      }\n\n      value = +matches[2];\n\n      switch (matches[3]) {\n        case 'px':\n          return value;\n\n        case '%':\n          value /= 100;\n          break;\n\n        default:\n          break;\n      }\n\n      return size * value;\n    },\n\n    /**\n     * Converts the given value into a padding object with pre-computed width/height.\n     * @param {number|object} value - If a number, set the value to all TRBL component,\n     *  else, if and object, use defined properties and sets undefined ones to 0.\n     * @returns {object} The padding values (top, right, bottom, left, width, height)\n     * @since 2.7.0\n     */\n    toPadding: function toPadding(value) {\n      var t, r, b, l;\n\n      if (helpers_core.isObject(value)) {\n        t = +value.top || 0;\n        r = +value.right || 0;\n        b = +value.bottom || 0;\n        l = +value.left || 0;\n      } else {\n        t = r = b = l = +value || 0;\n      }\n\n      return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        height: t + b,\n        width: l + r\n      };\n    },\n\n    /**\n     * Parses font options and returns the font object.\n     * @param {object} options - A object that contains font options to be parsed.\n     * @return {object} The font object.\n     * @todo Support font.* options and renamed to toFont().\n     * @private\n     */\n    _parseFont: function _parseFont(options) {\n      var globalDefaults = core_defaults.global;\n      var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n      var font = {\n        family: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n        lineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n        size: size,\n        style: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n        weight: null,\n        string: ''\n      };\n      font.string = toFontString(font);\n      return font;\n    },\n\n    /**\n     * Evaluates the given `inputs` sequentially and returns the first defined value.\n     * @param {Array} inputs - An array of values, falling back to the last value.\n     * @param {object} [context] - If defined and the current value is a function, the value\n     * is called with `context` as first argument and the result becomes the new input.\n     * @param {number} [index] - If defined and the current value is an array, the value\n     * at `index` become the new input.\n     * @since 2.7.0\n     */\n    resolve: function resolve(inputs, context, index) {\n      var i, ilen, value;\n\n      for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n        value = inputs[i];\n\n        if (value === undefined) {\n          continue;\n        }\n\n        if (context !== undefined && typeof value === 'function') {\n          value = value(context);\n        }\n\n        if (index !== undefined && helpers_core.isArray(value)) {\n          value = value[index];\n        }\n\n        if (value !== undefined) {\n          return value;\n        }\n      }\n    }\n  };\n  var helpers$1 = helpers_core;\n  var easing = helpers_easing;\n  var canvas = helpers_canvas;\n  var options = helpers_options;\n  helpers$1.easing = easing;\n  helpers$1.canvas = canvas;\n  helpers$1.options = options;\n\n  function interpolate(start, view, model, ease) {\n    var keys = Object.keys(model);\n    var i, ilen, key, actual, origin, target, type, c0, c1;\n\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      key = keys[i];\n      target = model[key]; // if a value is added to the model after pivot() has been called, the view\n      // doesn't contain it, so let's initialize the view to the target value.\n\n      if (!view.hasOwnProperty(key)) {\n        view[key] = target;\n      }\n\n      actual = view[key];\n\n      if (actual === target || key[0] === '_') {\n        continue;\n      }\n\n      if (!start.hasOwnProperty(key)) {\n        start[key] = actual;\n      }\n\n      origin = start[key];\n      type = typeof target;\n\n      if (type === typeof origin) {\n        if (type === 'string') {\n          c0 = chartjsColor(origin);\n\n          if (c0.valid) {\n            c1 = chartjsColor(target);\n\n            if (c1.valid) {\n              view[key] = c1.mix(c0, ease).rgbString();\n              continue;\n            }\n          }\n        } else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n          view[key] = origin + (target - origin) * ease;\n          continue;\n        }\n      }\n\n      view[key] = target;\n    }\n  }\n\n  var Element = function Element(configuration) {\n    helpers$1.extend(this, configuration);\n    this.initialize.apply(this, arguments);\n  };\n\n  helpers$1.extend(Element.prototype, {\n    initialize: function initialize() {\n      this.hidden = false;\n    },\n    pivot: function pivot() {\n      var me = this;\n\n      if (!me._view) {\n        me._view = helpers$1.clone(me._model);\n      }\n\n      me._start = {};\n      return me;\n    },\n    transition: function transition(ease) {\n      var me = this;\n      var model = me._model;\n      var start = me._start;\n      var view = me._view; // No animation -> No Transition\n\n      if (!model || ease === 1) {\n        me._view = model;\n        me._start = null;\n        return me;\n      }\n\n      if (!view) {\n        view = me._view = {};\n      }\n\n      if (!start) {\n        start = me._start = {};\n      }\n\n      interpolate(start, view, model, ease);\n      return me;\n    },\n    tooltipPosition: function tooltipPosition() {\n      return {\n        x: this._model.x,\n        y: this._model.y\n      };\n    },\n    hasValue: function hasValue() {\n      return helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n    }\n  });\n  Element.extend = helpers$1.inherits;\n  var core_element = Element;\n  var exports$2 = core_element.extend({\n    chart: null,\n    // the animation associated chart instance\n    currentStep: 0,\n    // the current animation step\n    numSteps: 60,\n    // default number of steps\n    easing: '',\n    // the easing to use for this animation\n    render: null,\n    // render function used by the animation service\n    onAnimationProgress: null,\n    // user specified callback to fire on each step of the animation\n    onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n  });\n  var core_animation = exports$2; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.Animation instead\n   * @prop Chart.Animation#animationObject\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'animationObject', {\n    get: function get() {\n      return this;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart.Animation#chart instead\n   * @prop Chart.Animation#chartInstance\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'chartInstance', {\n    get: function get() {\n      return this.chart;\n    },\n    set: function set(value) {\n      this.chart = value;\n    }\n  });\n\n  core_defaults._set('global', {\n    animation: {\n      duration: 1000,\n      easing: 'easeOutQuart',\n      onProgress: helpers$1.noop,\n      onComplete: helpers$1.noop\n    }\n  });\n\n  var core_animations = {\n    animations: [],\n    request: null,\n\n    /**\n     * @param {Chart} chart - The chart to animate.\n     * @param {Chart.Animation} animation - The animation that we will animate.\n     * @param {number} duration - The animation duration in ms.\n     * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n     */\n    addAnimation: function addAnimation(chart, animation, duration, lazy) {\n      var animations = this.animations;\n      var i, ilen;\n      animation.chart = chart;\n      animation.startTime = Date.now();\n      animation.duration = duration;\n\n      if (!lazy) {\n        chart.animating = true;\n      }\n\n      for (i = 0, ilen = animations.length; i < ilen; ++i) {\n        if (animations[i].chart === chart) {\n          animations[i] = animation;\n          return;\n        }\n      }\n\n      animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n      if (animations.length === 1) {\n        this.requestAnimationFrame();\n      }\n    },\n    cancelAnimation: function cancelAnimation(chart) {\n      var index = helpers$1.findIndex(this.animations, function (animation) {\n        return animation.chart === chart;\n      });\n\n      if (index !== -1) {\n        this.animations.splice(index, 1);\n        chart.animating = false;\n      }\n    },\n    requestAnimationFrame: function requestAnimationFrame() {\n      var me = this;\n\n      if (me.request === null) {\n        // Skip animation frame requests until the active one is executed.\n        // This can happen when processing mouse events, e.g. 'mousemove'\n        // and 'mouseout' events will trigger multiple renders.\n        me.request = helpers$1.requestAnimFrame.call(window, function () {\n          me.request = null;\n          me.startDigest();\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    startDigest: function startDigest() {\n      var me = this;\n      me.advance(); // Do we have more stuff to animate?\n\n      if (me.animations.length > 0) {\n        me.requestAnimationFrame();\n      }\n    },\n\n    /**\n     * @private\n     */\n    advance: function advance() {\n      var animations = this.animations;\n      var animation, chart, numSteps, nextStep;\n      var i = 0; // 1 animation per chart, so we are looping charts here\n\n      while (i < animations.length) {\n        animation = animations[i];\n        chart = animation.chart;\n        numSteps = animation.numSteps; // Make sure that currentStep starts at 1\n        // https://github.com/chartjs/Chart.js/issues/6104\n\n        nextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n        animation.currentStep = Math.min(nextStep, numSteps);\n        helpers$1.callback(animation.render, [chart, animation], chart);\n        helpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n        if (animation.currentStep >= numSteps) {\n          helpers$1.callback(animation.onAnimationComplete, [animation], chart);\n          chart.animating = false;\n          animations.splice(i, 1);\n        } else {\n          ++i;\n        }\n      }\n    }\n  };\n  var resolve = helpers$1.options.resolve;\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers$1.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  var DatasetController = function DatasetController(chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers$1.extend(DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getValueScale: function _getValueScale() {\n      return this.getScaleForId(this._getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScale: function _getIndexScale() {\n      return this.getScaleForId(this._getIndexScaleId());\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers$1.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers$1.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      var getHoverColor = helpers$1.getHoverColor;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n      model.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n      model.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      var count = arguments.length;\n      this.insertElements(this.getDataset().data.length - count, count);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  DatasetController.extend = helpers$1.inherits;\n  var core_datasetController = DatasetController;\n\n  core_defaults._set('global', {\n    elements: {\n      arc: {\n        backgroundColor: core_defaults.global.defaultColor,\n        borderColor: '#fff',\n        borderWidth: 2,\n        borderAlign: 'center'\n      }\n    }\n  });\n\n  var element_arc = core_element.extend({\n    inLabelRange: function inLabelRange(mouseX) {\n      var vm = this._view;\n\n      if (vm) {\n        return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n      }\n\n      return false;\n    },\n    inRange: function inRange(chartX, chartY) {\n      var vm = this._view;\n\n      if (vm) {\n        var pointRelativePosition = helpers$1.getAngleFromPoint(vm, {\n          x: chartX,\n          y: chartY\n        });\n        var angle = pointRelativePosition.angle;\n        var distance = pointRelativePosition.distance; // Sanitise angle range\n\n        var startAngle = vm.startAngle;\n        var endAngle = vm.endAngle;\n\n        while (endAngle < startAngle) {\n          endAngle += 2.0 * Math.PI;\n        }\n\n        while (angle > endAngle) {\n          angle -= 2.0 * Math.PI;\n        }\n\n        while (angle < startAngle) {\n          angle += 2.0 * Math.PI;\n        } // Check if within the range of the open/close angle\n\n\n        var betweenAngles = angle >= startAngle && angle <= endAngle;\n        var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n        return betweenAngles && withinRadius;\n      }\n\n      return false;\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n      var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n      return {\n        x: vm.x + Math.cos(halfAngle) * halfRadius,\n        y: vm.y + Math.sin(halfAngle) * halfRadius\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n      var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n      return {\n        x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n        y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n      };\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var sA = vm.startAngle;\n      var eA = vm.endAngle;\n      var pixelMargin = vm.borderAlign === 'inner' ? 0.33 : 0;\n      var angleMargin;\n      ctx.save();\n      ctx.beginPath();\n      ctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n      ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n      ctx.closePath();\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fill();\n\n      if (vm.borderWidth) {\n        if (vm.borderAlign === 'inner') {\n          // Draw an inner border by cliping the arc and drawing a double-width border\n          // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n          ctx.beginPath();\n          angleMargin = pixelMargin / vm.outerRadius;\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\n          if (vm.innerRadius > pixelMargin) {\n            angleMargin = pixelMargin / vm.innerRadius;\n            ctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n          } else {\n            ctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n          }\n\n          ctx.closePath();\n          ctx.clip();\n          ctx.beginPath();\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n          ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n          ctx.closePath();\n          ctx.lineWidth = vm.borderWidth * 2;\n          ctx.lineJoin = 'round';\n        } else {\n          ctx.lineWidth = vm.borderWidth;\n          ctx.lineJoin = 'bevel';\n        }\n\n        ctx.strokeStyle = vm.borderColor;\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$1 = helpers$1.valueOrDefault;\n  var defaultColor = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      line: {\n        tension: 0.4,\n        backgroundColor: defaultColor,\n        borderWidth: 3,\n        borderColor: defaultColor,\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        capBezierPoints: true,\n        fill: true // do we fill in the area between the line and its base axis\n\n      }\n    }\n  });\n\n  var element_line = core_element.extend({\n    draw: function draw() {\n      var me = this;\n      var vm = me._view;\n      var ctx = me._chart.ctx;\n      var spanGaps = vm.spanGaps;\n\n      var points = me._children.slice(); // clone array\n\n\n      var globalDefaults = core_defaults.global;\n      var globalOptionLineElements = globalDefaults.elements.line;\n      var lastDrawnIndex = -1;\n      var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n      if (me._loop && points.length) {\n        points.push(points[0]);\n      }\n\n      ctx.save(); // Stroke Line Options\n\n      ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n      if (ctx.setLineDash) {\n        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n      }\n\n      ctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n      ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n      ctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n      ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n      ctx.beginPath();\n      lastDrawnIndex = -1;\n\n      for (index = 0; index < points.length; ++index) {\n        current = points[index];\n        previous = helpers$1.previousItem(points, index);\n        currentVM = current._view; // First point moves to it's starting position no matter what\n\n        if (index === 0) {\n          if (!currentVM.skip) {\n            ctx.moveTo(currentVM.x, currentVM.y);\n            lastDrawnIndex = index;\n          }\n        } else {\n          previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n          if (!currentVM.skip) {\n            if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n              // There was a gap and this is the first point after the gap\n              ctx.moveTo(currentVM.x, currentVM.y);\n            } else {\n              // Line to next point\n              helpers$1.canvas.lineTo(ctx, previous._view, current._view);\n            }\n\n            lastDrawnIndex = index;\n          }\n        }\n      }\n\n      ctx.stroke();\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$2 = helpers$1.valueOrDefault;\n  var defaultColor$1 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      point: {\n        radius: 3,\n        pointStyle: 'circle',\n        backgroundColor: defaultColor$1,\n        borderColor: defaultColor$1,\n        borderWidth: 1,\n        // Hover\n        hitRadius: 1,\n        hoverRadius: 4,\n        hoverBorderWidth: 1\n      }\n    }\n  });\n\n  function xRange(mouseX) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n  }\n\n  function yRange(mouseY) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n  }\n\n  var element_point = core_element.extend({\n    inRange: function inRange(mouseX, mouseY) {\n      var vm = this._view;\n      return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n    },\n    inLabelRange: xRange,\n    inXRange: xRange,\n    inYRange: yRange,\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    },\n    getArea: function getArea() {\n      return Math.PI * Math.pow(this._view.radius, 2);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y,\n        padding: vm.radius + vm.borderWidth\n      };\n    },\n    draw: function draw(chartArea) {\n      var vm = this._view;\n      var ctx = this._chart.ctx;\n      var pointStyle = vm.pointStyle;\n      var rotation = vm.rotation;\n      var radius = vm.radius;\n      var x = vm.x;\n      var y = vm.y;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n      if (vm.skip) {\n        return;\n      } // Clipping for Points.\n\n\n      if (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n        ctx.strokeStyle = vm.borderColor || defaultColor;\n        ctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n        ctx.fillStyle = vm.backgroundColor || defaultColor;\n        helpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n      }\n    }\n  });\n  var defaultColor$2 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      rectangle: {\n        backgroundColor: defaultColor$2,\n        borderColor: defaultColor$2,\n        borderSkipped: 'bottom',\n        borderWidth: 0\n      }\n    }\n  });\n\n  function isVertical(vm) {\n    return vm && vm.width !== undefined;\n  }\n  /**\n   * Helper function to get the bounds of the bar regardless of the orientation\n   * @param bar {Chart.Element.Rectangle} the bar\n   * @return {Bounds} bounds of the bar\n   * @private\n   */\n\n\n  function getBarBounds(vm) {\n    var x1, x2, y1, y2, half;\n\n    if (isVertical(vm)) {\n      half = vm.width / 2;\n      x1 = vm.x - half;\n      x2 = vm.x + half;\n      y1 = Math.min(vm.y, vm.base);\n      y2 = Math.max(vm.y, vm.base);\n    } else {\n      half = vm.height / 2;\n      x1 = Math.min(vm.x, vm.base);\n      x2 = Math.max(vm.x, vm.base);\n      y1 = vm.y - half;\n      y2 = vm.y + half;\n    }\n\n    return {\n      left: x1,\n      top: y1,\n      right: x2,\n      bottom: y2\n    };\n  }\n\n  function swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n  }\n\n  function parseBorderSkipped(vm) {\n    var edge = vm.borderSkipped;\n    var res = {};\n\n    if (!edge) {\n      return res;\n    }\n\n    if (vm.horizontal) {\n      if (vm.base > vm.x) {\n        edge = swap(edge, 'left', 'right');\n      }\n    } else if (vm.base < vm.y) {\n      edge = swap(edge, 'bottom', 'top');\n    }\n\n    res[edge] = true;\n    return res;\n  }\n\n  function parseBorderWidth(vm, maxW, maxH) {\n    var value = vm.borderWidth;\n    var skip = parseBorderSkipped(vm);\n    var t, r, b, l;\n\n    if (helpers$1.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      t: skip.top || t < 0 ? 0 : t > maxH ? maxH : t,\n      r: skip.right || r < 0 ? 0 : r > maxW ? maxW : r,\n      b: skip.bottom || b < 0 ? 0 : b > maxH ? maxH : b,\n      l: skip.left || l < 0 ? 0 : l > maxW ? maxW : l\n    };\n  }\n\n  function boundingRects(vm) {\n    var bounds = getBarBounds(vm);\n    var width = bounds.right - bounds.left;\n    var height = bounds.bottom - bounds.top;\n    var border = parseBorderWidth(vm, width / 2, height / 2);\n    return {\n      outer: {\n        x: bounds.left,\n        y: bounds.top,\n        w: width,\n        h: height\n      },\n      inner: {\n        x: bounds.left + border.l,\n        y: bounds.top + border.t,\n        w: width - border.l - border.r,\n        h: height - border.t - border.b\n      }\n    };\n  }\n\n  function _inRange(vm, x, y) {\n    var skipX = x === null;\n    var skipY = y === null;\n    var bounds = !vm || skipX && skipY ? false : getBarBounds(vm);\n    return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n  }\n\n  var element_rectangle = core_element.extend({\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var rects = boundingRects(vm);\n      var outer = rects.outer;\n      var inner = rects.inner;\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n      if (outer.w === inner.w && outer.h === inner.h) {\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(outer.x, outer.y, outer.w, outer.h);\n      ctx.clip();\n      ctx.fillStyle = vm.borderColor;\n      ctx.rect(inner.x, inner.y, inner.w, inner.h);\n      ctx.fill('evenodd');\n      ctx.restore();\n    },\n    height: function height() {\n      var vm = this._view;\n      return vm.base - vm.y;\n    },\n    inRange: function inRange(mouseX, mouseY) {\n      return _inRange(this._view, mouseX, mouseY);\n    },\n    inLabelRange: function inLabelRange(mouseX, mouseY) {\n      var vm = this._view;\n      return isVertical(vm) ? _inRange(vm, mouseX, null) : _inRange(vm, null, mouseY);\n    },\n    inXRange: function inXRange(mouseX) {\n      return _inRange(this._view, mouseX, null);\n    },\n    inYRange: function inYRange(mouseY) {\n      return _inRange(this._view, null, mouseY);\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var x, y;\n\n      if (isVertical(vm)) {\n        x = vm.x;\n        y = (vm.y + vm.base) / 2;\n      } else {\n        x = (vm.x + vm.base) / 2;\n        y = vm.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return isVertical(vm) ? vm.width * Math.abs(vm.y - vm.base) : vm.height * Math.abs(vm.x - vm.base);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    }\n  });\n  var elements = {};\n  var Arc = element_arc;\n  var Line = element_line;\n  var Point = element_point;\n  var Rectangle = element_rectangle;\n  elements.Arc = Arc;\n  elements.Line = Line;\n  elements.Point = Point;\n  elements.Rectangle = Rectangle;\n  var resolve$1 = helpers$1.options.resolve;\n\n  core_defaults._set('bar', {\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }],\n      yAxes: [{\n        type: 'linear'\n      }]\n    }\n  });\n  /**\n   * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n   * @private\n   */\n\n\n  function computeMinSampleSize(scale, pixels) {\n    var min = scale.isHorizontal() ? scale.width : scale.height;\n    var ticks = scale.getTicks();\n    var prev, curr, i, ilen;\n\n    for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n      min = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n    }\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      curr = scale.getPixelForTick(i);\n      min = i > 0 ? Math.min(min, curr - prev) : min;\n      prev = curr;\n    }\n\n    return min;\n  }\n  /**\n   * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n   * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n   * mode currently always generates bars equally sized (until we introduce scriptable options?).\n   * @private\n   */\n\n\n  function computeFitCategoryTraits(index, ruler, options) {\n    var thickness = options.barThickness;\n    var count = ruler.stackCount;\n    var curr = ruler.pixels[index];\n    var size, ratio;\n\n    if (helpers$1.isNullOrUndef(thickness)) {\n      size = ruler.min * options.categoryPercentage;\n      ratio = options.barPercentage;\n    } else {\n      // When bar thickness is enforced, category and bar percentages are ignored.\n      // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n      // and deprecate barPercentage since this value is ignored when thickness is absolute.\n      size = thickness * count;\n      ratio = 1;\n    }\n\n    return {\n      chunk: size / count,\n      ratio: ratio,\n      start: curr - size / 2\n    };\n  }\n  /**\n   * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n   * percentage options are 1), based on the previous and following categories. This mode\n   * generates bars with different widths when data are not evenly spaced.\n   * @private\n   */\n\n\n  function computeFlexCategoryTraits(index, ruler, options) {\n    var pixels = ruler.pixels;\n    var curr = pixels[index];\n    var prev = index > 0 ? pixels[index - 1] : null;\n    var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    var percent = options.categoryPercentage;\n    var start, size;\n\n    if (prev === null) {\n      // first data: its size is double based on the next point or,\n      // if it's also the last data, we use the scale size.\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n\n    if (next === null) {\n      // last data: its size is also double based on the previous point.\n      next = curr + curr - prev;\n    }\n\n    start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    size = Math.abs(next - prev) / 2 * percent;\n    return {\n      chunk: size / ruler.stackCount,\n      ratio: options.barPercentage,\n      start: start\n    };\n  }\n\n  var controller_bar = core_datasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      core_datasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      var options = me._resolveElementOptions(rectangle, index);\n\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderSkipped: options.borderSkipped,\n        borderWidth: options.borderWidth,\n        datasetLabel: dataset.label,\n        label: me.chart.data.labels[index]\n      };\n\n      me._updateElementGeometry(rectangle, index, reset);\n\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    _updateElementGeometry: function _updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n\n      var vscale = me._getValueScale();\n\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {number} [last] - The dataset index\n     * @returns {string[]} The list of stack IDs\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getIndexScale();\n\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {number} [datasetIndex] - The dataset index\n     * @param {string} [name] - The stack name to find\n     * @returns {number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n\n      var scale = me._getIndexScale();\n\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers$1.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n\n      var scale = me._getValueScale();\n\n      var isHorizontal = scale.isHorizontal();\n      var datasets = chart.data.datasets;\n      var value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n      var minBarLength = scale.options.minBarLength;\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller._getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = +scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = head - base;\n\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n        size = minBarLength;\n\n        if (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n          head = base - minBarLength;\n        } else {\n          head = base + minBarLength;\n        }\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers$1.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getValueScale();\n\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers$1.canvas.unclipArea(chart.ctx);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(rectangle, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = rectangle.custom || {};\n      var options = chart.options.elements.rectangle;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderSkipped', 'borderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$1([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    }\n  });\n  var valueOrDefault$3 = helpers$1.valueOrDefault;\n  var resolve$2 = helpers$1.options.resolve;\n\n  core_defaults._set('bubble', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        // bubble should probably use a linear scale by default\n        position: 'bottom',\n        id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n      }],\n      yAxes: [{\n        type: 'linear',\n        position: 'left',\n        id: 'y-axis-0'\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          // Title doesn't make sense for scatter since we format the data as a point\n          return '';\n        },\n        label: function label(item, data) {\n          var datasetLabel = data.datasets[item.datasetIndex].label || '';\n          var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n          return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n        }\n      }\n    }\n  });\n\n  var controller_bubble = core_datasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers$1.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$2([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve$2([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n  var resolve$3 = helpers$1.options.resolve;\n  var valueOrDefault$4 = helpers$1.valueOrDefault;\n\n  core_defaults._set('doughnut', {\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    hover: {\n      mode: 'single'\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc && arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n          if (meta.data[index]) {\n            meta.data[index].hidden = !meta.data[index].hidden;\n          }\n        }\n\n        chart.update();\n      }\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutoutPercentage: 50,\n    // The rotation of the chart, where the first data arc begins.\n    rotation: Math.PI * -0.5,\n    // The total circumference of the chart.\n    circumference: Math.PI * 2.0,\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem, data) {\n          var dataLabel = data.labels[tooltipItem.index];\n          var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n          if (helpers$1.isArray(dataLabel)) {\n            // show value on first line of multiline label\n            // need to clone because we are changing the value\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n      }\n    }\n  });\n\n  var controller_doughnut = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var availableWidth = chartArea.right - chartArea.left;\n      var availableHeight = chartArea.bottom - chartArea.top;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var arcs = meta.data;\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference;\n\n      var chartWeight = me._getRingWeight(me.index);\n\n      var i, ilen; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth();\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers$1.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n      if (!arcs) {\n        // Find the outmost visible dataset\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n\n            if (i !== me.index) {\n              controller = meta.controller;\n            }\n\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arc = arcs[i];\n        options = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\n        if (options.borderAlign !== 'inner') {\n          borderWidth = options.borderWidth;\n          hoverWidth = options.hoverBorderWidth;\n          max = borderWidth > max ? borderWidth : max;\n          max = hoverWidth > max ? hoverWidth : max;\n        }\n      }\n\n      return max;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$3([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n     * @private\n     */\n    _getRingWeightOffset: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    },\n\n    /**\n     * @private\n     */\n    _getRingWeight: function _getRingWeight(dataSetIndex) {\n      return Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n    },\n\n    /**\n     * Returns the sum of all visibile data set weights.  This value can be 0.\n     * @private\n     */\n    _getVisibleDatasetWeightTotal: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length);\n    }\n  });\n\n  core_defaults._set('horizontalBar', {\n    hover: {\n      mode: 'index',\n      axis: 'y'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        position: 'bottom'\n      }],\n      yAxes: [{\n        type: 'category',\n        position: 'left',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }]\n    },\n    elements: {\n      rectangle: {\n        borderSkipped: 'left'\n      }\n    },\n    tooltips: {\n      mode: 'index',\n      axis: 'y'\n    }\n  });\n\n  var controller_horizontalBar = controller_bar.extend({\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n  var valueOrDefault$5 = helpers$1.valueOrDefault;\n  var resolve$4 = helpers$1.options.resolve;\n  var isPointInArea = helpers$1.canvas._isPointInArea;\n\n  core_defaults._set('line', {\n    showLines: true,\n    spanGaps: false,\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        id: 'x-axis-0'\n      }],\n      yAxes: [{\n        type: 'linear',\n        id: 'y-axis-0'\n      }]\n    }\n  });\n\n  function lineEnabled(dataset, options) {\n    return valueOrDefault$5(dataset.showLine, options.showLines);\n  }\n\n  var controller_line = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.getScaleForId(meta.yAxisID);\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, me.chart.options);\n      var i, ilen; // Update Line\n\n      if (showLine) {\n        // Compatibility: If the properties are defined with only the old name, use those values\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = me._resolveLineOptions(line);\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var lineModel = meta.dataset._model;\n      var x, y;\n\n      var options = me._resolvePointOptions(point, index);\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n        steppedLine: lineModel ? lineModel.steppedLine : false,\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options;\n      var elementOptions = options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill', 'cubicInterpolationMode'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[key], elementOptions[key]]);\n      } // The default behavior of lines is to break at null values, according\n      // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n      // This option gives lines the ability to span gaps\n\n\n      values.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n      values.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n      values.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n      return values;\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var lineModel = meta.dataset._model;\n      var area = chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (lineModel.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (lineModel.cubicInterpolationMode === 'monotone') {\n        helpers$1.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i)._model, model, helpers$1.nextItem(points, i)._model, lineModel.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n\n          if (isPointInArea(model, area)) {\n            if (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n              model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n              model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n            }\n\n            if (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n              model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n              model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n            }\n          }\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers$1.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers$1.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n    }\n  });\n  var resolve$5 = helpers$1.options.resolve;\n\n  core_defaults._set('polarArea', {\n    scale: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      gridLines: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    // Boolean - Whether to animate the rotation of the chart\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    startAngle: -0.5 * Math.PI,\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i);\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n\n        chart.update();\n      }\n    },\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item, data) {\n          return data.labels[item.index] + ': ' + item.yLabel;\n        }\n      }\n    }\n  });\n\n  var controller_polarArea = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var arcs = meta.data;\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max(minSize / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      });\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers$1.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      var valueOrDefault = helpers$1.valueOrDefault;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$5([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return resolve$5([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n\n  core_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\n\n  core_defaults._set('pie', {\n    cutoutPercentage: 0\n  }); // Pie charts are Doughnut chart with different defaults\n\n\n  var controller_pie = controller_doughnut;\n  var valueOrDefault$6 = helpers$1.valueOrDefault;\n  var resolve$6 = helpers$1.options.resolve;\n\n  core_defaults._set('radar', {\n    scale: {\n      type: 'radialLinear'\n    },\n    elements: {\n      line: {\n        tension: 0 // no bezier in radar\n\n      }\n    }\n  });\n\n  var controller_radar = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.chart.scale;\n      var dataset = me.getDataset();\n      var i, ilen; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      } // Utility\n\n\n      line._scale = scale;\n      line._datasetIndex = me.index; // Data\n\n      line._children = points;\n      line._loop = true; // Model\n\n      line._model = me._resolveLineOptions(line);\n      line.pivot(); // Update Points\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      } // Update bezier control points\n\n\n      me.updateBezierControlPoints(); // Now pivot the point for animation\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n      var options = me._resolvePointOptions(point, index);\n\n      var lineModel = me.getMeta().dataset._model;\n\n      var x = reset ? scale.xCenter : pointPosition.x;\n      var y = reset ? scale.yCenter : pointPosition.y; // Utility\n\n      point._scale = scale;\n      point._options = options;\n      point._datasetIndex = me.index;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        // value not used in dataset scale, but we want a consistent API between scales\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[key], options[key]]);\n      }\n\n      values.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n      return values;\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints;\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        model = points[i]._model;\n        controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i, true)._model, model, helpers$1.nextItem(points, i, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n        model.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n        model.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n        model.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n      }\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n    }\n  });\n\n  core_defaults._set('scatter', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        id: 'x-axis-1',\n        // need an ID so datasets can reference the scale\n        type: 'linear',\n        // scatter should not use a category axis\n        position: 'bottom'\n      }],\n      yAxes: [{\n        id: 'y-axis-1',\n        type: 'linear',\n        position: 'left'\n      }]\n    },\n    showLines: false,\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return ''; // doesn't make sense for scatter since data are formatted as a point\n        },\n        label: function label(item) {\n          return '(' + item.xLabel + ', ' + item.yLabel + ')';\n        }\n      }\n    }\n  }); // Scatter charts use line controllers\n\n\n  var controller_scatter = controller_line; // NOTE export a map in which the key represents the controller type, not\n  // the class, and so must be CamelCase in order to be correctly retrieved\n  // by the controller in core.controller.js (`controllers[meta.type]`).\n\n  var controllers = {\n    bar: controller_bar,\n    bubble: controller_bubble,\n    doughnut: controller_doughnut,\n    horizontalBar: controller_horizontalBar,\n    line: controller_line,\n    polarArea: controller_polarArea,\n    pie: controller_pie,\n    radar: controller_radar,\n    scatter: controller_scatter\n  };\n  /**\n   * Helper function to get relative position for an event\n   * @param {Event|IEvent} event - The event to get the position for\n   * @param {Chart} chart - The chart\n   * @returns {object} the event position\n   */\n\n  function getRelativePosition(e, chart) {\n    if (e.native) {\n      return {\n        x: e.x,\n        y: e.y\n      };\n    }\n\n    return helpers$1.getRelativePosition(e, chart);\n  }\n  /**\n   * Helper function to traverse all of the visible elements in the chart\n   * @param {Chart} chart - the chart\n   * @param {function} handler - the callback to execute for each visible item\n   */\n\n\n  function parseVisibleItems(chart, handler) {\n    var datasets = chart.data.datasets;\n    var meta, i, j, ilen, jlen;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      if (!chart.isDatasetVisible(i)) {\n        continue;\n      }\n\n      meta = chart.getDatasetMeta(i);\n\n      for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n        var element = meta.data[j];\n\n        if (!element._view.skip) {\n          handler(element);\n        }\n      }\n    }\n  }\n  /**\n   * Helper function to get the items that intersect the event position\n   * @param {ChartElement[]} items - elements to filter\n   * @param {object} position - the point to be nearest to\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getIntersectItems(chart, position) {\n    var elements = [];\n    parseVisibleItems(chart, function (element) {\n      if (element.inRange(position.x, position.y)) {\n        elements.push(element);\n      }\n    });\n    return elements;\n  }\n  /**\n   * Helper function to get the items nearest to the event position considering all visible items in teh chart\n   * @param {Chart} chart - the chart to look at elements from\n   * @param {object} position - the point to be nearest to\n   * @param {boolean} intersect - if true, only consider items that intersect the position\n   * @param {function} distanceMetric - function to provide the distance between points\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getNearestItems(chart, position, intersect, distanceMetric) {\n    var minDistance = Number.POSITIVE_INFINITY;\n    var nearestItems = [];\n    parseVisibleItems(chart, function (element) {\n      if (intersect && !element.inRange(position.x, position.y)) {\n        return;\n      }\n\n      var center = element.getCenterPoint();\n      var distance = distanceMetric(position, center);\n\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n    });\n    return nearestItems;\n  }\n  /**\n   * Get a distance metric function for two points based on the\n   * axis mode setting\n   * @param {string} axis - the axis mode. x|y|xy\n   */\n\n\n  function getDistanceMetricForAxis(axis) {\n    var useX = axis.indexOf('x') !== -1;\n    var useY = axis.indexOf('y') !== -1;\n    return function (pt1, pt2) {\n      var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n      var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n  }\n\n  function indexMode(chart, e, options) {\n    var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n    options.axis = options.axis || 'x';\n    var distanceMetric = getDistanceMetricForAxis(options.axis);\n    var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n    var elements = [];\n\n    if (!items.length) {\n      return [];\n    }\n\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      if (chart.isDatasetVisible(datasetIndex)) {\n        var meta = chart.getDatasetMeta(datasetIndex);\n        var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n        if (element && !element._view.skip) {\n          elements.push(element);\n        }\n      }\n    });\n    return elements;\n  }\n  /**\n   * @interface IInteractionOptions\n   */\n\n  /**\n   * If true, only consider items that intersect the point\n   * @name IInterfaceOptions#boolean\n   * @type Boolean\n   */\n\n  /**\n   * Contains interaction related functions\n   * @namespace Chart.Interaction\n   */\n\n\n  var core_interaction = {\n    // Helper function for different modes\n    modes: {\n      single: function single(chart, e) {\n        var position = getRelativePosition(e, chart);\n        var elements = [];\n        parseVisibleItems(chart, function (element) {\n          if (element.inRange(position.x, position.y)) {\n            elements.push(element);\n            return elements;\n          }\n        });\n        return elements.slice(0, 1);\n      },\n\n      /**\n       * @function Chart.Interaction.modes.label\n       * @deprecated since version 2.4.0\n       * @todo remove at version 3\n       * @private\n       */\n      label: indexMode,\n\n      /**\n       * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n       * @function Chart.Interaction.modes.index\n       * @since v2.4.0\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      index: indexMode,\n\n      /**\n       * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect is false, we find the nearest item and return the items in that dataset\n       * @function Chart.Interaction.modes.dataset\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      dataset: function dataset(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n        if (items.length > 0) {\n          items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n        }\n\n        return items;\n      },\n\n      /**\n       * @function Chart.Interaction.modes.x-axis\n       * @deprecated since version 2.4.0. Use index mode and intersect == true\n       * @todo remove at version 3\n       * @private\n       */\n      'x-axis': function xAxis(chart, e) {\n        return indexMode(chart, e, {\n          intersect: false\n        });\n      },\n\n      /**\n       * Point mode returns all elements that hit test based on the event position\n       * of the event\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      point: function point(chart, e) {\n        var position = getRelativePosition(e, chart);\n        return getIntersectItems(chart, position);\n      },\n\n      /**\n       * nearest mode returns the element closest to the point\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      nearest: function nearest(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        return getNearestItems(chart, position, options.intersect, distanceMetric);\n      },\n\n      /**\n       * x mode returns the elements that hit-test at the current x coordinate\n       * @function Chart.Interaction.modes.x\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      x: function x(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inXRange(position.x)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      },\n\n      /**\n       * y mode returns the elements that hit-test at the current y coordinate\n       * @function Chart.Interaction.modes.y\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      y: function y(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inYRange(position.y)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      }\n    }\n  };\n\n  function filterByPosition(array, position) {\n    return helpers$1.where(array, function (v) {\n      return v.position === position;\n    });\n  }\n\n  function sortByWeight(array, reverse) {\n    array.forEach(function (v, i) {\n      v._tmpIndex_ = i;\n      return v;\n    });\n    array.sort(function (a, b) {\n      var v0 = reverse ? b : a;\n      var v1 = reverse ? a : b;\n      return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n    });\n    array.forEach(function (v) {\n      delete v._tmpIndex_;\n    });\n  }\n\n  function findMaxPadding(boxes) {\n    var top = 0;\n    var left = 0;\n    var bottom = 0;\n    var right = 0;\n    helpers$1.each(boxes, function (box) {\n      if (box.getPadding) {\n        var boxPadding = box.getPadding();\n        top = Math.max(top, boxPadding.top);\n        left = Math.max(left, boxPadding.left);\n        bottom = Math.max(bottom, boxPadding.bottom);\n        right = Math.max(right, boxPadding.right);\n      }\n    });\n    return {\n      top: top,\n      left: left,\n      bottom: bottom,\n      right: right\n    };\n  }\n\n  function addSizeByPosition(boxes, size) {\n    helpers$1.each(boxes, function (box) {\n      size[box.position] += box.isHorizontal() ? box.height : box.width;\n    });\n  }\n\n  core_defaults._set('global', {\n    layout: {\n      padding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    }\n  });\n  /**\n   * @interface ILayoutItem\n   * @prop {string} position - The position of the item in the chart layout. Possible values are\n   * 'left', 'top', 'right', 'bottom', and 'chartArea'\n   * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n   * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n   * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n   * @prop {function} update - Takes two parameters: width and height. Returns size of item\n   * @prop {function} getPadding -  Returns an object with padding on the edges\n   * @prop {number} width - Width of item. Must be valid after update()\n   * @prop {number} height - Height of item. Must be valid after update()\n   * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n   */\n  // The layout service is very self explanatory.  It's responsible for the layout within a chart.\n  // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n  // It is this service's responsibility of carrying out that layout.\n\n\n  var core_layouts = {\n    defaults: {},\n\n    /**\n     * Register a box to a chart.\n     * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n     * @param {Chart} chart - the chart to use\n     * @param {ILayoutItem} item - the item to add to be layed out\n     */\n    addBox: function addBox(chart, item) {\n      if (!chart.boxes) {\n        chart.boxes = [];\n      } // initialize item with default values\n\n\n      item.fullWidth = item.fullWidth || false;\n      item.position = item.position || 'top';\n      item.weight = item.weight || 0;\n      chart.boxes.push(item);\n    },\n\n    /**\n     * Remove a layoutItem from a chart\n     * @param {Chart} chart - the chart to remove the box from\n     * @param {ILayoutItem} layoutItem - the item to remove from the layout\n     */\n    removeBox: function removeBox(chart, layoutItem) {\n      var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n      if (index !== -1) {\n        chart.boxes.splice(index, 1);\n      }\n    },\n\n    /**\n     * Sets (or updates) options on the given `item`.\n     * @param {Chart} chart - the chart in which the item lives (or will be added to)\n     * @param {ILayoutItem} item - the item to configure with the given options\n     * @param {object} options - the new item options.\n     */\n    configure: function configure(chart, item, options) {\n      var props = ['fullWidth', 'position', 'weight'];\n      var ilen = props.length;\n      var i = 0;\n      var prop;\n\n      for (; i < ilen; ++i) {\n        prop = props[i];\n\n        if (options.hasOwnProperty(prop)) {\n          item[prop] = options[prop];\n        }\n      }\n    },\n\n    /**\n     * Fits boxes of the given chart into the given size by having each box measure itself\n     * then running a fitting algorithm\n     * @param {Chart} chart - the chart\n     * @param {number} width - the width to fit into\n     * @param {number} height - the height to fit into\n     */\n    update: function update(chart, width, height) {\n      if (!chart) {\n        return;\n      }\n\n      var layoutOptions = chart.options.layout || {};\n      var padding = helpers$1.options.toPadding(layoutOptions.padding);\n      var leftPadding = padding.left;\n      var rightPadding = padding.right;\n      var topPadding = padding.top;\n      var bottomPadding = padding.bottom;\n      var leftBoxes = filterByPosition(chart.boxes, 'left');\n      var rightBoxes = filterByPosition(chart.boxes, 'right');\n      var topBoxes = filterByPosition(chart.boxes, 'top');\n      var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n      var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n      sortByWeight(leftBoxes, true);\n      sortByWeight(rightBoxes, false);\n      sortByWeight(topBoxes, true);\n      sortByWeight(bottomBoxes, false);\n      var verticalBoxes = leftBoxes.concat(rightBoxes);\n      var horizontalBoxes = topBoxes.concat(bottomBoxes);\n      var outerBoxes = verticalBoxes.concat(horizontalBoxes); // Essentially we now have any number of boxes on each of the 4 sides.\n      // Our canvas looks like the following.\n      // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n      // B1 is the bottom axis\n      // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n      // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n      // an error will be thrown.\n      //\n      // |----------------------------------------------------|\n      // |                  T1 (Full Width)                   |\n      // |----------------------------------------------------|\n      // |    |    |                 T2                  |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    | C1 |                           | C2 |    |\n      // |    |    |----|                           |----|    |\n      // |    |    |                                     |    |\n      // | L1 | L2 |           ChartArea (C0)            | R1 |\n      // |    |    |                                     |    |\n      // |    |    |----|                           |----|    |\n      // |    |    | C3 |                           | C4 |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    |                 B1                  |    |\n      // |----------------------------------------------------|\n      // |                  B2 (Full Width)                   |\n      // |----------------------------------------------------|\n      //\n      // What we do to find the best sizing, we do the following\n      // 1. Determine the minimum size of the chart area.\n      // 2. Split the remaining width equally between each vertical axis\n      // 3. Split the remaining height equally between each horizontal axis\n      // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n      // 5. Adjust the sizes of each axis based on it's minimum reported size.\n      // 6. Refit each axis\n      // 7. Position each axis in the final location\n      // 8. Tell the chart the final location of the chart area\n      // 9. Tell any axes that overlay the chart area the positions of the chart area\n      // Step 1\n\n      var chartWidth = width - leftPadding - rightPadding;\n      var chartHeight = height - topPadding - bottomPadding;\n      var chartAreaWidth = chartWidth / 2; // min 50%\n      // Step 2\n\n      var verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length; // Step 3\n      // TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n      // var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n      // Step 4\n\n      var maxChartAreaWidth = chartWidth;\n      var maxChartAreaHeight = chartHeight;\n      var outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      var minBoxSizes = [];\n      var maxPadding;\n\n      function getMinimumBoxSize(box) {\n        var minSize;\n        var isHorizontal = box.isHorizontal();\n\n        if (isHorizontal) {\n          minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n          maxChartAreaHeight -= minSize.height;\n        } else {\n          minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n          maxChartAreaWidth -= minSize.width;\n        }\n\n        minBoxSizes.push({\n          horizontal: isHorizontal,\n          width: minSize.width,\n          box: box\n        });\n      }\n\n      helpers$1.each(outerBoxes, getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n      maxPadding = findMaxPadding(outerBoxes); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n      // be if the axes are drawn at their minimum sizes.\n      // Steps 5 & 6\n      // Function to fit a box\n\n      function fitBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minBox) {\n          return minBox.box === box;\n        });\n\n        if (minBoxSize) {\n          if (minBoxSize.horizontal) {\n            var scaleMargin = {\n              left: Math.max(outerBoxSizes.left, maxPadding.left),\n              right: Math.max(outerBoxSizes.right, maxPadding.right),\n              top: 0,\n              bottom: 0\n            }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n            // on the margin. Sometimes they need to increase in size slightly\n\n            box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n          } else {\n            box.update(minBoxSize.width, maxChartAreaHeight);\n          }\n        }\n      } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n      helpers$1.each(verticalBoxes, fitBox);\n      addSizeByPosition(verticalBoxes, outerBoxSizes); // Set the Left and Right margins for the horizontal boxes\n\n      helpers$1.each(horizontalBoxes, fitBox);\n      addSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n      function finalFitVerticalBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minSize) {\n          return minSize.box === box;\n        });\n        var scaleMargin = {\n          left: 0,\n          right: 0,\n          top: outerBoxSizes.top,\n          bottom: outerBoxSizes.bottom\n        };\n\n        if (minBoxSize) {\n          box.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n        }\n      } // Let the left layout know the final margin\n\n\n      helpers$1.each(verticalBoxes, finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n      outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      addSizeByPosition(outerBoxes, outerBoxSizes); // We may be adding some padding to account for rotated x axis labels\n\n      var leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n      outerBoxSizes.left += leftPaddingAddition;\n      outerBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n      var topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n      outerBoxSizes.top += topPaddingAddition;\n      outerBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n      // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n      // without calling `fit` again\n\n      var newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n      var newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n      if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n        helpers$1.each(verticalBoxes, function (box) {\n          box.height = newMaxChartAreaHeight;\n        });\n        helpers$1.each(horizontalBoxes, function (box) {\n          if (!box.fullWidth) {\n            box.width = newMaxChartAreaWidth;\n          }\n        });\n        maxChartAreaHeight = newMaxChartAreaHeight;\n        maxChartAreaWidth = newMaxChartAreaWidth;\n      } // Step 7 - Position the boxes\n\n\n      var left = leftPadding + leftPaddingAddition;\n      var top = topPadding + topPaddingAddition;\n\n      function placeBox(box) {\n        if (box.isHorizontal()) {\n          box.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n          box.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n          box.top = top;\n          box.bottom = top + box.height; // Move to next point\n\n          top = box.bottom;\n        } else {\n          box.left = left;\n          box.right = left + box.width;\n          box.top = outerBoxSizes.top;\n          box.bottom = outerBoxSizes.top + maxChartAreaHeight; // Move to next point\n\n          left = box.right;\n        }\n      }\n\n      helpers$1.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n      left += maxChartAreaWidth;\n      top += maxChartAreaHeight;\n      helpers$1.each(rightBoxes, placeBox);\n      helpers$1.each(bottomBoxes, placeBox); // Step 8\n\n      chart.chartArea = {\n        left: outerBoxSizes.left,\n        top: outerBoxSizes.top,\n        right: outerBoxSizes.left + maxChartAreaWidth,\n        bottom: outerBoxSizes.top + maxChartAreaHeight\n      }; // Step 9\n\n      helpers$1.each(chartAreaBoxes, function (box) {\n        box.left = chart.chartArea.left;\n        box.top = chart.chartArea.top;\n        box.right = chart.chartArea.right;\n        box.bottom = chart.chartArea.bottom;\n        box.update(maxChartAreaWidth, maxChartAreaHeight);\n      });\n    }\n  };\n  /**\n   * Platform fallback implementation (minimal).\n   * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n   */\n\n  var platform_basic = {\n    acquireContext: function acquireContext(item) {\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      }\n\n      return item && item.getContext('2d') || null;\n    }\n  };\n  var platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n  var platform_dom$1 =\n  /*#__PURE__*/\n  Object.freeze({\n    default: platform_dom\n  });\n\n  function getCjsExportFromNamespace(n) {\n    return n && n.default || n;\n  }\n\n  var stylesheet = getCjsExportFromNamespace(platform_dom$1);\n  var EXPANDO_KEY = '$chartjs';\n  var CSS_PREFIX = 'chartjs-';\n  var CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\n  var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\n  var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\n  var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n  /**\n   * DOM event types -> Chart.js event types.\n   * Note: only events with different types are mapped.\n   * @see https://developer.mozilla.org/en-US/docs/Web/Events\n   */\n\n  var EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n  };\n  /**\n   * The \"used\" size is the final value of a dimension property after all calculations have\n   * been performed. This method uses the computed style of `element` but returns undefined\n   * if the computed style is not expressed in pixels. That can happen in some cases where\n   * `element` has a size relative to its parent and this last one is not yet displayed,\n   * for example because of `display: none` on a parent node.\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n   * @returns {number} Size in pixels or undefined if unknown.\n   */\n\n  function readUsedSize(element, property) {\n    var value = helpers$1.getStyle(element, property);\n    var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? Number(matches[1]) : undefined;\n  }\n  /**\n   * Initializes the canvas style and render size without modifying the canvas display size,\n   * since responsiveness is handled by the controller.resize() method. The config is used\n   * to determine the aspect ratio to apply in case no explicit height has been specified.\n   */\n\n\n  function initCanvas(canvas, config) {\n    var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n    // returns null or '' if no explicit value has been set to the canvas attribute.\n\n    var renderHeight = canvas.getAttribute('height');\n    var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n    canvas[EXPANDO_KEY] = {\n      initial: {\n        height: renderHeight,\n        width: renderWidth,\n        style: {\n          display: style.display,\n          height: style.height,\n          width: style.width\n        }\n      }\n    }; // Force canvas to display as block to avoid extra space caused by inline\n    // elements, which would interfere with the responsive resize process.\n    // https://github.com/chartjs/Chart.js/issues/2538\n\n    style.display = style.display || 'block';\n\n    if (renderWidth === null || renderWidth === '') {\n      var displayWidth = readUsedSize(canvas, 'width');\n\n      if (displayWidth !== undefined) {\n        canvas.width = displayWidth;\n      }\n    }\n\n    if (renderHeight === null || renderHeight === '') {\n      if (canvas.style.height === '') {\n        // If no explicit render height and style height, let's apply the aspect ratio,\n        // which one can be specified by the user but also by charts as default option\n        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n        canvas.height = canvas.width / (config.options.aspectRatio || 2);\n      } else {\n        var displayHeight = readUsedSize(canvas, 'height');\n\n        if (displayWidth !== undefined) {\n          canvas.height = displayHeight;\n        }\n      }\n    }\n\n    return canvas;\n  }\n  /**\n   * Detects support for options object argument in addEventListener.\n   * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n   * @private\n   */\n\n\n  var supportsEventListenerOptions = function () {\n    var supports = false;\n\n    try {\n      var options = Object.defineProperty({}, 'passive', {\n        // eslint-disable-next-line getter-return\n        get: function get() {\n          supports = true;\n        }\n      });\n      window.addEventListener('e', null, options);\n    } catch (e) {// continue regardless of error\n    }\n\n    return supports;\n  }(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n  // https://github.com/chartjs/Chart.js/issues/4287\n\n\n  var eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n  } : false;\n\n  function addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n\n  function removeListener(node, type, listener) {\n    node.removeEventListener(type, listener, eventListenerOptions);\n  }\n\n  function createEvent(type, chart, x, y, nativeEvent) {\n    return {\n      type: type,\n      chart: chart,\n      native: nativeEvent || null,\n      x: x !== undefined ? x : null,\n      y: y !== undefined ? y : null\n    };\n  }\n\n  function fromNativeEvent(event, chart) {\n    var type = EVENT_TYPES[event.type] || event.type;\n    var pos = helpers$1.getRelativePosition(event, chart);\n    return createEvent(type, chart, pos.x, pos.y, event);\n  }\n\n  function throttled(fn, thisArg) {\n    var ticking = false;\n    var args = [];\n    return function () {\n      args = Array.prototype.slice.call(arguments);\n      thisArg = thisArg || this;\n\n      if (!ticking) {\n        ticking = true;\n        helpers$1.requestAnimFrame.call(window, function () {\n          ticking = false;\n          fn.apply(thisArg, args);\n        });\n      }\n    };\n  }\n\n  function createDiv(cls) {\n    var el = document.createElement('div');\n    el.className = cls || '';\n    return el;\n  } // Implementation based on https://github.com/marcj/css-element-queries\n\n\n  function createResizer(handler) {\n    var maxSize = 1000000; // NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n    // https://github.com/chartjs/Chart.js/issues/5902\n\n    var resizer = createDiv(CSS_SIZE_MONITOR);\n    var expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n    var shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n    expand.appendChild(createDiv());\n    shrink.appendChild(createDiv());\n    resizer.appendChild(expand);\n    resizer.appendChild(shrink);\n\n    resizer._reset = function () {\n      expand.scrollLeft = maxSize;\n      expand.scrollTop = maxSize;\n      shrink.scrollLeft = maxSize;\n      shrink.scrollTop = maxSize;\n    };\n\n    var onScroll = function onScroll() {\n      resizer._reset();\n\n      handler();\n    };\n\n    addListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n    addListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n    return resizer;\n  } // https://davidwalsh.name/detect-node-insertion\n\n\n  function watchForRender(node, handler) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n    var proxy = expando.renderProxy = function (e) {\n      if (e.animationName === CSS_RENDER_ANIMATION) {\n        handler();\n      }\n    };\n\n    helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n      addListener(node, type, proxy);\n    }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n    // is removed then added back immediately (same animation frame?). Accessing the\n    // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n    // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n    // https://github.com/chartjs/Chart.js/issues/4737\n\n    expando.reflow = !!node.offsetParent;\n    node.classList.add(CSS_RENDER_MONITOR);\n  }\n\n  function unwatchForRender(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var proxy = expando.renderProxy;\n\n    if (proxy) {\n      helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n        removeListener(node, type, proxy);\n      });\n      delete expando.renderProxy;\n    }\n\n    node.classList.remove(CSS_RENDER_MONITOR);\n  }\n\n  function addResizeListener(node, listener, chart) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n    var resizer = expando.resizer = createResizer(throttled(function () {\n      if (expando.resizer) {\n        var container = chart.options.maintainAspectRatio && node.parentNode;\n        var w = container ? container.clientWidth : 0;\n        listener(createEvent('resize', chart));\n\n        if (container && container.clientWidth < w && chart.canvas) {\n          // If the container size shrank during chart resize, let's assume\n          // scrollbar appeared. So we resize again with the scrollbar visible -\n          // effectively making chart smaller and the scrollbar hidden again.\n          // Because we are inside `throttled`, and currently `ticking`, scroll\n          // events are ignored during this whole 2 resize process.\n          // If we assumed wrong and something else happened, we are resizing\n          // twice in a frame (potential performance issue)\n          listener(createEvent('resize', chart));\n        }\n      }\n    })); // The resizer needs to be attached to the node parent, so we first need to be\n    // sure that `node` is attached to the DOM before injecting the resizer element.\n\n    watchForRender(node, function () {\n      if (expando.resizer) {\n        var container = node.parentNode;\n\n        if (container && container !== resizer.parentNode) {\n          container.insertBefore(resizer, container.firstChild);\n        } // The container size might have changed, let's reset the resizer state.\n\n\n        resizer._reset();\n      }\n    });\n  }\n\n  function removeResizeListener(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var resizer = expando.resizer;\n    delete expando.resizer;\n    unwatchForRender(node);\n\n    if (resizer && resizer.parentNode) {\n      resizer.parentNode.removeChild(resizer);\n    }\n  }\n\n  function injectCSS(platform, css) {\n    // https://stackoverflow.com/q/3922139\n    var style = platform._style || document.createElement('style');\n\n    if (!platform._style) {\n      platform._style = style;\n      css = '/* Chart.js */\\n' + css;\n      style.setAttribute('type', 'text/css');\n      document.getElementsByTagName('head')[0].appendChild(style);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n\n  var platform_dom$2 = {\n    /**\n     * When `true`, prevents the automatic injection of the stylesheet required to\n     * correctly detect when the chart is added to the DOM and then resized. This\n     * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n     * to be manually imported to make this library compatible with any CSP.\n     * See https://github.com/chartjs/Chart.js/issues/5208\n     */\n    disableCSSInjection: false,\n\n    /**\n     * This property holds whether this platform is enabled for the current environment.\n     * Currently used by platform.js to select the proper implementation.\n     * @private\n     */\n    _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n    /**\n     * @private\n     */\n    _ensureLoaded: function _ensureLoaded() {\n      if (this._loaded) {\n        return;\n      }\n\n      this._loaded = true; // https://github.com/chartjs/Chart.js/issues/5208\n\n      if (!this.disableCSSInjection) {\n        injectCSS(this, stylesheet);\n      }\n    },\n    acquireContext: function acquireContext(item, config) {\n      if (typeof item === 'string') {\n        item = document.getElementById(item);\n      } else if (item.length) {\n        // Support for array based queries (such as jQuery)\n        item = item[0];\n      }\n\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n      // method, for example: https://github.com/kkapsner/CanvasBlocker\n      // https://github.com/chartjs/Chart.js/issues/2807\n\n\n      var context = item && item.getContext && item.getContext('2d'); // Load platform resources on first chart creation, to make possible to change\n      // platform options after importing the library (e.g. `disableCSSInjection`).\n\n      this._ensureLoaded(); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n      // inside an iframe or when running in a protected environment. We could guess the\n      // types from their toString() value but let's keep things flexible and assume it's\n      // a sufficient condition if the item has a context2D which has item as `canvas`.\n      // https://github.com/chartjs/Chart.js/issues/3887\n      // https://github.com/chartjs/Chart.js/issues/4102\n      // https://github.com/chartjs/Chart.js/issues/4152\n\n\n      if (context && context.canvas === item) {\n        initCanvas(item, config);\n        return context;\n      }\n\n      return null;\n    },\n    releaseContext: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (helpers$1.isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      helpers$1.each(initial.style || {}, function (value, key) {\n        canvas.style[key] = value;\n      }); // The canvas render size might have been changed (and thus the state stack discarded),\n      // we can't use save() and restore() to restore the initial state. So make sure that at\n      // least the canvas context is reset to the default state by setting the canvas width.\n      // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n      // eslint-disable-next-line no-self-assign\n\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n    },\n    addEventListener: function addEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        addResizeListener(canvas, listener, chart);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n      var proxies = expando.proxies || (expando.proxies = {});\n\n      var proxy = proxies[chart.id + '_' + type] = function (event) {\n        listener(fromNativeEvent(event, chart));\n      };\n\n      addListener(canvas, type, proxy);\n    },\n    removeEventListener: function removeEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        removeResizeListener(canvas);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || {};\n      var proxies = expando.proxies || {};\n      var proxy = proxies[chart.id + '_' + type];\n\n      if (!proxy) {\n        return;\n      }\n\n      removeListener(canvas, type, proxy);\n    }\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use EventTarget.addEventListener instead.\n   * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   * @function Chart.helpers.addEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.addEvent = addListener;\n  /**\n   * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n   * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n   * @function Chart.helpers.removeEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.removeEvent = removeListener; // @TODO Make possible to select another platform at build time.\n\n  var implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n  /**\n   * @namespace Chart.platform\n   * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n   * @since 2.4.0\n   */\n\n  var platform = helpers$1.extend({\n    /**\n     * @since 2.7.0\n     */\n    initialize: function initialize() {},\n\n    /**\n     * Called at chart construction time, returns a context2d instance implementing\n     * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n     * @param {*} item - The native item from which to acquire context (platform specific)\n     * @param {object} options - The chart options\n     * @returns {CanvasRenderingContext2D} context2d instance\n     */\n    acquireContext: function acquireContext() {},\n\n    /**\n     * Called at chart destruction time, releases any resources associated to the context\n     * previously returned by the acquireContext() method.\n     * @param {CanvasRenderingContext2D} context - The context2d instance\n     * @returns {boolean} true if the method succeeded, else false\n     */\n    releaseContext: function releaseContext() {},\n\n    /**\n     * Registers the specified listener on the given chart.\n     * @param {Chart} chart - Chart from which to listen for event\n     * @param {string} type - The ({@link IEvent}) type to listen for\n     * @param {function} listener - Receives a notification (an object that implements\n     * the {@link IEvent} interface) when an event of the specified type occurs.\n     */\n    addEventListener: function addEventListener() {},\n\n    /**\n     * Removes the specified listener previously registered with addEventListener.\n     * @param {Chart} chart - Chart from which to remove the listener\n     * @param {string} type - The ({@link IEvent}) type to remove\n     * @param {function} listener - The listener function to remove from the event target.\n     */\n    removeEventListener: function removeEventListener() {}\n  }, implementation);\n\n  core_defaults._set('global', {\n    plugins: {}\n  });\n  /**\n   * The plugin service singleton\n   * @namespace Chart.plugins\n   * @since 2.1.0\n   */\n\n\n  var core_plugins = {\n    /**\n     * Globally registered plugins.\n     * @private\n     */\n    _plugins: [],\n\n    /**\n     * This identifier is used to invalidate the descriptors cache attached to each chart\n     * when a global plugin is registered or unregistered. In this case, the cache ID is\n     * incremented and descriptors are regenerated during following API calls.\n     * @private\n     */\n    _cacheId: 0,\n\n    /**\n     * Registers the given plugin(s) if not already registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    register: function register(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        if (p.indexOf(plugin) === -1) {\n          p.push(plugin);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Unregisters the given plugin(s) only if registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    unregister: function unregister(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        var idx = p.indexOf(plugin);\n\n        if (idx !== -1) {\n          p.splice(idx, 1);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Remove all registered plugins.\n     * @since 2.1.5\n     */\n    clear: function clear() {\n      this._plugins = [];\n      this._cacheId++;\n    },\n\n    /**\n     * Returns the number of registered plugins?\n     * @returns {number}\n     * @since 2.1.5\n     */\n    count: function count() {\n      return this._plugins.length;\n    },\n\n    /**\n     * Returns all registered plugin instances.\n     * @returns {IPlugin[]} array of plugin objects.\n     * @since 2.1.5\n     */\n    getAll: function getAll() {\n      return this._plugins;\n    },\n\n    /**\n     * Calls enabled plugins for `chart` on the specified hook and with the given args.\n     * This method immediately returns as soon as a plugin explicitly returns false. The\n     * returned value can be used, for instance, to interrupt the current action.\n     * @param {Chart} chart - The chart instance for which plugins should be called.\n     * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n     * @param {Array} [args] - Extra arguments to apply to the hook call.\n     * @returns {boolean} false if any of the plugins return false, else returns true.\n     */\n    notify: function notify(chart, hook, args) {\n      var descriptors = this.descriptors(chart);\n      var ilen = descriptors.length;\n      var i, descriptor, plugin, params, method;\n\n      for (i = 0; i < ilen; ++i) {\n        descriptor = descriptors[i];\n        plugin = descriptor.plugin;\n        method = plugin[hook];\n\n        if (typeof method === 'function') {\n          params = [chart].concat(args || []);\n          params.push(descriptor.options);\n\n          if (method.apply(plugin, params) === false) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns descriptors of enabled plugins for the given chart.\n     * @returns {object[]} [{ plugin, options }]\n     * @private\n     */\n    descriptors: function descriptors(chart) {\n      var cache = chart.$plugins || (chart.$plugins = {});\n\n      if (cache.id === this._cacheId) {\n        return cache.descriptors;\n      }\n\n      var plugins = [];\n      var descriptors = [];\n      var config = chart && chart.config || {};\n      var options = config.options && config.options.plugins || {};\n\n      this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n        var idx = plugins.indexOf(plugin);\n\n        if (idx !== -1) {\n          return;\n        }\n\n        var id = plugin.id;\n        var opts = options[id];\n\n        if (opts === false) {\n          return;\n        }\n\n        if (opts === true) {\n          opts = helpers$1.clone(core_defaults.global.plugins[id]);\n        }\n\n        plugins.push(plugin);\n        descriptors.push({\n          plugin: plugin,\n          options: opts || {}\n        });\n      });\n\n      cache.descriptors = descriptors;\n      cache.id = this._cacheId;\n      return descriptors;\n    },\n\n    /**\n     * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n     * but in some cases, this reference can be changed by the user when updating options.\n     * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n     * @private\n     */\n    _invalidate: function _invalidate(chart) {\n      delete chart.$plugins;\n    }\n  };\n  var core_scaleService = {\n    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n    // use the new chart options to grab the correct scale\n    constructors: {},\n    // Use a registration function so that we can move to an ES6 map when we no longer need to support\n    // old browsers\n    // Scale config defaults\n    defaults: {},\n    registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n      this.constructors[type] = scaleConstructor;\n      this.defaults[type] = helpers$1.clone(scaleDefaults);\n    },\n    getScaleConstructor: function getScaleConstructor(type) {\n      return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n    },\n    getScaleDefaults: function getScaleDefaults(type) {\n      // Return the scale defaults merged with the global settings so that we always use the latest ones\n      return this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n    },\n    updateScaleDefaults: function updateScaleDefaults(type, additions) {\n      var me = this;\n\n      if (me.defaults.hasOwnProperty(type)) {\n        me.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n      }\n    },\n    addScalesToLayout: function addScalesToLayout(chart) {\n      // Adds each scale to the chart.boxes array to be sized accordingly\n      helpers$1.each(chart.scales, function (scale) {\n        // Set ILayoutItem parameters for backwards compatibility\n        scale.fullWidth = scale.options.fullWidth;\n        scale.position = scale.options.position;\n        scale.weight = scale.options.weight;\n        core_layouts.addBox(chart, scale);\n      });\n    }\n  };\n  var valueOrDefault$7 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    tooltips: {\n      enabled: true,\n      custom: null,\n      mode: 'nearest',\n      position: 'average',\n      intersect: true,\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      titleFontStyle: 'bold',\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleFontColor: '#fff',\n      titleAlign: 'left',\n      bodySpacing: 2,\n      bodyFontColor: '#fff',\n      bodyAlign: 'left',\n      footerFontStyle: 'bold',\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFontColor: '#fff',\n      footerAlign: 'left',\n      yPadding: 6,\n      xPadding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      multiKeyBackground: '#fff',\n      displayColors: true,\n      borderColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      callbacks: {\n        // Args are: (tooltipItems, data)\n        beforeTitle: helpers$1.noop,\n        title: function title(tooltipItems, data) {\n          var title = '';\n          var labels = data.labels;\n          var labelCount = labels ? labels.length : 0;\n\n          if (tooltipItems.length > 0) {\n            var item = tooltipItems[0];\n\n            if (item.label) {\n              title = item.label;\n            } else if (item.xLabel) {\n              title = item.xLabel;\n            } else if (labelCount > 0 && item.index < labelCount) {\n              title = labels[item.index];\n            }\n          }\n\n          return title;\n        },\n        afterTitle: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeBody: helpers$1.noop,\n        // Args are: (tooltipItem, data)\n        beforeLabel: helpers$1.noop,\n        label: function label(tooltipItem, data) {\n          var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n          if (label) {\n            label += ': ';\n          }\n\n          if (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n            label += tooltipItem.value;\n          } else {\n            label += tooltipItem.yLabel;\n          }\n\n          return label;\n        },\n        labelColor: function labelColor(tooltipItem, chart) {\n          var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n          var activeElement = meta.data[tooltipItem.index];\n          var view = activeElement._view;\n          return {\n            borderColor: view.borderColor,\n            backgroundColor: view.backgroundColor\n          };\n        },\n        labelTextColor: function labelTextColor() {\n          return this._options.bodyFontColor;\n        },\n        afterLabel: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        afterBody: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeFooter: helpers$1.noop,\n        footer: helpers$1.noop,\n        afterFooter: helpers$1.noop\n      }\n    }\n  });\n\n  var positioners = {\n    /**\n     * Average mode places the tooltip at the average position of the elements shown\n     * @function Chart.Tooltip.positioners.average\n     * @param elements {ChartElement[]} the elements being displayed in the tooltip\n     * @returns {object} tooltip position\n     */\n    average: function average(elements) {\n      if (!elements.length) {\n        return false;\n      }\n\n      var i, len;\n      var x = 0;\n      var y = 0;\n      var count = 0;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n\n      return {\n        x: x / count,\n        y: y / count\n      };\n    },\n\n    /**\n     * Gets the tooltip position nearest of the item nearest to the event position\n     * @function Chart.Tooltip.positioners.nearest\n     * @param elements {Chart.Element[]} the tooltip elements\n     * @param eventPosition {object} the position of the event in canvas coordinates\n     * @returns {object} the tooltip position\n     */\n    nearest: function nearest(elements, eventPosition) {\n      var x = eventPosition.x;\n      var y = eventPosition.y;\n      var minDistance = Number.POSITIVE_INFINITY;\n      var i, len, nearestElement;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var center = el.getCenterPoint();\n          var d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n\n      if (nearestElement) {\n        var tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }; // Helper to push or concat based on if the 2nd parameter is an array or not\n\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (helpers$1.isArray(toPush)) {\n        // base = base.concat(toPush);\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n\n    return base;\n  }\n  /**\n   * Returns array of strings split by newline\n   * @param {string} value - The value to split by newline.\n   * @returns {string[]} value if newline present - Returned from String split() method\n   * @function\n   */\n\n\n  function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n      return str.split('\\n');\n    }\n\n    return str;\n  }\n  /**\n   * Private helper to create a tooltip item model\n   * @param element - the chart element (point, arc, bar) to create the tooltip item for\n   * @return new tooltip item\n   */\n\n\n  function createTooltipItem(element) {\n    var xScale = element._xScale;\n    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n    var index = element._index;\n    var datasetIndex = element._datasetIndex;\n\n    var controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\n    var indexScale = controller._getIndexScale();\n\n    var valueScale = controller._getValueScale();\n\n    return {\n      xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n      yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n      label: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n      value: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n      index: index,\n      datasetIndex: datasetIndex,\n      x: element._model.x,\n      y: element._model.y\n    };\n  }\n  /**\n   * Helper to get the reset model for the tooltip\n   * @param tooltipOpts {object} the tooltip options\n   */\n\n\n  function getBaseModel(tooltipOpts) {\n    var globalDefaults = core_defaults.global;\n    return {\n      // Positioning\n      xPadding: tooltipOpts.xPadding,\n      yPadding: tooltipOpts.yPadding,\n      xAlign: tooltipOpts.xAlign,\n      yAlign: tooltipOpts.yAlign,\n      // Body\n      bodyFontColor: tooltipOpts.bodyFontColor,\n      _bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n      _bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n      _bodyAlign: tooltipOpts.bodyAlign,\n      bodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n      bodySpacing: tooltipOpts.bodySpacing,\n      // Title\n      titleFontColor: tooltipOpts.titleFontColor,\n      _titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n      _titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n      titleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n      _titleAlign: tooltipOpts.titleAlign,\n      titleSpacing: tooltipOpts.titleSpacing,\n      titleMarginBottom: tooltipOpts.titleMarginBottom,\n      // Footer\n      footerFontColor: tooltipOpts.footerFontColor,\n      _footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n      _footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n      footerFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n      _footerAlign: tooltipOpts.footerAlign,\n      footerSpacing: tooltipOpts.footerSpacing,\n      footerMarginTop: tooltipOpts.footerMarginTop,\n      // Appearance\n      caretSize: tooltipOpts.caretSize,\n      cornerRadius: tooltipOpts.cornerRadius,\n      backgroundColor: tooltipOpts.backgroundColor,\n      opacity: 0,\n      legendColorBackground: tooltipOpts.multiKeyBackground,\n      displayColors: tooltipOpts.displayColors,\n      borderColor: tooltipOpts.borderColor,\n      borderWidth: tooltipOpts.borderWidth\n    };\n  }\n  /**\n   * Get the size of the tooltip\n   */\n\n\n  function getTooltipSize(tooltip, model) {\n    var ctx = tooltip._chart.ctx;\n    var height = model.yPadding * 2; // Tooltip Padding\n\n    var width = 0; // Count of all lines in the body\n\n    var body = model.body;\n    var combinedBodyLength = body.reduce(function (count, bodyItem) {\n      return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n    }, 0);\n    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n    var titleLineCount = model.title.length;\n    var footerLineCount = model.footer.length;\n    var titleFontSize = model.titleFontSize;\n    var bodyFontSize = model.bodyFontSize;\n    var footerFontSize = model.footerFontSize;\n    height += titleLineCount * titleFontSize; // Title Lines\n\n    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n    height += combinedBodyLength * bodyFontSize; // Body Lines\n\n    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n    height += footerLineCount * footerFontSize; // Footer Lines\n\n    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n    // Title width\n\n    var widthPadding = 0;\n\n    var maxLineWidth = function maxLineWidth(line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n\n    ctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n    helpers$1.each(model.title, maxLineWidth); // Body width\n\n    ctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n    helpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n    widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n    helpers$1.each(body, function (bodyItem) {\n      helpers$1.each(bodyItem.before, maxLineWidth);\n      helpers$1.each(bodyItem.lines, maxLineWidth);\n      helpers$1.each(bodyItem.after, maxLineWidth);\n    }); // Reset back to 0\n\n    widthPadding = 0; // Footer width\n\n    ctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n    helpers$1.each(model.footer, maxLineWidth); // Add padding\n\n    width += 2 * model.xPadding;\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Helper to get the alignment of a tooltip given the size\n   */\n\n\n  function determineAlignment(tooltip, size) {\n    var model = tooltip._model;\n    var chart = tooltip._chart;\n    var chartArea = tooltip._chart.chartArea;\n    var xAlign = 'center';\n    var yAlign = 'center';\n\n    if (model.y < size.height) {\n      yAlign = 'top';\n    } else if (model.y > chart.height - size.height) {\n      yAlign = 'bottom';\n    }\n\n    var lf, rf; // functions to determine left, right alignment\n\n    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n    var midX = (chartArea.left + chartArea.right) / 2;\n    var midY = (chartArea.top + chartArea.bottom) / 2;\n\n    if (yAlign === 'center') {\n      lf = function lf(x) {\n        return x <= midX;\n      };\n\n      rf = function rf(x) {\n        return x > midX;\n      };\n    } else {\n      lf = function lf(x) {\n        return x <= size.width / 2;\n      };\n\n      rf = function rf(x) {\n        return x >= chart.width - size.width / 2;\n      };\n    }\n\n    olf = function olf(x) {\n      return x + size.width + model.caretSize + model.caretPadding > chart.width;\n    };\n\n    orf = function orf(x) {\n      return x - size.width - model.caretSize - model.caretPadding < 0;\n    };\n\n    yf = function yf(y) {\n      return y <= midY ? 'top' : 'bottom';\n    };\n\n    if (lf(model.x)) {\n      xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n      if (olf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    } else if (rf(model.x)) {\n      xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n      if (orf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    }\n\n    var opts = tooltip._options;\n    return {\n      xAlign: opts.xAlign ? opts.xAlign : xAlign,\n      yAlign: opts.yAlign ? opts.yAlign : yAlign\n    };\n  }\n  /**\n   * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n   */\n\n\n  function getBackgroundPoint(vm, size, alignment, chart) {\n    // Background Position\n    var x = vm.x;\n    var y = vm.y;\n    var caretSize = vm.caretSize;\n    var caretPadding = vm.caretPadding;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = alignment.xAlign;\n    var yAlign = alignment.yAlign;\n    var paddingAndSize = caretSize + caretPadding;\n    var radiusAndPadding = cornerRadius + caretPadding;\n\n    if (xAlign === 'right') {\n      x -= size.width;\n    } else if (xAlign === 'center') {\n      x -= size.width / 2;\n\n      if (x + size.width > chart.width) {\n        x = chart.width - size.width;\n      }\n\n      if (x < 0) {\n        x = 0;\n      }\n    }\n\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= size.height + paddingAndSize;\n    } else {\n      y -= size.height / 2;\n    }\n\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= radiusAndPadding;\n    } else if (xAlign === 'right') {\n      x += radiusAndPadding;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  function getAlignedX(vm, align) {\n    return align === 'center' ? vm.x + vm.width / 2 : align === 'right' ? vm.x + vm.width - vm.xPadding : vm.x + vm.xPadding;\n  }\n  /**\n   * Helper to build before and after body lines\n   */\n\n\n  function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n  }\n\n  var exports$3 = core_element.extend({\n    initialize: function initialize() {\n      this._model = getBaseModel(this._options);\n      this._lastActive = [];\n    },\n    // Get the title\n    // Args are: (tooltipItem, data)\n    getTitle: function getTitle() {\n      var me = this;\n      var opts = me._options;\n      var callbacks = opts.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n      var title = callbacks.title.apply(me, arguments);\n      var afterTitle = callbacks.afterTitle.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    },\n    // Args are: (tooltipItem, data)\n    getBeforeBody: function getBeforeBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n    },\n    // Args are: (tooltipItem, data)\n    getBody: function getBody(tooltipItems, data) {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var bodyItems = [];\n      helpers$1.each(tooltipItems, function (tooltipItem) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n        pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n        pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    },\n    // Args are: (tooltipItem, data)\n    getAfterBody: function getAfterBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n    },\n    // Get the footer and beforeFooter and afterFooter lines\n    // Args are: (tooltipItem, data)\n    getFooter: function getFooter() {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n      var footer = callbacks.footer.apply(me, arguments);\n      var afterFooter = callbacks.afterFooter.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    },\n    update: function update(changed) {\n      var me = this;\n      var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n      // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n      // which breaks any animations.\n\n      var existingModel = me._model;\n      var model = me._model = getBaseModel(opts);\n      var active = me._active;\n      var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n      var alignment = {\n        xAlign: existingModel.xAlign,\n        yAlign: existingModel.yAlign\n      };\n      var backgroundPoint = {\n        x: existingModel.x,\n        y: existingModel.y\n      };\n      var tooltipSize = {\n        width: existingModel.width,\n        height: existingModel.height\n      };\n      var tooltipPosition = {\n        x: existingModel.caretX,\n        y: existingModel.caretY\n      };\n      var i, len;\n\n      if (active.length) {\n        model.opacity = 1;\n        var labelColors = [];\n        var labelTextColors = [];\n        tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n        var tooltipItems = [];\n\n        for (i = 0, len = active.length; i < len; ++i) {\n          tooltipItems.push(createTooltipItem(active[i]));\n        } // If the user provided a filter function, use it to modify the tooltip items\n\n\n        if (opts.filter) {\n          tooltipItems = tooltipItems.filter(function (a) {\n            return opts.filter(a, data);\n          });\n        } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n        if (opts.itemSort) {\n          tooltipItems = tooltipItems.sort(function (a, b) {\n            return opts.itemSort(a, b, data);\n          });\n        } // Determine colors for boxes\n\n\n        helpers$1.each(tooltipItems, function (tooltipItem) {\n          labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n          labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n        }); // Build the Text Lines\n\n        model.title = me.getTitle(tooltipItems, data);\n        model.beforeBody = me.getBeforeBody(tooltipItems, data);\n        model.body = me.getBody(tooltipItems, data);\n        model.afterBody = me.getAfterBody(tooltipItems, data);\n        model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n        model.x = tooltipPosition.x;\n        model.y = tooltipPosition.y;\n        model.caretPadding = opts.caretPadding;\n        model.labelColors = labelColors;\n        model.labelTextColors = labelTextColors; // data points\n\n        model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n        tooltipSize = getTooltipSize(this, model);\n        alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n        backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n      } else {\n        model.opacity = 0;\n      }\n\n      model.xAlign = alignment.xAlign;\n      model.yAlign = alignment.yAlign;\n      model.x = backgroundPoint.x;\n      model.y = backgroundPoint.y;\n      model.width = tooltipSize.width;\n      model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n      model.caretX = tooltipPosition.x;\n      model.caretY = tooltipPosition.y;\n      me._model = model;\n\n      if (changed && opts.custom) {\n        opts.custom.call(me, model);\n      }\n\n      return me;\n    },\n    drawCaret: function drawCaret(tooltipPoint, size) {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    },\n    getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n      var x1, x2, x3, y1, y2, y3;\n      var caretSize = vm.caretSize;\n      var cornerRadius = vm.cornerRadius;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var ptX = tooltipPoint.x;\n      var ptY = tooltipPoint.y;\n      var width = size.width;\n      var height = size.height;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          x3 = x1;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          x3 = x1;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          x2 = vm.caretX;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          y3 = y1;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          y3 = y1; // invert drawing order\n\n          var tmp = x3;\n          x3 = x1;\n          x1 = tmp;\n        }\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    },\n    drawTitle: function drawTitle(pt, vm, ctx) {\n      var title = vm.title;\n\n      if (title.length) {\n        pt.x = getAlignedX(vm, vm._titleAlign);\n        ctx.textAlign = vm._titleAlign;\n        ctx.textBaseline = 'top';\n        var titleFontSize = vm.titleFontSize;\n        var titleSpacing = vm.titleSpacing;\n        ctx.fillStyle = vm.titleFontColor;\n        ctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n        var i, len;\n\n        for (i = 0, len = title.length; i < len; ++i) {\n          ctx.fillText(title[i], pt.x, pt.y);\n          pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n          if (i + 1 === title.length) {\n            pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n          }\n        }\n      }\n    },\n    drawBody: function drawBody(pt, vm, ctx) {\n      var bodyFontSize = vm.bodyFontSize;\n      var bodySpacing = vm.bodySpacing;\n      var bodyAlign = vm._bodyAlign;\n      var body = vm.body;\n      var drawColorBoxes = vm.displayColors;\n      var labelColors = vm.labelColors;\n      var xLinePadding = 0;\n      var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n      var textColor;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'top';\n      ctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n      pt.x = getAlignedX(vm, bodyAlign); // Before Body\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, pt.x + xLinePadding, pt.y);\n        pt.y += bodyFontSize + bodySpacing;\n      }; // Before body lines\n\n\n      ctx.fillStyle = vm.bodyFontColor;\n      helpers$1.each(vm.beforeBody, fillLineOfText);\n      xLinePadding = drawColorBoxes && bodyAlign !== 'right' ? bodyAlign === 'center' ? bodyFontSize / 2 + 1 : bodyFontSize + 2 : 0; // Draw body lines now\n\n      helpers$1.each(body, function (bodyItem, i) {\n        textColor = vm.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        helpers$1.each(bodyItem.before, fillLineOfText);\n        helpers$1.each(bodyItem.lines, function (line) {\n          // Draw Legend-like boxes if needed\n          if (drawColorBoxes) {\n            // Fill a white rect so that colours merge nicely if the opacity is < 1\n            ctx.fillStyle = vm.legendColorBackground;\n            ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Border\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = labelColors[i].borderColor;\n            ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n            ctx.fillStyle = labelColors[i].backgroundColor;\n            ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n            ctx.fillStyle = textColor;\n          }\n\n          fillLineOfText(line);\n        });\n        helpers$1.each(bodyItem.after, fillLineOfText);\n      }); // Reset back to 0 for after body\n\n      xLinePadding = 0; // After body lines\n\n      helpers$1.each(vm.afterBody, fillLineOfText);\n      pt.y -= bodySpacing; // Remove last body spacing\n    },\n    drawFooter: function drawFooter(pt, vm, ctx) {\n      var footer = vm.footer;\n\n      if (footer.length) {\n        pt.x = getAlignedX(vm, vm._footerAlign);\n        pt.y += vm.footerMarginTop;\n        ctx.textAlign = vm._footerAlign;\n        ctx.textBaseline = 'top';\n        ctx.fillStyle = vm.footerFontColor;\n        ctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n        helpers$1.each(footer, function (line) {\n          ctx.fillText(line, pt.x, pt.y);\n          pt.y += vm.footerFontSize + vm.footerSpacing;\n        });\n      }\n    },\n    drawBackground: function drawBackground(pt, vm, ctx, tooltipSize) {\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.strokeStyle = vm.borderColor;\n      ctx.lineWidth = vm.borderWidth;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var x = pt.x;\n      var y = pt.y;\n      var width = tooltipSize.width;\n      var height = tooltipSize.height;\n      var radius = vm.cornerRadius;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (vm.borderWidth > 0) {\n        ctx.stroke();\n      }\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n\n      if (vm.opacity === 0) {\n        return;\n      }\n\n      var tooltipSize = {\n        width: vm.width,\n        height: vm.height\n      };\n      var pt = {\n        x: vm.x,\n        y: vm.y\n      }; // IE11/Edge does not like very small opacities, so snap to 0\n\n      var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n      var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n      if (this._options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity; // Draw Background\n\n        this.drawBackground(pt, vm, ctx, tooltipSize); // Draw Title, Body, and Footer\n\n        pt.y += vm.yPadding; // Titles\n\n        this.drawTitle(pt, vm, ctx); // Body\n\n        this.drawBody(pt, vm, ctx); // Footer\n\n        this.drawFooter(pt, vm, ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     * @returns {boolean} true if the tooltip changed\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me._options;\n      var changed = false;\n      me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n      if (e.type === 'mouseout') {\n        me._active = [];\n      } else {\n        me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n      } // Remember Last Actives\n\n\n      changed = !helpers$1.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n      if (changed) {\n        me._lastActive = me._active;\n\n        if (options.enabled || options.custom) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true);\n          me.pivot();\n        }\n      }\n\n      return changed;\n    }\n  });\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n\n  var positioners_1 = positioners;\n  var core_tooltip = exports$3;\n  core_tooltip.positioners = positioners_1;\n  var valueOrDefault$8 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    elements: {},\n    events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n    hover: {\n      onHover: null,\n      mode: 'nearest',\n      intersect: true,\n      animationDuration: 400\n    },\n    onClick: null,\n    maintainAspectRatio: true,\n    responsive: true,\n    responsiveAnimationDuration: 0\n  });\n  /**\n   * Recursively merge the given config objects representing the `scales` option\n   * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n   * returns a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeScaleConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers$1.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n  /**\n   * Recursively merge the given config objects as the root options by handling\n   * default scale options for the `scales` and `scale` properties, then returns\n   * a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = mergeScaleConfig(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use mergeConfig for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = mergeConfig(core_defaults.global, core_defaults[config.type], config.options || {});\n    return config;\n  }\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers$1.each(chart.scales, function (scale) {\n      core_layouts.removeBox(chart, scale);\n    });\n    newOptions = mergeConfig(core_defaults.global, core_defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  helpers$1.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers$1.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      core_plugins.notify(me, 'beforeInit');\n      helpers$1.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      core_plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers$1.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      core_animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers$1.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        core_plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (options.onResize) {\n          options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers$1.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers$1.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers$1.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers$1.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      core_scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      core_plugins._invalidate(me);\n\n      if (core_plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers$1.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      core_plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      core_layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      core_plugins.notify(me, 'afterScaleUpdate');\n      core_plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      core_plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      core_plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var animationOptions = me.options.animation;\n      var duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n      var lazy = config.lazy;\n\n      if (core_plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var onComplete = function onComplete(animation) {\n        core_plugins.notify(me, 'afterRender');\n        helpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && duration) {\n        var animation = new core_animation({\n          numSteps: duration / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers$1.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        core_animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new core_animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers$1.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers$1.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      core_plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      core_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      core_plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      core_plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n\n    /**\n     * Get the single element that was clicked on\n     * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n     */\n    getElementAtEvent: function getElementAtEvent(e) {\n      return core_interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return core_interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return core_interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = core_interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return core_interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers$1.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      core_plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new core_tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers$1.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers$1.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      core_plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers$1.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * NOTE(SB) We actually don't use this container anymore but we need to keep it\n   * for backward compatibility. Though, it can still be useful for plugins that\n   * would need to work on multiple charts?!\n   */\n\n  Chart.instances = {};\n  var core_controller = Chart; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.types = {};\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.configMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.configMerge = mergeConfig;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.scaleMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.scaleMerge = mergeScaleConfig;\n\n  var core_helpers = function core_helpers() {\n    // -- Basic js utility methods\n    helpers$1.where = function (collection, filterCallback) {\n      if (helpers$1.isArray(collection) && Array.prototype.filter) {\n        return collection.filter(filterCallback);\n      }\n\n      var filtered = [];\n      helpers$1.each(collection, function (item) {\n        if (filterCallback(item)) {\n          filtered.push(item);\n        }\n      });\n      return filtered;\n    };\n\n    helpers$1.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n      return array.findIndex(callback, scope);\n    } : function (array, callback, scope) {\n      scope = scope === undefined ? array : scope;\n\n      for (var i = 0, ilen = array.length; i < ilen; ++i) {\n        if (callback.call(scope, array[i], i, array)) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n\n    helpers$1.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to start of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = -1;\n      }\n\n      for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    };\n\n    helpers$1.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to end of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = arrayToSearch.length;\n      }\n\n      for (var i = startIndex - 1; i >= 0; i--) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    }; // -- Math methods\n\n\n    helpers$1.isNumber = function (n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    };\n\n    helpers$1.almostEquals = function (x, y, epsilon) {\n      return Math.abs(x - y) < epsilon;\n    };\n\n    helpers$1.almostWhole = function (x, epsilon) {\n      var rounded = Math.round(x);\n      return rounded - epsilon < x && rounded + epsilon > x;\n    };\n\n    helpers$1.max = function (array) {\n      return array.reduce(function (max, value) {\n        if (!isNaN(value)) {\n          return Math.max(max, value);\n        }\n\n        return max;\n      }, Number.NEGATIVE_INFINITY);\n    };\n\n    helpers$1.min = function (array) {\n      return array.reduce(function (min, value) {\n        if (!isNaN(value)) {\n          return Math.min(min, value);\n        }\n\n        return min;\n      }, Number.POSITIVE_INFINITY);\n    };\n\n    helpers$1.sign = Math.sign ? function (x) {\n      return Math.sign(x);\n    } : function (x) {\n      x = +x; // convert to a number\n\n      if (x === 0 || isNaN(x)) {\n        return x;\n      }\n\n      return x > 0 ? 1 : -1;\n    };\n    helpers$1.log10 = Math.log10 ? function (x) {\n      return Math.log10(x);\n    } : function (x) {\n      var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n      // Check for whole powers of 10,\n      // which due to floating point rounding error should be corrected.\n\n      var powerOf10 = Math.round(exponent);\n      var isPowerOf10 = x === Math.pow(10, powerOf10);\n      return isPowerOf10 ? powerOf10 : exponent;\n    };\n\n    helpers$1.toRadians = function (degrees) {\n      return degrees * (Math.PI / 180);\n    };\n\n    helpers$1.toDegrees = function (radians) {\n      return radians * (180 / Math.PI);\n    };\n    /**\n     * Returns the number of decimal places\n     * i.e. the number of digits after the decimal point, of the value of this Number.\n     * @param {number} x - A number.\n     * @returns {number} The number of decimal places.\n     * @private\n     */\n\n\n    helpers$1._decimalPlaces = function (x) {\n      if (!helpers$1.isFinite(x)) {\n        return;\n      }\n\n      var e = 1;\n      var p = 0;\n\n      while (Math.round(x * e) / e !== x) {\n        e *= 10;\n        p++;\n      }\n\n      return p;\n    }; // Gets the angle from vertical upright to the point about a centre.\n\n\n    helpers$1.getAngleFromPoint = function (centrePoint, anglePoint) {\n      var distanceFromXCenter = anglePoint.x - centrePoint.x;\n      var distanceFromYCenter = anglePoint.y - centrePoint.y;\n      var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n      var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n      if (angle < -0.5 * Math.PI) {\n        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n      }\n\n      return {\n        angle: angle,\n        distance: radialDistanceFromCenter\n      };\n    };\n\n    helpers$1.distanceBetweenPoints = function (pt1, pt2) {\n      return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**\n     * Provided for backward compatibility, not available anymore\n     * @function Chart.helpers.aliasPixel\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     */\n\n\n    helpers$1.aliasPixel = function (pixelWidth) {\n      return pixelWidth % 2 === 0 ? 0 : 0.5;\n    };\n    /**\n     * Returns the aligned pixel value to avoid anti-aliasing blur\n     * @param {Chart} chart - The chart instance.\n     * @param {number} pixel - A pixel value.\n     * @param {number} width - The width of the element.\n     * @returns {number} The aligned pixel value.\n     * @private\n     */\n\n\n    helpers$1._alignPixel = function (chart, pixel, width) {\n      var devicePixelRatio = chart.currentDevicePixelRatio;\n      var halfWidth = width / 2;\n      return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n    };\n\n    helpers$1.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n      // Props to Rob Spencer at scaled innovation for his post on splining between points\n      // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n      // This function must also respect \"skipped\" points\n      var previous = firstPoint.skip ? middlePoint : firstPoint;\n      var current = middlePoint;\n      var next = afterPoint.skip ? middlePoint : afterPoint;\n      var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n      var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n      var s01 = d01 / (d01 + d12);\n      var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n      s01 = isNaN(s01) ? 0 : s01;\n      s12 = isNaN(s12) ? 0 : s12;\n      var fa = t * s01; // scaling factor for triangle Ta\n\n      var fb = t * s12;\n      return {\n        previous: {\n          x: current.x - fa * (next.x - previous.x),\n          y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n          x: current.x + fb * (next.x - previous.x),\n          y: current.y + fb * (next.y - previous.y)\n        }\n      };\n    };\n\n    helpers$1.EPSILON = Number.EPSILON || 1e-14;\n\n    helpers$1.splineCurveMonotone = function (points) {\n      // This function calculates Bézier control points in a similar way than |splineCurve|,\n      // but preserves monotonicity of the provided data and ensures no local extremums are added\n      // between the dataset discrete points due to the interpolation.\n      // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n      var pointsWithTangents = (points || []).map(function (point) {\n        return {\n          model: point._model,\n          deltaK: 0,\n          mK: 0\n        };\n      }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n      var pointsLen = pointsWithTangents.length;\n      var i, pointBefore, pointCurrent, pointAfter;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointAfter && !pointAfter.model.skip) {\n          var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n          pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n        }\n\n        if (!pointBefore || pointBefore.model.skip) {\n          pointCurrent.mK = pointCurrent.deltaK;\n        } else if (!pointAfter || pointAfter.model.skip) {\n          pointCurrent.mK = pointBefore.deltaK;\n        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n          pointCurrent.mK = 0;\n        } else {\n          pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n        }\n      } // Adjust tangents to ensure monotonic properties\n\n\n      var alphaK, betaK, tauK, squaredMagnitude;\n\n      for (i = 0; i < pointsLen - 1; ++i) {\n        pointCurrent = pointsWithTangents[i];\n        pointAfter = pointsWithTangents[i + 1];\n\n        if (pointCurrent.model.skip || pointAfter.model.skip) {\n          continue;\n        }\n\n        if (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n          pointCurrent.mK = pointAfter.mK = 0;\n          continue;\n        }\n\n        alphaK = pointCurrent.mK / pointCurrent.deltaK;\n        betaK = pointAfter.mK / pointCurrent.deltaK;\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n        if (squaredMagnitude <= 9) {\n          continue;\n        }\n\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n      } // Compute control points\n\n\n      var deltaX;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointBefore && !pointBefore.model.skip) {\n          deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n          pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n          pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n        }\n\n        if (pointAfter && !pointAfter.model.skip) {\n          deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n          pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n          pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n        }\n      }\n    };\n\n    helpers$1.nextItem = function (collection, index, loop) {\n      if (loop) {\n        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n      }\n\n      return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n    };\n\n    helpers$1.previousItem = function (collection, index, loop) {\n      if (loop) {\n        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n      }\n\n      return index <= 0 ? collection[0] : collection[index - 1];\n    }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n    helpers$1.niceNum = function (range, round) {\n      var exponent = Math.floor(helpers$1.log10(range));\n      var fraction = range / Math.pow(10, exponent);\n      var niceFraction;\n\n      if (round) {\n        if (fraction < 1.5) {\n          niceFraction = 1;\n        } else if (fraction < 3) {\n          niceFraction = 2;\n        } else if (fraction < 7) {\n          niceFraction = 5;\n        } else {\n          niceFraction = 10;\n        }\n      } else if (fraction <= 1.0) {\n        niceFraction = 1;\n      } else if (fraction <= 2) {\n        niceFraction = 2;\n      } else if (fraction <= 5) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n\n      return niceFraction * Math.pow(10, exponent);\n    }; // Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n    helpers$1.requestAnimFrame = function () {\n      if (typeof window === 'undefined') {\n        return function (callback) {\n          callback();\n        };\n      }\n\n      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n        return window.setTimeout(callback, 1000 / 60);\n      };\n    }(); // -- DOM methods\n\n\n    helpers$1.getRelativePosition = function (evt, chart) {\n      var mouseX, mouseY;\n      var e = evt.originalEvent || evt;\n      var canvas = evt.target || evt.srcElement;\n      var boundingRect = canvas.getBoundingClientRect();\n      var touches = e.touches;\n\n      if (touches && touches.length > 0) {\n        mouseX = touches[0].clientX;\n        mouseY = touches[0].clientY;\n      } else {\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n      } // Scale mouse coordinates into canvas coordinates\n      // by following the pattern laid out by 'jerryj' in the comments of\n      // https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n      var paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n      var paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n      var paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n      var paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n      var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n      var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n      // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n      mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n      mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n      return {\n        x: mouseX,\n        y: mouseY\n      };\n    }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n    function parseMaxStyle(styleValue, node, parentProperty) {\n      var valueInPixels;\n\n      if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n\n        if (styleValue.indexOf('%') !== -1) {\n          // percentage * size in dimension\n          valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n      } else {\n        valueInPixels = styleValue;\n      }\n\n      return valueInPixels;\n    }\n    /**\n     * Returns if the given value contains an effective constraint.\n     * @private\n     */\n\n\n    function isConstrainedValue(value) {\n      return value !== undefined && value !== null && value !== 'none';\n    }\n    /**\n     * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n     * @param {HTMLElement} domNode - the node to check the constraint on\n     * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n     * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n     * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n     */\n\n\n    function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n      var view = document.defaultView;\n\n      var parentNode = helpers$1._getParentNode(domNode);\n\n      var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n      var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n      var hasCNode = isConstrainedValue(constrainedNode);\n      var hasCContainer = isConstrainedValue(constrainedContainer);\n      var infinity = Number.POSITIVE_INFINITY;\n\n      if (hasCNode || hasCContainer) {\n        return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n      }\n\n      return 'none';\n    } // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintWidth = function (domNode) {\n      return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n    }; // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintHeight = function (domNode) {\n      return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n    };\n    /**\n     * @private\n    \t */\n\n\n    helpers$1._calculatePadding = function (container, padding, parentDimension) {\n      padding = helpers$1.getStyle(container, padding);\n      return padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n    };\n    /**\n     * @private\n     */\n\n\n    helpers$1._getParentNode = function (domNode) {\n      var parent = domNode.parentNode;\n\n      if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n      }\n\n      return parent;\n    };\n\n    helpers$1.getMaximumWidth = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientWidth;\n      }\n\n      var clientWidth = container.clientWidth;\n\n      var paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\n      var paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n      var w = clientWidth - paddingLeft - paddingRight;\n      var cw = helpers$1.getConstraintWidth(domNode);\n      return isNaN(cw) ? w : Math.min(w, cw);\n    };\n\n    helpers$1.getMaximumHeight = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientHeight;\n      }\n\n      var clientHeight = container.clientHeight;\n\n      var paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\n      var paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n      var h = clientHeight - paddingTop - paddingBottom;\n      var ch = helpers$1.getConstraintHeight(domNode);\n      return isNaN(ch) ? h : Math.min(h, ch);\n    };\n\n    helpers$1.getStyle = function (el, property) {\n      return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n    };\n\n    helpers$1.retinaScale = function (chart, forceRatio) {\n      var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n      if (pixelRatio === 1) {\n        return;\n      }\n\n      var canvas = chart.canvas;\n      var height = chart.height;\n      var width = chart.width;\n      canvas.height = height * pixelRatio;\n      canvas.width = width * pixelRatio;\n      chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n      // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n      // See https://github.com/chartjs/Chart.js/issues/3575\n\n      if (!canvas.style.height && !canvas.style.width) {\n        canvas.style.height = height + 'px';\n        canvas.style.width = width + 'px';\n      }\n    }; // -- Canvas methods\n\n\n    helpers$1.fontString = function (pixelSize, fontStyle, fontFamily) {\n      return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n    };\n\n    helpers$1.longestText = function (ctx, font, arrayOfThings, cache) {\n      cache = cache || {};\n      var data = cache.data = cache.data || {};\n      var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n      if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n      }\n\n      ctx.font = font;\n      var longest = 0;\n      helpers$1.each(arrayOfThings, function (thing) {\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n          longest = helpers$1.measureText(ctx, data, gc, longest, thing);\n        } else if (helpers$1.isArray(thing)) {\n          // if it is an array lets measure each element\n          // to do maybe simplify this function a bit so we can do this more recursively?\n          helpers$1.each(thing, function (nestedThing) {\n            // Undefined strings and arrays should not be measured\n            if (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n              longest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n            }\n          });\n        }\n      });\n      var gcLen = gc.length / 2;\n\n      if (gcLen > arrayOfThings.length) {\n        for (var i = 0; i < gcLen; i++) {\n          delete data[gc[i]];\n        }\n\n        gc.splice(0, gcLen);\n      }\n\n      return longest;\n    };\n\n    helpers$1.measureText = function (ctx, data, gc, longest, string) {\n      var textWidth = data[string];\n\n      if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n      }\n\n      if (textWidth > longest) {\n        longest = textWidth;\n      }\n\n      return longest;\n    };\n\n    helpers$1.numberOfLabelLines = function (arrayOfThings) {\n      var numberOfLines = 1;\n      helpers$1.each(arrayOfThings, function (thing) {\n        if (helpers$1.isArray(thing)) {\n          if (thing.length > numberOfLines) {\n            numberOfLines = thing.length;\n          }\n        }\n      });\n      return numberOfLines;\n    };\n\n    helpers$1.color = !chartjsColor ? function (value) {\n      console.error('Color.js not found!');\n      return value;\n    } : function (value) {\n      /* global CanvasGradient */\n      if (value instanceof CanvasGradient) {\n        value = core_defaults.global.defaultColor;\n      }\n\n      return chartjsColor(value);\n    };\n\n    helpers$1.getHoverColor = function (colorValue) {\n      /* global CanvasPattern */\n      return colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient ? colorValue : helpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n    };\n  };\n\n  function _abstract() {\n    throw new Error('This method is not implemented: either no adapter can ' + 'be found or an incomplete integration was provided.');\n  }\n  /**\n   * Date adapter (current used by the time scale)\n   * @namespace Chart._adapters._date\n   * @memberof Chart._adapters\n   * @private\n   */\n\n  /**\n   * Currently supported unit string values.\n   * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n   * @memberof Chart._adapters._date\n   * @name Unit\n   */\n\n  /**\n   * @class\n   */\n\n\n  function DateAdapter(options) {\n    this.options = options || {};\n  }\n\n  helpers$1.extend(DateAdapter.prototype,\n  /** @lends DateAdapter */\n  {\n    /**\n     * Returns a map of time formats for the supported formatting units defined\n     * in Unit as well as 'datetime' representing a detailed date/time string.\n     * @returns {{string: string}}\n     */\n    formats: _abstract,\n\n    /**\n     * Parses the given `value` and return the associated timestamp.\n     * @param {any} value - the value to parse (usually comes from the data)\n     * @param {string} [format] - the expected data format\n     * @returns {(number|null)}\n     * @function\n     */\n    parse: _abstract,\n\n    /**\n     * Returns the formatted date in the specified `format` for a given `timestamp`.\n     * @param {number} timestamp - the timestamp to format\n     * @param {string} format - the date/time token\n     * @return {string}\n     * @function\n     */\n    format: _abstract,\n\n    /**\n     * Adds the specified `amount` of `unit` to the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {number} amount - the amount to add\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    add: _abstract,\n\n    /**\n     * Returns the number of `unit` between the given timestamps.\n     * @param {number} max - the input timestamp (reference)\n     * @param {number} min - the timestamp to substract\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    diff: _abstract,\n\n    /**\n     * Returns start of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n     * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n     * @function\n     */\n    startOf: _abstract,\n\n    /**\n     * Returns end of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @function\n     */\n    endOf: _abstract,\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility for scale.getValueForPixel(),\n     * this method should be overridden only by the moment adapter.\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(value) {\n      return value;\n    }\n  });\n\n  DateAdapter.override = function (members) {\n    helpers$1.extend(DateAdapter.prototype, members);\n  };\n\n  var _date = DateAdapter;\n  var core_adapters = {\n    _date: _date\n  };\n  /**\n   * Namespace to hold static tick generation functions\n   * @namespace Chart.Ticks\n   */\n\n  var core_ticks = {\n    /**\n     * Namespace to hold formatters for different types of ticks\n     * @namespace Chart.Ticks.formatters\n     */\n    formatters: {\n      /**\n       * Formatter for value labels\n       * @method Chart.Ticks.formatters.values\n       * @param value the value to display\n       * @return {string|string[]} the label to display\n       */\n      values: function values(value) {\n        return helpers$1.isArray(value) ? value : '' + value;\n      },\n\n      /**\n       * Formatter for linear numeric ticks\n       * @method Chart.Ticks.formatters.linear\n       * @param tickValue {number} the value to be formatted\n       * @param index {number} the position of the tickValue parameter in the ticks array\n       * @param ticks {number[]} the list of ticks being converted\n       * @return {string} string representation of the tickValue parameter\n       */\n      linear: function linear(tickValue, index, ticks) {\n        // If we have lots of ticks, don't use the ones\n        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n        if (Math.abs(delta) > 1) {\n          if (tickValue !== Math.floor(tickValue)) {\n            // not an integer\n            delta = tickValue - Math.floor(tickValue);\n          }\n        }\n\n        var logDelta = helpers$1.log10(Math.abs(delta));\n        var tickString = '';\n\n        if (tickValue !== 0) {\n          var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n          if (maxTick < 1e-4) {\n            // all ticks are small numbers; use scientific notation\n            var logTick = helpers$1.log10(Math.abs(tickValue));\n            tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n          } else {\n            var numDecimal = -1 * Math.floor(logDelta);\n            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n            tickString = tickValue.toFixed(numDecimal);\n          }\n        } else {\n          tickString = '0'; // never show decimal places for 0\n        }\n\n        return tickString;\n      },\n      logarithmic: function logarithmic(tickValue, index, ticks) {\n        var remain = tickValue / Math.pow(10, Math.floor(helpers$1.log10(tickValue)));\n\n        if (tickValue === 0) {\n          return '0';\n        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n          return tickValue.toExponential();\n        }\n\n        return '';\n      }\n    }\n  };\n  var valueOrDefault$9 = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\n  core_defaults._set('scale', {\n    display: true,\n    position: 'left',\n    offset: false,\n    // grid line settings\n    gridLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickMarkLength: 10,\n      zeroLineWidth: 1,\n      zeroLineColor: 'rgba(0,0,0,0.25)',\n      zeroLineBorderDash: [],\n      zeroLineBorderDashOffset: 0.0,\n      offsetGridLines: false,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    // scale label\n    scaleLabel: {\n      // display property\n      display: false,\n      // actual label\n      labelString: '',\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    // label settings\n    ticks: {\n      beginAtZero: false,\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      padding: 0,\n      reverse: false,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 0,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: core_ticks.formatters.values,\n      minor: {},\n      major: {}\n    }\n  });\n\n  function labelsFromTicks(ticks) {\n    var labels = [];\n    var i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      labels.push(ticks[i].label);\n    }\n\n    return labels;\n  }\n\n  function getPixelForGridLine(scale, index, offsetGridLines) {\n    var lineValue = scale.getPixelForTick(index);\n\n    if (offsetGridLines) {\n      if (scale.getTicks().length === 1) {\n        lineValue -= scale.isHorizontal() ? Math.max(lineValue - scale.left, scale.right - lineValue) : Math.max(lineValue - scale.top, scale.bottom - lineValue);\n      } else if (index === 0) {\n        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n      } else {\n        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n      }\n    }\n\n    return lineValue;\n  }\n\n  function computeTextSize(context, tick, font) {\n    return helpers$1.isArray(tick) ? helpers$1.longestText(context, font, tick) : context.measureText(tick).width;\n  }\n\n  var core_scale = core_element.extend({\n    /**\n     * Get the padding needed for the scale\n     * @method getPadding\n     * @private\n     * @returns {Padding} the necessary padding\n     */\n    getPadding: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    },\n\n    /**\n     * Returns the scale tick objects ({label, major})\n     * @since 2.7\n     */\n    getTicks: function getTicks() {\n      return this._ticks;\n    },\n    // These methods are ordered by lifecyle. Utilities then follow.\n    // Any function defined here is inherited by all scale types.\n    // Any function can be extended by the scale type\n    mergeTicksOptions: function mergeTicksOptions() {\n      var ticks = this.options.ticks;\n\n      if (ticks.minor === false) {\n        ticks.minor = {\n          display: false\n        };\n      }\n\n      if (ticks.major === false) {\n        ticks.major = {\n          display: false\n        };\n      }\n\n      for (var key in ticks) {\n        if (key !== 'major' && key !== 'minor') {\n          if (typeof ticks.minor[key] === 'undefined') {\n            ticks.minor[key] = ticks[key];\n          }\n\n          if (typeof ticks.major[key] === 'undefined') {\n            ticks.major[key] = ticks[key];\n          }\n        }\n      }\n    },\n    beforeUpdate: function beforeUpdate() {\n      helpers$1.callback(this.options.beforeUpdate, [this]);\n    },\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = helpers$1.extend({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me._maxLabelLines = 0;\n      me.longestLabelWidth = 0;\n      me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Data min/max\n\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n      // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n      // and must not be accessed directly from outside this class. `this.ticks` being\n      // around for long time and not marked as private, we can't change its structure\n      // without unexpected breaking changes. If you need to access the scale ticks,\n      // use scale.getTicks() instead.\n\n      me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n      // we still support no return (`this.ticks` internally set by calling this method).\n\n      ticks = me.buildTicks() || []; // Allow modification of ticks in callback.\n\n      ticks = me.afterBuildTicks(ticks) || ticks;\n      me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n      // COMPAT, we still support no return (`this.ticks` internally changed by calling\n      // this method and supposed to contain only string values).\n\n      labels = me.convertTicksToLabels(ticks) || me.ticks;\n      me.afterTickToLabelConversion();\n      me.ticks = labels; // BACKWARD COMPATIBILITY\n      // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n      // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        label = labels[i];\n        tick = ticks[i];\n\n        if (!tick) {\n          ticks.push(tick = {\n            label: label,\n            major: false\n          });\n        } else {\n          tick.label = label;\n        }\n      }\n\n      me._ticks = ticks; // Tick Rotation\n\n      me.beforeCalculateTickRotation();\n      me.calculateTickRotation();\n      me.afterCalculateTickRotation(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: function afterUpdate() {\n      helpers$1.callback(this.options.afterUpdate, [this]);\n    },\n    //\n    beforeSetDimensions: function beforeSetDimensions() {\n      helpers$1.callback(this.options.beforeSetDimensions, [this]);\n    },\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    },\n    afterSetDimensions: function afterSetDimensions() {\n      helpers$1.callback(this.options.afterSetDimensions, [this]);\n    },\n    // Data limits\n    beforeDataLimits: function beforeDataLimits() {\n      helpers$1.callback(this.options.beforeDataLimits, [this]);\n    },\n    determineDataLimits: helpers$1.noop,\n    afterDataLimits: function afterDataLimits() {\n      helpers$1.callback(this.options.afterDataLimits, [this]);\n    },\n    //\n    beforeBuildTicks: function beforeBuildTicks() {\n      helpers$1.callback(this.options.beforeBuildTicks, [this]);\n    },\n    buildTicks: helpers$1.noop,\n    afterBuildTicks: function afterBuildTicks(ticks) {\n      var me = this; // ticks is empty for old axis implementations here\n\n      if (helpers$1.isArray(ticks) && ticks.length) {\n        return helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n      } // Support old implementations (that modified `this.ticks` directly in buildTicks)\n\n\n      me.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n      return ticks;\n    },\n    beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n      helpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this; // Convert ticks to strings\n\n      var tickOpts = me.options.ticks;\n      me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n    },\n    afterTickToLabelConversion: function afterTickToLabelConversion() {\n      helpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n    },\n    //\n    beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n      helpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n    },\n    calculateTickRotation: function calculateTickRotation() {\n      var me = this;\n      var context = me.ctx;\n      var tickOpts = me.options.ticks;\n      var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n      // between x offsets between 0 and 1.\n\n      var tickFont = helpers$1.options._parseFont(tickOpts);\n\n      context.font = tickFont.string;\n      var labelRotation = tickOpts.minRotation || 0;\n\n      if (labels.length && me.options.display && me.isHorizontal()) {\n        var originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n        var labelWidth = originalLabelWidth;\n        var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n        var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n        while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n          var angleRadians = helpers$1.toRadians(labelRotation);\n          cosRotation = Math.cos(angleRadians);\n          sinRotation = Math.sin(angleRadians);\n\n          if (sinRotation * originalLabelWidth > me.maxHeight) {\n            // go back one step\n            labelRotation--;\n            break;\n          }\n\n          labelRotation++;\n          labelWidth = cosRotation * originalLabelWidth;\n        }\n      }\n\n      me.labelRotation = labelRotation;\n    },\n    afterCalculateTickRotation: function afterCalculateTickRotation() {\n      helpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n    },\n    //\n    beforeFit: function beforeFit() {\n      helpers$1.callback(this.options.beforeFit, [this]);\n    },\n    fit: function fit() {\n      var me = this; // Reset\n\n      var minSize = me.minSize = {\n        width: 0,\n        height: 0\n      };\n      var labels = labelsFromTicks(me._ticks);\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var scaleLabelOpts = opts.scaleLabel;\n      var gridLineOpts = opts.gridLines;\n\n      var display = me._isVisible();\n\n      var position = opts.position;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var tickFont = parseFont(tickOpts);\n      var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n      if (isHorizontal) {\n        // subtract the margins to line up with the chartArea if we are a full width scale\n        minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n      } else {\n        minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } // height\n\n\n      if (isHorizontal) {\n        minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } else {\n        minSize.height = me.maxHeight; // fill all the height\n      } // Are we showing a title for the scale?\n\n\n      if (scaleLabelOpts.display && display) {\n        var scaleLabelFont = parseFont(scaleLabelOpts);\n        var scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n        var deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n        if (isHorizontal) {\n          minSize.height += deltaHeight;\n        } else {\n          minSize.width += deltaHeight;\n        }\n      } // Don't bother fitting the ticks if we are not showing the labels\n\n\n      if (tickOpts.display && display) {\n        var largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n        var tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n        var lineSpace = tickFont.size * 0.5;\n        var tickPadding = me.options.ticks.padding; // Store max number of lines and widest label for _autoSkip\n\n        me._maxLabelLines = tallestLabelHeightInLines;\n        me.longestLabelWidth = largestTextWidth;\n\n        if (isHorizontal) {\n          var angleRadians = helpers$1.toRadians(me.labelRotation);\n          var cosRotation = Math.cos(angleRadians);\n          var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n          var labelHeight = sinRotation * largestTextWidth + tickFont.lineHeight * tallestLabelHeightInLines + lineSpace; // padding\n\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          me.ctx.font = tickFont.string;\n          var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n          var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n          var offsetLeft = me.getPixelForTick(0) - me.left;\n          var offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n          var paddingLeft, paddingRight; // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n          // which means that the right padding is dominated by the font height\n\n          if (me.labelRotation !== 0) {\n            paddingLeft = position === 'bottom' ? cosRotation * firstLabelWidth : cosRotation * lineSpace;\n            paddingRight = position === 'bottom' ? cosRotation * lineSpace : cosRotation * lastLabelWidth;\n          } else {\n            paddingLeft = firstLabelWidth / 2;\n            paddingRight = lastLabelWidth / 2;\n          }\n\n          me.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n        } else {\n          // A vertical axis is more constrained by the width. Labels are the\n          // dominant factor here, so get that length first and account for padding\n          if (tickOpts.mirror) {\n            largestTextWidth = 0;\n          } else {\n            // use lineSpace for consistency with horizontal axis\n            // tickPadding is not implemented for horizontal\n            largestTextWidth += tickPadding + lineSpace;\n          }\n\n          minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n          me.paddingTop = tickFont.size / 2;\n          me.paddingBottom = tickFont.size / 2;\n        }\n      }\n\n      me.handleMargins();\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n\n    /**\n     * Handle margins and padding interactions\n     * @private\n     */\n    handleMargins: function handleMargins() {\n      var me = this;\n\n      if (me.margins) {\n        me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n        me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n        me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n        me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n      }\n    },\n    afterFit: function afterFit() {\n      helpers$1.callback(this.options.afterFit, [this]);\n    },\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    isFullWidth: function isFullWidth() {\n      return this.options.fullWidth;\n    },\n    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n    getRightValue: function getRightValue(rawValue) {\n      // Null and undefined values first\n      if (helpers$1.isNullOrUndef(rawValue)) {\n        return NaN;\n      } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n      if ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n        return NaN;\n      } // If it is in fact an object, dive in one more level\n\n\n      if (rawValue) {\n        if (this.isHorizontal()) {\n          if (rawValue.x !== undefined) {\n            return this.getRightValue(rawValue.x);\n          }\n        } else if (rawValue.y !== undefined) {\n          return this.getRightValue(rawValue.y);\n        }\n      } // Value is good, return it\n\n\n      return rawValue;\n    },\n\n    /**\n     * Used to get the value to display in the tooltip for the data at the given index\n     * @param index\n     * @param datasetIndex\n     */\n    getLabelForIndex: helpers$1.noop,\n\n    /**\n     * Returns the location of the given data point. Value can either be an index or a numerical value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param value\n     * @param index\n     * @param datasetIndex\n     */\n    getPixelForValue: helpers$1.noop,\n\n    /**\n     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param pixel\n     */\n    getValueForPixel: helpers$1.noop,\n\n    /**\n     * Returns the location of the tick at the given index\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForTick: function getPixelForTick(index) {\n      var me = this;\n      var offset = me.options.offset;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n        var pixel = tickWidth * index + me.paddingLeft;\n\n        if (offset) {\n          pixel += tickWidth / 2;\n        }\n\n        var finalVal = me.left + pixel;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n      return me.top + index * (innerHeight / (me._ticks.length - 1));\n    },\n\n    /**\n     * Utility for getting the pixel location of a percentage of scale\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForDecimal: function getPixelForDecimal(decimal) {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var valueOffset = innerWidth * decimal + me.paddingLeft;\n        var finalVal = me.left + valueOffset;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      return me.top + decimal * me.height;\n    },\n\n    /**\n     * Returns the pixel for the minimum chart value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getBasePixel: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    },\n    getBaseValue: function getBaseValue() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    },\n\n    /**\n     * Returns a subset of ticks to be plotted to avoid overlapping labels.\n     * @private\n     */\n    _autoSkip: function _autoSkip(ticks) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor;\n      var tickCount = ticks.length;\n      var skipRatio = false;\n      var maxTicks = optionTicks.maxTicksLimit; // Total space needed to display all ticks. First and last ticks are\n      // drawn as their center at end of axis, so tickCount-1\n\n      var ticksLength = me._tickSize() * (tickCount - 1); // Axis length\n\n      var axisLength = isHorizontal ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.PaddingBottom);\n      var result = [];\n      var i, tick;\n\n      if (ticksLength > axisLength) {\n        skipRatio = 1 + Math.floor(ticksLength / axisLength);\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n      }\n\n      for (i = 0; i < tickCount; i++) {\n        tick = ticks[i];\n\n        if (skipRatio > 1 && i % skipRatio > 0) {\n          // leave tick in place but make sure it's not displayed (#4635)\n          delete tick.label;\n        }\n\n        result.push(tick);\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _tickSize: function _tickSize() {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor; // Calculate space needed by label in axis direction.\n\n      var rot = helpers$1.toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = me.longestLabelWidth + padding || 0;\n\n      var tickFont = helpers$1.options._parseFont(optionTicks);\n\n      var h = me._maxLabelLines * tickFont.lineHeight + padding || 0; // Calculate space needed for 1 tick in axis direction.\n\n      return isHorizontal ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    },\n\n    /**\n     * @private\n     */\n    _isVisible: function _isVisible() {\n      var me = this;\n      var chart = me.chart;\n      var display = me.options.display;\n      var i, ilen, meta;\n\n      if (display !== 'auto') {\n        return !!display;\n      } // When 'auto', the scale is visible if at least one associated dataset is visible.\n\n\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n\n          if (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Actually draw the scale on the canvas\n     * @param {object} chartArea - the area of the chart to draw full grid lines on\n     */\n    draw: function draw(chartArea) {\n      var me = this;\n      var options = me.options;\n\n      if (!me._isVisible()) {\n        return;\n      }\n\n      var chart = me.chart;\n      var context = me.ctx;\n      var globalDefaults = core_defaults.global;\n      var defaultFontColor = globalDefaults.defaultFontColor;\n      var optionTicks = options.ticks.minor;\n      var optionMajorTicks = options.ticks.major || optionTicks;\n      var gridLines = options.gridLines;\n      var scaleLabel = options.scaleLabel;\n      var position = options.position;\n      var isRotated = me.labelRotation !== 0;\n      var isMirrored = optionTicks.mirror;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n      var tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n      var tickFont = parseFont(optionTicks);\n      var lineHeight = tickFont.lineHeight;\n      var majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n      var majorTickFont = parseFont(optionMajorTicks);\n      var tickPadding = optionTicks.padding;\n      var labelOffset = optionTicks.labelOffset;\n      var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n      var scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n      var scaleLabelFont = parseFont(scaleLabel);\n      var scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n      var labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n      var itemsToDraw = [];\n      var axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n      var alignPixel = helpers$1._alignPixel;\n      var borderValue, tickStart, tickEnd;\n\n      if (position === 'top') {\n        borderValue = alignPixel(chart, me.bottom, axisWidth);\n        tickStart = me.bottom - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else if (position === 'bottom') {\n        borderValue = alignPixel(chart, me.top, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignPixel(chart, me.right, axisWidth);\n        tickStart = me.right - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else {\n        borderValue = alignPixel(chart, me.left, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.left + tl;\n      }\n\n      var epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n      helpers$1.each(ticks, function (tick, index) {\n        // autoskipper skipped this tick (#4635)\n        if (helpers$1.isNullOrUndef(tick.label)) {\n          return;\n        }\n\n        var label = tick.label;\n        var lineWidth, lineColor, borderDash, borderDashOffset;\n\n        if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n          // Draw the first index specially\n          lineWidth = gridLines.zeroLineWidth;\n          lineColor = gridLines.zeroLineColor;\n          borderDash = gridLines.zeroLineBorderDash || [];\n          borderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n        } else {\n          lineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n          lineColor = valueAtIndexOrDefault(gridLines.color, index);\n          borderDash = gridLines.borderDash || [];\n          borderDashOffset = gridLines.borderDashOffset || 0.0;\n        } // Common properties\n\n\n        var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n        var labelCount = helpers$1.isArray(label) ? label.length : 1;\n        var lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n        if (isHorizontal) {\n          var labelYOffset = tl + tickPadding;\n\n          if (lineValue < me.left - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n          ty1 = tickStart;\n          ty2 = tickEnd;\n          labelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n          if (position === 'top') {\n            y1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n            y2 = chartArea.bottom;\n            textOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'left';\n            labelY = me.bottom - labelYOffset;\n          } else {\n            y1 = chartArea.top;\n            y2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n            textOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'right';\n            labelY = me.top + labelYOffset;\n          }\n        } else {\n          var labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n          if (lineValue < me.top - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tickStart;\n          tx2 = tickEnd;\n          ty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n          labelY = me.getPixelForTick(index) + labelOffset;\n          textOffset = (1 - labelCount) * lineHeight / 2;\n\n          if (position === 'left') {\n            x1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n            x2 = chartArea.right;\n            textAlign = isMirrored ? 'left' : 'right';\n            labelX = me.right - labelXOffset;\n          } else {\n            x1 = chartArea.left;\n            x2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n            textAlign = isMirrored ? 'right' : 'left';\n            labelX = me.left + labelXOffset;\n          }\n        }\n\n        itemsToDraw.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          labelX: labelX,\n          labelY: labelY,\n          glWidth: lineWidth,\n          glColor: lineColor,\n          glBorderDash: borderDash,\n          glBorderDashOffset: borderDashOffset,\n          rotation: -1 * labelRotationRadians,\n          label: label,\n          major: tick.major,\n          textOffset: textOffset,\n          textAlign: textAlign\n        });\n      }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n      helpers$1.each(itemsToDraw, function (itemToDraw) {\n        var glWidth = itemToDraw.glWidth;\n        var glColor = itemToDraw.glColor;\n\n        if (gridLines.display && glWidth && glColor) {\n          context.save();\n          context.lineWidth = glWidth;\n          context.strokeStyle = glColor;\n\n          if (context.setLineDash) {\n            context.setLineDash(itemToDraw.glBorderDash);\n            context.lineDashOffset = itemToDraw.glBorderDashOffset;\n          }\n\n          context.beginPath();\n\n          if (gridLines.drawTicks) {\n            context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n            context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n          }\n\n          if (gridLines.drawOnChartArea) {\n            context.moveTo(itemToDraw.x1, itemToDraw.y1);\n            context.lineTo(itemToDraw.x2, itemToDraw.y2);\n          }\n\n          context.stroke();\n          context.restore();\n        }\n\n        if (optionTicks.display) {\n          // Make sure we draw text in the correct color and font\n          context.save();\n          context.translate(itemToDraw.labelX, itemToDraw.labelY);\n          context.rotate(itemToDraw.rotation);\n          context.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n          context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n          context.textBaseline = 'middle';\n          context.textAlign = itemToDraw.textAlign;\n          var label = itemToDraw.label;\n          var y = itemToDraw.textOffset;\n\n          if (helpers$1.isArray(label)) {\n            for (var i = 0; i < label.length; ++i) {\n              // We just make sure the multiline element is a string here..\n              context.fillText('' + label[i], 0, y);\n              y += lineHeight;\n            }\n          } else {\n            context.fillText(label, 0, y);\n          }\n\n          context.restore();\n        }\n      });\n\n      if (scaleLabel.display) {\n        // Draw the scale label\n        var scaleLabelX;\n        var scaleLabelY;\n        var rotation = 0;\n        var halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n        if (isHorizontal) {\n          scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n          scaleLabelY = position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n        } else {\n          var isLeft = position === 'left';\n          scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n          scaleLabelY = me.top + (me.bottom - me.top) / 2;\n          rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n        }\n\n        context.save();\n        context.translate(scaleLabelX, scaleLabelY);\n        context.rotate(rotation);\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n        context.font = scaleLabelFont.string;\n        context.fillText(scaleLabel.labelString, 0, 0);\n        context.restore();\n      }\n\n      if (axisWidth) {\n        // Draw the line at the edge of the axis\n        var firstLineWidth = axisWidth;\n        var lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n        var x1, x2, y1, y2;\n\n        if (isHorizontal) {\n          x1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n          x2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n          y1 = y2 = borderValue;\n        } else {\n          y1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n          y2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n          x1 = x2 = borderValue;\n        }\n\n        context.lineWidth = axisWidth;\n        context.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n      }\n    }\n  });\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var scale_category = core_scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n\n      if (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n        return me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + widthOffset;\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + heightOffset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults = defaultConfig;\n  scale_category._defaults = _defaults;\n  var noop = helpers$1.noop;\n  var isNullOrUndef = helpers$1.isNullOrUndef;\n  /**\n   * Generate a set of linear ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks(generationOptions, dataRange) {\n    var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n    // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n    // for details.\n\n    var MIN_SPACING = 1e-14;\n    var stepSize = generationOptions.stepSize;\n    var unit = stepSize || 1;\n    var maxNumSpaces = generationOptions.maxTicks - 1;\n    var min = generationOptions.min;\n    var max = generationOptions.max;\n    var precision = generationOptions.precision;\n    var rmin = dataRange.min;\n    var rmax = dataRange.max;\n    var spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n    var factor, niceMin, niceMax, numSpaces; // Beyond MIN_SPACING floating point numbers being to lose precision\n    // such that we can't do the math necessary to generate ticks\n\n    if (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n      return [rmin, rmax];\n    }\n\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n    if (numSpaces > maxNumSpaces) {\n      // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n      spacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n    }\n\n    if (stepSize || isNullOrUndef(precision)) {\n      // If a precision is not specified, calculate factor based on spacing\n      factor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n    } else {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n    if (stepSize) {\n      // If very close to our whole number, use it.\n      if (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n        niceMin = min;\n      }\n\n      if (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n        niceMax = max;\n      }\n    }\n\n    numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n    if (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    ticks.push(isNullOrUndef(min) ? niceMin : min);\n\n    for (var j = 1; j < numSpaces; ++j) {\n      ticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n    }\n\n    ticks.push(isNullOrUndef(max) ? niceMax : max);\n    return ticks;\n  }\n\n  var scale_linearbase = core_scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers$1.sign(me.min);\n        var maxSign = helpers$1.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var stepSize = tickOpts.stepSize;\n      var maxTicksLimit = tickOpts.maxTicksLimit;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me._computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    },\n    _computeTickLimit: function _computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    },\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      core_scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n  var defaultConfig$1 = {\n    position: 'left',\n    ticks: {\n      callback: core_ticks.formatters.linear\n    }\n  };\n  var scale_linear = scale_linearbase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers$1.min(values);\n          var maxVal = helpers$1.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      var me = this;\n      var tickFont;\n\n      if (me.isHorizontal()) {\n        return Math.ceil(me.width / 40);\n      }\n\n      tickFont = helpers$1.options._parseFont(me.options.ticks);\n      return Math.ceil(me.height / tickFont.lineHeight);\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$1 = defaultConfig$1;\n  scale_linear._defaults = _defaults$1;\n  var valueOrDefault$a = helpers$1.valueOrDefault;\n  /**\n   * Generate a set of logarithmic ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks$1(generationOptions, dataRange) {\n    var ticks = [];\n    var tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n    var endExp = Math.floor(helpers$1.log10(dataRange.max));\n    var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    var exp, significand;\n\n    if (tickVal === 0) {\n      exp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n      significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n      ticks.push(tickVal);\n      tickVal = significand * Math.pow(10, exp);\n    } else {\n      exp = Math.floor(helpers$1.log10(tickVal));\n      significand = Math.floor(tickVal / Math.pow(10, exp));\n    }\n\n    var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n    do {\n      ticks.push(tickVal);\n      ++significand;\n\n      if (significand === 10) {\n        significand = 1;\n        ++exp;\n        precision = exp >= 0 ? 1 : precision;\n      }\n\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n    var lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n    ticks.push(lastTick);\n    return ticks;\n  }\n\n  var defaultConfig$2 = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: core_ticks.formatters.logarithmic\n    }\n  }; // TODO(v3): change this to positiveOrDefault\n\n  function nonNegativeOrDefault(value, defaultValue) {\n    return helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n  }\n\n  var scale_logarithmic = core_scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers$1.min(valuesForType);\n            var maxVal = helpers$1.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = nonNegativeOrDefault(tickOpts.min, me.min);\n      me.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: nonNegativeOrDefault(tickOpts.min),\n        max: nonNegativeOrDefault(tickOpts.max)\n      };\n      var ticks = me.ticks = generateTicks$1(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      core_scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {number} value - The minimum not zero value.\n     * @return {number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers$1.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$2 = defaultConfig$2;\n  scale_logarithmic._defaults = _defaults$2;\n  var valueOrDefault$b = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\n  var resolve$7 = helpers$1.options.resolve;\n  var defaultConfig$3 = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: core_ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getTickBackdropHeight(opts) {\n    var tickOpts = opts.ticks;\n\n    if (tickOpts.display && opts.display) {\n      return valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n    }\n\n    return 0;\n  }\n\n  function measureLabelSize(ctx, lineHeight, label) {\n    if (helpers$1.isArray(label)) {\n      return {\n        w: helpers$1.longestText(ctx, ctx.font, label),\n        h: label.length * lineHeight\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: lineHeight\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    // Right, this is really confusing and there is a lot of maths going on here\n    // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n    //\n    // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n    //\n    // Solution:\n    //\n    // We assume the radius of the polygon is half the size of the canvas at first\n    // at each index we check if the text overlaps.\n    //\n    // Where it does, we store that angle and that index.\n    //\n    // After finding the largest index and angle we calculate how much we need to remove\n    // from the shape radius to move the point inwards by that x.\n    //\n    // We average the left and right distances to get the maximum shape radius that can fit in the box\n    // along with labels.\n    //\n    // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n    // on each side, removing that from the size, halving it and adding the left x protrusion width.\n    //\n    // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n    // and position it in the most space efficient manner\n    //\n    // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n    var plFont = helpers$1.options._parseFont(scale.options.pointLabels); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n\n    var furthestLimits = {\n      l: 0,\n      r: scale.width,\n      t: 0,\n      b: scale.height - scale.paddingTop\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.string;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n      textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers$1.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, lineHeight) {\n    var y = position.y + lineHeight / 2;\n    var i, ilen;\n\n    if (helpers$1.isArray(text)) {\n      for (i = 0, ilen = text.length; i < ilen; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += lineHeight;\n      }\n    } else {\n      ctx.fillText(text, position.x, y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var gridLineOpts = opts.gridLines;\n    var pointLabelOpts = opts.pointLabels;\n    var lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n    var lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n    var tickBackdropHeight = getTickBackdropHeight(opts);\n    ctx.save();\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = lineColor;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n      ctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n    }\n\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n    ctx.font = plFont.string;\n    ctx.textBaseline = 'middle';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display && lineWidth && lineColor) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra pixels out for some label spacing\n        var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers$1.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n      }\n    }\n\n    ctx.restore();\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    var circular = gridLineOpts.circular;\n    var valueCount = getValueCount(scale);\n    var lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n    var lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n    var pointPosition;\n\n    if (!circular && !valueCount || !lineColor || !lineWidth) {\n      return;\n    }\n\n    ctx.save();\n    ctx.strokeStyle = lineColor;\n    ctx.lineWidth = lineWidth;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(gridLineOpts.borderDash || []);\n      ctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n    }\n\n    ctx.beginPath();\n\n    if (circular) {\n      // Draw circular arcs between the points\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n    } else {\n      // Draw straight lines connecting each index\n      pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  function numberOrZero(param) {\n    return helpers$1.isNumber(param) ? param : 0;\n  }\n\n  var scale_radialLinear = scale_linearbase.extend({\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers$1.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers$1.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      scale_linearbase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0);\n\n        var tickFont = helpers$1.options._parseFont(tickOpts);\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n\n        helpers$1.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n              ctx.font = tickFont.string;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFont.size + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n      }\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$3 = defaultConfig$3;\n  scale_radialLinear._defaults = _defaults$3;\n  var valueOrDefault$c = helpers$1.valueOrDefault; // Integer constants are from the ES6 spec.\n\n  var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\n  var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n  var INTERVALS = {\n    millisecond: {\n      common: true,\n      size: 1,\n      steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n    },\n    second: {\n      common: true,\n      size: 1000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    minute: {\n      common: true,\n      size: 60000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    hour: {\n      common: true,\n      size: 3600000,\n      steps: [1, 2, 3, 6, 12]\n    },\n    day: {\n      common: true,\n      size: 86400000,\n      steps: [1, 2, 5]\n    },\n    week: {\n      common: false,\n      size: 604800000,\n      steps: [1, 2, 3, 4]\n    },\n    month: {\n      common: true,\n      size: 2.628e9,\n      steps: [1, 2, 3]\n    },\n    quarter: {\n      common: false,\n      size: 7.884e9,\n      steps: [1, 2, 3, 4]\n    },\n    year: {\n      common: true,\n      size: 3.154e10\n    }\n  };\n  var UNITS = Object.keys(INTERVALS);\n\n  function sorter(a, b) {\n    return a - b;\n  }\n\n  function arrayUnique(items) {\n    var hash = {};\n    var out = [];\n    var i, ilen, item;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n\n      if (!hash[item]) {\n        hash[item] = true;\n        out.push(item);\n      }\n    }\n\n    return out;\n  }\n  /**\n   * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n   * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n   * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n   * extremity (left + width or top + height). Note that it would be more optimized to directly\n   * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n   * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n   *\n   * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n   * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n   * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n   * If 'series', timestamps will be positioned at the same distance from each other. In this\n   * case, only timestamps that break the time linearity are registered, meaning that in the\n   * best case, all timestamps are linear, the table contains only min and max.\n   */\n\n\n  function buildLookupTable(timestamps, min, max, distribution) {\n    if (distribution === 'linear' || !timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    var table = [];\n    var items = [min];\n    var i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n\n    items.push(max);\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i]; // only add points that breaks the scale linearity\n\n      if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  } // @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\n  function lookup(table, key, value) {\n    var lo = 0;\n    var hi = table.length - 1;\n    var mid, i0, i1;\n\n    while (lo >= 0 && lo <= hi) {\n      mid = lo + hi >> 1;\n      i0 = table[mid - 1] || null;\n      i1 = table[mid];\n\n      if (!i0) {\n        // given value is outside table (before first item)\n        return {\n          lo: null,\n          hi: i1\n        };\n      } else if (i1[key] < value) {\n        lo = mid + 1;\n      } else if (i0[key] > value) {\n        hi = mid - 1;\n      } else {\n        return {\n          lo: i0,\n          hi: i1\n        };\n      }\n    } // given value is outside table (after last item)\n\n\n    return {\n      lo: i1,\n      hi: null\n    };\n  }\n  /**\n   * Linearly interpolates the given source `value` using the table items `skey` values and\n   * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n   * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n   * index [0, 1] or [n - 1, n] are used for the interpolation.\n   */\n\n\n  function interpolate$1(table, skey, sval, tkey) {\n    var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n    var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n    var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n    var span = next[skey] - prev[skey];\n    var ratio = span ? (sval - prev[skey]) / span : 0;\n    var offset = (next[tkey] - prev[tkey]) * ratio;\n    return prev[tkey] + offset;\n  }\n\n  function toTimestamp(scale, input) {\n    var adapter = scale._adapter;\n    var options = scale.options.time;\n    var parser = options.parser;\n    var format = parser || options.format;\n    var value = input;\n\n    if (typeof parser === 'function') {\n      value = parser(value);\n    } // Only parse if its not a timestamp already\n\n\n    if (!helpers$1.isFinite(value)) {\n      value = typeof format === 'string' ? adapter.parse(value, format) : adapter.parse(value);\n    }\n\n    if (value !== null) {\n      return +value;\n    } // Labels are in an incompatible format and no `parser` has been provided.\n    // The user might still use the deprecated `format` option for parsing.\n\n\n    if (!parser && typeof format === 'function') {\n      value = format(input); // `format` could return something else than a timestamp, if so, parse it\n\n      if (!helpers$1.isFinite(value)) {\n        value = adapter.parse(value);\n      }\n    }\n\n    return value;\n  }\n\n  function parse(scale, input) {\n    if (helpers$1.isNullOrUndef(input)) {\n      return null;\n    }\n\n    var options = scale.options.time;\n    var value = toTimestamp(scale, scale.getRightValue(input));\n\n    if (value === null) {\n      return value;\n    }\n\n    if (options.round) {\n      value = +scale._adapter.startOf(value, options.round);\n    }\n\n    return value;\n  }\n  /**\n   * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n   * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n   */\n\n\n  function determineStepSize(min, max, unit, capacity) {\n    var range = max - min;\n    var interval = INTERVALS[unit];\n    var milliseconds = interval.size;\n    var steps = interval.steps;\n    var i, ilen, factor;\n\n    if (!steps) {\n      return Math.ceil(range / (capacity * milliseconds));\n    }\n\n    for (i = 0, ilen = steps.length; i < ilen; ++i) {\n      factor = steps[i];\n\n      if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n        break;\n      }\n    }\n\n    return factor;\n  }\n  /**\n   * Figures out what unit results in an appropriate number of auto-generated ticks\n   */\n\n\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    var ilen = UNITS.length;\n    var i, interval, factor;\n\n    for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n      interval = INTERVALS[UNITS[i]];\n      factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n        return UNITS[i];\n      }\n    }\n\n    return UNITS[ilen - 1];\n  }\n  /**\n   * Figures out what unit to format a set of ticks with\n   */\n\n\n  function determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n    var ilen = UNITS.length;\n    var i, unit;\n\n    for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n      unit = UNITS[i];\n\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n        return unit;\n      }\n    }\n\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n  }\n\n  function determineMajorUnit(unit) {\n    for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n      if (INTERVALS[UNITS[i]].common) {\n        return UNITS[i];\n      }\n    }\n  }\n  /**\n   * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n   * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n   * Important: this method can return ticks outside the min and max range, it's the\n   * responsibility of the calling code to clamp values if needed.\n   */\n\n\n  function generate(scale, min, max, capacity) {\n    var adapter = scale._adapter;\n    var options = scale.options;\n    var timeOpts = options.time;\n    var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n    var major = determineMajorUnit(minor);\n    var stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n    var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    var majorTicksEnabled = options.ticks.major.enabled;\n    var interval = INTERVALS[minor];\n    var first = min;\n    var last = max;\n    var ticks = [];\n    var time;\n\n    if (!stepSize) {\n      stepSize = determineStepSize(min, max, minor, capacity);\n    } // For 'week' unit, handle the first day of week option\n\n\n    if (weekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n      last = +adapter.startOf(last, 'isoWeek', weekday);\n    } // Align first/last ticks on unit\n\n\n    first = +adapter.startOf(first, weekday ? 'day' : minor);\n    last = +adapter.startOf(last, weekday ? 'day' : minor); // Make sure that the last tick include max\n\n    if (last < max) {\n      last = +adapter.add(last, 1, minor);\n    }\n\n    time = first;\n\n    if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n      // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n      // we first aligned time on the previous `major` unit then add the number of full\n      // stepSize there is between first and the previous major time.\n      time = +adapter.startOf(time, major);\n      time = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n    }\n\n    for (; time < last; time = +adapter.add(time, stepSize, minor)) {\n      ticks.push(+time);\n    }\n\n    ticks.push(+time);\n    return ticks;\n  }\n  /**\n   * Returns the start and end offsets from edges in the form of {start, end}\n   * where each value is a relative width to the scale and ranges between 0 and 1.\n   * They add extra margins on the both sides by scaling down the original scale.\n   * Offsets are added when the `offset` option is true.\n   */\n\n\n  function computeOffsets(table, ticks, min, max, options) {\n    var start = 0;\n    var end = 0;\n    var first, last;\n\n    if (options.offset && ticks.length) {\n      if (!options.time.min) {\n        first = interpolate$1(table, 'time', ticks[0], 'pos');\n\n        if (ticks.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n        }\n      }\n\n      if (!options.time.max) {\n        last = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\n        if (ticks.length === 1) {\n          end = last;\n        } else {\n          end = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n        }\n      }\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  }\n\n  function ticksFromTimestamps(scale, values, majorUnit) {\n    var ticks = [];\n    var i, ilen, value, major;\n\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n      value = values[i];\n      major = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n      ticks.push({\n        value: value,\n        major: major\n      });\n    }\n\n    return ticks;\n  }\n\n  var defaultConfig$4 = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var scale_time = core_scale.extend({\n    initialize: function initialize() {\n      this.mergeTicksOptions();\n      core_scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options;\n      var time = options.time || (options.time = {});\n      var adapter = me._adapter = new core_adapters._date(options.adapters.date); // DEPRECATIONS: output a message only one time per update\n\n      if (time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      } // Backward compatibility: before introducing adapter, `displayFormats` was\n      // supposed to contain *all* unit/string pairs but this can't be resolved\n      // when loading the scale (adapters are loaded afterward), so let's populate\n      // missing formats on update\n\n\n      helpers$1.mergeIf(time.displayFormats, adapter.formats());\n      return core_scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp;\n      var dataLabels = chart.data.labels || []; // Convert labels to timestamps\n\n      for (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n        labels.push(parse(me, dataLabels[i]));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers$1.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(me, data[j]);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            for (j = 0, jlen = labels.length; j < jlen; ++j) {\n              timestamps.push(labels[j]);\n            }\n\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n      max = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n      if (options.ticks.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var adapter = me._adapter;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers$1.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var adapter = me._adapter;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = +adapter.startOf(time, majorUnit);\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var isReverse = me.options.ticks.reverse;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n      var pos = interpolate$1(me._table, 'time', time, 'pos');\n      var offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n      return isReverse ? start - offset : start + offset;\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(me, value);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n      var time = interpolate$1(me._table, 'pos', pos, 'time'); // DEPRECATION, we should return time directly\n\n      return me._adapter._create(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers$1.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this; // pick the longest format (milliseconds) for guestimation\n\n      var format = me.options.time.displayFormats.millisecond;\n      var exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$4 = defaultConfig$4;\n  scale_time._defaults = _defaults$4;\n  var scales = {\n    category: scale_category,\n    linear: scale_linear,\n    logarithmic: scale_logarithmic,\n    radialLinear: scale_radialLinear,\n    time: scale_time\n  };\n  var FORMATS = {\n    datetime: 'MMM D, YYYY, h:mm:ss a',\n    millisecond: 'h:mm:ss.SSS a',\n    second: 'h:mm:ss a',\n    minute: 'h:mm a',\n    hour: 'hA',\n    day: 'MMM D',\n    week: 'll',\n    month: 'MMM YYYY',\n    quarter: '[Q]Q - YYYY',\n    year: 'YYYY'\n  };\n\n  core_adapters._date.override(typeof moment === 'function' ? {\n    _id: 'moment',\n    // DEBUG ONLY\n    formats: function formats() {\n      return FORMATS;\n    },\n    parse: function parse(value, format) {\n      if (typeof value === 'string' && typeof format === 'string') {\n        value = moment(value, format);\n      } else if (!(value instanceof moment)) {\n        value = moment(value);\n      }\n\n      return value.isValid() ? value.valueOf() : null;\n    },\n    format: function format(time, _format) {\n      return moment(time).format(_format);\n    },\n    add: function add(time, amount, unit) {\n      return moment(time).add(amount, unit).valueOf();\n    },\n    diff: function diff(max, min, unit) {\n      return moment.duration(moment(max).diff(moment(min))).as(unit);\n    },\n    startOf: function startOf(time, unit, weekday) {\n      time = moment(time);\n\n      if (unit === 'isoWeek') {\n        return time.isoWeekday(weekday).valueOf();\n      }\n\n      return time.startOf(unit).valueOf();\n    },\n    endOf: function endOf(time, unit) {\n      return moment(time).endOf(unit).valueOf();\n    },\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility with scale.getValueForPixel().\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(time) {\n      return moment(time);\n    }\n  } : {});\n\n  core_defaults._set('global', {\n    plugins: {\n      filler: {\n        propagate: true\n      }\n    }\n  });\n\n  var mappers = {\n    dataset: function dataset(source) {\n      var index = source.fill;\n      var chart = source.chart;\n      var meta = chart.getDatasetMeta(index);\n      var visible = meta && chart.isDatasetVisible(index);\n      var points = visible && meta.dataset._children || [];\n      var length = points.length || 0;\n      return !length ? null : function (point, i) {\n        return i < length && points[i]._view || null;\n      };\n    },\n    boundary: function boundary(source) {\n      var boundary = source.boundary;\n      var x = boundary ? boundary.x : null;\n      var y = boundary ? boundary.y : null;\n      return function (point) {\n        return {\n          x: x === null ? point.x : x,\n          y: y === null ? point.y : y\n        };\n      };\n    }\n  }; // @todo if (fill[0] === '#')\n\n  function decodeFill(el, index, count) {\n    var model = el._model || {};\n    var fill = model.fill;\n    var target;\n\n    if (fill === undefined) {\n      fill = !!model.backgroundColor;\n    }\n\n    if (fill === false || fill === null) {\n      return false;\n    }\n\n    if (fill === true) {\n      return 'origin';\n    }\n\n    target = parseFloat(fill, 10);\n\n    if (isFinite(target) && Math.floor(target) === target) {\n      if (fill[0] === '-' || fill[0] === '+') {\n        target = index + target;\n      }\n\n      if (target === index || target < 0 || target >= count) {\n        return false;\n      }\n\n      return target;\n    }\n\n    switch (fill) {\n      // compatibility\n      case 'bottom':\n        return 'start';\n\n      case 'top':\n        return 'end';\n\n      case 'zero':\n        return 'origin';\n      // supported boundaries\n\n      case 'origin':\n      case 'start':\n      case 'end':\n        return fill;\n      // invalid fill values\n\n      default:\n        return false;\n    }\n  }\n\n  function computeBoundary(source) {\n    var model = source.el._model || {};\n    var scale = source.el._scale || {};\n    var fill = source.fill;\n    var target = null;\n    var horizontal;\n\n    if (isFinite(fill)) {\n      return null;\n    } // Backward compatibility: until v3, we still need to support boundary values set on\n    // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n    // controllers might still use it (e.g. the Smith chart).\n\n\n    if (fill === 'start') {\n      target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n    } else if (fill === 'end') {\n      target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n    } else if (model.scaleZero !== undefined) {\n      target = model.scaleZero;\n    } else if (scale.getBasePosition) {\n      target = scale.getBasePosition();\n    } else if (scale.getBasePixel) {\n      target = scale.getBasePixel();\n    }\n\n    if (target !== undefined && target !== null) {\n      if (target.x !== undefined && target.y !== undefined) {\n        return target;\n      }\n\n      if (helpers$1.isFinite(target)) {\n        horizontal = scale.isHorizontal();\n        return {\n          x: horizontal ? target : null,\n          y: horizontal ? null : target\n        };\n      }\n    }\n\n    return null;\n  }\n\n  function resolveTarget(sources, index, propagate) {\n    var source = sources[index];\n    var fill = source.fill;\n    var visited = [index];\n    var target;\n\n    if (!propagate) {\n      return fill;\n    }\n\n    while (fill !== false && visited.indexOf(fill) === -1) {\n      if (!isFinite(fill)) {\n        return fill;\n      }\n\n      target = sources[fill];\n\n      if (!target) {\n        return false;\n      }\n\n      if (target.visible) {\n        return fill;\n      }\n\n      visited.push(fill);\n      fill = target.fill;\n    }\n\n    return false;\n  }\n\n  function createMapper(source) {\n    var fill = source.fill;\n    var type = 'dataset';\n\n    if (fill === false) {\n      return null;\n    }\n\n    if (!isFinite(fill)) {\n      type = 'boundary';\n    }\n\n    return mappers[type](source);\n  }\n\n  function isDrawable(point) {\n    return point && !point.skip;\n  }\n\n  function drawArea(ctx, curve0, curve1, len0, len1) {\n    var i;\n\n    if (!len0 || !len1) {\n      return;\n    } // building first area curve (normal)\n\n\n    ctx.moveTo(curve0[0].x, curve0[0].y);\n\n    for (i = 1; i < len0; ++i) {\n      helpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n    } // joining the two area curves\n\n\n    ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n    for (i = len1 - 1; i > 0; --i) {\n      helpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n    }\n  }\n\n  function doFill(ctx, points, mapper, view, color, loop) {\n    var count = points.length;\n    var span = view.spanGaps;\n    var curve0 = [];\n    var curve1 = [];\n    var len0 = 0;\n    var len1 = 0;\n    var i, ilen, index, p0, p1, d0, d1;\n    ctx.beginPath();\n\n    for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n      index = i % count;\n      p0 = points[index]._view;\n      p1 = mapper(p0, index, view);\n      d0 = isDrawable(p0);\n      d1 = isDrawable(p1);\n\n      if (d0 && d1) {\n        len0 = curve0.push(p0);\n        len1 = curve1.push(p1);\n      } else if (len0 && len1) {\n        if (!span) {\n          drawArea(ctx, curve0, curve1, len0, len1);\n          len0 = len1 = 0;\n          curve0 = [];\n          curve1 = [];\n        } else {\n          if (d0) {\n            curve0.push(p0);\n          }\n\n          if (d1) {\n            curve1.push(p1);\n          }\n        }\n      }\n    }\n\n    drawArea(ctx, curve0, curve1, len0, len1);\n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n  }\n\n  var plugin_filler = {\n    id: 'filler',\n    afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n      var count = (chart.data.datasets || []).length;\n      var propagate = options.propagate;\n      var sources = [];\n      var meta, i, el, source;\n\n      for (i = 0; i < count; ++i) {\n        meta = chart.getDatasetMeta(i);\n        el = meta.dataset;\n        source = null;\n\n        if (el && el._model && el instanceof elements.Line) {\n          source = {\n            visible: chart.isDatasetVisible(i),\n            fill: decodeFill(el, i, count),\n            chart: chart,\n            el: el\n          };\n        }\n\n        meta.$filler = source;\n        sources.push(source);\n      }\n\n      for (i = 0; i < count; ++i) {\n        source = sources[i];\n\n        if (!source) {\n          continue;\n        }\n\n        source.fill = resolveTarget(sources, i, propagate);\n        source.boundary = computeBoundary(source);\n        source.mapper = createMapper(source);\n      }\n    },\n    beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n      var meta = args.meta.$filler;\n\n      if (!meta) {\n        return;\n      }\n\n      var ctx = chart.ctx;\n      var el = meta.el;\n      var view = el._view;\n      var points = el._children || [];\n      var mapper = meta.mapper;\n      var color = view.backgroundColor || core_defaults.global.defaultColor;\n\n      if (mapper && color && points.length) {\n        helpers$1.canvas.clipArea(ctx, chart.chartArea);\n        doFill(ctx, points, mapper, view, color, el._loop);\n        helpers$1.canvas.unclipArea(ctx);\n      }\n    }\n  };\n  var noop$1 = helpers$1.noop;\n  var valueOrDefault$d = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    legend: {\n      display: true,\n      position: 'top',\n      fullWidth: true,\n      reverse: false,\n      weight: 1000,\n      // a callback that will handle\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.datasetIndex;\n        var ci = this.chart;\n        var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n        ci.update();\n      },\n      onHover: null,\n      onLeave: null,\n      labels: {\n        boxWidth: 40,\n        padding: 10,\n        // Generates labels shown in the legend\n        // Valid properties to return:\n        // text : text to display\n        // fillStyle : fill of coloured box\n        // strokeStyle: stroke of coloured box\n        // hidden : if this legend item refers to a hidden item\n        // lineCap : cap style for line\n        // lineDash\n        // lineDashOffset :\n        // lineJoin :\n        // lineWidth :\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          return helpers$1.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n            return {\n              text: dataset.label,\n              fillStyle: !helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n              hidden: !chart.isDatasetVisible(i),\n              lineCap: dataset.borderCapStyle,\n              lineDash: dataset.borderDash,\n              lineDashOffset: dataset.borderDashOffset,\n              lineJoin: dataset.borderJoinStyle,\n              lineWidth: dataset.borderWidth,\n              strokeStyle: dataset.borderColor,\n              pointStyle: dataset.pointStyle,\n              // Below is extra data used for toggling the datasets\n              datasetIndex: i\n            };\n          }, this) : [];\n        }\n      }\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n\n      for (var i = 0; i < chart.data.datasets.length; i++) {\n        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n        if (chart.data.datasets[i].label) {\n          text.push(chart.data.datasets[i].label);\n        }\n\n        text.push('</li>');\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    }\n  });\n  /**\n   * Helper function to get the box width based on the usePointStyle option\n   * @param {object} labelopts - the label options on the legend\n   * @param {number} fontSize - the label font size\n   * @return {number} width of the color box area\n   */\n\n\n  function getBoxWidth(labelOpts, fontSize) {\n    return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ? fontSize : labelOpts.boxWidth;\n  }\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Legend = core_element.extend({\n    initialize: function initialize(config) {\n      helpers$1.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n      this.legendHitBoxes = [];\n      /**\n      \t * @private\n      \t */\n\n      this._hoveredItem = null; // Are we in doughnut mode which has a different data type\n\n      this.doughnutMode = false;\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    // Any function defined here is inherited by all legend types.\n    // Any function can be extended by the legend type\n    beforeUpdate: noop$1,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$1,\n    //\n    beforeSetDimensions: noop$1,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$1,\n    //\n    beforeBuildLabels: noop$1,\n    buildLabels: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n\n      me.legendItems = legendItems;\n    },\n    afterBuildLabels: noop$1,\n    //\n    beforeFit: noop$1,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var display = opts.display;\n      var ctx = me.ctx;\n\n      var labelFont = helpers$1.options._parseFont(labelOpts);\n\n      var fontSize = labelFont.size; // Reset hit boxes\n\n      var hitboxes = me.legendHitBoxes = [];\n      var minSize = me.minSize;\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = display ? 10 : 0;\n      } else {\n        minSize.width = display ? 10 : 0;\n        minSize.height = me.maxHeight; // fill all the height\n      } // Increase sizes here\n\n\n      if (display) {\n        ctx.font = labelFont.string;\n\n        if (isHorizontal) {\n          // Labels\n          // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n          var lineWidths = me.lineWidths = [0];\n          var totalHeight = 0;\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n            if (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n              totalHeight += fontSize + labelOpts.padding;\n              lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n            } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: width,\n              height: fontSize\n            };\n            lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n          });\n          minSize.height += totalHeight;\n        } else {\n          var vPadding = labelOpts.padding;\n          var columnWidths = me.columnWidths = [];\n          var totalWidth = labelOpts.padding;\n          var currentColWidth = 0;\n          var currentColHeight = 0;\n          var itemHeight = fontSize + vPadding;\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n            if (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n              totalWidth += currentColWidth + labelOpts.padding;\n              columnWidths.push(currentColWidth); // previous column width\n\n              currentColWidth = 0;\n              currentColHeight = 0;\n            } // Get max width\n\n\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: itemWidth,\n              height: fontSize\n            };\n          });\n          totalWidth += currentColWidth;\n          columnWidths.push(currentColWidth);\n          minSize.width += totalWidth;\n        }\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$1,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    // Actually draw the legend on the canvas\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor;\n      var lineDefault = globalDefaults.elements.line;\n      var legendWidth = me.width;\n      var lineWidths = me.lineWidths;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\n        var labelFont = helpers$1.options._parseFont(labelOpts);\n\n        var fontSize = labelFont.size;\n        var cursor; // Canvas setup\n\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.strokeStyle = fontColor; // for strikethrough effect\n\n        ctx.fillStyle = fontColor; // render in correct colour\n\n        ctx.font = labelFont.string;\n        var boxWidth = getBoxWidth(labelOpts, fontSize);\n        var hitboxes = me.legendHitBoxes; // current position\n\n        var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n          if (isNaN(boxWidth) || boxWidth <= 0) {\n            return;\n          } // Set the ctx for the box\n\n\n          ctx.save();\n          var lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n          ctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n          ctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n          ctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n          ctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n          if (ctx.setLineDash) {\n            // IE 9 and 10 do not support line dash\n            ctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n          }\n\n          if (opts.labels && opts.labels.usePointStyle) {\n            // Recalculate x and y for drawPoint() because its expecting\n            // x and y to be center of figure (instead of top left)\n            var radius = boxWidth * Math.SQRT2 / 2;\n            var centerX = x + boxWidth / 2;\n            var centerY = y + fontSize / 2; // Draw pointStyle as legend symbol\n\n            helpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n          } else {\n            // Draw box as legend symbol\n            if (lineWidth !== 0) {\n              ctx.strokeRect(x, y, boxWidth, fontSize);\n            }\n\n            ctx.fillRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.restore();\n        };\n\n        var fillText = function fillText(x, y, legendItem, textWidth) {\n          var halfFontSize = fontSize / 2;\n          var xLeft = boxWidth + halfFontSize + x;\n          var yMiddle = y + halfFontSize;\n          ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n          if (legendItem.hidden) {\n            // Strikethrough the text if hidden\n            ctx.beginPath();\n            ctx.lineWidth = 2;\n            ctx.moveTo(xLeft, yMiddle);\n            ctx.lineTo(xLeft + textWidth, yMiddle);\n            ctx.stroke();\n          }\n        }; // Horizontal\n\n\n        var isHorizontal = me.isHorizontal();\n\n        if (isHorizontal) {\n          cursor = {\n            x: me.left + (legendWidth - lineWidths[0]) / 2 + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        } else {\n          cursor = {\n            x: me.left + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        }\n\n        var itemHeight = fontSize + labelOpts.padding;\n        helpers$1.each(me.legendItems, function (legendItem, i) {\n          var textWidth = ctx.measureText(legendItem.text).width;\n          var width = boxWidth + fontSize / 2 + textWidth;\n          var x = cursor.x;\n          var y = cursor.y; // Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n          // instead of me.right and me.bottom because me.width and me.height\n          // may have been changed since me.minSize was calculated\n\n          if (isHorizontal) {\n            if (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n              y = cursor.y += itemHeight;\n              cursor.line++;\n              x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2 + labelOpts.padding;\n            }\n          } else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n            x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n            y = cursor.y = me.top + labelOpts.padding;\n            cursor.line++;\n          }\n\n          drawLegendBox(x, y, legendItem);\n          hitboxes[i].left = x;\n          hitboxes[i].top = y; // Fill the actual label\n\n          fillText(x, y, legendItem, textWidth);\n\n          if (isHorizontal) {\n            cursor.x += width + labelOpts.padding;\n          } else {\n            cursor.y += itemHeight;\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getLegendItemAt: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        // See if we are touching one of the dataset boxes\n        lh = me.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            // Touching an element\n            return me.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n      var type = e.type === 'mouseup' ? 'click' : e.type;\n      var hoveredItem;\n\n      if (type === 'mousemove') {\n        if (!opts.onHover && !opts.onLeave) {\n          return;\n        }\n      } else if (type === 'click') {\n        if (!opts.onClick) {\n          return;\n        }\n      } else {\n        return;\n      } // Chart event already has relative position in it\n\n\n      hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n      if (type === 'click') {\n        if (hoveredItem && opts.onClick) {\n          // use e.native for backwards compatibility\n          opts.onClick.call(me, e.native, hoveredItem);\n        }\n      } else {\n        if (opts.onLeave && hoveredItem !== me._hoveredItem) {\n          if (me._hoveredItem) {\n            opts.onLeave.call(me, e.native, me._hoveredItem);\n          }\n\n          me._hoveredItem = hoveredItem;\n        }\n\n        if (opts.onHover && hoveredItem) {\n          // use e.native for backwards compatibility\n          opts.onHover.call(me, e.native, hoveredItem);\n        }\n      }\n    }\n  });\n\n  function createNewLegendAndAttach(chart, legendOpts) {\n    var legend = new Legend({\n      ctx: chart.ctx,\n      options: legendOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, legend, legendOpts);\n    core_layouts.addBox(chart, legend);\n    chart.legend = legend;\n  }\n\n  var plugin_legend = {\n    id: 'legend',\n\n    /**\n     * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n     * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Legend,\n    beforeInit: function beforeInit(chart) {\n      var legendOpts = chart.options.legend;\n\n      if (legendOpts) {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var legendOpts = chart.options.legend;\n      var legend = chart.legend;\n\n      if (legendOpts) {\n        helpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n        if (legend) {\n          core_layouts.configure(chart, legend, legendOpts);\n          legend.options = legendOpts;\n        } else {\n          createNewLegendAndAttach(chart, legendOpts);\n        }\n      } else if (legend) {\n        core_layouts.removeBox(chart, legend);\n        delete chart.legend;\n      }\n    },\n    afterEvent: function afterEvent(chart, e) {\n      var legend = chart.legend;\n\n      if (legend) {\n        legend.handleEvent(e);\n      }\n    }\n  };\n  var noop$2 = helpers$1.noop;\n\n  core_defaults._set('global', {\n    title: {\n      display: false,\n      fontStyle: 'bold',\n      fullWidth: true,\n      padding: 10,\n      position: 'top',\n      text: '',\n      weight: 2000 // by default greater than legend (1000) to be above\n\n    }\n  });\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Title = core_element.extend({\n    initialize: function initialize(config) {\n      var me = this;\n      helpers$1.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n      me.legendHitBoxes = [];\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    beforeUpdate: noop$2,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$2,\n    //\n    beforeSetDimensions: noop$2,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$2,\n    //\n    beforeBuildLabels: noop$2,\n    buildLabels: noop$2,\n    afterBuildLabels: noop$2,\n    //\n    beforeFit: noop$2,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var display = opts.display;\n      var minSize = me.minSize;\n      var lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\n      var fontOpts = helpers$1.options._parseFont(opts);\n\n      var textSize = display ? lineCount * fontOpts.lineHeight + opts.padding * 2 : 0;\n\n      if (me.isHorizontal()) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = textSize;\n      } else {\n        minSize.width = textSize;\n        minSize.height = me.maxHeight; // fill all the height\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$2,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    },\n    // Actually draw the title block on the canvas\n    draw: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n\n      if (opts.display) {\n        var fontOpts = helpers$1.options._parseFont(opts);\n\n        var lineHeight = fontOpts.lineHeight;\n        var offset = lineHeight / 2 + opts.padding;\n        var rotation = 0;\n        var top = me.top;\n        var left = me.left;\n        var bottom = me.bottom;\n        var right = me.right;\n        var maxWidth, titleX, titleY;\n        ctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\n        ctx.font = fontOpts.string; // Horizontal\n\n        if (me.isHorizontal()) {\n          titleX = left + (right - left) / 2; // midpoint of the width\n\n          titleY = top + offset;\n          maxWidth = right - left;\n        } else {\n          titleX = opts.position === 'left' ? left + offset : right - offset;\n          titleY = top + (bottom - top) / 2;\n          maxWidth = bottom - top;\n          rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n        }\n\n        ctx.save();\n        ctx.translate(titleX, titleY);\n        ctx.rotate(rotation);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        var text = opts.text;\n\n        if (helpers$1.isArray(text)) {\n          var y = 0;\n\n          for (var i = 0; i < text.length; ++i) {\n            ctx.fillText(text[i], 0, y, maxWidth);\n            y += lineHeight;\n          }\n        } else {\n          ctx.fillText(text, 0, 0, maxWidth);\n        }\n\n        ctx.restore();\n      }\n    }\n  });\n\n  function createNewTitleBlockAndAttach(chart, titleOpts) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: titleOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, title, titleOpts);\n    core_layouts.addBox(chart, title);\n    chart.titleBlock = title;\n  }\n\n  var plugin_title = {\n    id: 'title',\n\n    /**\n     * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n     * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Title,\n    beforeInit: function beforeInit(chart) {\n      var titleOpts = chart.options.title;\n\n      if (titleOpts) {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var titleOpts = chart.options.title;\n      var titleBlock = chart.titleBlock;\n\n      if (titleOpts) {\n        helpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n        if (titleBlock) {\n          core_layouts.configure(chart, titleBlock, titleOpts);\n          titleBlock.options = titleOpts;\n        } else {\n          createNewTitleBlockAndAttach(chart, titleOpts);\n        }\n      } else if (titleBlock) {\n        core_layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n      }\n    }\n  };\n  var plugins = {};\n  var filler = plugin_filler;\n  var legend = plugin_legend;\n  var title = plugin_title;\n  plugins.filler = filler;\n  plugins.legend = legend;\n  plugins.title = title;\n  /**\n   * @namespace Chart\n   */\n\n  core_controller.helpers = helpers$1; // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\n  core_helpers(core_controller);\n  core_controller._adapters = core_adapters;\n  core_controller.Animation = core_animation;\n  core_controller.animationService = core_animations;\n  core_controller.controllers = controllers;\n  core_controller.DatasetController = core_datasetController;\n  core_controller.defaults = core_defaults;\n  core_controller.Element = core_element;\n  core_controller.elements = elements;\n  core_controller.Interaction = core_interaction;\n  core_controller.layouts = core_layouts;\n  core_controller.platform = platform;\n  core_controller.plugins = core_plugins;\n  core_controller.Scale = core_scale;\n  core_controller.scaleService = core_scaleService;\n  core_controller.Ticks = core_ticks;\n  core_controller.Tooltip = core_tooltip; // Register built-in scales\n\n  core_controller.helpers.each(scales, function (scale, type) {\n    core_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n  }); // Load to register built-in adapters (as side effects)\n  // Loading built-in plugins\n\n  for (var k in plugins) {\n    if (plugins.hasOwnProperty(k)) {\n      core_controller.plugins.register(plugins[k]);\n    }\n  }\n\n  core_controller.platform.initialize();\n  var src = core_controller;\n\n  if (typeof window !== 'undefined') {\n    window.Chart = core_controller;\n  } // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Chart\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  core_controller.Chart = core_controller;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Legend\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Legend = plugins.legend._element;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Title\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Title = plugins.title._element;\n  /**\n   * Provided for backward compatibility, use Chart.plugins instead\n   * @namespace Chart.pluginService\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.pluginService = core_controller.plugins;\n  /**\n   * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n   * effect, instead simply create/register plugins via plain JavaScript objects.\n   * @interface Chart.PluginBase\n   * @deprecated since version 2.5.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.PluginBase = core_controller.Element.extend({});\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas instead.\n   * @namespace Chart.canvasHelpers\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.canvasHelpers = core_controller.helpers.canvas;\n  /**\n   * Provided for backward compatibility, use Chart.layouts instead.\n   * @namespace Chart.layoutService\n   * @deprecated since version 2.7.3\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.layoutService = core_controller.layouts;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.LinearScaleBase\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.LinearScaleBase = scale_linearbase;\n  /**\n   * Provided for backward compatibility, instead we should create a new Chart\n   * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   */\n\n  core_controller.helpers.each(['Bar', 'Bubble', 'Doughnut', 'Line', 'PolarArea', 'Radar', 'Scatter'], function (klass) {\n    core_controller[klass] = function (ctx, cfg) {\n      return new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n        type: klass.charAt(0).toLowerCase() + klass.slice(1)\n      }));\n    };\n  });\n  return src;\n});","//! moment.js\n;\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.moment = factory();\n})(this, function () {\n  'use strict';\n\n  var hookCallback;\n\n  function hooks() {\n    return hookCallback.apply(null, arguments);\n  } // This is done to register the method called with moment()\n  // without creating circular dependencies.\n\n\n  function setHookCallback(callback) {\n    hookCallback = callback;\n  }\n\n  function isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n  }\n\n  function isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n  }\n\n  function isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n      return Object.getOwnPropertyNames(obj).length === 0;\n    } else {\n      var k;\n\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  function isUndefined(input) {\n    return input === void 0;\n  }\n\n  function isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n  }\n\n  function isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n  }\n\n  function map(arr, fn) {\n    var res = [],\n        i;\n\n    for (i = 0; i < arr.length; ++i) {\n      res.push(fn(arr[i], i));\n    }\n\n    return res;\n  }\n\n  function hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n  }\n\n  function extend(a, b) {\n    for (var i in b) {\n      if (hasOwnProp(b, i)) {\n        a[i] = b[i];\n      }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n      a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n      a.valueOf = b.valueOf;\n    }\n\n    return a;\n  }\n\n  function createUTC(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n  }\n\n  function defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n      empty: false,\n      unusedTokens: [],\n      unusedInput: [],\n      overflow: -2,\n      charsLeftOver: 0,\n      nullInput: false,\n      invalidMonth: null,\n      invalidFormat: false,\n      userInvalidated: false,\n      iso: false,\n      parsedDateParts: [],\n      meridiem: null,\n      rfc2822: false,\n      weekdayMismatch: false\n    };\n  }\n\n  function getParsingFlags(m) {\n    if (m._pf == null) {\n      m._pf = defaultParsingFlags();\n    }\n\n    return m._pf;\n  }\n\n  var some;\n\n  if (Array.prototype.some) {\n    some = Array.prototype.some;\n  } else {\n    some = function some(fun) {\n      var t = Object(this);\n      var len = t.length >>> 0;\n\n      for (var i = 0; i < len; i++) {\n        if (i in t && fun.call(this, t[i], i, t)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  }\n\n  function isValid(m) {\n    if (m._isValid == null) {\n      var flags = getParsingFlags(m);\n      var parsedParts = some.call(flags.parsedDateParts, function (i) {\n        return i != null;\n      });\n      var isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n\n      if (m._strict) {\n        isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n      }\n\n      if (Object.isFrozen == null || !Object.isFrozen(m)) {\n        m._isValid = isNowValid;\n      } else {\n        return isNowValid;\n      }\n    }\n\n    return m._isValid;\n  }\n\n  function createInvalid(flags) {\n    var m = createUTC(NaN);\n\n    if (flags != null) {\n      extend(getParsingFlags(m), flags);\n    } else {\n      getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n  } // Plugins that add properties should also add the key here (null value),\n  // so we can properly clone ourselves.\n\n\n  var momentProperties = hooks.momentProperties = [];\n\n  function copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n      to._isAMomentObject = from._isAMomentObject;\n    }\n\n    if (!isUndefined(from._i)) {\n      to._i = from._i;\n    }\n\n    if (!isUndefined(from._f)) {\n      to._f = from._f;\n    }\n\n    if (!isUndefined(from._l)) {\n      to._l = from._l;\n    }\n\n    if (!isUndefined(from._strict)) {\n      to._strict = from._strict;\n    }\n\n    if (!isUndefined(from._tzm)) {\n      to._tzm = from._tzm;\n    }\n\n    if (!isUndefined(from._isUTC)) {\n      to._isUTC = from._isUTC;\n    }\n\n    if (!isUndefined(from._offset)) {\n      to._offset = from._offset;\n    }\n\n    if (!isUndefined(from._pf)) {\n      to._pf = getParsingFlags(from);\n    }\n\n    if (!isUndefined(from._locale)) {\n      to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n      for (i = 0; i < momentProperties.length; i++) {\n        prop = momentProperties[i];\n        val = from[prop];\n\n        if (!isUndefined(val)) {\n          to[prop] = val;\n        }\n      }\n    }\n\n    return to;\n  }\n\n  var updateInProgress = false; // Moment prototype object\n\n  function Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\n    if (!this.isValid()) {\n      this._d = new Date(NaN);\n    } // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n\n\n    if (updateInProgress === false) {\n      updateInProgress = true;\n      hooks.updateOffset(this);\n      updateInProgress = false;\n    }\n  }\n\n  function isMoment(obj) {\n    return obj instanceof Moment || obj != null && obj._isAMomentObject != null;\n  }\n\n  function absFloor(number) {\n    if (number < 0) {\n      // -0 -> 0\n      return Math.ceil(number) || 0;\n    } else {\n      return Math.floor(number);\n    }\n  }\n\n  function toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n      value = absFloor(coercedNumber);\n    }\n\n    return value;\n  } // compare two arrays, return the number of differences\n\n\n  function compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n\n    for (i = 0; i < len; i++) {\n      if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n        diffs++;\n      }\n    }\n\n    return diffs + lengthDiff;\n  }\n\n  function warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n      console.warn('Deprecation warning: ' + msg);\n    }\n  }\n\n  function deprecate(msg, fn) {\n    var firstTime = true;\n    return extend(function () {\n      if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(null, msg);\n      }\n\n      if (firstTime) {\n        var args = [];\n        var arg;\n\n        for (var i = 0; i < arguments.length; i++) {\n          arg = '';\n\n          if (typeof arguments[i] === 'object') {\n            arg += '\\n[' + i + '] ';\n\n            for (var key in arguments[0]) {\n              arg += key + ': ' + arguments[0][key] + ', ';\n            }\n\n            arg = arg.slice(0, -2); // Remove trailing comma and space\n          } else {\n            arg = arguments[i];\n          }\n\n          args.push(arg);\n        }\n\n        warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + new Error().stack);\n        firstTime = false;\n      }\n\n      return fn.apply(this, arguments);\n    }, fn);\n  }\n\n  var deprecations = {};\n\n  function deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n      hooks.deprecationHandler(name, msg);\n    }\n\n    if (!deprecations[name]) {\n      warn(msg);\n      deprecations[name] = true;\n    }\n  }\n\n  hooks.suppressDeprecationWarnings = false;\n  hooks.deprecationHandler = null;\n\n  function isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n  }\n\n  function set(config) {\n    var prop, i;\n\n    for (i in config) {\n      prop = config[i];\n\n      if (isFunction(prop)) {\n        this[i] = prop;\n      } else {\n        this['_' + i] = prop;\n      }\n    }\n\n    this._config = config; // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n\n    this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\\d{1,2}/.source);\n  }\n\n  function mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig),\n        prop;\n\n    for (prop in childConfig) {\n      if (hasOwnProp(childConfig, prop)) {\n        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n          res[prop] = {};\n          extend(res[prop], parentConfig[prop]);\n          extend(res[prop], childConfig[prop]);\n        } else if (childConfig[prop] != null) {\n          res[prop] = childConfig[prop];\n        } else {\n          delete res[prop];\n        }\n      }\n    }\n\n    for (prop in parentConfig) {\n      if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {\n        // make sure changes to properties don't modify parent config\n        res[prop] = extend({}, res[prop]);\n      }\n    }\n\n    return res;\n  }\n\n  function Locale(config) {\n    if (config != null) {\n      this.set(config);\n    }\n  }\n\n  var keys;\n\n  if (Object.keys) {\n    keys = Object.keys;\n  } else {\n    keys = function keys(obj) {\n      var i,\n          res = [];\n\n      for (i in obj) {\n        if (hasOwnProp(obj, i)) {\n          res.push(i);\n        }\n      }\n\n      return res;\n    };\n  }\n\n  var defaultCalendar = {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  };\n\n  function calendar(key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n  }\n\n  var defaultLongDateFormat = {\n    LTS: 'h:mm:ss A',\n    LT: 'h:mm A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A'\n  };\n\n  function longDateFormat(key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n      return val.slice(1);\n    });\n    return this._longDateFormat[key];\n  }\n\n  var defaultInvalidDate = 'Invalid date';\n\n  function invalidDate() {\n    return this._invalidDate;\n  }\n\n  var defaultOrdinal = '%d';\n  var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n  function ordinal(number) {\n    return this._ordinal.replace('%d', number);\n  }\n\n  var defaultRelativeTime = {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  };\n\n  function relativeTime(number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\n  }\n\n  function pastFuture(diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n\n  var aliases = {};\n\n  function addUnitAlias(unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n  }\n\n  function normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n  }\n\n  function normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n      if (hasOwnProp(inputObject, prop)) {\n        normalizedProp = normalizeUnits(prop);\n\n        if (normalizedProp) {\n          normalizedInput[normalizedProp] = inputObject[prop];\n        }\n      }\n    }\n\n    return normalizedInput;\n  }\n\n  var priorities = {};\n\n  function addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n  }\n\n  function getPrioritizedUnits(unitsObj) {\n    var units = [];\n\n    for (var u in unitsObj) {\n      units.push({\n        unit: u,\n        priority: priorities[u]\n      });\n    }\n\n    units.sort(function (a, b) {\n      return a.priority - b.priority;\n    });\n    return units;\n  }\n\n  function zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? forceSign ? '+' : '' : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n  }\n\n  var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n  var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n  var formatFunctions = {};\n  var formatTokenFunctions = {}; // token:    'M'\n  // padded:   ['MM', 2]\n  // ordinal:  'Mo'\n  // callback: function () { this.month() + 1 }\n\n  function addFormatToken(token, padded, ordinal, callback) {\n    var func = callback;\n\n    if (typeof callback === 'string') {\n      func = function func() {\n        return this[callback]();\n      };\n    }\n\n    if (token) {\n      formatTokenFunctions[token] = func;\n    }\n\n    if (padded) {\n      formatTokenFunctions[padded[0]] = function () {\n        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n      };\n    }\n\n    if (ordinal) {\n      formatTokenFunctions[ordinal] = function () {\n        return this.localeData().ordinal(func.apply(this, arguments), token);\n      };\n    }\n  }\n\n  function removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n      return input.replace(/^\\[|\\]$/g, '');\n    }\n\n    return input.replace(/\\\\/g, '');\n  }\n\n  function makeFormatFunction(format) {\n    var array = format.match(formattingTokens),\n        i,\n        length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n      if (formatTokenFunctions[array[i]]) {\n        array[i] = formatTokenFunctions[array[i]];\n      } else {\n        array[i] = removeFormattingTokens(array[i]);\n      }\n    }\n\n    return function (mom) {\n      var output = '',\n          i;\n\n      for (i = 0; i < length; i++) {\n        output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n      }\n\n      return output;\n    };\n  } // format date using native date object\n\n\n  function formatMoment(m, format) {\n    if (!m.isValid()) {\n      return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n    return formatFunctions[format](m);\n  }\n\n  function expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n      return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n\n    while (i >= 0 && localFormattingTokens.test(format)) {\n      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n      localFormattingTokens.lastIndex = 0;\n      i -= 1;\n    }\n\n    return format;\n  }\n\n  var match1 = /\\d/; //       0 - 9\n\n  var match2 = /\\d\\d/; //      00 - 99\n\n  var match3 = /\\d{3}/; //     000 - 999\n\n  var match4 = /\\d{4}/; //    0000 - 9999\n\n  var match6 = /[+-]?\\d{6}/; // -999999 - 999999\n\n  var match1to2 = /\\d\\d?/; //       0 - 99\n\n  var match3to4 = /\\d\\d\\d\\d?/; //     999 - 9999\n\n  var match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\n  var match1to3 = /\\d{1,3}/; //       0 - 999\n\n  var match1to4 = /\\d{1,4}/; //       0 - 9999\n\n  var match1to6 = /[+-]?\\d{1,6}/; // -999999 - 999999\n\n  var matchUnsigned = /\\d+/; //       0 - inf\n\n  var matchSigned = /[+-]?\\d+/; //    -inf - inf\n\n  var matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\n  var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n  var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n  // any word (or two) characters or numbers including two/three word month in arabic.\n  // includes scottish gaelic two word and hyphenated months\n\n  var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n  var regexes = {};\n\n  function addRegexToken(token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n      return isStrict && strictRegex ? strictRegex : regex;\n    };\n  }\n\n  function getParseRegexForToken(token, config) {\n    if (!hasOwnProp(regexes, token)) {\n      return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n  } // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\n\n  function unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n      return p1 || p2 || p3 || p4;\n    }));\n  }\n\n  function regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n\n  var tokens = {};\n\n  function addParseToken(token, callback) {\n    var i,\n        func = callback;\n\n    if (typeof token === 'string') {\n      token = [token];\n    }\n\n    if (isNumber(callback)) {\n      func = function func(input, array) {\n        array[callback] = toInt(input);\n      };\n    }\n\n    for (i = 0; i < token.length; i++) {\n      tokens[token[i]] = func;\n    }\n  }\n\n  function addWeekParseToken(token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n      config._w = config._w || {};\n      callback(input, config._w, config, token);\n    });\n  }\n\n  function addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n      tokens[token](input, config._a, config, token);\n    }\n  }\n\n  var YEAR = 0;\n  var MONTH = 1;\n  var DATE = 2;\n  var HOUR = 3;\n  var MINUTE = 4;\n  var SECOND = 5;\n  var MILLISECOND = 6;\n  var WEEK = 7;\n  var WEEKDAY = 8; // FORMATTING\n\n  addFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n  });\n  addFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n  });\n  addFormatToken(0, ['YYYY', 4], 0, 'year');\n  addFormatToken(0, ['YYYYY', 5], 0, 'year');\n  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year'); // ALIASES\n\n  addUnitAlias('year', 'y'); // PRIORITIES\n\n  addUnitPriority('year', 1); // PARSING\n\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n  });\n  addParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n  });\n  addParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n  }); // HELPERS\n\n  function daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n  }\n\n  function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  } // HOOKS\n\n\n  hooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n  }; // MOMENTS\n\n\n  var getSetYear = makeGetSet('FullYear', true);\n\n  function getIsLeapYear() {\n    return isLeapYear(this.year());\n  }\n\n  function makeGetSet(unit, keepTime) {\n    return function (value) {\n      if (value != null) {\n        set$1(this, unit, value);\n        hooks.updateOffset(this, keepTime);\n        return this;\n      } else {\n        return get(this, unit);\n      }\n    };\n  }\n\n  function get(mom, unit) {\n    return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n  }\n\n  function set$1(mom, unit, value) {\n    if (mom.isValid() && !isNaN(value)) {\n      if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n      } else {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n      }\n    }\n  } // MOMENTS\n\n\n  function stringGet(units) {\n    units = normalizeUnits(units);\n\n    if (isFunction(this[units])) {\n      return this[units]();\n    }\n\n    return this;\n  }\n\n  function stringSet(units, value) {\n    if (typeof units === 'object') {\n      units = normalizeObjectUnits(units);\n      var prioritized = getPrioritizedUnits(units);\n\n      for (var i = 0; i < prioritized.length; i++) {\n        this[prioritized[i].unit](units[prioritized[i].unit]);\n      }\n    } else {\n      units = normalizeUnits(units);\n\n      if (isFunction(this[units])) {\n        return this[units](value);\n      }\n    }\n\n    return this;\n  }\n\n  function mod(n, x) {\n    return (n % x + x) % x;\n  }\n\n  var indexOf;\n\n  if (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n  } else {\n    indexOf = function indexOf(o) {\n      // I know\n      var i;\n\n      for (i = 0; i < this.length; ++i) {\n        if (this[i] === o) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n  }\n\n  function daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n      return NaN;\n    }\n\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n  } // FORMATTING\n\n\n  addFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n  });\n  addFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n  });\n  addFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n  }); // ALIASES\n\n  addUnitAlias('month', 'M'); // PRIORITY\n\n  addUnitPriority('month', 8); // PARSING\n\n  addRegexToken('M', match1to2);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM', function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n  addParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n  });\n  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.\n\n\n    if (month != null) {\n      array[MONTH] = month;\n    } else {\n      getParsingFlags(config).invalidMonth = input;\n    }\n  }); // LOCALES\n\n  var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n  var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n\n  function localeMonths(m, format) {\n    if (!m) {\n      return isArray(this._months) ? this._months : this._months['standalone'];\n    }\n\n    return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n\n  function localeMonthsShort(m, format) {\n    if (!m) {\n      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];\n    }\n\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  function handleStrictParse(monthName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = monthName.toLocaleLowerCase();\n\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n\n      for (i = 0; i < 12; ++i) {\n        mom = createUTC([2000, i]);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeMonthsParse(monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n      return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    } // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n\n      if (strict && !this._longMonthsParse[i]) {\n        this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n        this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n      }\n\n      if (!strict && !this._monthsParse[i]) {\n        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function setMonth(mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n      // No op\n      return mom;\n    }\n\n    if (typeof value === 'string') {\n      if (/^\\d+$/.test(value)) {\n        value = toInt(value);\n      } else {\n        value = mom.localeData().monthsParse(value); // TODO: Another silent failure?\n\n        if (!isNumber(value)) {\n          return mom;\n        }\n      }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\n    return mom;\n  }\n\n  function getSetMonth(value) {\n    if (value != null) {\n      setMonth(this, value);\n      hooks.updateOffset(this, true);\n      return this;\n    } else {\n      return get(this, 'Month');\n    }\n  }\n\n  function getDaysInMonth() {\n    return daysInMonth(this.year(), this.month());\n  }\n\n  var defaultMonthsShortRegex = matchWord;\n\n  function monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      } else {\n        return this._monthsShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsShortRegex')) {\n        this._monthsShortRegex = defaultMonthsShortRegex;\n      }\n\n      return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n  }\n\n  var defaultMonthsRegex = matchWord;\n\n  function monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      } else {\n        return this._monthsRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this._monthsRegex = defaultMonthsRegex;\n      }\n\n      return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n    }\n  }\n\n  function computeMonthsParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom;\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      shortPieces.push(this.monthsShort(mom, ''));\n      longPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.monthsShort(mom, ''));\n    } // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n  }\n\n  function createDate(y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date; // the date constructor remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      date = new Date(y + 400, m, d, h, M, s, ms);\n\n      if (isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n      }\n    } else {\n      date = new Date(y, m, d, h, M, s, ms);\n    }\n\n    return date;\n  }\n\n  function createUTCDate(y) {\n    var date; // the Date.UTC function remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      var args = Array.prototype.slice.call(arguments); // preserve leap years using a full 400 year cycle, then reset\n\n      args[0] = y + 400;\n      date = new Date(Date.UTC.apply(null, args));\n\n      if (isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n      }\n    } else {\n      date = new Date(Date.UTC.apply(null, arguments));\n    }\n\n    return date;\n  } // start-of-first-week - start-of-year\n\n\n  function firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n    fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n  } // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\n\n  function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear,\n        resDayOfYear;\n\n    if (dayOfYear <= 0) {\n      resYear = year - 1;\n      resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n      resYear = year + 1;\n      resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n      resYear = year;\n      resDayOfYear = dayOfYear;\n    }\n\n    return {\n      year: resYear,\n      dayOfYear: resDayOfYear\n    };\n  }\n\n  function weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek,\n        resYear;\n\n    if (week < 1) {\n      resYear = mom.year() - 1;\n      resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n      resWeek = week - weeksInYear(mom.year(), dow, doy);\n      resYear = mom.year() + 1;\n    } else {\n      resYear = mom.year();\n      resWeek = week;\n    }\n\n    return {\n      week: resWeek,\n      year: resYear\n    };\n  }\n\n  function weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n  } // FORMATTING\n\n\n  addFormatToken('w', ['ww', 2], 'wo', 'week');\n  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek'); // ALIASES\n\n  addUnitAlias('week', 'w');\n  addUnitAlias('isoWeek', 'W'); // PRIORITIES\n\n  addUnitPriority('week', 5);\n  addUnitPriority('isoWeek', 5); // PARSING\n\n  addRegexToken('w', match1to2);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2);\n  addRegexToken('WW', match1to2, match2);\n  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n  }); // HELPERS\n  // LOCALES\n\n  function localeWeek(mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n  }\n\n  var defaultLocaleWeek = {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n  };\n\n  function localeFirstDayOfWeek() {\n    return this._week.dow;\n  }\n\n  function localeFirstDayOfYear() {\n    return this._week.doy;\n  } // MOMENTS\n\n\n  function getSetWeek(input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  }\n\n  function getSetISOWeek(input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('d', 0, 'do', 'day');\n  addFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n  });\n  addFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n  });\n  addFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n  });\n  addFormatToken('e', 0, 0, 'weekday');\n  addFormatToken('E', 0, 0, 'isoWeekday'); // ALIASES\n\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E'); // PRIORITY\n\n  addUnitPriority('day', 11);\n  addUnitPriority('weekday', 11);\n  addUnitPriority('isoWeekday', 11); // PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n  addRegexToken('dd', function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n  addRegexToken('ddd', function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd', function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n  });\n  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict); // if we didn't get a weekday name, mark the date as invalid\n\n\n    if (weekday != null) {\n      week.d = weekday;\n    } else {\n      getParsingFlags(config).invalidWeekday = input;\n    }\n  });\n  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n  }); // HELPERS\n\n  function parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n      return input;\n    }\n\n    if (!isNaN(input)) {\n      return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n\n    if (typeof input === 'number') {\n      return input;\n    }\n\n    return null;\n  }\n\n  function parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n      return locale.weekdaysParse(input) % 7 || 7;\n    }\n\n    return isNaN(input) ? null : input;\n  } // LOCALES\n\n\n  function shiftWeekdays(ws, n) {\n    return ws.slice(n, 7).concat(ws.slice(0, n));\n  }\n\n  var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n\n  function localeWeekdays(m, format) {\n    var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m && m !== true && this._weekdays.isFormat.test(format) ? 'format' : 'standalone'];\n    return m === true ? shiftWeekdays(weekdays, this._week.dow) : m ? weekdays[m.day()] : weekdays;\n  }\n\n  var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n\n  function localeWeekdaysShort(m) {\n    return m === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n  }\n\n  var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n\n  function localeWeekdaysMin(m) {\n    return m === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n  }\n\n  function handleStrictParse$1(weekdayName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = weekdayName.toLocaleLowerCase();\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n\n      for (i = 0; i < 7; ++i) {\n        mom = createUTC([2000, 1]).day(i);\n        this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeWeekdaysParse(weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n      return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n      }\n\n      if (!this._weekdaysParse[i]) {\n        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function getSetDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\n    if (input != null) {\n      input = parseWeekday(input, this.localeData());\n      return this.add(input - day, 'd');\n    } else {\n      return day;\n    }\n  }\n\n  function getSetLocaleDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n  }\n\n  function getSetISODayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    } // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n\n    if (input != null) {\n      var weekday = parseIsoWeekday(input, this.localeData());\n      return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n      return this.day() || 7;\n    }\n  }\n\n  var defaultWeekdaysRegex = matchWord;\n\n  function weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = defaultWeekdaysRegex;\n      }\n\n      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }\n\n  var defaultWeekdaysShortRegex = matchWord;\n\n  function weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n      }\n\n      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n\n  var defaultWeekdaysMinRegex = matchWord;\n\n  function weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n      }\n\n      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n\n  function computeWeekdaysParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var minPieces = [],\n        shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom,\n        minp,\n        shortp,\n        longp;\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n      minp = this.weekdaysMin(mom, '');\n      shortp = this.weekdaysShort(mom, '');\n      longp = this.weekdays(mom, '');\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    } // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 7; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n  } // FORMATTING\n\n\n  function hFormat() {\n    return this.hours() % 12 || 12;\n  }\n\n  function kFormat() {\n    return this.hours() || 24;\n  }\n\n  addFormatToken('H', ['HH', 2], 0, 'hour');\n  addFormatToken('h', ['hh', 2], 0, hFormat);\n  addFormatToken('k', ['kk', 2], 0, kFormat);\n  addFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n  addFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n\n  function meridiem(token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n  }\n\n  meridiem('a', true);\n  meridiem('A', false); // ALIASES\n\n  addUnitAlias('hour', 'h'); // PRIORITY\n\n  addUnitPriority('hour', 13); // PARSING\n\n  function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }\n\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2);\n  addRegexToken('h', match1to2);\n  addRegexToken('k', match1to2);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n  });\n  addParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n  });\n  addParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n  });\n  addParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n  }); // LOCALES\n\n  function localeIsPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return (input + '').toLowerCase().charAt(0) === 'p';\n  }\n\n  var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\n  function localeMeridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    } else {\n      return isLower ? 'am' : 'AM';\n    }\n  } // MOMENTS\n  // Setting the hour should keep the time, because the user explicitly\n  // specified which hour they want. So trying to maintain the same hour (in\n  // a new timezone) makes sense. Adding/subtracting hours does not follow\n  // this rule.\n\n\n  var getSetHour = makeGetSet('Hours', true);\n  var baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n    week: defaultLocaleWeek,\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n    meridiemParse: defaultLocaleMeridiemParse\n  }; // internal storage for locale config files\n\n  var locales = {};\n  var localeFamilies = {};\n  var globalLocale;\n\n  function normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n  } // pick the locale from the array\n  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\n\n  function chooseLocale(names) {\n    var i = 0,\n        j,\n        next,\n        locale,\n        split;\n\n    while (i < names.length) {\n      split = normalizeLocale(names[i]).split('-');\n      j = split.length;\n      next = normalizeLocale(names[i + 1]);\n      next = next ? next.split('-') : null;\n\n      while (j > 0) {\n        locale = loadLocale(split.slice(0, j).join('-'));\n\n        if (locale) {\n          return locale;\n        }\n\n        if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n          //the next array item is better than a shallower substring of this one\n          break;\n        }\n\n        j--;\n      }\n\n      i++;\n    }\n\n    return globalLocale;\n  }\n\n  function loadLocale(name) {\n    var oldLocale = null; // TODO: Find a better way to register and load all the locales in Node\n\n    if (!locales[name] && typeof module !== 'undefined' && module && module.exports) {\n      try {\n        oldLocale = globalLocale._abbr;\n        var aliasedRequire = require;\n        aliasedRequire('./locale/' + name);\n        getSetGlobalLocale(oldLocale);\n      } catch (e) {}\n    }\n\n    return locales[name];\n  } // This function will load locale and then set the global locale.  If\n  // no arguments are passed in, it will simply return the current global\n  // locale key.\n\n\n  function getSetGlobalLocale(key, values) {\n    var data;\n\n    if (key) {\n      if (isUndefined(values)) {\n        data = getLocale(key);\n      } else {\n        data = defineLocale(key, values);\n      }\n\n      if (data) {\n        // moment.duration._locale = moment._locale = data;\n        globalLocale = data;\n      } else {\n        if (typeof console !== 'undefined' && console.warn) {\n          //warn user if arguments are passed but the locale could not be set\n          console.warn('Locale ' + key + ' not found. Did you forget to load it?');\n        }\n      }\n    }\n\n    return globalLocale._abbr;\n  }\n\n  function defineLocale(name, config) {\n    if (config !== null) {\n      var locale,\n          parentConfig = baseConfig;\n      config.abbr = name;\n\n      if (locales[name] != null) {\n        deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n        parentConfig = locales[name]._config;\n      } else if (config.parentLocale != null) {\n        if (locales[config.parentLocale] != null) {\n          parentConfig = locales[config.parentLocale]._config;\n        } else {\n          locale = loadLocale(config.parentLocale);\n\n          if (locale != null) {\n            parentConfig = locale._config;\n          } else {\n            if (!localeFamilies[config.parentLocale]) {\n              localeFamilies[config.parentLocale] = [];\n            }\n\n            localeFamilies[config.parentLocale].push({\n              name: name,\n              config: config\n            });\n            return null;\n          }\n        }\n      }\n\n      locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n      if (localeFamilies[name]) {\n        localeFamilies[name].forEach(function (x) {\n          defineLocale(x.name, x.config);\n        });\n      } // backwards compat for now: also set the locale\n      // make sure we set the locale AFTER all child locales have been\n      // created, so we won't end up with the child locale set.\n\n\n      getSetGlobalLocale(name);\n      return locales[name];\n    } else {\n      // useful for testing\n      delete locales[name];\n      return null;\n    }\n  }\n\n  function updateLocale(name, config) {\n    if (config != null) {\n      var locale,\n          tmpLocale,\n          parentConfig = baseConfig; // MERGE\n\n      tmpLocale = loadLocale(name);\n\n      if (tmpLocale != null) {\n        parentConfig = tmpLocale._config;\n      }\n\n      config = mergeConfigs(parentConfig, config);\n      locale = new Locale(config);\n      locale.parentLocale = locales[name];\n      locales[name] = locale; // backwards compat for now: also set the locale\n\n      getSetGlobalLocale(name);\n    } else {\n      // pass null for config to unupdate, useful for tests\n      if (locales[name] != null) {\n        if (locales[name].parentLocale != null) {\n          locales[name] = locales[name].parentLocale;\n        } else if (locales[name] != null) {\n          delete locales[name];\n        }\n      }\n    }\n\n    return locales[name];\n  } // returns locale data\n\n\n  function getLocale(key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n      key = key._locale._abbr;\n    }\n\n    if (!key) {\n      return globalLocale;\n    }\n\n    if (!isArray(key)) {\n      //short-circuit everything else\n      locale = loadLocale(key);\n\n      if (locale) {\n        return locale;\n      }\n\n      key = [key];\n    }\n\n    return chooseLocale(key);\n  }\n\n  function listLocales() {\n    return keys(locales);\n  }\n\n  function checkOverflow(m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n      overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n\n      if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n        overflow = DATE;\n      }\n\n      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n        overflow = WEEK;\n      }\n\n      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n        overflow = WEEKDAY;\n      }\n\n      getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n  } // Pick the first defined of two or three arguments.\n\n\n  function defaults(a, b, c) {\n    if (a != null) {\n      return a;\n    }\n\n    if (b != null) {\n      return b;\n    }\n\n    return c;\n  }\n\n  function currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n\n    if (config._useUTC) {\n      return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n  } // convert an array to a date.\n  // the array should mirror the parameters below\n  // note: all values past the year are optional and will default to the lowest possible value.\n  // [year, month, day , hour, minute, second, millisecond]\n\n\n  function configFromArray(config) {\n    var i,\n        date,\n        input = [],\n        currentDate,\n        expectedWeekday,\n        yearToUse;\n\n    if (config._d) {\n      return;\n    }\n\n    currentDate = currentDateArray(config); //compute day of the year from weeks and weekdays\n\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n      dayOfYearFromWeekInfo(config);\n    } //if the day of the year is set, figure out what it is\n\n\n    if (config._dayOfYear != null) {\n      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n      if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n        getParsingFlags(config)._overflowDayOfYear = true;\n      }\n\n      date = createUTCDate(yearToUse, 0, config._dayOfYear);\n      config._a[MONTH] = date.getUTCMonth();\n      config._a[DATE] = date.getUTCDate();\n    } // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n\n\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n      config._a[i] = input[i] = currentDate[i];\n    } // Zero out whatever was not defaulted, including time\n\n\n    for (; i < 7; i++) {\n      config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n    } // Check for 24:00:00.000\n\n\n    if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n      config._nextDay = true;\n      config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay(); // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n\n    if (config._tzm != null) {\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n      config._a[HOUR] = 24;\n    } // check for mismatching day of week\n\n\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n      getParsingFlags(config).weekdayMismatch = true;\n    }\n  }\n\n  function dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n    w = config._w;\n\n    if (w.GG != null || w.W != null || w.E != null) {\n      dow = 1;\n      doy = 4; // TODO: We need to take the current isoWeekYear, but that depends on\n      // how we interpret now (local, utc, fixed offset). So create\n      // a now version of current config (take local/utc/offset flags, and\n      // create now).\n\n      weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n      week = defaults(w.W, 1);\n      weekday = defaults(w.E, 1);\n\n      if (weekday < 1 || weekday > 7) {\n        weekdayOverflow = true;\n      }\n    } else {\n      dow = config._locale._week.dow;\n      doy = config._locale._week.doy;\n      var curWeek = weekOfYear(createLocal(), dow, doy);\n      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year); // Default to current week.\n\n      week = defaults(w.w, curWeek.week);\n\n      if (w.d != null) {\n        // weekday -- low day numbers are considered next week\n        weekday = w.d;\n\n        if (weekday < 0 || weekday > 6) {\n          weekdayOverflow = true;\n        }\n      } else if (w.e != null) {\n        // local weekday -- counting starts from beginning of week\n        weekday = w.e + dow;\n\n        if (w.e < 0 || w.e > 6) {\n          weekdayOverflow = true;\n        }\n      } else {\n        // default to beginning of week\n        weekday = dow;\n      }\n    }\n\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n      getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n      getParsingFlags(config)._overflowWeekday = true;\n    } else {\n      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n      config._a[YEAR] = temp.year;\n      config._dayOfYear = temp.dayOfYear;\n    }\n  } // iso 8601 regex\n  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\n\n  var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n  var isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/], ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/], ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/], ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false], ['YYYY-DDD', /\\d{4}-\\d{3}/], ['YYYY-MM', /\\d{4}-\\d\\d/, false], ['YYYYYYMMDD', /[+-]\\d{10}/], ['YYYYMMDD', /\\d{8}/], // YYYYMM is NOT allowed by the standard\n  ['GGGG[W]WWE', /\\d{4}W\\d{3}/], ['GGGG[W]WW', /\\d{4}W\\d{2}/, false], ['YYYYDDD', /\\d{7}/]]; // iso time formats and regexes\n\n  var isoTimes = [['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/], ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /\\d\\d:\\d\\d/], ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/], ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/], ['HHmmss', /\\d\\d\\d\\d\\d\\d/], ['HHmm', /\\d\\d\\d\\d/], ['HH', /\\d\\d/]];\n  var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i; // date from iso format\n\n  function configFromISO(config) {\n    var i,\n        l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime,\n        dateFormat,\n        timeFormat,\n        tzFormat;\n\n    if (match) {\n      getParsingFlags(config).iso = true;\n\n      for (i = 0, l = isoDates.length; i < l; i++) {\n        if (isoDates[i][1].exec(match[1])) {\n          dateFormat = isoDates[i][0];\n          allowTime = isoDates[i][2] !== false;\n          break;\n        }\n      }\n\n      if (dateFormat == null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[3]) {\n        for (i = 0, l = isoTimes.length; i < l; i++) {\n          if (isoTimes[i][1].exec(match[3])) {\n            // match[2] should be 'T' or space\n            timeFormat = (match[2] || ' ') + isoTimes[i][0];\n            break;\n          }\n        }\n\n        if (timeFormat == null) {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      if (!allowTime && timeFormat != null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[4]) {\n        if (tzRegex.exec(match[4])) {\n          tzFormat = 'Z';\n        } else {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n      configFromStringAndFormat(config);\n    } else {\n      config._isValid = false;\n    }\n  } // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n\n\n  var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n  function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\n\n    if (secondStr) {\n      result.push(parseInt(secondStr, 10));\n    }\n\n    return result;\n  }\n\n  function untruncateYear(yearStr) {\n    var year = parseInt(yearStr, 10);\n\n    if (year <= 49) {\n      return 2000 + year;\n    } else if (year <= 999) {\n      return 1900 + year;\n    }\n\n    return year;\n  }\n\n  function preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n  }\n\n  function checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n      // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n      var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n          weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n\n      if (weekdayProvided !== weekdayActual) {\n        getParsingFlags(config).weekdayMismatch = true;\n        config._isValid = false;\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  var obsOffsets = {\n    UT: 0,\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n  };\n\n  function calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n      return obsOffsets[obsOffset];\n    } else if (militaryOffset) {\n      // the only allowed military tz is Z\n      return 0;\n    } else {\n      var hm = parseInt(numOffset, 10);\n      var m = hm % 100,\n          h = (hm - m) / 100;\n      return h * 60 + m;\n    }\n  } // date and time from ref 2822 format\n\n\n  function configFromRFC2822(config) {\n    var match = rfc2822.exec(preprocessRFC2822(config._i));\n\n    if (match) {\n      var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n\n      if (!checkWeekday(match[1], parsedArray, config)) {\n        return;\n      }\n\n      config._a = parsedArray;\n      config._tzm = calculateOffset(match[8], match[9], match[10]);\n      config._d = createUTCDate.apply(null, config._a);\n\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n      getParsingFlags(config).rfc2822 = true;\n    } else {\n      config._isValid = false;\n    }\n  } // date from iso format or fallback\n\n\n  function configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n      config._d = new Date(+matched[1]);\n      return;\n    }\n\n    configFromISO(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n\n    configFromRFC2822(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    } // Final attempt, use Input Fallback\n\n\n    hooks.createFromInputFallback(config);\n  }\n\n  hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged and will be removed in an upcoming major release. Please refer to ' + 'http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {\n    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n  }); // constant that refers to the ISO standard\n\n  hooks.ISO_8601 = function () {}; // constant that refers to the RFC 2822 form\n\n\n  hooks.RFC_2822 = function () {}; // date from string and format string\n\n\n  function configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n      configFromISO(config);\n      return;\n    }\n\n    if (config._f === hooks.RFC_2822) {\n      configFromRFC2822(config);\n      return;\n    }\n\n    config._a = [];\n    getParsingFlags(config).empty = true; // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\n    var string = '' + config._i,\n        i,\n        parsedInput,\n        tokens,\n        token,\n        skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0]; // console.log('token', token, 'parsedInput', parsedInput,\n      //         'regex', getParseRegexForToken(token, config));\n\n      if (parsedInput) {\n        skipped = string.substr(0, string.indexOf(parsedInput));\n\n        if (skipped.length > 0) {\n          getParsingFlags(config).unusedInput.push(skipped);\n        }\n\n        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n        totalParsedInputLength += parsedInput.length;\n      } // don't parse if it's not a known token\n\n\n      if (formatTokenFunctions[token]) {\n        if (parsedInput) {\n          getParsingFlags(config).empty = false;\n        } else {\n          getParsingFlags(config).unusedTokens.push(token);\n        }\n\n        addTimeToArrayFromToken(token, parsedInput, config);\n      } else if (config._strict && !parsedInput) {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n    } // add remaining unparsed input length to the string\n\n\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n\n    if (string.length > 0) {\n      getParsingFlags(config).unusedInput.push(string);\n    } // clear _12h flag if hour is <= 12\n\n\n    if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n      getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem; // handle meridiem\n\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n    configFromArray(config);\n    checkOverflow(config);\n  }\n\n  function meridiemFixWrap(locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n      // nothing to do\n      return hour;\n    }\n\n    if (locale.meridiemHour != null) {\n      return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n      // Fallback\n      isPm = locale.isPM(meridiem);\n\n      if (isPm && hour < 12) {\n        hour += 12;\n      }\n\n      if (!isPm && hour === 12) {\n        hour = 0;\n      }\n\n      return hour;\n    } else {\n      // this is not supposed to happen\n      return hour;\n    }\n  } // date from string and array of format strings\n\n\n  function configFromStringAndArray(config) {\n    var tempConfig, bestMoment, scoreToBeat, i, currentScore;\n\n    if (config._f.length === 0) {\n      getParsingFlags(config).invalidFormat = true;\n      config._d = new Date(NaN);\n      return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n      currentScore = 0;\n      tempConfig = copyConfig({}, config);\n\n      if (config._useUTC != null) {\n        tempConfig._useUTC = config._useUTC;\n      }\n\n      tempConfig._f = config._f[i];\n      configFromStringAndFormat(tempConfig);\n\n      if (!isValid(tempConfig)) {\n        continue;\n      } // if there is any input that was not parsed add a penalty for that format\n\n\n      currentScore += getParsingFlags(tempConfig).charsLeftOver; //or tokens\n\n      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n      getParsingFlags(tempConfig).score = currentScore;\n\n      if (scoreToBeat == null || currentScore < scoreToBeat) {\n        scoreToBeat = currentScore;\n        bestMoment = tempConfig;\n      }\n    }\n\n    extend(config, bestMoment || tempConfig);\n  }\n\n  function configFromObject(config) {\n    if (config._d) {\n      return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n      return obj && parseInt(obj, 10);\n    });\n    configFromArray(config);\n  }\n\n  function createFromConfig(config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n\n    if (res._nextDay) {\n      // Adding is smart enough around DST\n      res.add(1, 'd');\n      res._nextDay = undefined;\n    }\n\n    return res;\n  }\n\n  function prepareConfig(config) {\n    var input = config._i,\n        format = config._f;\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || format === undefined && input === '') {\n      return createInvalid({\n        nullInput: true\n      });\n    }\n\n    if (typeof input === 'string') {\n      config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n      return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n      config._d = input;\n    } else if (isArray(format)) {\n      configFromStringAndArray(config);\n    } else if (format) {\n      configFromStringAndFormat(config);\n    } else {\n      configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n      config._d = null;\n    }\n\n    return config;\n  }\n\n  function configFromInput(config) {\n    var input = config._i;\n\n    if (isUndefined(input)) {\n      config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n      config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n      configFromString(config);\n    } else if (isArray(input)) {\n      config._a = map(input.slice(0), function (obj) {\n        return parseInt(obj, 10);\n      });\n      configFromArray(config);\n    } else if (isObject(input)) {\n      configFromObject(config);\n    } else if (isNumber(input)) {\n      // from milliseconds\n      config._d = new Date(input);\n    } else {\n      hooks.createFromInputFallback(config);\n    }\n  }\n\n  function createLocalOrUTC(input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n      strict = locale;\n      locale = undefined;\n    }\n\n    if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {\n      input = undefined;\n    } // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n\n\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n    return createFromConfig(c);\n  }\n\n  function createLocal(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n  }\n\n  var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other < this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  });\n  var prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other > this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  }); // Pick a moment m from moments so that m[fn](other) is true for all\n  // other. This relies on the function fn to be transitive.\n  //\n  // moments should either be an array of moment objects or an array, whose\n  // first element is an array of moment objects.\n\n  function pickBy(fn, moments) {\n    var res, i;\n\n    if (moments.length === 1 && isArray(moments[0])) {\n      moments = moments[0];\n    }\n\n    if (!moments.length) {\n      return createLocal();\n    }\n\n    res = moments[0];\n\n    for (i = 1; i < moments.length; ++i) {\n      if (!moments[i].isValid() || moments[i][fn](res)) {\n        res = moments[i];\n      }\n    }\n\n    return res;\n  } // TODO: Use [].sort instead?\n\n\n  function min() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isBefore', args);\n  }\n\n  function max() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isAfter', args);\n  }\n\n  var now = function now() {\n    return Date.now ? Date.now() : +new Date();\n  };\n\n  var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n  function isDurationValid(m) {\n    for (var key in m) {\n      if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n        return false;\n      }\n    }\n\n    var unitHasDecimal = false;\n\n    for (var i = 0; i < ordering.length; ++i) {\n      if (m[ordering[i]]) {\n        if (unitHasDecimal) {\n          return false; // only allow non-integers for smallest unit\n        }\n\n        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n          unitHasDecimal = true;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  function isValid$1() {\n    return this._isValid;\n  }\n\n  function createInvalid$1() {\n    return createDuration(NaN);\n  }\n\n  function Duration(duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n    this._isValid = isDurationValid(normalizedInput); // representation for dateAddRemove\n\n    this._milliseconds = +milliseconds + seconds * 1e3 + // 1000\n    minutes * 6e4 + // 1000 * 60\n    hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n\n    this._days = +days + weeks * 7; // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n\n    this._months = +months + quarters * 3 + years * 12;\n    this._data = {};\n    this._locale = getLocale();\n\n    this._bubble();\n  }\n\n  function isDuration(obj) {\n    return obj instanceof Duration;\n  }\n\n  function absRound(number) {\n    if (number < 0) {\n      return Math.round(-1 * number) * -1;\n    } else {\n      return Math.round(number);\n    }\n  } // FORMATTING\n\n\n  function offset(token, separator) {\n    addFormatToken(token, 0, 0, function () {\n      var offset = this.utcOffset();\n      var sign = '+';\n\n      if (offset < 0) {\n        offset = -offset;\n        sign = '-';\n      }\n\n      return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n    });\n  }\n\n  offset('Z', ':');\n  offset('ZZ', ''); // PARSING\n\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n  }); // HELPERS\n  // timezone chunker\n  // '+10:00' > ['10',  '00']\n  // '-1530'  > ['-15', '30']\n\n  var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n  function offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n      return null;\n    }\n\n    var chunk = matches[matches.length - 1] || [];\n    var parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n    return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n  } // Return a moment from input, that is local/utc/zone equivalent to model.\n\n\n  function cloneWithOffset(input, model) {\n    var res, diff;\n\n    if (model._isUTC) {\n      res = model.clone();\n      diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf(); // Use low-level api, because this fn is low-level api.\n\n      res._d.setTime(res._d.valueOf() + diff);\n\n      hooks.updateOffset(res, false);\n      return res;\n    } else {\n      return createLocal(input).local();\n    }\n  }\n\n  function getDateOffset(m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n  } // HOOKS\n  // This function will be called whenever a moment is mutated.\n  // It is intended to keep the offset in sync with the timezone.\n\n\n  hooks.updateOffset = function () {}; // MOMENTS\n  // keepLocalTime = true means only change the timezone, without\n  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n  // +0200, so we adjust the time as needed, to be valid.\n  //\n  // Keeping the time actually adds/subtracts (one hour)\n  // from the actual represented time. That is why we call updateOffset\n  // a second time. In case it wants us to change the offset again\n  // _changeInProgress == true case, then we have to adjust, because\n  // there is no such time in the given timezone.\n\n\n  function getSetOffset(input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    if (input != null) {\n      if (typeof input === 'string') {\n        input = offsetFromString(matchShortOffset, input);\n\n        if (input === null) {\n          return this;\n        }\n      } else if (Math.abs(input) < 16 && !keepMinutes) {\n        input = input * 60;\n      }\n\n      if (!this._isUTC && keepLocalTime) {\n        localAdjust = getDateOffset(this);\n      }\n\n      this._offset = input;\n      this._isUTC = true;\n\n      if (localAdjust != null) {\n        this.add(localAdjust, 'm');\n      }\n\n      if (offset !== input) {\n        if (!keepLocalTime || this._changeInProgress) {\n          addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n        } else if (!this._changeInProgress) {\n          this._changeInProgress = true;\n          hooks.updateOffset(this, true);\n          this._changeInProgress = null;\n        }\n      }\n\n      return this;\n    } else {\n      return this._isUTC ? offset : getDateOffset(this);\n    }\n  }\n\n  function getSetZone(input, keepLocalTime) {\n    if (input != null) {\n      if (typeof input !== 'string') {\n        input = -input;\n      }\n\n      this.utcOffset(input, keepLocalTime);\n      return this;\n    } else {\n      return -this.utcOffset();\n    }\n  }\n\n  function setOffsetToUTC(keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n  }\n\n  function setOffsetToLocal(keepLocalTime) {\n    if (this._isUTC) {\n      this.utcOffset(0, keepLocalTime);\n      this._isUTC = false;\n\n      if (keepLocalTime) {\n        this.subtract(getDateOffset(this), 'm');\n      }\n    }\n\n    return this;\n  }\n\n  function setOffsetToParsedOffset() {\n    if (this._tzm != null) {\n      this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n      var tZone = offsetFromString(matchOffset, this._i);\n\n      if (tZone != null) {\n        this.utcOffset(tZone);\n      } else {\n        this.utcOffset(0, true);\n      }\n    }\n\n    return this;\n  }\n\n  function hasAlignedHourOffset(input) {\n    if (!this.isValid()) {\n      return false;\n    }\n\n    input = input ? createLocal(input).utcOffset() : 0;\n    return (this.utcOffset() - input) % 60 === 0;\n  }\n\n  function isDaylightSavingTime() {\n    return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();\n  }\n\n  function isDaylightSavingTimeShifted() {\n    if (!isUndefined(this._isDSTShifted)) {\n      return this._isDSTShifted;\n    }\n\n    var c = {};\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n      var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n      this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n    } else {\n      this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n  }\n\n  function isLocal() {\n    return this.isValid() ? !this._isUTC : false;\n  }\n\n  function isUtcOffset() {\n    return this.isValid() ? this._isUTC : false;\n  }\n\n  function isUtc() {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n  } // ASP.NET json date format regex\n\n\n  var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/; // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n  // and further modified to allow for strings containing both week and day\n\n  var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n  function createDuration(input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n    match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n      duration = {\n        ms: input._milliseconds,\n        d: input._days,\n        M: input._months\n      };\n    } else if (isNumber(input)) {\n      duration = {};\n\n      if (key) {\n        duration[key] = input;\n      } else {\n        duration.milliseconds = input;\n      }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: 0,\n        d: toInt(match[DATE]) * sign,\n        h: toInt(match[HOUR]) * sign,\n        m: toInt(match[MINUTE]) * sign,\n        s: toInt(match[SECOND]) * sign,\n        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n\n      };\n    } else if (!!(match = isoRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: parseIso(match[2], sign),\n        M: parseIso(match[3], sign),\n        w: parseIso(match[4], sign),\n        d: parseIso(match[5], sign),\n        h: parseIso(match[6], sign),\n        m: parseIso(match[7], sign),\n        s: parseIso(match[8], sign)\n      };\n    } else if (duration == null) {\n      // checks for null or undefined\n      duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n      diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n      duration = {};\n      duration.ms = diffRes.milliseconds;\n      duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n      ret._locale = input._locale;\n    }\n\n    return ret;\n  }\n\n  createDuration.fn = Duration.prototype;\n  createDuration.invalid = createInvalid$1;\n\n  function parseIso(inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.')); // apply sign while we're at it\n\n    return (isNaN(res) ? 0 : res) * sign;\n  }\n\n  function positiveMomentsDifference(base, other) {\n    var res = {};\n    res.months = other.month() - base.month() + (other.year() - base.year()) * 12;\n\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n      --res.months;\n    }\n\n    res.milliseconds = +other - +base.clone().add(res.months, 'M');\n    return res;\n  }\n\n  function momentsDifference(base, other) {\n    var res;\n\n    if (!(base.isValid() && other.isValid())) {\n      return {\n        milliseconds: 0,\n        months: 0\n      };\n    }\n\n    other = cloneWithOffset(other, base);\n\n    if (base.isBefore(other)) {\n      res = positiveMomentsDifference(base, other);\n    } else {\n      res = positiveMomentsDifference(other, base);\n      res.milliseconds = -res.milliseconds;\n      res.months = -res.months;\n    }\n\n    return res;\n  } // TODO: remove 'name' arg after deprecation is removed\n\n\n  function createAdder(direction, name) {\n    return function (val, period) {\n      var dur, tmp; //invert the arguments, but complain about it\n\n      if (period !== null && !isNaN(+period)) {\n        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n        tmp = val;\n        val = period;\n        period = tmp;\n      }\n\n      val = typeof val === 'string' ? +val : val;\n      dur = createDuration(val, period);\n      addSubtract(this, dur, direction);\n      return this;\n    };\n  }\n\n  function addSubtract(mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n      // No op\n      return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (months) {\n      setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n\n    if (days) {\n      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n\n    if (milliseconds) {\n      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n\n    if (updateOffset) {\n      hooks.updateOffset(mom, days || months);\n    }\n  }\n\n  var add = createAdder(1, 'add');\n  var subtract = createAdder(-1, 'subtract');\n\n  function getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';\n  }\n\n  function calendar$1(time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n  }\n\n  function clone() {\n    return new Moment(this);\n  }\n\n  function isAfter(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() > localInput.valueOf();\n    } else {\n      return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n  }\n\n  function isBefore(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() < localInput.valueOf();\n    } else {\n      return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n  }\n\n  function isBetween(from, to, units, inclusivity) {\n    var localFrom = isMoment(from) ? from : createLocal(from),\n        localTo = isMoment(to) ? to : createLocal(to);\n\n    if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n      return false;\n    }\n\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n  }\n\n  function isSame(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() === localInput.valueOf();\n    } else {\n      inputMs = localInput.valueOf();\n      return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n  }\n\n  function isSameOrAfter(input, units) {\n    return this.isSame(input, units) || this.isAfter(input, units);\n  }\n\n  function isSameOrBefore(input, units) {\n    return this.isSame(input, units) || this.isBefore(input, units);\n  }\n\n  function diff(input, units, asFloat) {\n    var that, zoneDelta, output;\n\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n      return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n    units = normalizeUnits(units);\n\n    switch (units) {\n      case 'year':\n        output = monthDiff(this, that) / 12;\n        break;\n\n      case 'month':\n        output = monthDiff(this, that);\n        break;\n\n      case 'quarter':\n        output = monthDiff(this, that) / 3;\n        break;\n\n      case 'second':\n        output = (this - that) / 1e3;\n        break;\n      // 1000\n\n      case 'minute':\n        output = (this - that) / 6e4;\n        break;\n      // 1000 * 60\n\n      case 'hour':\n        output = (this - that) / 36e5;\n        break;\n      // 1000 * 60 * 60\n\n      case 'day':\n        output = (this - that - zoneDelta) / 864e5;\n        break;\n      // 1000 * 60 * 60 * 24, negate dst\n\n      case 'week':\n        output = (this - that - zoneDelta) / 6048e5;\n        break;\n      // 1000 * 60 * 60 * 24 * 7, negate dst\n\n      default:\n        output = this - that;\n    }\n\n    return asFloat ? output : absFloor(output);\n  }\n\n  function monthDiff(a, b) {\n    // difference in months\n    var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n    anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2,\n        adjust;\n\n    if (b - anchor < 0) {\n      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor2 - anchor);\n    } //check for negative zero, return zero if negative zero\n\n\n    return -(wholeMonthDiff + adjust) || 0;\n  }\n\n  hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n  hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n  function toString() {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n  }\n\n  function toISOString(keepOffset) {\n    if (!this.isValid()) {\n      return null;\n    }\n\n    var utc = keepOffset !== true;\n    var m = utc ? this.clone().utc() : this;\n\n    if (m.year() < 0 || m.year() > 9999) {\n      return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    if (isFunction(Date.prototype.toISOString)) {\n      // native implementation is ~50x faster, use it when we can\n      if (utc) {\n        return this.toDate().toISOString();\n      } else {\n        return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n      }\n    }\n\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n  }\n  /**\n   * Return a human readable representation of a moment that can\n   * also be evaluated to get a new moment which is the same\n   *\n   * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n   */\n\n\n  function inspect() {\n    if (!this.isValid()) {\n      return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n\n    var func = 'moment';\n    var zone = '';\n\n    if (!this.isLocal()) {\n      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n      zone = 'Z';\n    }\n\n    var prefix = '[' + func + '(\"]';\n    var year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n    return this.format(prefix + year + datetime + suffix);\n  }\n\n  function format(inputString) {\n    if (!inputString) {\n      inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n  }\n\n  function from(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        to: this,\n        from: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function fromNow(withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n  }\n\n  function to(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        from: this,\n        to: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function toNow(withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n  } // If passed a locale key, it will set the locale for this\n  // instance.  Otherwise, it will return the locale configuration\n  // variables for this instance.\n\n\n  function locale(key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n      return this._locale._abbr;\n    } else {\n      newLocaleData = getLocale(key);\n\n      if (newLocaleData != null) {\n        this._locale = newLocaleData;\n      }\n\n      return this;\n    }\n  }\n\n  var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {\n    if (key === undefined) {\n      return this.localeData();\n    } else {\n      return this.locale(key);\n    }\n  });\n\n  function localeData() {\n    return this._locale;\n  }\n\n  var MS_PER_SECOND = 1000;\n  var MS_PER_MINUTE = 60 * MS_PER_SECOND;\n  var MS_PER_HOUR = 60 * MS_PER_MINUTE;\n  var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR; // actual modulo - handles negative numbers (for dates before 1970):\n\n  function mod$1(dividend, divisor) {\n    return (dividend % divisor + divisor) % divisor;\n  }\n\n  function localStartOfDate(y, m, d) {\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return new Date(y, m, d).valueOf();\n    }\n  }\n\n  function utcStartOfDate(y, m, d) {\n    // Date.UTC remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return Date.UTC(y, m, d);\n    }\n  }\n\n  function startOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year(), 0, 1);\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month(), 1);\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date());\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_MINUTE);\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_SECOND);\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function endOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year() + 1, 0, 1) - 1;\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function valueOf() {\n    return this._d.valueOf() - (this._offset || 0) * 60000;\n  }\n\n  function unix() {\n    return Math.floor(this.valueOf() / 1000);\n  }\n\n  function toDate() {\n    return new Date(this.valueOf());\n  }\n\n  function toArray() {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n  }\n\n  function toObject() {\n    var m = this;\n    return {\n      years: m.year(),\n      months: m.month(),\n      date: m.date(),\n      hours: m.hours(),\n      minutes: m.minutes(),\n      seconds: m.seconds(),\n      milliseconds: m.milliseconds()\n    };\n  }\n\n  function toJSON() {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n  }\n\n  function isValid$2() {\n    return isValid(this);\n  }\n\n  function parsingFlags() {\n    return extend({}, getParsingFlags(this));\n  }\n\n  function invalidAt() {\n    return getParsingFlags(this).overflow;\n  }\n\n  function creationData() {\n    return {\n      input: this._i,\n      format: this._f,\n      locale: this._locale,\n      isUTC: this._isUTC,\n      strict: this._strict\n    };\n  } // FORMATTING\n\n\n  addFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n  });\n  addFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n  });\n\n  function addWeekYearFormatToken(token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n  }\n\n  addWeekYearFormatToken('gggg', 'weekYear');\n  addWeekYearFormatToken('ggggg', 'weekYear');\n  addWeekYearFormatToken('GGGG', 'isoWeekYear');\n  addWeekYearFormatToken('GGGGG', 'isoWeekYear'); // ALIASES\n\n  addUnitAlias('weekYear', 'gg');\n  addUnitAlias('isoWeekYear', 'GG'); // PRIORITY\n\n  addUnitPriority('weekYear', 1);\n  addUnitPriority('isoWeekYear', 1); // PARSING\n\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n  });\n  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n  }); // MOMENTS\n\n  function getSetWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);\n  }\n\n  function getSetISOWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);\n  }\n\n  function getISOWeeksInYear() {\n    return weeksInYear(this.year(), 1, 4);\n  }\n\n  function getWeeksInYear() {\n    var weekInfo = this.localeData()._week;\n\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n  }\n\n  function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n\n    if (input == null) {\n      return weekOfYear(this, dow, doy).year;\n    } else {\n      weeksTarget = weeksInYear(input, dow, doy);\n\n      if (week > weeksTarget) {\n        week = weeksTarget;\n      }\n\n      return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n  }\n\n  function setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n  } // FORMATTING\n\n\n  addFormatToken('Q', 0, 'Qo', 'quarter'); // ALIASES\n\n  addUnitAlias('quarter', 'Q'); // PRIORITY\n\n  addUnitPriority('quarter', 7); // PARSING\n\n  addRegexToken('Q', match1);\n  addParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n  }); // MOMENTS\n\n  function getSetQuarter(input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n  } // FORMATTING\n\n\n  addFormatToken('D', ['DD', 2], 'Do', 'date'); // ALIASES\n\n  addUnitAlias('date', 'D'); // PRIORITY\n\n  addUnitPriority('date', 9); // PARSING\n\n  addRegexToken('D', match1to2);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;\n  });\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n  }); // MOMENTS\n\n  var getSetDayOfMonth = makeGetSet('Date', true); // FORMATTING\n\n  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'); // ALIASES\n\n  addUnitAlias('dayOfYear', 'DDD'); // PRIORITY\n\n  addUnitPriority('dayOfYear', 4); // PARSING\n\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n  }); // HELPERS\n  // MOMENTS\n\n  function getSetDayOfYear(input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('m', ['mm', 2], 0, 'minute'); // ALIASES\n\n  addUnitAlias('minute', 'm'); // PRIORITY\n\n  addUnitPriority('minute', 14); // PARSING\n\n  addRegexToken('m', match1to2);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE); // MOMENTS\n\n  var getSetMinute = makeGetSet('Minutes', false); // FORMATTING\n\n  addFormatToken('s', ['ss', 2], 0, 'second'); // ALIASES\n\n  addUnitAlias('second', 's'); // PRIORITY\n\n  addUnitPriority('second', 15); // PARSING\n\n  addRegexToken('s', match1to2);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND); // MOMENTS\n\n  var getSetSecond = makeGetSet('Seconds', false); // FORMATTING\n\n  addFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n  });\n  addFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n  });\n  addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n  addFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n  });\n  addFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n  });\n  addFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n  });\n  addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n  });\n  addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n  });\n  addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n  }); // ALIASES\n\n  addUnitAlias('millisecond', 'ms'); // PRIORITY\n\n  addUnitPriority('millisecond', 16); // PARSING\n\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n  var token;\n\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n\n  function parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n  }\n\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  } // MOMENTS\n\n\n  var getSetMillisecond = makeGetSet('Milliseconds', false); // FORMATTING\n\n  addFormatToken('z', 0, 0, 'zoneAbbr');\n  addFormatToken('zz', 0, 0, 'zoneName'); // MOMENTS\n\n  function getZoneAbbr() {\n    return this._isUTC ? 'UTC' : '';\n  }\n\n  function getZoneName() {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n  }\n\n  var proto = Moment.prototype;\n  proto.add = add;\n  proto.calendar = calendar$1;\n  proto.clone = clone;\n  proto.diff = diff;\n  proto.endOf = endOf;\n  proto.format = format;\n  proto.from = from;\n  proto.fromNow = fromNow;\n  proto.to = to;\n  proto.toNow = toNow;\n  proto.get = stringGet;\n  proto.invalidAt = invalidAt;\n  proto.isAfter = isAfter;\n  proto.isBefore = isBefore;\n  proto.isBetween = isBetween;\n  proto.isSame = isSame;\n  proto.isSameOrAfter = isSameOrAfter;\n  proto.isSameOrBefore = isSameOrBefore;\n  proto.isValid = isValid$2;\n  proto.lang = lang;\n  proto.locale = locale;\n  proto.localeData = localeData;\n  proto.max = prototypeMax;\n  proto.min = prototypeMin;\n  proto.parsingFlags = parsingFlags;\n  proto.set = stringSet;\n  proto.startOf = startOf;\n  proto.subtract = subtract;\n  proto.toArray = toArray;\n  proto.toObject = toObject;\n  proto.toDate = toDate;\n  proto.toISOString = toISOString;\n  proto.inspect = inspect;\n  proto.toJSON = toJSON;\n  proto.toString = toString;\n  proto.unix = unix;\n  proto.valueOf = valueOf;\n  proto.creationData = creationData;\n  proto.year = getSetYear;\n  proto.isLeapYear = getIsLeapYear;\n  proto.weekYear = getSetWeekYear;\n  proto.isoWeekYear = getSetISOWeekYear;\n  proto.quarter = proto.quarters = getSetQuarter;\n  proto.month = getSetMonth;\n  proto.daysInMonth = getDaysInMonth;\n  proto.week = proto.weeks = getSetWeek;\n  proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n  proto.weeksInYear = getWeeksInYear;\n  proto.isoWeeksInYear = getISOWeeksInYear;\n  proto.date = getSetDayOfMonth;\n  proto.day = proto.days = getSetDayOfWeek;\n  proto.weekday = getSetLocaleDayOfWeek;\n  proto.isoWeekday = getSetISODayOfWeek;\n  proto.dayOfYear = getSetDayOfYear;\n  proto.hour = proto.hours = getSetHour;\n  proto.minute = proto.minutes = getSetMinute;\n  proto.second = proto.seconds = getSetSecond;\n  proto.millisecond = proto.milliseconds = getSetMillisecond;\n  proto.utcOffset = getSetOffset;\n  proto.utc = setOffsetToUTC;\n  proto.local = setOffsetToLocal;\n  proto.parseZone = setOffsetToParsedOffset;\n  proto.hasAlignedHourOffset = hasAlignedHourOffset;\n  proto.isDST = isDaylightSavingTime;\n  proto.isLocal = isLocal;\n  proto.isUtcOffset = isUtcOffset;\n  proto.isUtc = isUtc;\n  proto.isUTC = isUtc;\n  proto.zoneAbbr = getZoneAbbr;\n  proto.zoneName = getZoneName;\n  proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n  proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n  proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n  proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n  proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n  function createUnix(input) {\n    return createLocal(input * 1000);\n  }\n\n  function createInZone() {\n    return createLocal.apply(null, arguments).parseZone();\n  }\n\n  function preParsePostFormat(string) {\n    return string;\n  }\n\n  var proto$1 = Locale.prototype;\n  proto$1.calendar = calendar;\n  proto$1.longDateFormat = longDateFormat;\n  proto$1.invalidDate = invalidDate;\n  proto$1.ordinal = ordinal;\n  proto$1.preparse = preParsePostFormat;\n  proto$1.postformat = preParsePostFormat;\n  proto$1.relativeTime = relativeTime;\n  proto$1.pastFuture = pastFuture;\n  proto$1.set = set;\n  proto$1.months = localeMonths;\n  proto$1.monthsShort = localeMonthsShort;\n  proto$1.monthsParse = localeMonthsParse;\n  proto$1.monthsRegex = monthsRegex;\n  proto$1.monthsShortRegex = monthsShortRegex;\n  proto$1.week = localeWeek;\n  proto$1.firstDayOfYear = localeFirstDayOfYear;\n  proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n  proto$1.weekdays = localeWeekdays;\n  proto$1.weekdaysMin = localeWeekdaysMin;\n  proto$1.weekdaysShort = localeWeekdaysShort;\n  proto$1.weekdaysParse = localeWeekdaysParse;\n  proto$1.weekdaysRegex = weekdaysRegex;\n  proto$1.weekdaysShortRegex = weekdaysShortRegex;\n  proto$1.weekdaysMinRegex = weekdaysMinRegex;\n  proto$1.isPM = localeIsPM;\n  proto$1.meridiem = localeMeridiem;\n\n  function get$1(format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n  }\n\n  function listMonthsImpl(format, index, field) {\n    if (isNumber(format)) {\n      index = format;\n      format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n      return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 12; i++) {\n      out[i] = get$1(format, i, field, 'month');\n    }\n\n    return out;\n  } // ()\n  // (5)\n  // (fmt, 5)\n  // (fmt)\n  // (true)\n  // (true, 5)\n  // (true, fmt, 5)\n  // (true, fmt)\n\n\n  function listWeekdaysImpl(localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    } else {\n      format = localeSorted;\n      index = format;\n      localeSorted = false;\n\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n      return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 7; i++) {\n      out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n\n    return out;\n  }\n\n  function listMonths(format, index) {\n    return listMonthsImpl(format, index, 'months');\n  }\n\n  function listMonthsShort(format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n  }\n\n  function listWeekdays(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n  }\n\n  function listWeekdaysShort(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n  }\n\n  function listWeekdaysMin(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n  }\n\n  getSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal: function ordinal(number) {\n      var b = number % 10,\n          output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    }\n  }); // Side effect imports\n\n  hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n  hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n  var mathAbs = Math.abs;\n\n  function abs() {\n    var data = this._data;\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.months = mathAbs(data.months);\n    data.years = mathAbs(data.years);\n    return this;\n  }\n\n  function addSubtract$1(duration, input, value, direction) {\n    var other = createDuration(input, value);\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days += direction * other._days;\n    duration._months += direction * other._months;\n    return duration._bubble();\n  } // supports only 2.0-style add(1, 's') or add(duration)\n\n\n  function add$1(input, value) {\n    return addSubtract$1(this, input, value, 1);\n  } // supports only 2.0-style subtract(1, 's') or subtract(duration)\n\n\n  function subtract$1(input, value) {\n    return addSubtract$1(this, input, value, -1);\n  }\n\n  function absCeil(number) {\n    if (number < 0) {\n      return Math.floor(number);\n    } else {\n      return Math.ceil(number);\n    }\n  }\n\n  function bubble() {\n    var milliseconds = this._milliseconds;\n    var days = this._days;\n    var months = this._months;\n    var data = this._data;\n    var seconds, minutes, hours, years, monthsFromDays; // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n\n    if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n      days = 0;\n      months = 0;\n    } // The following code bubbles up values, see the tests for\n    // examples of what that means.\n\n\n    data.milliseconds = milliseconds % 1000;\n    seconds = absFloor(milliseconds / 1000);\n    data.seconds = seconds % 60;\n    minutes = absFloor(seconds / 60);\n    data.minutes = minutes % 60;\n    hours = absFloor(minutes / 60);\n    data.hours = hours % 24;\n    days += absFloor(hours / 24); // convert days to months\n\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays)); // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12;\n    data.days = days;\n    data.months = months;\n    data.years = years;\n    return this;\n  }\n\n  function daysToMonths(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n  }\n\n  function monthsToDays(months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n  }\n\n  function as(units) {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'quarter' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n\n      switch (units) {\n        case 'month':\n          return months;\n\n        case 'quarter':\n          return months / 3;\n\n        case 'year':\n          return months / 12;\n      }\n    } else {\n      // handle milliseconds separately because of floating point math errors (issue #1867)\n      days = this._days + Math.round(monthsToDays(this._months));\n\n      switch (units) {\n        case 'week':\n          return days / 7 + milliseconds / 6048e5;\n\n        case 'day':\n          return days + milliseconds / 864e5;\n\n        case 'hour':\n          return days * 24 + milliseconds / 36e5;\n\n        case 'minute':\n          return days * 1440 + milliseconds / 6e4;\n\n        case 'second':\n          return days * 86400 + milliseconds / 1000;\n        // Math.floor prevents floating point math errors here\n\n        case 'millisecond':\n          return Math.floor(days * 864e5) + milliseconds;\n\n        default:\n          throw new Error('Unknown unit ' + units);\n      }\n    }\n  } // TODO: Use this.as('ms')?\n\n\n  function valueOf$1() {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n  }\n\n  function makeAs(alias) {\n    return function () {\n      return this.as(alias);\n    };\n  }\n\n  var asMilliseconds = makeAs('ms');\n  var asSeconds = makeAs('s');\n  var asMinutes = makeAs('m');\n  var asHours = makeAs('h');\n  var asDays = makeAs('d');\n  var asWeeks = makeAs('w');\n  var asMonths = makeAs('M');\n  var asQuarters = makeAs('Q');\n  var asYears = makeAs('y');\n\n  function clone$1() {\n    return createDuration(this);\n  }\n\n  function get$2(units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n  }\n\n  function makeGetter(name) {\n    return function () {\n      return this.isValid() ? this._data[name] : NaN;\n    };\n  }\n\n  var milliseconds = makeGetter('milliseconds');\n  var seconds = makeGetter('seconds');\n  var minutes = makeGetter('minutes');\n  var hours = makeGetter('hours');\n  var days = makeGetter('days');\n  var months = makeGetter('months');\n  var years = makeGetter('years');\n\n  function weeks() {\n    return absFloor(this.days() / 7);\n  }\n\n  var round = Math.round;\n  var thresholds = {\n    ss: 44,\n    // a few seconds to seconds\n    s: 45,\n    // seconds to minute\n    m: 45,\n    // minutes to hour\n    h: 22,\n    // hours to day\n    d: 26,\n    // days to month\n    M: 11 // months to year\n\n  }; // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\n  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n  }\n\n  function relativeTime$1(posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds = round(duration.as('s'));\n    var minutes = round(duration.as('m'));\n    var hours = round(duration.as('h'));\n    var days = round(duration.as('d'));\n    var months = round(duration.as('M'));\n    var years = round(duration.as('y'));\n    var a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days] || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n  } // This function allows you to set the rounding function for relative time strings\n\n\n  function getSetRelativeTimeRounding(roundingFunction) {\n    if (roundingFunction === undefined) {\n      return round;\n    }\n\n    if (typeof roundingFunction === 'function') {\n      round = roundingFunction;\n      return true;\n    }\n\n    return false;\n  } // This function allows you to set a threshold for relative time strings\n\n\n  function getSetRelativeTimeThreshold(threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n      return false;\n    }\n\n    if (limit === undefined) {\n      return thresholds[threshold];\n    }\n\n    thresholds[threshold] = limit;\n\n    if (threshold === 's') {\n      thresholds.ss = limit - 1;\n    }\n\n    return true;\n  }\n\n  function humanize(withSuffix) {\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n  }\n\n  var abs$1 = Math.abs;\n\n  function sign(x) {\n    return (x > 0) - (x < 0) || +x;\n  }\n\n  function toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days = abs$1(this._days);\n    var months = abs$1(this._months);\n    var minutes, hours, years; // 3600 seconds -> 60 minutes -> 1 hour\n\n    minutes = absFloor(seconds / 60);\n    hours = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60; // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12; // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    var total = this.asSeconds();\n\n    if (!total) {\n      // this is the same as C#'s (Noda) and python (isodate)...\n      // but not other JS (goog.date)\n      return 'P0D';\n    }\n\n    var totalSign = total < 0 ? '-' : '';\n    var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n    return totalSign + 'P' + (Y ? ymSign + Y + 'Y' : '') + (M ? ymSign + M + 'M' : '') + (D ? daysSign + D + 'D' : '') + (h || m || s ? 'T' : '') + (h ? hmsSign + h + 'H' : '') + (m ? hmsSign + m + 'M' : '') + (s ? hmsSign + s + 'S' : '');\n  }\n\n  var proto$2 = Duration.prototype;\n  proto$2.isValid = isValid$1;\n  proto$2.abs = abs;\n  proto$2.add = add$1;\n  proto$2.subtract = subtract$1;\n  proto$2.as = as;\n  proto$2.asMilliseconds = asMilliseconds;\n  proto$2.asSeconds = asSeconds;\n  proto$2.asMinutes = asMinutes;\n  proto$2.asHours = asHours;\n  proto$2.asDays = asDays;\n  proto$2.asWeeks = asWeeks;\n  proto$2.asMonths = asMonths;\n  proto$2.asQuarters = asQuarters;\n  proto$2.asYears = asYears;\n  proto$2.valueOf = valueOf$1;\n  proto$2._bubble = bubble;\n  proto$2.clone = clone$1;\n  proto$2.get = get$2;\n  proto$2.milliseconds = milliseconds;\n  proto$2.seconds = seconds;\n  proto$2.minutes = minutes;\n  proto$2.hours = hours;\n  proto$2.days = days;\n  proto$2.weeks = weeks;\n  proto$2.months = months;\n  proto$2.years = years;\n  proto$2.humanize = humanize;\n  proto$2.toISOString = toISOString$1;\n  proto$2.toString = toISOString$1;\n  proto$2.toJSON = toISOString$1;\n  proto$2.locale = locale;\n  proto$2.localeData = localeData;\n  proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n  proto$2.lang = lang; // Side effect imports\n  // FORMATTING\n\n  addFormatToken('X', 0, 0, 'unix');\n  addFormatToken('x', 0, 0, 'valueOf'); // PARSING\n\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n  addParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n  });\n  addParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n  }); // Side effect imports\n\n  hooks.version = '2.24.0';\n  setHookCallback(createLocal);\n  hooks.fn = proto;\n  hooks.min = min;\n  hooks.max = max;\n  hooks.now = now;\n  hooks.utc = createUTC;\n  hooks.unix = createUnix;\n  hooks.months = listMonths;\n  hooks.isDate = isDate;\n  hooks.locale = getSetGlobalLocale;\n  hooks.invalid = createInvalid;\n  hooks.duration = createDuration;\n  hooks.isMoment = isMoment;\n  hooks.weekdays = listWeekdays;\n  hooks.parseZone = createInZone;\n  hooks.localeData = getLocale;\n  hooks.isDuration = isDuration;\n  hooks.monthsShort = listMonthsShort;\n  hooks.weekdaysMin = listWeekdaysMin;\n  hooks.defineLocale = defineLocale;\n  hooks.updateLocale = updateLocale;\n  hooks.locales = listLocales;\n  hooks.weekdaysShort = listWeekdaysShort;\n  hooks.normalizeUnits = normalizeUnits;\n  hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n  hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n  hooks.calendarFormat = getCalendarFormat;\n  hooks.prototype = proto; // currently HTML5 input type only supports 24-hour formats\n\n  hooks.HTML5_FMT = {\n    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',\n    // <input type=\"datetime-local\" />\n    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',\n    // <input type=\"datetime-local\" step=\"1\" />\n    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',\n    // <input type=\"datetime-local\" step=\"0.001\" />\n    DATE: 'YYYY-MM-DD',\n    // <input type=\"date\" />\n    TIME: 'HH:mm',\n    // <input type=\"time\" />\n    TIME_SECONDS: 'HH:mm:ss',\n    // <input type=\"time\" step=\"1\" />\n    TIME_MS: 'HH:mm:ss.SSS',\n    // <input type=\"time\" step=\"0.001\" />\n    WEEK: 'GGGG-[W]WW',\n    // <input type=\"week\" />\n    MONTH: 'YYYY-MM' // <input type=\"month\" />\n\n  };\n  return hooks;\n});","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\n\n\nvar baseEach = createBaseEach(baseForOwn);\nmodule.exports = baseEach;","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;","var createBaseFor = require('./_createBaseFor');\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\n\n\nvar baseFor = createBaseFor();\nmodule.exports = baseFor;","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function (object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;","var isArrayLike = require('./isArrayLike');\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `self`. */\n\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\nmodule.exports = root;","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\nmodule.exports = isArray;","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\n\n\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n/** `Object#toString` result references. */\n\n\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n\n  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n}\n\nmodule.exports = baseGetTag;","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Symbol = root.Symbol;\nmodule.exports = Symbol;","var isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\n\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = toKey;","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `ListCache`.\n\n\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\nmodule.exports = ListCache;","var eq = require('./eq');\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\n\n\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = assocIndexOf;","var getNative = require('./_getNative');\n/* Built-in method references that are verified to be native. */\n\n\nvar nativeCreate = getNative(Object, 'create');\nmodule.exports = nativeCreate;","var isKeyable = require('./_isKeyable');\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\n\n\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;\n}\n\nmodule.exports = getMapData;","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\n\n\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar symbolTag = '[object Symbol]';\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;\n}\n\nmodule.exports = isSymbol;","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\n\n\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;","var baseToString = require('./_baseToString');\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\n\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;"],"sourceRoot":""}